(window.webpackJsonpsrijan = window.webpackJsonpsrijan || []).push([
  [2],
  [
    function (e, t, n) {
      "use strict";
      e.exports = n(94);
    },
    function (e, t, n) {
      "use strict";
      function r(e) {
        return (r = Object.setPrototypeOf
          ? Object.getPrototypeOf
          : function (e) {
              return e.__proto__ || Object.getPrototypeOf(e);
            })(e);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r);
        }
      }
      function i(e, t, n) {
        return t && r(e.prototype, t), n && r(e, n), e;
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var r = n(66),
        i = n(19);
      function a(e, t) {
        return !t || ("object" !== Object(r.a)(t) && "function" !== typeof t)
          ? Object(i.a)(e)
          : t;
      }
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var r = n(46);
      function i(e, t) {
        if ("function" !== typeof t && null !== t)
          throw new TypeError(
            "Super expression must either be null or a function"
          );
        (e.prototype = Object.create(t && t.prototype, {
          constructor: { value: e, writable: !0, configurable: !0 },
        })),
          t && Object(r.a)(e, t);
      }
    },
    function (e, t, n) {
      "use strict";
      var r,
        i = n(55),
        a = Object.prototype.toString,
        o = Object.getPrototypeOf,
        s =
          ((r = Object.create(null)),
          function (e) {
            var t = a.call(e);
            return r[t] || (r[t] = t.slice(8, -1).toLowerCase());
          }),
        u = function (e) {
          return (
            (e = e.toLowerCase()),
            function (t) {
              return s(t) === e;
            }
          );
        },
        l = function (e) {
          return function (t) {
            return typeof t === e;
          };
        },
        c = Array.isArray,
        h = l("undefined");
      var f = u("ArrayBuffer");
      var d = l("string"),
        p = l("function"),
        m = l("number"),
        v = function (e) {
          return null !== e && "object" === typeof e;
        },
        g = function (e) {
          if ("object" !== s(e)) return !1;
          var t = o(e);
          return (
            (null === t ||
              t === Object.prototype ||
              null === Object.getPrototypeOf(t)) &&
            !(Symbol.toStringTag in e) &&
            !(Symbol.iterator in e)
          );
        },
        y = u("Date"),
        b = u("File"),
        x = u("Blob"),
        _ = u("FileList"),
        w = u("URLSearchParams");
      function S(e, t) {
        var n,
          r,
          i = (
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
          ).allOwnKeys,
          a = void 0 !== i && i;
        if (null !== e && "undefined" !== typeof e)
          if (("object" !== typeof e && (e = [e]), c(e)))
            for (n = 0, r = e.length; n < r; n++) t.call(null, e[n], n, e);
          else {
            var o,
              s = a ? Object.getOwnPropertyNames(e) : Object.keys(e),
              u = s.length;
            for (n = 0; n < u; n++) (o = s[n]), t.call(null, e[o], o, e);
          }
      }
      var M,
        T =
          ((M = "undefined" !== typeof Uint8Array && o(Uint8Array)),
          function (e) {
            return M && e instanceof M;
          }),
        E = u("HTMLFormElement"),
        O = (function (e) {
          var t = Object.prototype.hasOwnProperty;
          return function (e, n) {
            return t.call(e, n);
          };
        })(),
        k = u("RegExp"),
        A = function (e, t) {
          var n = Object.getOwnPropertyDescriptors(e),
            r = {};
          S(n, function (n, i) {
            !1 !== t(n, i, e) && (r[i] = n);
          }),
            Object.defineProperties(e, r);
        };
      t.a = {
        isArray: c,
        isArrayBuffer: f,
        isBuffer: function (e) {
          return (
            null !== e &&
            !h(e) &&
            null !== e.constructor &&
            !h(e.constructor) &&
            p(e.constructor.isBuffer) &&
            e.constructor.isBuffer(e)
          );
        },
        isFormData: function (e) {
          return (
            e &&
            (("function" === typeof FormData && e instanceof FormData) ||
              "[object FormData]" === a.call(e) ||
              (p(e.toString) && "[object FormData]" === e.toString()))
          );
        },
        isArrayBufferView: function (e) {
          return "undefined" !== typeof ArrayBuffer && ArrayBuffer.isView
            ? ArrayBuffer.isView(e)
            : e && e.buffer && f(e.buffer);
        },
        isString: d,
        isNumber: m,
        isBoolean: function (e) {
          return !0 === e || !1 === e;
        },
        isObject: v,
        isPlainObject: g,
        isUndefined: h,
        isDate: y,
        isFile: b,
        isBlob: x,
        isRegExp: k,
        isFunction: p,
        isStream: function (e) {
          return v(e) && p(e.pipe);
        },
        isURLSearchParams: w,
        isTypedArray: T,
        isFileList: _,
        forEach: S,
        merge: function e() {
          for (
            var t = {},
              n = function (n, r) {
                g(t[r]) && g(n)
                  ? (t[r] = e(t[r], n))
                  : g(n)
                  ? (t[r] = e({}, n))
                  : c(n)
                  ? (t[r] = n.slice())
                  : (t[r] = n);
              },
              r = 0,
              i = arguments.length;
            r < i;
            r++
          )
            arguments[r] && S(arguments[r], n);
          return t;
        },
        extend: function (e, t, n) {
          var r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            a = r.allOwnKeys;
          return (
            S(
              t,
              function (t, r) {
                n && p(t) ? (e[r] = Object(i.a)(t, n)) : (e[r] = t);
              },
              { allOwnKeys: a }
            ),
            e
          );
        },
        trim: function (e) {
          return e.trim
            ? e.trim()
            : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
        },
        stripBOM: function (e) {
          return 65279 === e.charCodeAt(0) && (e = e.slice(1)), e;
        },
        inherits: function (e, t, n, r) {
          (e.prototype = Object.create(t.prototype, r)),
            (e.prototype.constructor = e),
            Object.defineProperty(e, "super", { value: t.prototype }),
            n && Object.assign(e.prototype, n);
        },
        toFlatObject: function (e, t, n, r) {
          var i,
            a,
            s,
            u = {};
          if (((t = t || {}), null == e)) return t;
          do {
            for (a = (i = Object.getOwnPropertyNames(e)).length; a-- > 0; )
              (s = i[a]),
                (r && !r(s, e, t)) || u[s] || ((t[s] = e[s]), (u[s] = !0));
            e = !1 !== n && o(e);
          } while (e && (!n || n(e, t)) && e !== Object.prototype);
          return t;
        },
        kindOf: s,
        kindOfTest: u,
        endsWith: function (e, t, n) {
          (e = String(e)),
            (void 0 === n || n > e.length) && (n = e.length),
            (n -= t.length);
          var r = e.indexOf(t, n);
          return -1 !== r && r === n;
        },
        toArray: function (e) {
          if (!e) return null;
          if (c(e)) return e;
          var t = e.length;
          if (!m(t)) return null;
          for (var n = new Array(t); t-- > 0; ) n[t] = e[t];
          return n;
        },
        forEachEntry: function (e, t) {
          for (
            var n, r = (e && e[Symbol.iterator]).call(e);
            (n = r.next()) && !n.done;

          ) {
            var i = n.value;
            t.call(e, i[0], i[1]);
          }
        },
        matchAll: function (e, t) {
          for (var n, r = []; null !== (n = e.exec(t)); ) r.push(n);
          return r;
        },
        isHTMLForm: E,
        hasOwnProperty: O,
        hasOwnProp: O,
        reduceDescriptors: A,
        freezeMethods: function (e) {
          A(e, function (t, n) {
            var r = e[n];
            p(r) &&
              ((t.enumerable = !1),
              "writable" in t
                ? (t.writable = !1)
                : t.set ||
                  (t.set = function () {
                    throw Error("Can not read-only method '" + n + "'");
                  }));
          });
        },
        toObjectSet: function (e, t) {
          var n = {},
            r = function (e) {
              e.forEach(function (e) {
                n[e] = !0;
              });
            };
          return c(e) ? r(e) : r(String(e).split(t)), n;
        },
        toCamelCase: function (e) {
          return e
            .toLowerCase()
            .replace(/[_-\s]([a-z\d])(\w*)/g, function (e, t, n) {
              return t.toUpperCase() + n;
            });
        },
        noop: function () {},
        toFiniteNumber: function (e, t) {
          return (e = +e), Number.isFinite(e) ? e : t;
        },
      };
    },
    function (e, t, n) {
      e.exports = n(102)();
    },
    function (e, t, n) {
      "use strict";
      function r() {
        return (r =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
            return e;
          }).apply(this, arguments);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      function r(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var r = n(25);
      function i(e, t) {
        if (null == e) return {};
        var n,
          i,
          a = Object(r.a)(e, t);
        if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(e);
          for (i = 0; i < o.length; i++)
            (n = o[i]),
              t.indexOf(n) >= 0 ||
                (Object.prototype.propertyIsEnumerable.call(e, n) &&
                  (a[n] = e[n]));
        }
        return a;
      }
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        return (
          t || (t = e.slice(0)),
          Object.freeze(
            Object.defineProperties(e, { raw: { value: Object.freeze(t) } })
          )
        );
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      (function (e) {
        var r = n(49),
          i = n(0),
          a = n.n(i),
          o = n(67),
          s = n.n(o),
          u = n(81),
          l = n(82),
          c = n(72),
          h = n(44),
          f = n.n(h);
        function d() {
          return (d =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        var p = function (e, t) {
            for (var n = [e[0]], r = 0, i = t.length; r < i; r += 1)
              n.push(t[r], e[r + 1]);
            return n;
          },
          m = function (e) {
            return (
              null !== e &&
              "object" == typeof e &&
              "[object Object]" ===
                (e.toString
                  ? e.toString()
                  : Object.prototype.toString.call(e)) &&
              !Object(r.typeOf)(e)
            );
          },
          v = Object.freeze([]),
          g = Object.freeze({});
        function y(e) {
          return "function" == typeof e;
        }
        function b(e) {
          return e.displayName || e.name || "Component";
        }
        function x(e) {
          return e && "string" == typeof e.styledComponentId;
        }
        var _ =
            ("undefined" != typeof e &&
              (Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                .REACT_APP_SC_ATTR ||
                Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                  .SC_ATTR)) ||
            "data-styled",
          w = "undefined" != typeof window && "HTMLElement" in window,
          S = Boolean(
            "boolean" == typeof SC_DISABLE_SPEEDY
              ? SC_DISABLE_SPEEDY
              : "undefined" != typeof e &&
                void 0 !==
                  Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                    .REACT_APP_SC_DISABLE_SPEEDY &&
                "" !==
                  Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                    .REACT_APP_SC_DISABLE_SPEEDY
              ? "false" !==
                  Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                    .REACT_APP_SC_DISABLE_SPEEDY &&
                Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                  .REACT_APP_SC_DISABLE_SPEEDY
              : "undefined" != typeof e &&
                void 0 !==
                  Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                    .SC_DISABLE_SPEEDY &&
                "" !==
                  Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                    .SC_DISABLE_SPEEDY &&
                "false" !==
                  Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                    .SC_DISABLE_SPEEDY &&
                Object({ NODE_ENV: "production", PUBLIC_URL: "/srijan" })
                  .SC_DISABLE_SPEEDY
          );
        function M(e) {
          for (
            var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          throw new Error(
            "An error occurred. See https://git.io/JUIaE#" +
              e +
              " for more information." +
              (n.length > 0 ? " Args: " + n.join(", ") : "")
          );
        }
        var T = (function () {
            function e(e) {
              (this.groupSizes = new Uint32Array(512)),
                (this.length = 512),
                (this.tag = e);
            }
            var t = e.prototype;
            return (
              (t.indexOfGroup = function (e) {
                for (var t = 0, n = 0; n < e; n++) t += this.groupSizes[n];
                return t;
              }),
              (t.insertRules = function (e, t) {
                if (e >= this.groupSizes.length) {
                  for (var n = this.groupSizes, r = n.length, i = r; e >= i; )
                    (i <<= 1) < 0 && M(16, "" + e);
                  (this.groupSizes = new Uint32Array(i)),
                    this.groupSizes.set(n),
                    (this.length = i);
                  for (var a = r; a < i; a++) this.groupSizes[a] = 0;
                }
                for (
                  var o = this.indexOfGroup(e + 1), s = 0, u = t.length;
                  s < u;
                  s++
                )
                  this.tag.insertRule(o, t[s]) && (this.groupSizes[e]++, o++);
              }),
              (t.clearGroup = function (e) {
                if (e < this.length) {
                  var t = this.groupSizes[e],
                    n = this.indexOfGroup(e),
                    r = n + t;
                  this.groupSizes[e] = 0;
                  for (var i = n; i < r; i++) this.tag.deleteRule(n);
                }
              }),
              (t.getGroup = function (e) {
                var t = "";
                if (e >= this.length || 0 === this.groupSizes[e]) return t;
                for (
                  var n = this.groupSizes[e],
                    r = this.indexOfGroup(e),
                    i = r + n,
                    a = r;
                  a < i;
                  a++
                )
                  t += this.tag.getRule(a) + "/*!sc*/\n";
                return t;
              }),
              e
            );
          })(),
          E = new Map(),
          O = new Map(),
          k = 1,
          A = function (e) {
            if (E.has(e)) return E.get(e);
            for (; O.has(k); ) k++;
            var t = k++;
            return E.set(e, t), O.set(t, e), t;
          },
          C = function (e) {
            return O.get(e);
          },
          P = function (e, t) {
            t >= k && (k = t + 1), E.set(e, t), O.set(t, e);
          },
          R = "style[" + _ + '][data-styled-version="5.3.6"]',
          L = new RegExp(
            "^" + _ + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'
          ),
          j = function (e, t, n) {
            for (var r, i = n.split(","), a = 0, o = i.length; a < o; a++)
              (r = i[a]) && e.registerName(t, r);
          },
          I = function (e, t) {
            for (
              var n = (t.textContent || "").split("/*!sc*/\n"),
                r = [],
                i = 0,
                a = n.length;
              i < a;
              i++
            ) {
              var o = n[i].trim();
              if (o) {
                var s = o.match(L);
                if (s) {
                  var u = 0 | parseInt(s[1], 10),
                    l = s[2];
                  0 !== u &&
                    (P(l, u), j(e, l, s[3]), e.getTag().insertRules(u, r)),
                    (r.length = 0);
                } else r.push(o);
              }
            }
          },
          N = function () {
            return n.nc;
          },
          D = function (e) {
            var t = document.head,
              n = e || t,
              r = document.createElement("style"),
              i = (function (e) {
                for (var t = e.childNodes, n = t.length; n >= 0; n--) {
                  var r = t[n];
                  if (r && 1 === r.nodeType && r.hasAttribute(_)) return r;
                }
              })(n),
              a = void 0 !== i ? i.nextSibling : null;
            r.setAttribute(_, "active"),
              r.setAttribute("data-styled-version", "5.3.6");
            var o = N();
            return o && r.setAttribute("nonce", o), n.insertBefore(r, a), r;
          },
          z = (function () {
            function e(e) {
              var t = (this.element = D(e));
              t.appendChild(document.createTextNode("")),
                (this.sheet = (function (e) {
                  if (e.sheet) return e.sheet;
                  for (
                    var t = document.styleSheets, n = 0, r = t.length;
                    n < r;
                    n++
                  ) {
                    var i = t[n];
                    if (i.ownerNode === e) return i;
                  }
                  M(17);
                })(t)),
                (this.length = 0);
            }
            var t = e.prototype;
            return (
              (t.insertRule = function (e, t) {
                try {
                  return this.sheet.insertRule(t, e), this.length++, !0;
                } catch (e) {
                  return !1;
                }
              }),
              (t.deleteRule = function (e) {
                this.sheet.deleteRule(e), this.length--;
              }),
              (t.getRule = function (e) {
                var t = this.sheet.cssRules[e];
                return void 0 !== t && "string" == typeof t.cssText
                  ? t.cssText
                  : "";
              }),
              e
            );
          })(),
          U = (function () {
            function e(e) {
              var t = (this.element = D(e));
              (this.nodes = t.childNodes), (this.length = 0);
            }
            var t = e.prototype;
            return (
              (t.insertRule = function (e, t) {
                if (e <= this.length && e >= 0) {
                  var n = document.createTextNode(t),
                    r = this.nodes[e];
                  return (
                    this.element.insertBefore(n, r || null), this.length++, !0
                  );
                }
                return !1;
              }),
              (t.deleteRule = function (e) {
                this.element.removeChild(this.nodes[e]), this.length--;
              }),
              (t.getRule = function (e) {
                return e < this.length ? this.nodes[e].textContent : "";
              }),
              e
            );
          })(),
          B = (function () {
            function e(e) {
              (this.rules = []), (this.length = 0);
            }
            var t = e.prototype;
            return (
              (t.insertRule = function (e, t) {
                return (
                  e <= this.length &&
                  (this.rules.splice(e, 0, t), this.length++, !0)
                );
              }),
              (t.deleteRule = function (e) {
                this.rules.splice(e, 1), this.length--;
              }),
              (t.getRule = function (e) {
                return e < this.length ? this.rules[e] : "";
              }),
              e
            );
          })(),
          F = w,
          G = { isServer: !w, useCSSOMInjection: !S },
          H = (function () {
            function e(e, t, n) {
              void 0 === e && (e = g),
                void 0 === t && (t = {}),
                (this.options = d({}, G, {}, e)),
                (this.gs = t),
                (this.names = new Map(n)),
                (this.server = !!e.isServer),
                !this.server &&
                  w &&
                  F &&
                  ((F = !1),
                  (function (e) {
                    for (
                      var t = document.querySelectorAll(R), n = 0, r = t.length;
                      n < r;
                      n++
                    ) {
                      var i = t[n];
                      i &&
                        "active" !== i.getAttribute(_) &&
                        (I(e, i), i.parentNode && i.parentNode.removeChild(i));
                    }
                  })(this));
            }
            e.registerId = function (e) {
              return A(e);
            };
            var t = e.prototype;
            return (
              (t.reconstructWithOptions = function (t, n) {
                return (
                  void 0 === n && (n = !0),
                  new e(
                    d({}, this.options, {}, t),
                    this.gs,
                    (n && this.names) || void 0
                  )
                );
              }),
              (t.allocateGSInstance = function (e) {
                return (this.gs[e] = (this.gs[e] || 0) + 1);
              }),
              (t.getTag = function () {
                return (
                  this.tag ||
                  (this.tag =
                    ((n = (t = this.options).isServer),
                    (r = t.useCSSOMInjection),
                    (i = t.target),
                    (e = n ? new B(i) : r ? new z(i) : new U(i)),
                    new T(e)))
                );
                var e, t, n, r, i;
              }),
              (t.hasNameForId = function (e, t) {
                return this.names.has(e) && this.names.get(e).has(t);
              }),
              (t.registerName = function (e, t) {
                if ((A(e), this.names.has(e))) this.names.get(e).add(t);
                else {
                  var n = new Set();
                  n.add(t), this.names.set(e, n);
                }
              }),
              (t.insertRules = function (e, t, n) {
                this.registerName(e, t), this.getTag().insertRules(A(e), n);
              }),
              (t.clearNames = function (e) {
                this.names.has(e) && this.names.get(e).clear();
              }),
              (t.clearRules = function (e) {
                this.getTag().clearGroup(A(e)), this.clearNames(e);
              }),
              (t.clearTag = function () {
                this.tag = void 0;
              }),
              (t.toString = function () {
                return (function (e) {
                  for (
                    var t = e.getTag(), n = t.length, r = "", i = 0;
                    i < n;
                    i++
                  ) {
                    var a = C(i);
                    if (void 0 !== a) {
                      var o = e.names.get(a),
                        s = t.getGroup(i);
                      if (o && s && o.size) {
                        var u = _ + ".g" + i + '[id="' + a + '"]',
                          l = "";
                        void 0 !== o &&
                          o.forEach(function (e) {
                            e.length > 0 && (l += e + ",");
                          }),
                          (r += "" + s + u + '{content:"' + l + '"}/*!sc*/\n');
                      }
                    }
                  }
                  return r;
                })(this);
              }),
              e
            );
          })(),
          V = /(a)(d)/gi,
          W = function (e) {
            return String.fromCharCode(e + (e > 25 ? 39 : 97));
          };
        function q(e) {
          var t,
            n = "";
          for (t = Math.abs(e); t > 52; t = (t / 52) | 0) n = W(t % 52) + n;
          return (W(t % 52) + n).replace(V, "$1-$2");
        }
        var X = function (e, t) {
            for (var n = t.length; n; ) e = (33 * e) ^ t.charCodeAt(--n);
            return e;
          },
          Y = function (e) {
            return X(5381, e);
          };
        function J(e) {
          for (var t = 0; t < e.length; t += 1) {
            var n = e[t];
            if (y(n) && !x(n)) return !1;
          }
          return !0;
        }
        var Z = Y("5.3.6"),
          $ = (function () {
            function e(e, t, n) {
              (this.rules = e),
                (this.staticRulesId = ""),
                (this.isStatic = (void 0 === n || n.isStatic) && J(e)),
                (this.componentId = t),
                (this.baseHash = X(Z, t)),
                (this.baseStyle = n),
                H.registerId(t);
            }
            return (
              (e.prototype.generateAndInjectStyles = function (e, t, n) {
                var r = this.componentId,
                  i = [];
                if (
                  (this.baseStyle &&
                    i.push(this.baseStyle.generateAndInjectStyles(e, t, n)),
                  this.isStatic && !n.hash)
                )
                  if (
                    this.staticRulesId &&
                    t.hasNameForId(r, this.staticRulesId)
                  )
                    i.push(this.staticRulesId);
                  else {
                    var a = me(this.rules, e, t, n).join(""),
                      o = q(X(this.baseHash, a) >>> 0);
                    if (!t.hasNameForId(r, o)) {
                      var s = n(a, "." + o, void 0, r);
                      t.insertRules(r, o, s);
                    }
                    i.push(o), (this.staticRulesId = o);
                  }
                else {
                  for (
                    var u = this.rules.length,
                      l = X(this.baseHash, n.hash),
                      c = "",
                      h = 0;
                    h < u;
                    h++
                  ) {
                    var f = this.rules[h];
                    if ("string" == typeof f) c += f;
                    else if (f) {
                      var d = me(f, e, t, n),
                        p = Array.isArray(d) ? d.join("") : d;
                      (l = X(l, p + h)), (c += p);
                    }
                  }
                  if (c) {
                    var m = q(l >>> 0);
                    if (!t.hasNameForId(r, m)) {
                      var v = n(c, "." + m, void 0, r);
                      t.insertRules(r, m, v);
                    }
                    i.push(m);
                  }
                }
                return i.join(" ");
              }),
              e
            );
          })(),
          K = /^\s*\/\/.*$/gm,
          Q = [":", "[", ".", "#"];
        function ee(e) {
          var t,
            n,
            r,
            i,
            a = void 0 === e ? g : e,
            o = a.options,
            s = void 0 === o ? g : o,
            l = a.plugins,
            c = void 0 === l ? v : l,
            h = new u.a(s),
            f = [],
            d = (function (e) {
              function t(t) {
                if (t)
                  try {
                    e(t + "}");
                  } catch (e) {}
              }
              return function (n, r, i, a, o, s, u, l, c, h) {
                switch (n) {
                  case 1:
                    if (0 === c && 64 === r.charCodeAt(0))
                      return e(r + ";"), "";
                    break;
                  case 2:
                    if (0 === l) return r + "/*|*/";
                    break;
                  case 3:
                    switch (l) {
                      case 102:
                      case 112:
                        return e(i[0] + r), "";
                      default:
                        return r + (0 === h ? "/*|*/" : "");
                    }
                  case -2:
                    r.split("/*|*/}").forEach(t);
                }
              };
            })(function (e) {
              f.push(e);
            }),
            p = function (e, r, a) {
              return (0 === r && -1 !== Q.indexOf(a[n.length])) || a.match(i)
                ? e
                : "." + t;
            };
          function m(e, a, o, s) {
            void 0 === s && (s = "&");
            var u = e.replace(K, ""),
              l = a && o ? o + " " + a + " { " + u + " }" : u;
            return (
              (t = s),
              (n = a),
              (r = new RegExp("\\" + n + "\\b", "g")),
              (i = new RegExp("(\\" + n + "\\b){2,}")),
              h(o || !a ? "" : a, l)
            );
          }
          return (
            h.use(
              [].concat(c, [
                function (e, t, i) {
                  2 === e &&
                    i.length &&
                    i[0].lastIndexOf(n) > 0 &&
                    (i[0] = i[0].replace(r, p));
                },
                d,
                function (e) {
                  if (-2 === e) {
                    var t = f;
                    return (f = []), t;
                  }
                },
              ])
            ),
            (m.hash = c.length
              ? c
                  .reduce(function (e, t) {
                    return t.name || M(15), X(e, t.name);
                  }, 5381)
                  .toString()
              : ""),
            m
          );
        }
        var te = a.a.createContext(),
          ne = (te.Consumer, a.a.createContext()),
          re = (ne.Consumer, new H()),
          ie = ee();
        function ae() {
          return Object(i.useContext)(te) || re;
        }
        function oe() {
          return Object(i.useContext)(ne) || ie;
        }
        function se(e) {
          var t = Object(i.useState)(e.stylisPlugins),
            n = t[0],
            r = t[1],
            o = ae(),
            u = Object(i.useMemo)(
              function () {
                var t = o;
                return (
                  e.sheet
                    ? (t = e.sheet)
                    : e.target &&
                      (t = t.reconstructWithOptions({ target: e.target }, !1)),
                  e.disableCSSOMInjection &&
                    (t = t.reconstructWithOptions({ useCSSOMInjection: !1 })),
                  t
                );
              },
              [e.disableCSSOMInjection, e.sheet, e.target]
            ),
            l = Object(i.useMemo)(
              function () {
                return ee({
                  options: { prefix: !e.disableVendorPrefixes },
                  plugins: n,
                });
              },
              [e.disableVendorPrefixes, n]
            );
          return (
            Object(i.useEffect)(
              function () {
                s()(n, e.stylisPlugins) || r(e.stylisPlugins);
              },
              [e.stylisPlugins]
            ),
            a.a.createElement(
              te.Provider,
              { value: u },
              a.a.createElement(ne.Provider, { value: l }, e.children)
            )
          );
        }
        var ue = (function () {
            function e(e, t) {
              var n = this;
              (this.inject = function (e, t) {
                void 0 === t && (t = ie);
                var r = n.name + t.hash;
                e.hasNameForId(n.id, r) ||
                  e.insertRules(n.id, r, t(n.rules, r, "@keyframes"));
              }),
                (this.toString = function () {
                  return M(12, String(n.name));
                }),
                (this.name = e),
                (this.id = "sc-keyframes-" + e),
                (this.rules = t);
            }
            return (
              (e.prototype.getName = function (e) {
                return void 0 === e && (e = ie), this.name + e.hash;
              }),
              e
            );
          })(),
          le = /([A-Z])/,
          ce = /([A-Z])/g,
          he = /^ms-/,
          fe = function (e) {
            return "-" + e.toLowerCase();
          };
        function de(e) {
          return le.test(e) ? e.replace(ce, fe).replace(he, "-ms-") : e;
        }
        var pe = function (e) {
          return null == e || !1 === e || "" === e;
        };
        function me(e, t, n, r) {
          if (Array.isArray(e)) {
            for (var i, a = [], o = 0, s = e.length; o < s; o += 1)
              "" !== (i = me(e[o], t, n, r)) &&
                (Array.isArray(i) ? a.push.apply(a, i) : a.push(i));
            return a;
          }
          return pe(e)
            ? ""
            : x(e)
            ? "." + e.styledComponentId
            : y(e)
            ? "function" != typeof (u = e) ||
              (u.prototype && u.prototype.isReactComponent) ||
              !t
              ? e
              : me(e(t), t, n, r)
            : e instanceof ue
            ? n
              ? (e.inject(n, r), e.getName(r))
              : e
            : m(e)
            ? (function e(t, n) {
                var r,
                  i,
                  a = [];
                for (var o in t)
                  t.hasOwnProperty(o) &&
                    !pe(t[o]) &&
                    ((Array.isArray(t[o]) && t[o].isCss) || y(t[o])
                      ? a.push(de(o) + ":", t[o], ";")
                      : m(t[o])
                      ? a.push.apply(a, e(t[o], o))
                      : a.push(
                          de(o) +
                            ": " +
                            ((r = o),
                            null == (i = t[o]) ||
                            "boolean" == typeof i ||
                            "" === i
                              ? ""
                              : "number" != typeof i || 0 === i || r in l.a
                              ? String(i).trim()
                              : i + "px") +
                            ";"
                        ));
                return n ? [n + " {"].concat(a, ["}"]) : a;
              })(e)
            : e.toString();
          var u;
        }
        var ve = function (e) {
          return Array.isArray(e) && (e.isCss = !0), e;
        };
        function ge(e) {
          for (
            var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          return y(e) || m(e)
            ? ve(me(p(v, [e].concat(n))))
            : 0 === n.length && 1 === e.length && "string" == typeof e[0]
            ? e
            : ve(me(p(e, n)));
        }
        new Set();
        var ye = function (e, t, n) {
            return (
              void 0 === n && (n = g),
              (e.theme !== n.theme && e.theme) || t || n.theme
            );
          },
          be = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
          xe = /(^-|-$)/g;
        function _e(e) {
          return e.replace(be, "-").replace(xe, "");
        }
        var we = function (e) {
          return q(Y(e) >>> 0);
        };
        function Se(e) {
          return "string" == typeof e && !0;
        }
        var Me = function (e) {
            return (
              "function" == typeof e ||
              ("object" == typeof e && null !== e && !Array.isArray(e))
            );
          },
          Te = function (e) {
            return (
              "__proto__" !== e && "constructor" !== e && "prototype" !== e
            );
          };
        function Ee(e, t, n) {
          var r = e[n];
          Me(t) && Me(r) ? Oe(r, t) : (e[n] = t);
        }
        function Oe(e) {
          for (
            var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          for (var i = 0, a = n; i < a.length; i++) {
            var o = a[i];
            if (Me(o)) for (var s in o) Te(s) && Ee(e, o[s], s);
          }
          return e;
        }
        var ke = a.a.createContext();
        ke.Consumer;
        var Ae = {};
        function Ce(e, t, n) {
          var r = x(e),
            o = !Se(e),
            s = t.attrs,
            u = void 0 === s ? v : s,
            l = t.componentId,
            h =
              void 0 === l
                ? (function (e, t) {
                    var n = "string" != typeof e ? "sc" : _e(e);
                    Ae[n] = (Ae[n] || 0) + 1;
                    var r = n + "-" + we("5.3.6" + n + Ae[n]);
                    return t ? t + "-" + r : r;
                  })(t.displayName, t.parentComponentId)
                : l,
            p = t.displayName,
            m =
              void 0 === p
                ? (function (e) {
                    return Se(e) ? "styled." + e : "Styled(" + b(e) + ")";
                  })(e)
                : p,
            _ =
              t.displayName && t.componentId
                ? _e(t.displayName) + "-" + t.componentId
                : t.componentId || h,
            w =
              r && e.attrs
                ? Array.prototype.concat(e.attrs, u).filter(Boolean)
                : u,
            S = t.shouldForwardProp;
          r &&
            e.shouldForwardProp &&
            (S = t.shouldForwardProp
              ? function (n, r, i) {
                  return (
                    e.shouldForwardProp(n, r, i) && t.shouldForwardProp(n, r, i)
                  );
                }
              : e.shouldForwardProp);
          var M,
            T = new $(n, _, r ? e.componentStyle : void 0),
            E = T.isStatic && 0 === u.length,
            O = function (e, t) {
              return (function (e, t, n, r) {
                var a = e.attrs,
                  o = e.componentStyle,
                  s = e.defaultProps,
                  u = e.foldedComponentIds,
                  l = e.shouldForwardProp,
                  h = e.styledComponentId,
                  f = e.target,
                  p = (function (e, t, n) {
                    void 0 === e && (e = g);
                    var r = d({}, t, { theme: e }),
                      i = {};
                    return (
                      n.forEach(function (e) {
                        var t,
                          n,
                          a,
                          o = e;
                        for (t in (y(o) && (o = o(r)), o))
                          r[t] = i[t] =
                            "className" === t
                              ? ((n = i[t]),
                                (a = o[t]),
                                n && a ? n + " " + a : n || a)
                              : o[t];
                      }),
                      [r, i]
                    );
                  })(ye(t, Object(i.useContext)(ke), s) || g, t, a),
                  m = p[0],
                  v = p[1],
                  b = (function (e, t, n, r) {
                    var i = ae(),
                      a = oe();
                    return t
                      ? e.generateAndInjectStyles(g, i, a)
                      : e.generateAndInjectStyles(n, i, a);
                  })(o, r, m),
                  x = n,
                  _ = v.$as || t.$as || v.as || t.as || f,
                  w = Se(_),
                  S = v !== t ? d({}, t, {}, v) : t,
                  M = {};
                for (var T in S)
                  "$" !== T[0] &&
                    "as" !== T &&
                    ("forwardedAs" === T
                      ? (M.as = S[T])
                      : (l ? l(T, c.a, _) : !w || Object(c.a)(T)) &&
                        (M[T] = S[T]));
                return (
                  t.style &&
                    v.style !== t.style &&
                    (M.style = d({}, t.style, {}, v.style)),
                  (M.className = Array.prototype
                    .concat(u, h, b !== h ? b : null, t.className, v.className)
                    .filter(Boolean)
                    .join(" ")),
                  (M.ref = x),
                  Object(i.createElement)(_, M)
                );
              })(M, e, t, E);
            };
          return (
            (O.displayName = m),
            ((M = a.a.forwardRef(O)).attrs = w),
            (M.componentStyle = T),
            (M.displayName = m),
            (M.shouldForwardProp = S),
            (M.foldedComponentIds = r
              ? Array.prototype.concat(
                  e.foldedComponentIds,
                  e.styledComponentId
                )
              : v),
            (M.styledComponentId = _),
            (M.target = r ? e.target : e),
            (M.withComponent = function (e) {
              var r = t.componentId,
                i = (function (e, t) {
                  if (null == e) return {};
                  var n,
                    r,
                    i = {},
                    a = Object.keys(e);
                  for (r = 0; r < a.length; r++)
                    (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
                  return i;
                })(t, ["componentId"]),
                a = r && r + "-" + (Se(e) ? e : _e(b(e)));
              return Ce(e, d({}, i, { attrs: w, componentId: a }), n);
            }),
            Object.defineProperty(M, "defaultProps", {
              get: function () {
                return this._foldedDefaultProps;
              },
              set: function (t) {
                this._foldedDefaultProps = r ? Oe({}, e.defaultProps, t) : t;
              },
            }),
            (M.toString = function () {
              return "." + M.styledComponentId;
            }),
            o &&
              f()(M, e, {
                attrs: !0,
                componentStyle: !0,
                displayName: !0,
                foldedComponentIds: !0,
                shouldForwardProp: !0,
                styledComponentId: !0,
                target: !0,
                withComponent: !0,
              }),
            M
          );
        }
        var Pe = function (e) {
          return (function e(t, n, i) {
            if ((void 0 === i && (i = g), !Object(r.isValidElementType)(n)))
              return M(1, String(n));
            var a = function () {
              return t(n, i, ge.apply(void 0, arguments));
            };
            return (
              (a.withConfig = function (r) {
                return e(t, n, d({}, i, {}, r));
              }),
              (a.attrs = function (r) {
                return e(
                  t,
                  n,
                  d({}, i, {
                    attrs: Array.prototype.concat(i.attrs, r).filter(Boolean),
                  })
                );
              }),
              a
            );
          })(Ce, e);
        };
        [
          "a",
          "abbr",
          "address",
          "area",
          "article",
          "aside",
          "audio",
          "b",
          "base",
          "bdi",
          "bdo",
          "big",
          "blockquote",
          "body",
          "br",
          "button",
          "canvas",
          "caption",
          "cite",
          "code",
          "col",
          "colgroup",
          "data",
          "datalist",
          "dd",
          "del",
          "details",
          "dfn",
          "dialog",
          "div",
          "dl",
          "dt",
          "em",
          "embed",
          "fieldset",
          "figcaption",
          "figure",
          "footer",
          "form",
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
          "head",
          "header",
          "hgroup",
          "hr",
          "html",
          "i",
          "iframe",
          "img",
          "input",
          "ins",
          "kbd",
          "keygen",
          "label",
          "legend",
          "li",
          "link",
          "main",
          "map",
          "mark",
          "marquee",
          "menu",
          "menuitem",
          "meta",
          "meter",
          "nav",
          "noscript",
          "object",
          "ol",
          "optgroup",
          "option",
          "output",
          "p",
          "param",
          "picture",
          "pre",
          "progress",
          "q",
          "rp",
          "rt",
          "ruby",
          "s",
          "samp",
          "script",
          "section",
          "select",
          "small",
          "source",
          "span",
          "strong",
          "style",
          "sub",
          "summary",
          "sup",
          "table",
          "tbody",
          "td",
          "textarea",
          "tfoot",
          "th",
          "thead",
          "time",
          "title",
          "tr",
          "track",
          "u",
          "ul",
          "var",
          "video",
          "wbr",
          "circle",
          "clipPath",
          "defs",
          "ellipse",
          "foreignObject",
          "g",
          "image",
          "line",
          "linearGradient",
          "marker",
          "mask",
          "path",
          "pattern",
          "polygon",
          "polyline",
          "radialGradient",
          "rect",
          "stop",
          "svg",
          "text",
          "textPath",
          "tspan",
        ].forEach(function (e) {
          Pe[e] = Pe(e);
        });
        !(function () {
          function e(e, t) {
            (this.rules = e),
              (this.componentId = t),
              (this.isStatic = J(e)),
              H.registerId(this.componentId + 1);
          }
          var t = e.prototype;
          (t.createStyles = function (e, t, n, r) {
            var i = r(me(this.rules, t, n, r).join(""), ""),
              a = this.componentId + e;
            n.insertRules(a, a, i);
          }),
            (t.removeStyles = function (e, t) {
              t.clearRules(this.componentId + e);
            }),
            (t.renderStyles = function (e, t, n, r) {
              e > 2 && H.registerId(this.componentId + e),
                this.removeStyles(e, n),
                this.createStyles(e, t, n, r);
            });
        })();
        !(function () {
          function e() {
            var e = this;
            (this._emitSheetCSS = function () {
              var t = e.instance.toString();
              if (!t) return "";
              var n = N();
              return (
                "<style " +
                [
                  n && 'nonce="' + n + '"',
                  _ + '="true"',
                  'data-styled-version="5.3.6"',
                ]
                  .filter(Boolean)
                  .join(" ") +
                ">" +
                t +
                "</style>"
              );
            }),
              (this.getStyleTags = function () {
                return e.sealed ? M(2) : e._emitSheetCSS();
              }),
              (this.getStyleElement = function () {
                var t;
                if (e.sealed) return M(2);
                var n =
                    (((t = {})[_] = ""),
                    (t["data-styled-version"] = "5.3.6"),
                    (t.dangerouslySetInnerHTML = {
                      __html: e.instance.toString(),
                    }),
                    t),
                  r = N();
                return (
                  r && (n.nonce = r),
                  [a.a.createElement("style", d({}, n, { key: "sc-0-0" }))]
                );
              }),
              (this.seal = function () {
                e.sealed = !0;
              }),
              (this.instance = new H({ isServer: !0 })),
              (this.sealed = !1);
          }
          var t = e.prototype;
          (t.collectStyles = function (e) {
            return this.sealed
              ? M(2)
              : a.a.createElement(se, { sheet: this.instance }, e);
          }),
            (t.interleaveWithNodeStream = function (e) {
              return M(3);
            });
        })();
        t.a = Pe;
      }.call(this, n(64)));
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return h;
      }),
        n.d(t, "b", function () {
          return f;
        }),
        n.d(t, "c", function () {
          return d;
        });
      var r = n(22),
        i = n(0),
        a = n.n(i),
        o = n(38),
        s = n(28),
        u = (n(7), n(8)),
        l = n(25),
        c = n(27);
      a.a.Component;
      var h = (function (e) {
        function t() {
          for (var t, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
            r[i] = arguments[i];
          return (
            ((t = e.call.apply(e, [this].concat(r)) || this).history = Object(
              s.b
            )(t.props)),
            t
          );
        }
        return (
          Object(r.a)(t, e),
          (t.prototype.render = function () {
            return a.a.createElement(o.c, {
              history: this.history,
              children: this.props.children,
            });
          }),
          t
        );
      })(a.a.Component);
      var f = (function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }
        Object(r.a)(t, e);
        var n = t.prototype;
        return (
          (n.handleClick = function (e, t) {
            try {
              this.props.onClick && this.props.onClick(e);
            } catch (n) {
              throw (e.preventDefault(), n);
            }
            e.defaultPrevented ||
              0 !== e.button ||
              (this.props.target && "_self" !== this.props.target) ||
              (function (e) {
                return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
              })(e) ||
              (e.preventDefault(),
              (this.props.replace ? t.replace : t.push)(this.props.to));
          }),
          (n.render = function () {
            var e = this,
              t = this.props,
              n = t.innerRef,
              r = (t.replace, t.to),
              i = Object(l.a)(t, ["innerRef", "replace", "to"]);
            return a.a.createElement(o.e.Consumer, null, function (t) {
              t || Object(c.a)(!1);
              var o =
                  "string" === typeof r
                    ? Object(s.c)(r, null, null, t.location)
                    : r,
                l = o ? t.history.createHref(o) : "";
              return a.a.createElement(
                "a",
                Object(u.a)({}, i, {
                  onClick: function (n) {
                    return e.handleClick(n, t.history);
                  },
                  href: l,
                  ref: n,
                })
              );
            });
          }),
          t
        );
      })(a.a.Component);
      function d(e) {
        var t = e["aria-current"],
          n = void 0 === t ? "page" : t,
          r = e.activeClassName,
          i = void 0 === r ? "active" : r,
          s = e.activeStyle,
          h = e.className,
          d = e.exact,
          p = e.isActive,
          m = e.location,
          v = e.strict,
          g = e.style,
          y = e.to,
          b = Object(l.a)(e, [
            "aria-current",
            "activeClassName",
            "activeStyle",
            "className",
            "exact",
            "isActive",
            "location",
            "strict",
            "style",
            "to",
          ]),
          x = "object" === typeof y ? y.pathname : y,
          _ = x && x.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
        return a.a.createElement(o.e.Consumer, null, function (e) {
          e || Object(c.a)(!1);
          var t = m ? m.pathname : e.location.pathname,
            r = _ ? Object(o.f)(t, { path: _, exact: d, strict: v }) : null,
            l = !!(p ? p(r, e.location) : r),
            x = l
              ? (function () {
                  for (
                    var e = arguments.length, t = new Array(e), n = 0;
                    n < e;
                    n++
                  )
                    t[n] = arguments[n];
                  return t
                    .filter(function (e) {
                      return e;
                    })
                    .join(" ");
                })(h, i)
              : h,
            w = l ? Object(u.a)({}, g, s) : g;
          return a.a.createElement(
            f,
            Object(u.a)(
              {
                "aria-current": (l && n) || null,
                className: x,
                style: w,
                to: y,
              },
              b
            )
          );
        });
      }
    },
    function (e, t, n) {
      "use strict";
      function r(e) {
        var t,
          n,
          i = "";
        if (e)
          if ("object" === typeof e)
            if (e.push)
              for (t = 0; t < e.length; t++)
                e[t] && (n = r(e[t])) && (i && (i += " "), (i += n));
            else for (t in e) e[t] && (n = r(t)) && (i && (i += " "), (i += n));
          else "boolean" === typeof e || e.call || (i && (i += " "), (i += e));
        return i;
      }
      t.a = function () {
        for (var e, t = 0, n = ""; t < arguments.length; )
          (e = r(arguments[t++])) && (n && (n += " "), (n += e));
        return n;
      };
    },
    function (e, t, n) {
      var r;
      !(function () {
        "use strict";
        var n = {}.hasOwnProperty;
        function i() {
          for (var e = [], t = 0; t < arguments.length; t++) {
            var r = arguments[t];
            if (r) {
              var a = typeof r;
              if ("string" === a || "number" === a) e.push(r);
              else if (Array.isArray(r) && r.length) {
                var o = i.apply(null, r);
                o && e.push(o);
              } else if ("object" === a)
                for (var s in r) n.call(r, s) && r[s] && e.push(s);
            }
          }
          return e.join(" ");
        }
        e.exports
          ? ((i.default = i), (e.exports = i))
          : void 0 ===
              (r = function () {
                return i;
              }.apply(t, [])) || (e.exports = r);
      })();
    },
    function (e, t, n) {
      "use strict";
      var r = n(50);
      var i = n(51);
      function a(e, t) {
        return (
          Object(r.a)(e) ||
          (function (e, t) {
            if (
              Symbol.iterator in Object(e) ||
              "[object Arguments]" === Object.prototype.toString.call(e)
            ) {
              var n = [],
                r = !0,
                i = !1,
                a = void 0;
              try {
                for (
                  var o, s = e[Symbol.iterator]();
                  !(r = (o = s.next()).done) &&
                  (n.push(o.value), !t || n.length !== t);
                  r = !0
                );
              } catch (u) {
                (i = !0), (a = u);
              } finally {
                try {
                  r || null == s.return || s.return();
                } finally {
                  if (i) throw a;
                }
              }
              return n;
            }
          })(e, t) ||
          Object(i.a)()
        );
      }
      n.d(t, "a", function () {
        return a;
      });
    },
    function (e, t, n) {
      "use strict";
      var r = n(6);
      function i(e, t, n, r, i) {
        Error.call(this),
          Error.captureStackTrace
            ? Error.captureStackTrace(this, this.constructor)
            : (this.stack = new Error().stack),
          (this.message = e),
          (this.name = "AxiosError"),
          t && (this.code = t),
          n && (this.config = n),
          r && (this.request = r),
          i && (this.response = i);
      }
      r.a.inherits(i, Error, {
        toJSON: function () {
          return {
            message: this.message,
            name: this.name,
            description: this.description,
            number: this.number,
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            config: this.config,
            code: this.code,
            status:
              this.response && this.response.status
                ? this.response.status
                : null,
          };
        },
      });
      var a = i.prototype,
        o = {};
      [
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "ECONNABORTED",
        "ETIMEDOUT",
        "ERR_NETWORK",
        "ERR_FR_TOO_MANY_REDIRECTS",
        "ERR_DEPRECATED",
        "ERR_BAD_RESPONSE",
        "ERR_BAD_REQUEST",
        "ERR_CANCELED",
        "ERR_NOT_SUPPORT",
        "ERR_INVALID_URL",
      ].forEach(function (e) {
        o[e] = { value: e };
      }),
        Object.defineProperties(i, o),
        Object.defineProperty(a, "isAxiosError", { value: !0 }),
        (i.from = function (e, t, n, o, s, u) {
          var l = Object.create(a);
          return (
            r.a.toFlatObject(
              e,
              l,
              function (e) {
                return e !== Error.prototype;
              },
              function (e) {
                return "isAxiosError" !== e;
              }
            ),
            i.call(l, e.message, t, n, o, s),
            (l.cause = e),
            (l.name = e.name),
            u && Object.assign(l, u),
            l
          );
        }),
        (t.a = i);
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(44)),
        u = n.n(s),
        l =
          "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" === typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              },
        c =
          "object" ===
            ("undefined" === typeof window ? "undefined" : l(window)) &&
          "object" ===
            ("undefined" === typeof document ? "undefined" : l(document)) &&
          9 === document.nodeType,
        h = (n(33), n(3)),
        f = n(22),
        d = n(19),
        p = n(25),
        m = {}.constructor;
      function v(e) {
        if (null == e || "object" !== typeof e) return e;
        if (Array.isArray(e)) return e.map(v);
        if (e.constructor !== m) return e;
        var t = {};
        for (var n in e) t[n] = v(e[n]);
        return t;
      }
      function g(e, t, n) {
        void 0 === e && (e = "unnamed");
        var r = n.jss,
          i = v(t),
          a = r.plugins.onCreateRule(e, i, n);
        return a || (e[0], null);
      }
      var y = function (e, t) {
        for (var n = "", r = 0; r < e.length && "!important" !== e[r]; r++)
          n && (n += t), (n += e[r]);
        return n;
      };
      function b(e, t) {
        if ((void 0 === t && (t = !1), !Array.isArray(e))) return e;
        var n = "";
        if (Array.isArray(e[0]))
          for (var r = 0; r < e.length && "!important" !== e[r]; r++)
            n && (n += ", "), (n += y(e[r], " "));
        else n = y(e, ", ");
        return t || "!important" !== e[e.length - 1] || (n += " !important"), n;
      }
      function x(e, t) {
        for (var n = "", r = 0; r < t; r++) n += "  ";
        return n + e;
      }
      function _(e, t, n) {
        void 0 === n && (n = {});
        var r = "";
        if (!t) return r;
        var i = n.indent,
          a = void 0 === i ? 0 : i,
          o = t.fallbacks;
        if ((e && a++, o))
          if (Array.isArray(o))
            for (var s = 0; s < o.length; s++) {
              var u = o[s];
              for (var l in u) {
                var c = u[l];
                null != c &&
                  (r && (r += "\n"), (r += "" + x(l + ": " + b(c) + ";", a)));
              }
            }
          else
            for (var h in o) {
              var f = o[h];
              null != f &&
                (r && (r += "\n"), (r += "" + x(h + ": " + b(f) + ";", a)));
            }
        for (var d in t) {
          var p = t[d];
          null != p &&
            "fallbacks" !== d &&
            (r && (r += "\n"), (r += "" + x(d + ": " + b(p) + ";", a)));
        }
        return (r || n.allowEmpty) && e
          ? (r && (r = "\n" + r + "\n"), x(e + " {" + r, --a) + x("}", a))
          : r;
      }
      var w = /([[\].#*$><+~=|^:(),"'`\s])/g,
        S = "undefined" !== typeof CSS && CSS.escape,
        M = function (e) {
          return S ? S(e) : e.replace(w, "\\$1");
        },
        T = (function () {
          function e(e, t, n) {
            (this.type = "style"),
              (this.key = void 0),
              (this.isProcessed = !1),
              (this.style = void 0),
              (this.renderer = void 0),
              (this.renderable = void 0),
              (this.options = void 0);
            var r = n.sheet,
              i = n.Renderer;
            (this.key = e),
              (this.options = n),
              (this.style = t),
              r ? (this.renderer = r.renderer) : i && (this.renderer = new i());
          }
          return (
            (e.prototype.prop = function (e, t, n) {
              if (void 0 === t) return this.style[e];
              var r = !!n && n.force;
              if (!r && this.style[e] === t) return this;
              var i = t;
              (n && !1 === n.process) ||
                (i = this.options.jss.plugins.onChangeValue(t, e, this));
              var a = null == i || !1 === i,
                o = e in this.style;
              if (a && !o && !r) return this;
              var s = a && o;
              if (
                (s ? delete this.style[e] : (this.style[e] = i),
                this.renderable && this.renderer)
              )
                return (
                  s
                    ? this.renderer.removeProperty(this.renderable, e)
                    : this.renderer.setProperty(this.renderable, e, i),
                  this
                );
              var u = this.options.sheet;
              return u && u.attached, this;
            }),
            e
          );
        })(),
        E = (function (e) {
          function t(t, n, r) {
            var i;
            ((i = e.call(this, t, n, r) || this).selectorText = void 0),
              (i.id = void 0),
              (i.renderable = void 0);
            var a = r.selector,
              o = r.scoped,
              s = r.sheet,
              u = r.generateId;
            return (
              a
                ? (i.selectorText = a)
                : !1 !== o &&
                  ((i.id = u(Object(d.a)(Object(d.a)(i)), s)),
                  (i.selectorText = "." + M(i.id))),
              i
            );
          }
          Object(f.a)(t, e);
          var n = t.prototype;
          return (
            (n.applyTo = function (e) {
              var t = this.renderer;
              if (t) {
                var n = this.toJSON();
                for (var r in n) t.setProperty(e, r, n[r]);
              }
              return this;
            }),
            (n.toJSON = function () {
              var e = {};
              for (var t in this.style) {
                var n = this.style[t];
                "object" !== typeof n
                  ? (e[t] = n)
                  : Array.isArray(n) && (e[t] = b(n));
              }
              return e;
            }),
            (n.toString = function (e) {
              var t = this.options.sheet,
                n =
                  !!t && t.options.link
                    ? Object(r.a)({}, e, { allowEmpty: !0 })
                    : e;
              return _(this.selectorText, this.style, n);
            }),
            Object(h.a)(t, [
              {
                key: "selector",
                set: function (e) {
                  if (e !== this.selectorText) {
                    this.selectorText = e;
                    var t = this.renderer,
                      n = this.renderable;
                    if (n && t) t.setSelector(n, e) || t.replaceRule(n, this);
                  }
                },
                get: function () {
                  return this.selectorText;
                },
              },
            ]),
            t
          );
        })(T),
        O = {
          onCreateRule: function (e, t, n) {
            return "@" === e[0] || (n.parent && "keyframes" === n.parent.type)
              ? null
              : new E(e, t, n);
          },
        },
        k = { indent: 1, children: !0 },
        A = /@([\w-]+)/,
        C = (function () {
          function e(e, t, n) {
            (this.type = "conditional"),
              (this.at = void 0),
              (this.key = void 0),
              (this.rules = void 0),
              (this.options = void 0),
              (this.isProcessed = !1),
              (this.renderable = void 0),
              (this.key = e);
            var i = e.match(A);
            for (var a in ((this.at = i ? i[1] : "unknown"),
            (this.options = n),
            (this.rules = new K(Object(r.a)({}, n, { parent: this }))),
            t))
              this.rules.add(a, t[a]);
            this.rules.process();
          }
          var t = e.prototype;
          return (
            (t.getRule = function (e) {
              return this.rules.get(e);
            }),
            (t.indexOf = function (e) {
              return this.rules.indexOf(e);
            }),
            (t.addRule = function (e, t, n) {
              var r = this.rules.add(e, t, n);
              return r ? (this.options.jss.plugins.onProcessRule(r), r) : null;
            }),
            (t.toString = function (e) {
              if (
                (void 0 === e && (e = k),
                null == e.indent && (e.indent = k.indent),
                null == e.children && (e.children = k.children),
                !1 === e.children)
              )
                return this.key + " {}";
              var t = this.rules.toString(e);
              return t ? this.key + " {\n" + t + "\n}" : "";
            }),
            e
          );
        })(),
        P = /@media|@supports\s+/,
        R = {
          onCreateRule: function (e, t, n) {
            return P.test(e) ? new C(e, t, n) : null;
          },
        },
        L = { indent: 1, children: !0 },
        j = /@keyframes\s+([\w-]+)/,
        I = (function () {
          function e(e, t, n) {
            (this.type = "keyframes"),
              (this.at = "@keyframes"),
              (this.key = void 0),
              (this.name = void 0),
              (this.id = void 0),
              (this.rules = void 0),
              (this.options = void 0),
              (this.isProcessed = !1),
              (this.renderable = void 0);
            var i = e.match(j);
            i && i[1] ? (this.name = i[1]) : (this.name = "noname"),
              (this.key = this.type + "-" + this.name),
              (this.options = n);
            var a = n.scoped,
              o = n.sheet,
              s = n.generateId;
            for (var u in ((this.id = !1 === a ? this.name : M(s(this, o))),
            (this.rules = new K(Object(r.a)({}, n, { parent: this }))),
            t))
              this.rules.add(u, t[u], Object(r.a)({}, n, { parent: this }));
            this.rules.process();
          }
          return (
            (e.prototype.toString = function (e) {
              if (
                (void 0 === e && (e = L),
                null == e.indent && (e.indent = L.indent),
                null == e.children && (e.children = L.children),
                !1 === e.children)
              )
                return this.at + " " + this.id + " {}";
              var t = this.rules.toString(e);
              return (
                t && (t = "\n" + t + "\n"),
                this.at + " " + this.id + " {" + t + "}"
              );
            }),
            e
          );
        })(),
        N = /@keyframes\s+/,
        D = /\$([\w-]+)/g,
        z = function (e, t) {
          return "string" === typeof e
            ? e.replace(D, function (e, n) {
                return n in t ? t[n] : e;
              })
            : e;
        },
        U = function (e, t, n) {
          var r = e[t],
            i = z(r, n);
          i !== r && (e[t] = i);
        },
        B = {
          onCreateRule: function (e, t, n) {
            return "string" === typeof e && N.test(e) ? new I(e, t, n) : null;
          },
          onProcessStyle: function (e, t, n) {
            return "style" === t.type && n
              ? ("animation-name" in e && U(e, "animation-name", n.keyframes),
                "animation" in e && U(e, "animation", n.keyframes),
                e)
              : e;
          },
          onChangeValue: function (e, t, n) {
            var r = n.options.sheet;
            if (!r) return e;
            switch (t) {
              case "animation":
              case "animation-name":
                return z(e, r.keyframes);
              default:
                return e;
            }
          },
        },
        F = (function (e) {
          function t() {
            for (
              var t, n = arguments.length, r = new Array(n), i = 0;
              i < n;
              i++
            )
              r[i] = arguments[i];
            return (
              ((t = e.call.apply(e, [this].concat(r)) || this).renderable =
                void 0),
              t
            );
          }
          return (
            Object(f.a)(t, e),
            (t.prototype.toString = function (e) {
              var t = this.options.sheet,
                n =
                  !!t && t.options.link
                    ? Object(r.a)({}, e, { allowEmpty: !0 })
                    : e;
              return _(this.key, this.style, n);
            }),
            t
          );
        })(T),
        G = {
          onCreateRule: function (e, t, n) {
            return n.parent && "keyframes" === n.parent.type
              ? new F(e, t, n)
              : null;
          },
        },
        H = (function () {
          function e(e, t, n) {
            (this.type = "font-face"),
              (this.at = "@font-face"),
              (this.key = void 0),
              (this.style = void 0),
              (this.options = void 0),
              (this.isProcessed = !1),
              (this.renderable = void 0),
              (this.key = e),
              (this.style = t),
              (this.options = n);
          }
          return (
            (e.prototype.toString = function (e) {
              if (Array.isArray(this.style)) {
                for (var t = "", n = 0; n < this.style.length; n++)
                  (t += _(this.key, this.style[n])),
                    this.style[n + 1] && (t += "\n");
                return t;
              }
              return _(this.key, this.style, e);
            }),
            e
          );
        })(),
        V = {
          onCreateRule: function (e, t, n) {
            return "@font-face" === e ? new H(e, t, n) : null;
          },
        },
        W = (function () {
          function e(e, t, n) {
            (this.type = "viewport"),
              (this.at = "@viewport"),
              (this.key = void 0),
              (this.style = void 0),
              (this.options = void 0),
              (this.isProcessed = !1),
              (this.renderable = void 0),
              (this.key = e),
              (this.style = t),
              (this.options = n);
          }
          return (
            (e.prototype.toString = function (e) {
              return _(this.key, this.style, e);
            }),
            e
          );
        })(),
        q = {
          onCreateRule: function (e, t, n) {
            return "@viewport" === e || "@-ms-viewport" === e
              ? new W(e, t, n)
              : null;
          },
        },
        X = (function () {
          function e(e, t, n) {
            (this.type = "simple"),
              (this.key = void 0),
              (this.value = void 0),
              (this.options = void 0),
              (this.isProcessed = !1),
              (this.renderable = void 0),
              (this.key = e),
              (this.value = t),
              (this.options = n);
          }
          return (
            (e.prototype.toString = function (e) {
              if (Array.isArray(this.value)) {
                for (var t = "", n = 0; n < this.value.length; n++)
                  (t += this.key + " " + this.value[n] + ";"),
                    this.value[n + 1] && (t += "\n");
                return t;
              }
              return this.key + " " + this.value + ";";
            }),
            e
          );
        })(),
        Y = { "@charset": !0, "@import": !0, "@namespace": !0 },
        J = [
          O,
          R,
          B,
          G,
          V,
          q,
          {
            onCreateRule: function (e, t, n) {
              return e in Y ? new X(e, t, n) : null;
            },
          },
        ],
        Z = { process: !0 },
        $ = { force: !0, process: !0 },
        K = (function () {
          function e(e) {
            (this.map = {}),
              (this.raw = {}),
              (this.index = []),
              (this.options = void 0),
              (this.classes = void 0),
              (this.keyframes = void 0),
              (this.options = e),
              (this.classes = e.classes),
              (this.keyframes = e.keyframes);
          }
          var t = e.prototype;
          return (
            (t.add = function (e, t, n) {
              var i = this.options,
                a = i.parent,
                o = i.sheet,
                s = i.jss,
                u = i.Renderer,
                l = i.generateId,
                c = i.scoped,
                h = Object(r.a)(
                  {
                    classes: this.classes,
                    parent: a,
                    sheet: o,
                    jss: s,
                    Renderer: u,
                    generateId: l,
                    scoped: c,
                  },
                  n
                );
              (this.raw[e] = t),
                e in this.classes && (h.selector = "." + M(this.classes[e]));
              var f = g(e, t, h);
              if (!f) return null;
              this.register(f);
              var d = void 0 === h.index ? this.index.length : h.index;
              return this.index.splice(d, 0, f), f;
            }),
            (t.get = function (e) {
              return this.map[e];
            }),
            (t.remove = function (e) {
              this.unregister(e),
                delete this.raw[e.key],
                this.index.splice(this.indexOf(e), 1);
            }),
            (t.indexOf = function (e) {
              return this.index.indexOf(e);
            }),
            (t.process = function () {
              var e = this.options.jss.plugins;
              this.index.slice(0).forEach(e.onProcessRule, e);
            }),
            (t.register = function (e) {
              (this.map[e.key] = e),
                e instanceof E
                  ? ((this.map[e.selector] = e),
                    e.id && (this.classes[e.key] = e.id))
                  : e instanceof I &&
                    this.keyframes &&
                    (this.keyframes[e.name] = e.id);
            }),
            (t.unregister = function (e) {
              delete this.map[e.key],
                e instanceof E
                  ? (delete this.map[e.selector], delete this.classes[e.key])
                  : e instanceof I && delete this.keyframes[e.name];
            }),
            (t.update = function () {
              var e, t, n;
              if (
                ("string" ===
                typeof (arguments.length <= 0 ? void 0 : arguments[0])
                  ? ((e = arguments.length <= 0 ? void 0 : arguments[0]),
                    (t = arguments.length <= 1 ? void 0 : arguments[1]),
                    (n = arguments.length <= 2 ? void 0 : arguments[2]))
                  : ((t = arguments.length <= 0 ? void 0 : arguments[0]),
                    (n = arguments.length <= 1 ? void 0 : arguments[1]),
                    (e = null)),
                e)
              )
                this.onUpdate(t, this.get(e), n);
              else
                for (var r = 0; r < this.index.length; r++)
                  this.onUpdate(t, this.index[r], n);
            }),
            (t.onUpdate = function (t, n, r) {
              void 0 === r && (r = Z);
              var i = this.options,
                a = i.jss.plugins,
                o = i.sheet;
              if (n.rules instanceof e) n.rules.update(t, r);
              else {
                var s = n,
                  u = s.style;
                if ((a.onUpdate(t, n, o, r), r.process && u && u !== s.style)) {
                  for (var l in (a.onProcessStyle(s.style, s, o), s.style)) {
                    var c = s.style[l];
                    c !== u[l] && s.prop(l, c, $);
                  }
                  for (var h in u) {
                    var f = s.style[h],
                      d = u[h];
                    null == f && f !== d && s.prop(h, null, $);
                  }
                }
              }
            }),
            (t.toString = function (e) {
              for (
                var t = "",
                  n = this.options.sheet,
                  r = !!n && n.options.link,
                  i = 0;
                i < this.index.length;
                i++
              ) {
                var a = this.index[i].toString(e);
                (a || r) && (t && (t += "\n"), (t += a));
              }
              return t;
            }),
            e
          );
        })(),
        Q = (function () {
          function e(e, t) {
            for (var n in ((this.options = void 0),
            (this.deployed = void 0),
            (this.attached = void 0),
            (this.rules = void 0),
            (this.renderer = void 0),
            (this.classes = void 0),
            (this.keyframes = void 0),
            (this.queue = void 0),
            (this.attached = !1),
            (this.deployed = !1),
            (this.classes = {}),
            (this.keyframes = {}),
            (this.options = Object(r.a)({}, t, {
              sheet: this,
              parent: this,
              classes: this.classes,
              keyframes: this.keyframes,
            })),
            t.Renderer && (this.renderer = new t.Renderer(this)),
            (this.rules = new K(this.options)),
            e))
              this.rules.add(n, e[n]);
            this.rules.process();
          }
          var t = e.prototype;
          return (
            (t.attach = function () {
              return this.attached
                ? this
                : (this.renderer && this.renderer.attach(),
                  (this.attached = !0),
                  this.deployed || this.deploy(),
                  this);
            }),
            (t.detach = function () {
              return this.attached
                ? (this.renderer && this.renderer.detach(),
                  (this.attached = !1),
                  this)
                : this;
            }),
            (t.addRule = function (e, t, n) {
              var r = this.queue;
              this.attached && !r && (this.queue = []);
              var i = this.rules.add(e, t, n);
              return i
                ? (this.options.jss.plugins.onProcessRule(i),
                  this.attached
                    ? this.deployed
                      ? (r
                          ? r.push(i)
                          : (this.insertRule(i),
                            this.queue &&
                              (this.queue.forEach(this.insertRule, this),
                              (this.queue = void 0))),
                        i)
                      : i
                    : ((this.deployed = !1), i))
                : null;
            }),
            (t.insertRule = function (e) {
              this.renderer && this.renderer.insertRule(e);
            }),
            (t.addRules = function (e, t) {
              var n = [];
              for (var r in e) {
                var i = this.addRule(r, e[r], t);
                i && n.push(i);
              }
              return n;
            }),
            (t.getRule = function (e) {
              return this.rules.get(e);
            }),
            (t.deleteRule = function (e) {
              var t = this.rules.get(e);
              return (
                !!t &&
                (this.rules.remove(t),
                !(this.attached && t.renderable && this.renderer) ||
                  this.renderer.deleteRule(t.renderable))
              );
            }),
            (t.indexOf = function (e) {
              return this.rules.indexOf(e);
            }),
            (t.deploy = function () {
              return (
                this.renderer && this.renderer.deploy(),
                (this.deployed = !0),
                this
              );
            }),
            (t.update = function () {
              var e;
              return (e = this.rules).update.apply(e, arguments), this;
            }),
            (t.toString = function (e) {
              return this.rules.toString(e);
            }),
            e
          );
        })(),
        ee = (function () {
          function e() {
            (this.plugins = { internal: [], external: [] }),
              (this.registry = void 0);
          }
          var t = e.prototype;
          return (
            (t.onCreateRule = function (e, t, n) {
              for (var r = 0; r < this.registry.onCreateRule.length; r++) {
                var i = this.registry.onCreateRule[r](e, t, n);
                if (i) return i;
              }
              return null;
            }),
            (t.onProcessRule = function (e) {
              if (!e.isProcessed) {
                for (
                  var t = e.options.sheet, n = 0;
                  n < this.registry.onProcessRule.length;
                  n++
                )
                  this.registry.onProcessRule[n](e, t);
                e.style && this.onProcessStyle(e.style, e, t),
                  (e.isProcessed = !0);
              }
            }),
            (t.onProcessStyle = function (e, t, n) {
              for (var r = 0; r < this.registry.onProcessStyle.length; r++)
                t.style = this.registry.onProcessStyle[r](t.style, t, n);
            }),
            (t.onProcessSheet = function (e) {
              for (var t = 0; t < this.registry.onProcessSheet.length; t++)
                this.registry.onProcessSheet[t](e);
            }),
            (t.onUpdate = function (e, t, n, r) {
              for (var i = 0; i < this.registry.onUpdate.length; i++)
                this.registry.onUpdate[i](e, t, n, r);
            }),
            (t.onChangeValue = function (e, t, n) {
              for (
                var r = e, i = 0;
                i < this.registry.onChangeValue.length;
                i++
              )
                r = this.registry.onChangeValue[i](r, t, n);
              return r;
            }),
            (t.use = function (e, t) {
              void 0 === t && (t = { queue: "external" });
              var n = this.plugins[t.queue];
              -1 === n.indexOf(e) &&
                (n.push(e),
                (this.registry = []
                  .concat(this.plugins.external, this.plugins.internal)
                  .reduce(
                    function (e, t) {
                      for (var n in t) n in e && e[n].push(t[n]);
                      return e;
                    },
                    {
                      onCreateRule: [],
                      onProcessRule: [],
                      onProcessStyle: [],
                      onProcessSheet: [],
                      onChangeValue: [],
                      onUpdate: [],
                    }
                  )));
            }),
            e
          );
        })(),
        te = new ((function () {
          function e() {
            this.registry = [];
          }
          var t = e.prototype;
          return (
            (t.add = function (e) {
              var t = this.registry,
                n = e.options.index;
              if (-1 === t.indexOf(e))
                if (0 === t.length || n >= this.index) t.push(e);
                else
                  for (var r = 0; r < t.length; r++)
                    if (t[r].options.index > n) return void t.splice(r, 0, e);
            }),
            (t.reset = function () {
              this.registry = [];
            }),
            (t.remove = function (e) {
              var t = this.registry.indexOf(e);
              this.registry.splice(t, 1);
            }),
            (t.toString = function (e) {
              for (
                var t = void 0 === e ? {} : e,
                  n = t.attached,
                  r = Object(p.a)(t, ["attached"]),
                  i = "",
                  a = 0;
                a < this.registry.length;
                a++
              ) {
                var o = this.registry[a];
                (null != n && o.attached !== n) ||
                  (i && (i += "\n"), (i += o.toString(r)));
              }
              return i;
            }),
            Object(h.a)(e, [
              {
                key: "index",
                get: function () {
                  return 0 === this.registry.length
                    ? 0
                    : this.registry[this.registry.length - 1].options.index;
                },
              },
            ]),
            e
          );
        })())(),
        ne =
          "undefined" != typeof window && window.Math == Math
            ? window
            : "undefined" != typeof self && self.Math == Math
            ? self
            : Function("return this")(),
        re = "2f1acc6c3a606b082e5eef5e54414ffb";
      null == ne[re] && (ne[re] = 0);
      var ie = ne[re]++,
        ae = function (e) {
          void 0 === e && (e = {});
          var t = 0;
          return function (n, r) {
            t += 1;
            var i = "",
              a = "";
            return (
              r &&
                (r.options.classNamePrefix && (a = r.options.classNamePrefix),
                null != r.options.jss.id && (i = String(r.options.jss.id))),
              e.minify
                ? "" + (a || "c") + ie + i + t
                : a + n.key + "-" + ie + (i ? "-" + i : "") + "-" + t
            );
          };
        },
        oe = function (e) {
          var t;
          return function () {
            return t || (t = e()), t;
          };
        };
      function se(e, t) {
        try {
          return e.attributeStyleMap
            ? e.attributeStyleMap.get(t)
            : e.style.getPropertyValue(t);
        } catch (n) {
          return "";
        }
      }
      function ue(e, t, n) {
        try {
          var r = n;
          if (
            Array.isArray(n) &&
            ((r = b(n, !0)), "!important" === n[n.length - 1])
          )
            return e.style.setProperty(t, r, "important"), !0;
          e.attributeStyleMap
            ? e.attributeStyleMap.set(t, r)
            : e.style.setProperty(t, r);
        } catch (i) {
          return !1;
        }
        return !0;
      }
      function le(e, t) {
        try {
          e.attributeStyleMap
            ? e.attributeStyleMap.delete(t)
            : e.style.removeProperty(t);
        } catch (n) {}
      }
      function ce(e, t) {
        return (e.selectorText = t), e.selectorText === t;
      }
      var he = oe(function () {
        return document.querySelector("head");
      });
      function fe(e) {
        var t = te.registry;
        if (t.length > 0) {
          var n = (function (e, t) {
            for (var n = 0; n < e.length; n++) {
              var r = e[n];
              if (
                r.attached &&
                r.options.index > t.index &&
                r.options.insertionPoint === t.insertionPoint
              )
                return r;
            }
            return null;
          })(t, e);
          if (n && n.renderer)
            return {
              parent: n.renderer.element.parentNode,
              node: n.renderer.element,
            };
          if (
            (n = (function (e, t) {
              for (var n = e.length - 1; n >= 0; n--) {
                var r = e[n];
                if (r.attached && r.options.insertionPoint === t.insertionPoint)
                  return r;
              }
              return null;
            })(t, e)) &&
            n.renderer
          )
            return {
              parent: n.renderer.element.parentNode,
              node: n.renderer.element.nextSibling,
            };
        }
        var r = e.insertionPoint;
        if (r && "string" === typeof r) {
          var i = (function (e) {
            for (var t = he(), n = 0; n < t.childNodes.length; n++) {
              var r = t.childNodes[n];
              if (8 === r.nodeType && r.nodeValue.trim() === e) return r;
            }
            return null;
          })(r);
          if (i) return { parent: i.parentNode, node: i.nextSibling };
        }
        return !1;
      }
      var de = oe(function () {
          var e = document.querySelector('meta[property="csp-nonce"]');
          return e ? e.getAttribute("content") : null;
        }),
        pe = function (e, t, n) {
          var r = e.cssRules.length;
          (void 0 === n || n > r) && (n = r);
          try {
            if ("insertRule" in e) e.insertRule(t, n);
            else if ("appendRule" in e) {
              e.appendRule(t);
            }
          } catch (i) {
            return !1;
          }
          return e.cssRules[n];
        },
        me = function () {
          var e = document.createElement("style");
          return (e.textContent = "\n"), e;
        },
        ve = (function () {
          function e(e) {
            (this.getPropertyValue = se),
              (this.setProperty = ue),
              (this.removeProperty = le),
              (this.setSelector = ce),
              (this.element = void 0),
              (this.sheet = void 0),
              (this.hasInsertedRules = !1),
              e && te.add(e),
              (this.sheet = e);
            var t = this.sheet ? this.sheet.options : {},
              n = t.media,
              r = t.meta,
              i = t.element;
            (this.element = i || me()),
              this.element.setAttribute("data-jss", ""),
              n && this.element.setAttribute("media", n),
              r && this.element.setAttribute("data-meta", r);
            var a = de();
            a && this.element.setAttribute("nonce", a);
          }
          var t = e.prototype;
          return (
            (t.attach = function () {
              !this.element.parentNode &&
                this.sheet &&
                (!(function (e, t) {
                  var n = t.insertionPoint,
                    r = fe(t);
                  if (!1 !== r && r.parent) r.parent.insertBefore(e, r.node);
                  else if (n && "number" === typeof n.nodeType) {
                    var i = n,
                      a = i.parentNode;
                    a && a.insertBefore(e, i.nextSibling);
                  } else he().appendChild(e);
                })(this.element, this.sheet.options),
                !this.hasInsertedRules ||
                  (this.sheet && !this.sheet.deployed) ||
                  ((this.hasInsertedRules = !1), this.deploy()));
            }),
            (t.detach = function () {
              var e = this.element.parentNode;
              e && e.removeChild(this.element);
            }),
            (t.deploy = function () {
              var e = this.sheet;
              e &&
                (e.options.link
                  ? this.insertRules(e.rules)
                  : (this.element.textContent = "\n" + e.toString() + "\n"));
            }),
            (t.insertRules = function (e, t) {
              for (var n = 0; n < e.index.length; n++)
                this.insertRule(e.index[n], n, t);
            }),
            (t.insertRule = function (e, t, n) {
              if ((void 0 === n && (n = this.element.sheet), e.rules)) {
                var r = e,
                  i = n;
                return (
                  (("conditional" !== e.type && "keyframes" !== e.type) ||
                    !1 !== (i = pe(n, r.toString({ children: !1 }), t))) &&
                  (this.insertRules(r.rules, i), i)
                );
              }
              var a = e.toString();
              if (!a) return !1;
              var o = pe(n, a, t);
              return (
                !1 !== o &&
                ((this.hasInsertedRules = !0), (e.renderable = o), o)
              );
            }),
            (t.deleteRule = function (e) {
              var t = this.element.sheet,
                n = this.indexOf(e);
              return -1 !== n && (t.deleteRule(n), !0);
            }),
            (t.indexOf = function (e) {
              for (
                var t = this.element.sheet.cssRules, n = 0;
                n < t.length;
                n++
              )
                if (e === t[n]) return n;
              return -1;
            }),
            (t.replaceRule = function (e, t) {
              var n = this.indexOf(e);
              return (
                -1 !== n &&
                (this.element.sheet.deleteRule(n), this.insertRule(t, n))
              );
            }),
            (t.getRules = function () {
              return this.element.sheet.cssRules;
            }),
            e
          );
        })(),
        ge = 0,
        ye = (function () {
          function e(e) {
            (this.id = ge++),
              (this.version = "10.0.0-alpha.25"),
              (this.plugins = new ee()),
              (this.options = {
                id: { minify: !1 },
                createGenerateId: ae,
                Renderer: c ? ve : null,
                plugins: [],
              }),
              (this.generateId = ae({ minify: !1 }));
            for (var t = 0; t < J.length; t++)
              this.plugins.use(J[t], { queue: "internal" });
            this.setup(e);
          }
          var t = e.prototype;
          return (
            (t.setup = function (e) {
              return (
                void 0 === e && (e = {}),
                e.createGenerateId &&
                  (this.options.createGenerateId = e.createGenerateId),
                e.id &&
                  (this.options.id = Object(r.a)({}, this.options.id, e.id)),
                (e.createGenerateId || e.id) &&
                  (this.generateId = this.options.createGenerateId(
                    this.options.id
                  )),
                null != e.insertionPoint &&
                  (this.options.insertionPoint = e.insertionPoint),
                "Renderer" in e && (this.options.Renderer = e.Renderer),
                e.plugins && this.use.apply(this, e.plugins),
                this
              );
            }),
            (t.createStyleSheet = function (e, t) {
              void 0 === t && (t = {});
              var n = t.index;
              "number" !== typeof n && (n = 0 === te.index ? 0 : te.index + 1);
              var i = new Q(
                e,
                Object(r.a)({}, t, {
                  jss: this,
                  generateId: t.generateId || this.generateId,
                  insertionPoint: this.options.insertionPoint,
                  Renderer: this.options.Renderer,
                  index: n,
                })
              );
              return this.plugins.onProcessSheet(i), i;
            }),
            (t.removeStyleSheet = function (e) {
              return e.detach(), te.remove(e), this;
            }),
            (t.createRule = function (e, t, n) {
              if (
                (void 0 === t && (t = {}),
                void 0 === n && (n = {}),
                "object" === typeof e)
              )
                return this.createRule(void 0, e, t);
              var i = Object(r.a)({}, n, {
                jss: this,
                Renderer: this.options.Renderer,
              });
              i.generateId || (i.generateId = this.generateId),
                i.classes || (i.classes = {}),
                i.keyframes || (i.keyframes = {});
              var a = g(e, t, i);
              return a && this.plugins.onProcessRule(a), a;
            }),
            (t.use = function () {
              for (
                var e = this, t = arguments.length, n = new Array(t), r = 0;
                r < t;
                r++
              )
                n[r] = arguments[r];
              return (
                n.forEach(function (t) {
                  e.plugins.use(t);
                }),
                this
              );
            }),
            e
          );
        })();
      var be = "undefined" !== typeof CSS && CSS && "number" in CSS,
        xe = function (e) {
          return new ye(e);
        };
      xe();
      var _e = function () {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = e.baseClasses,
            n = e.newClasses;
          if ((e.Component, !n)) return t;
          var i = Object(r.a)({}, t);
          return (
            Object.keys(n).forEach(function (e) {
              n[e] && (i[e] = "".concat(t[e], " ").concat(n[e]));
            }),
            i
          );
        },
        we = {
          set: function (e, t, n, r) {
            var i = e.get(t);
            i || ((i = new Map()), e.set(t, i)), i.set(n, r);
          },
          get: function (e, t, n) {
            var r = e.get(t);
            return r ? r.get(n) : void 0;
          },
          delete: function (e, t, n) {
            e.get(t).delete(n);
          },
        },
        Se = n(139),
        Me =
          "function" === typeof Symbol && Symbol.for
            ? Symbol.for("mui.nested")
            : "__THEME_NESTED__",
        Te = [
          "checked",
          "disabled",
          "error",
          "focused",
          "focusVisible",
          "required",
          "expanded",
          "selected",
        ];
      var Ee = Date.now(),
        Oe = "fnValues" + Ee,
        ke = "fnStyle" + ++Ee;
      var Ae = function () {
          return {
            onCreateRule: function (e, t, n) {
              if ("function" !== typeof t) return null;
              var r = g(e, {}, n);
              return (r[ke] = t), r;
            },
            onProcessStyle: function (e, t) {
              if (Oe in t || ke in t) return e;
              var n = {};
              for (var r in e) {
                var i = e[r];
                "function" === typeof i && (delete e[r], (n[r] = i));
              }
              return (t[Oe] = n), e;
            },
            onUpdate: function (e, t, n, r) {
              var i = t,
                a = i[ke];
              a && (i.style = a(e) || {});
              var o = i[Oe];
              if (o) for (var s in o) i.prop(s, o[s](e), r);
            },
          };
        },
        Ce = "@global",
        Pe = "@global ",
        Re = (function () {
          function e(e, t, n) {
            for (var i in ((this.type = "global"),
            (this.at = Ce),
            (this.rules = void 0),
            (this.options = void 0),
            (this.key = void 0),
            (this.isProcessed = !1),
            (this.key = e),
            (this.options = n),
            (this.rules = new K(Object(r.a)({}, n, { parent: this }))),
            t))
              this.rules.add(i, t[i]);
            this.rules.process();
          }
          var t = e.prototype;
          return (
            (t.getRule = function (e) {
              return this.rules.get(e);
            }),
            (t.addRule = function (e, t, n) {
              var r = this.rules.add(e, t, n);
              return this.options.jss.plugins.onProcessRule(r), r;
            }),
            (t.indexOf = function (e) {
              return this.rules.indexOf(e);
            }),
            (t.toString = function () {
              return this.rules.toString();
            }),
            e
          );
        })(),
        Le = (function () {
          function e(e, t, n) {
            (this.type = "global"),
              (this.at = Ce),
              (this.options = void 0),
              (this.rule = void 0),
              (this.isProcessed = !1),
              (this.key = void 0),
              (this.key = e),
              (this.options = n);
            var i = e.substr(Pe.length);
            this.rule = n.jss.createRule(
              i,
              t,
              Object(r.a)({}, n, { parent: this })
            );
          }
          return (
            (e.prototype.toString = function (e) {
              return this.rule ? this.rule.toString(e) : "";
            }),
            e
          );
        })(),
        je = /\s*,\s*/g;
      function Ie(e, t) {
        for (var n = e.split(je), r = "", i = 0; i < n.length; i++)
          (r += t + " " + n[i].trim()), n[i + 1] && (r += ", ");
        return r;
      }
      var Ne = function () {
          return {
            onCreateRule: function (e, t, n) {
              if (!e) return null;
              if (e === Ce) return new Re(e, t, n);
              if ("@" === e[0] && e.substr(0, Pe.length) === Pe)
                return new Le(e, t, n);
              var r = n.parent;
              return (
                r &&
                  ("global" === r.type ||
                    (r.options.parent && "global" === r.options.parent.type)) &&
                  (n.scoped = !1),
                !1 === n.scoped && (n.selector = e),
                null
              );
            },
            onProcessRule: function (e) {
              "style" === e.type &&
                ((function (e) {
                  var t = e.options,
                    n = e.style,
                    i = n ? n[Ce] : null;
                  if (i) {
                    for (var a in i)
                      t.sheet.addRule(
                        a,
                        i[a],
                        Object(r.a)({}, t, { selector: Ie(a, e.selector) })
                      );
                    delete n[Ce];
                  }
                })(e),
                (function (e) {
                  var t = e.options,
                    n = e.style;
                  for (var i in n)
                    if ("@" === i[0] && i.substr(0, Ce.length) === Ce) {
                      var a = Ie(i.substr(Ce.length), e.selector);
                      t.sheet.addRule(
                        a,
                        n[i],
                        Object(r.a)({}, t, { selector: a })
                      ),
                        delete n[i];
                    }
                })(e));
            },
          };
        },
        De = /\s*,\s*/g,
        ze = /&/g,
        Ue = /\$([\w-]+)/g;
      var Be = function () {
          function e(e, t) {
            return function (n, r) {
              var i = e.getRule(r) || (t && t.getRule(r));
              return i ? (i = i).selector : r;
            };
          }
          function t(e, t) {
            for (
              var n = t.split(De), r = e.split(De), i = "", a = 0;
              a < n.length;
              a++
            )
              for (var o = n[a], s = 0; s < r.length; s++) {
                var u = r[s];
                i && (i += ", "),
                  (i += -1 !== u.indexOf("&") ? u.replace(ze, o) : o + " " + u);
              }
            return i;
          }
          function n(e, t, n) {
            if (n) return Object(r.a)({}, n, { index: n.index + 1 });
            var i = e.options.nestingLevel;
            return (
              (i = void 0 === i ? 1 : i + 1),
              Object(r.a)({}, e.options, {
                nestingLevel: i,
                index: t.indexOf(e) + 1,
              })
            );
          }
          return {
            onProcessStyle: function (i, a, o) {
              if ("style" !== a.type) return i;
              var s,
                u,
                l = a,
                c = l.options.parent;
              for (var h in i) {
                var f = -1 !== h.indexOf("&"),
                  d = "@" === h[0];
                if (f || d) {
                  if (((s = n(l, c, s)), f)) {
                    var p = t(h, l.selector);
                    u || (u = e(c, o)),
                      (p = p.replace(Ue, u)),
                      c.addRule(p, i[h], Object(r.a)({}, s, { selector: p }));
                  } else
                    d &&
                      c
                        .addRule(h, {}, s)
                        .addRule(l.key, i[h], { selector: l.selector });
                  delete i[h];
                }
              }
              return i;
            },
          };
        },
        Fe = /[A-Z]/g,
        Ge = /^ms-/,
        He = {};
      function Ve(e) {
        return "-" + e.toLowerCase();
      }
      var We = function (e) {
        if (He.hasOwnProperty(e)) return He[e];
        var t = e.replace(Fe, Ve);
        return (He[e] = Ge.test(t) ? "-" + t : t);
      };
      function qe(e) {
        var t = {};
        for (var n in e) {
          t[0 === n.indexOf("--") ? n : We(n)] = e[n];
        }
        return (
          e.fallbacks &&
            (Array.isArray(e.fallbacks)
              ? (t.fallbacks = e.fallbacks.map(qe))
              : (t.fallbacks = qe(e.fallbacks))),
          t
        );
      }
      var Xe = function () {
          return {
            onProcessStyle: function (e) {
              if (Array.isArray(e)) {
                for (var t = 0; t < e.length; t++) e[t] = qe(e[t]);
                return e;
              }
              return qe(e);
            },
            onChangeValue: function (e, t, n) {
              if (0 === t.indexOf("--")) return e;
              var r = We(t);
              return t === r ? e : (n.prop(r, e), null);
            },
          };
        },
        Ye = be && CSS ? CSS.px : "px",
        Je = be && CSS ? CSS.ms : "ms",
        Ze = be && CSS ? CSS.percent : "%";
      function $e(e) {
        var t = /(-[a-z])/g,
          n = function (e) {
            return e[1].toUpperCase();
          },
          r = {};
        for (var i in e) (r[i] = e[i]), (r[i.replace(t, n)] = e[i]);
        return r;
      }
      var Ke = $e({
        "animation-delay": Je,
        "animation-duration": Je,
        "background-position": Ye,
        "background-position-x": Ye,
        "background-position-y": Ye,
        "background-size": Ye,
        border: Ye,
        "border-bottom": Ye,
        "border-bottom-left-radius": Ye,
        "border-bottom-right-radius": Ye,
        "border-bottom-width": Ye,
        "border-left": Ye,
        "border-left-width": Ye,
        "border-radius": Ye,
        "border-right": Ye,
        "border-right-width": Ye,
        "border-top": Ye,
        "border-top-left-radius": Ye,
        "border-top-right-radius": Ye,
        "border-top-width": Ye,
        "border-width": Ye,
        margin: Ye,
        "margin-bottom": Ye,
        "margin-left": Ye,
        "margin-right": Ye,
        "margin-top": Ye,
        padding: Ye,
        "padding-bottom": Ye,
        "padding-left": Ye,
        "padding-right": Ye,
        "padding-top": Ye,
        "mask-position-x": Ye,
        "mask-position-y": Ye,
        "mask-size": Ye,
        height: Ye,
        width: Ye,
        "min-height": Ye,
        "max-height": Ye,
        "min-width": Ye,
        "max-width": Ye,
        bottom: Ye,
        left: Ye,
        top: Ye,
        right: Ye,
        "box-shadow": Ye,
        "text-shadow": Ye,
        "column-gap": Ye,
        "column-rule": Ye,
        "column-rule-width": Ye,
        "column-width": Ye,
        "font-size": Ye,
        "font-size-delta": Ye,
        "letter-spacing": Ye,
        "text-indent": Ye,
        "text-stroke": Ye,
        "text-stroke-width": Ye,
        "word-spacing": Ye,
        motion: Ye,
        "motion-offset": Ye,
        outline: Ye,
        "outline-offset": Ye,
        "outline-width": Ye,
        perspective: Ye,
        "perspective-origin-x": Ze,
        "perspective-origin-y": Ze,
        "transform-origin": Ze,
        "transform-origin-x": Ze,
        "transform-origin-y": Ze,
        "transform-origin-z": Ze,
        "transition-delay": Je,
        "transition-duration": Je,
        "vertical-align": Ye,
        "flex-basis": Ye,
        "shape-margin": Ye,
        size: Ye,
        grid: Ye,
        "grid-gap": Ye,
        "grid-row-gap": Ye,
        "grid-column-gap": Ye,
        "grid-template-rows": Ye,
        "grid-template-columns": Ye,
        "grid-auto-rows": Ye,
        "grid-auto-columns": Ye,
        "box-shadow-x": Ye,
        "box-shadow-y": Ye,
        "box-shadow-blur": Ye,
        "box-shadow-spread": Ye,
        "font-line-height": Ye,
        "text-shadow-x": Ye,
        "text-shadow-y": Ye,
        "text-shadow-blur": Ye,
      });
      function Qe(e, t, n) {
        if (!t) return t;
        if (Array.isArray(t))
          for (var r = 0; r < t.length; r++) t[r] = Qe(e, t[r], n);
        else if ("object" === typeof t)
          if ("fallbacks" === e) for (var i in t) t[i] = Qe(i, t[i], n);
          else for (var a in t) t[a] = Qe(e + "-" + a, t[a], n);
        else if ("number" === typeof t)
          return n[e]
            ? "" + t + n[e]
            : Ke[e]
            ? "function" === typeof Ke[e]
              ? Ke[e](t).toString()
              : "" + t + Ke[e]
            : t.toString();
        return t;
      }
      var et = function (e) {
          void 0 === e && (e = {});
          var t = $e(e);
          return {
            onProcessStyle: function (e, n) {
              if ("style" !== n.type) return e;
              for (var r in e) e[r] = Qe(r, e[r], t);
              return e;
            },
            onChangeValue: function (e, n) {
              return Qe(n, e, t);
            },
          };
        },
        tt = n(48),
        nt = "",
        rt = "",
        it = "",
        at = "",
        ot = c && "ontouchstart" in document.documentElement;
      if (c) {
        var st = { Moz: "-moz-", ms: "-ms-", O: "-o-", Webkit: "-webkit-" },
          ut = document.createElement("p").style;
        for (var lt in st)
          if (lt + "Transform" in ut) {
            (nt = lt), (rt = st[lt]);
            break;
          }
        "Webkit" === nt &&
          "msHyphens" in ut &&
          ((nt = "ms"), (rt = st.ms), (at = "edge")),
          "Webkit" === nt && "-apple-trailing-word" in ut && (it = "apple");
      }
      var ct = { js: nt, css: rt, vendor: it, browser: at, isTouch: ot };
      var ht = {
          noPrefill: ["appearance"],
          supportedProperty: function (e) {
            return (
              "appearance" === e &&
              ("ms" === ct.js ? "-webkit-" + e : ct.css + e)
            );
          },
        },
        ft = /[-\s]+(.)?/g;
      function dt(e, t) {
        return t ? t.toUpperCase() : "";
      }
      function pt(e) {
        return e.replace(ft, dt);
      }
      function mt(e) {
        return pt("-" + e);
      }
      var vt,
        gt = {
          supportedProperty: function (e, t) {
            return (
              !!/^break-/.test(e) &&
              ("Webkit" === ct.js
                ? "WebkitColumn" + mt(e) in t && ct.css + "column-" + e
                : "Moz" === ct.js && "page" + mt(e) in t && "page-" + e)
            );
          },
        },
        yt = {
          noPrefill: ["color-adjust"],
          supportedProperty: function (e) {
            return (
              "color-adjust" === e &&
              ("Webkit" === ct.js ? ct.css + "print-" + e : e)
            );
          },
        },
        bt = {
          flex: "box-flex",
          "flex-grow": "box-flex",
          "flex-direction": ["box-orient", "box-direction"],
          order: "box-ordinal-group",
          "align-items": "box-align",
          "flex-flow": ["box-orient", "box-direction"],
          "justify-content": "box-pack",
        },
        xt = Object.keys(bt),
        _t = function (e) {
          return ct.css + e;
        },
        wt = {
          "flex-grow": "flex-positive",
          "flex-shrink": "flex-negative",
          "flex-basis": "flex-preferred-size",
          "justify-content": "flex-pack",
          order: "flex-order",
          "align-items": "flex-align",
          "align-content": "flex-line-pack",
        },
        St = [
          ht,
          yt,
          {
            noPrefill: ["mask"],
            supportedProperty: function (e, t) {
              if (!/^mask/.test(e)) return !1;
              if ("Webkit" === ct.js) {
                if (pt("mask-image") in t) return e;
                if (ct.js + mt("mask-image") in t) return ct.css + e;
              }
              return e;
            },
          },
          {
            noPrefill: ["text-orientation"],
            supportedProperty: function (e) {
              return (
                "text-orientation" === e &&
                ("apple" !== ct.vendor || ct.isTouch ? e : ct.css + e)
              );
            },
          },
          {
            noPrefill: ["transform"],
            supportedProperty: function (e, t, n) {
              return "transform" === e && (n.transform ? e : ct.css + e);
            },
          },
          {
            noPrefill: ["transition"],
            supportedProperty: function (e, t, n) {
              return "transition" === e && (n.transition ? e : ct.css + e);
            },
          },
          {
            noPrefill: ["writing-mode"],
            supportedProperty: function (e) {
              return (
                "writing-mode" === e &&
                ("Webkit" === ct.js || "ms" === ct.js ? ct.css + e : e)
              );
            },
          },
          gt,
          {
            supportedProperty: function (e, t) {
              if (!/^(border|margin|padding)-inline/.test(e)) return !1;
              if ("Moz" === ct.js) return e;
              var n = e.replace("-inline", "");
              return ct.js + mt(n) in t && ct.css + n;
            },
          },
          {
            supportedProperty: function (e, t) {
              return pt(e) in t && e;
            },
          },
          {
            supportedProperty: function (e, t) {
              var n = mt(e);
              return "-" === e[0]
                ? e
                : "-" === e[0] && "-" === e[1]
                ? e
                : ct.js + n in t
                ? ct.css + e
                : "Webkit" !== ct.js && "Webkit" + n in t && "-webkit-" + e;
            },
          },
          {
            supportedProperty: function (e) {
              return (
                "scroll-snap" === e.substring(0, 11) &&
                ("ms" === ct.js ? "" + ct.css + e : e)
              );
            },
          },
          {
            supportedProperty: function (e) {
              return (
                "overscroll-behavior" === e &&
                ("ms" === ct.js ? ct.css + "scroll-chaining" : e)
              );
            },
          },
          {
            supportedProperty: function (e, t) {
              var n = wt[e];
              return !!n && ct.js + mt(n) in t && ct.css + n;
            },
          },
          {
            supportedProperty: function (e, t, n) {
              var r = n.multiple;
              if (xt.indexOf(e) > -1) {
                var i = bt[e];
                if (!Array.isArray(i)) return ct.js + mt(i) in t && ct.css + i;
                if (!r) return !1;
                for (var a = 0; a < i.length; a++)
                  if (!(ct.js + mt(i[0]) in t)) return !1;
                return i.map(_t);
              }
              return !1;
            },
          },
        ],
        Mt = St.filter(function (e) {
          return e.supportedProperty;
        }).map(function (e) {
          return e.supportedProperty;
        }),
        Tt = St.filter(function (e) {
          return e.noPrefill;
        }).reduce(function (e, t) {
          return e.push.apply(e, Object(tt.a)(t.noPrefill)), e;
        }, []),
        Et = {};
      if (c) {
        vt = document.createElement("p");
        var Ot = window.getComputedStyle(document.documentElement, "");
        for (var kt in Ot) isNaN(kt) || (Et[Ot[kt]] = Ot[kt]);
        Tt.forEach(function (e) {
          return delete Et[e];
        });
      }
      function At(e, t) {
        if ((void 0 === t && (t = {}), !vt)) return e;
        if (null != Et[e]) return Et[e];
        ("transition" !== e && "transform" !== e) || (t[e] = e in vt.style);
        for (
          var n = 0;
          n < Mt.length && ((Et[e] = Mt[n](e, vt.style, t)), !Et[e]);
          n++
        );
        try {
          vt.style[e] = "";
        } catch (r) {
          return !1;
        }
        return Et[e];
      }
      var Ct,
        Pt = {},
        Rt = {
          transition: 1,
          "transition-property": 1,
          "-webkit-transition": 1,
          "-webkit-transition-property": 1,
        },
        Lt = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
      function jt(e, t, n) {
        return "var" === t
          ? "var"
          : "all" === t
          ? "all"
          : "all" === n
          ? ", all"
          : t
          ? At(t)
          : ", " + At(n);
      }
      function It(e, t) {
        var n = t;
        if (!Ct || "content" === e) return t;
        if ("string" !== typeof n || !isNaN(parseInt(n, 10))) return n;
        var r = e + n;
        if (null != Pt[r]) return Pt[r];
        try {
          Ct.style[e] = n;
        } catch (i) {
          return (Pt[r] = !1), !1;
        }
        if (Rt[e]) n = n.replace(Lt, jt);
        else if (
          "" === Ct.style[e] &&
          ("-ms-flex" === (n = ct.css + n) && (Ct.style[e] = "-ms-flexbox"),
          (Ct.style[e] = n),
          "" === Ct.style[e])
        )
          return (Pt[r] = !1), !1;
        return (Ct.style[e] = ""), (Pt[r] = n), Pt[r];
      }
      c && (Ct = document.createElement("p"));
      var Nt = function () {
        return {
          onProcessRule: function (e) {
            if ("keyframes" === e.type) {
              var t = e;
              t.at =
                "-" === (n = t.at)[1]
                  ? n
                  : "ms" === ct.js
                  ? n
                  : "@" + ct.css + "keyframes" + n.substr(10);
            }
            var n;
          },
          onProcessStyle: function (e, t) {
            if ("style" !== t.type) return e;
            for (var n in e) {
              var r = e[n],
                i = !1,
                a = At(n);
              a && a !== n && (i = !0);
              var o = !1,
                s = It(a, b(r));
              s && s !== r && (o = !0),
                (i || o) && (i && delete e[n], (e[a || n] = s || r));
            }
            return e;
          },
          onChangeValue: function (e, t) {
            return It(t, b(e)) || e;
          },
        };
      };
      var Dt = function () {
        var e = function (e, t) {
          return e.length === t.length ? (e > t ? 1 : -1) : e.length - t.length;
        };
        return {
          onProcessStyle: function (t, n) {
            if ("style" !== n.type) return t;
            for (
              var r = {}, i = Object.keys(t).sort(e), a = 0;
              a < i.length;
              a++
            )
              r[i[a]] = t[i[a]];
            return r;
          },
        };
      };
      var zt = function () {
          return {
            plugins: [
              Ae(),
              Ne(),
              Be(),
              Xe(),
              et(),
              "undefined" === typeof window ? null : Nt(),
              Dt(),
            ],
          };
        },
        Ut = xe(zt()),
        Bt = {
          disableGeneration: !1,
          generateClassName: (function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = e.disableGlobal,
              n = void 0 !== t && t,
              r = e.productionPrefix,
              i = void 0 === r ? "jss" : r,
              a = e.seed,
              o = void 0 === a ? "" : a,
              s = "" === o ? "" : "".concat(o, "-"),
              u = 0;
            return function (e, t) {
              u += 1;
              var r = t.options.name;
              if (r && 0 === r.indexOf("Mui") && !t.options.link && !n) {
                if (-1 !== Te.indexOf(e.key)) return "Mui-".concat(e.key);
                var a = "".concat(s).concat(r, "-").concat(e.key);
                return t.options.theme[Me] && "" === o
                  ? "".concat(a, "-").concat(u)
                  : a;
              }
              return "".concat(s).concat(i).concat(u);
            };
          })(),
          jss: Ut,
          sheetsCache: null,
          sheetsManager: new Map(),
          sheetsRegistry: null,
        },
        Ft = o.a.createContext(Bt);
      var Gt = -1e9;
      n(66);
      var Ht = n(35),
        Vt = n.n(Ht);
      function Wt(e, t) {
        return t;
      }
      var qt = function (e) {
          var t = "function" === typeof e;
          return {
            create: function (n, i) {
              var a;
              try {
                a = t ? e(n) : e;
              } catch (u) {
                throw u;
              }
              if (!i || !n.overrides || !n.overrides[i]) return a;
              var o = n.overrides[i],
                s = Object(r.a)({}, a);
              return (
                Object.keys(o).forEach(function (e) {
                  s[e] = Vt()(s[e], o[e], { arrayMerge: Wt });
                }),
                s
              );
            },
            options: {},
          };
        },
        Xt = {};
      function Yt(e, t, n) {
        var r = e.state;
        if (e.stylesOptions.disableGeneration) return t || {};
        r.cacheClasses ||
          (r.cacheClasses = { value: null, lastProp: null, lastJSS: {} });
        var i = !1;
        return (
          r.classes !== r.cacheClasses.lastJSS &&
            ((r.cacheClasses.lastJSS = r.classes), (i = !0)),
          t !== r.cacheClasses.lastProp &&
            ((r.cacheClasses.lastProp = t), (i = !0)),
          i &&
            (r.cacheClasses.value = _e({
              baseClasses: r.cacheClasses.lastJSS,
              newClasses: t,
              Component: n,
            })),
          r.cacheClasses.value
        );
      }
      function Jt(e, t) {
        var n = e.state,
          i = e.theme,
          a = e.stylesOptions,
          o = e.stylesCreator,
          s = e.name;
        if (!a.disableGeneration) {
          var u = we.get(a.sheetsManager, o, i);
          u ||
            ((u = { refs: 0, staticSheet: null, dynamicStyles: null }),
            we.set(a.sheetsManager, o, i, u));
          var l = Object(r.a)({}, o.options, {}, a, {
            theme: i,
            flip: "boolean" === typeof a.flip ? a.flip : "rtl" === i.direction,
          });
          l.generateId = l.serverGenerateClassName || l.generateClassName;
          var c = a.sheetsRegistry;
          if (0 === u.refs) {
            var h;
            a.sheetsCache && (h = we.get(a.sheetsCache, o, i));
            var f = o.create(i, s);
            h ||
              ((h = a.jss.createStyleSheet(
                f,
                Object(r.a)({ link: !1 }, l)
              )).attach(),
              a.sheetsCache && we.set(a.sheetsCache, o, i, h)),
              c && c.add(h),
              (u.staticSheet = h),
              (u.dynamicStyles = (function e(t) {
                var n = null;
                for (var r in t) {
                  var i = t[r],
                    a = typeof i;
                  if ("function" === a) n || (n = {}), (n[r] = i);
                  else if ("object" === a && null !== i && !Array.isArray(i)) {
                    var o = e(i);
                    o && (n || (n = {}), (n[r] = o));
                  }
                }
                return n;
              })(f));
          }
          if (u.dynamicStyles) {
            var d = a.jss.createStyleSheet(
              u.dynamicStyles,
              Object(r.a)({ link: !0 }, l)
            );
            d.update(t).attach(),
              (n.dynamicSheet = d),
              (n.classes = _e({
                baseClasses: u.staticSheet.classes,
                newClasses: d.classes,
              })),
              c && c.add(d);
          } else n.classes = u.staticSheet.classes;
          u.refs += 1;
        }
      }
      function Zt(e, t) {
        var n = e.state;
        n.dynamicSheet && n.dynamicSheet.update(t);
      }
      function $t(e) {
        var t = e.state,
          n = e.theme,
          r = e.stylesOptions,
          i = e.stylesCreator;
        if (!r.disableGeneration) {
          var a = we.get(r.sheetsManager, i, n);
          a.refs -= 1;
          var o = r.sheetsRegistry;
          0 === a.refs &&
            (we.delete(r.sheetsManager, i, n),
            r.jss.removeStyleSheet(a.staticSheet),
            o && o.remove(a.staticSheet)),
            t.dynamicSheet &&
              (r.jss.removeStyleSheet(t.dynamicSheet),
              o && o.remove(t.dynamicSheet));
        }
      }
      function Kt(e, t) {
        var n,
          r = o.a.useRef([]),
          i = o.a.useMemo(function () {
            return {};
          }, t);
        r.current !== i && ((r.current = i), (n = e())),
          o.a.useEffect(
            function () {
              return function () {
                n && n();
              };
            },
            [i]
          );
      }
      var Qt = function (e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = t.name,
          a = t.classNamePrefix,
          s = t.Component,
          u = t.defaultTheme,
          l = void 0 === u ? Xt : u,
          c = Object(i.a)(t, [
            "name",
            "classNamePrefix",
            "Component",
            "defaultTheme",
          ]),
          h = qt(e),
          f = n || a || "makeStyles";
        return (
          (h.options = {
            index: (Gt += 1),
            name: n,
            meta: f,
            classNamePrefix: f,
          }),
          function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = Object(Se.a)() || l,
              i = Object(r.a)({}, o.a.useContext(Ft), {}, c),
              a = o.a.useRef(),
              u = o.a.useRef();
            return (
              Kt(
                function () {
                  var r = {
                    name: n,
                    state: {},
                    stylesCreator: h,
                    stylesOptions: i,
                    theme: t,
                  };
                  return (
                    Jt(r, e),
                    (u.current = !1),
                    (a.current = r),
                    function () {
                      $t(r);
                    }
                  );
                },
                [t, h]
              ),
              o.a.useEffect(function () {
                u.current && Zt(a.current, e), (u.current = !0);
              }),
              Yt(a.current, e.classes, s)
            );
          }
        );
      };
      var en = function (e) {
          var t = e.theme,
            n = e.name,
            r = e.props;
          if (!t || !t.props || !t.props[n]) return r;
          var i,
            a = t.props[n];
          for (i in a) void 0 === r[i] && (r[i] = a[i]);
          return r;
        },
        tn = function (e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return function (n) {
            var a = t.defaultTheme,
              s = t.withTheme,
              l = void 0 !== s && s,
              c = t.name,
              h = Object(i.a)(t, ["defaultTheme", "withTheme", "name"]);
            var f = c,
              d = Qt(
                e,
                Object(r.a)(
                  {
                    defaultTheme: a,
                    Component: n,
                    name: c || n.displayName,
                    classNamePrefix: f,
                  },
                  h
                )
              ),
              p = o.a.forwardRef(function (e, t) {
                e.classes;
                var s,
                  u = e.innerRef,
                  h = Object(i.a)(e, ["classes", "innerRef"]),
                  f = d(e),
                  p = h;
                return (
                  ("string" === typeof c || l) &&
                    ((s = Object(Se.a)() || a),
                    c && (p = en({ theme: s, name: c, props: h })),
                    l && !p.theme && (p.theme = s)),
                  o.a.createElement(
                    n,
                    Object(r.a)({ ref: u || t, classes: f }, p)
                  )
                );
              });
            return u()(p, n), p;
          };
        },
        nn = n(60);
      t.a = function (e, t) {
        return tn(e, Object(r.a)({ defaultTheme: nn.a }, t));
      };
    },
    function (e, t, n) {
      "use strict";
      function r(e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      (t.__esModule = !0), (t.Helmet = void 0);
      var r =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
            return e;
          },
        i = (function () {
          function e(e, t) {
            for (var n = 0; n < t.length; n++) {
              var r = t[n];
              (r.enumerable = r.enumerable || !1),
                (r.configurable = !0),
                "value" in r && (r.writable = !0),
                Object.defineProperty(e, r.key, r);
            }
          }
          return function (t, n, r) {
            return n && e(t.prototype, n), r && e(t, r), t;
          };
        })(),
        a = h(n(0)),
        o = h(n(7)),
        s = h(n(117)),
        u = h(n(118)),
        l = n(119),
        c = n(75);
      function h(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function f(e, t) {
        var n = {};
        for (var r in e)
          t.indexOf(r) >= 0 ||
            (Object.prototype.hasOwnProperty.call(e, r) && (n[r] = e[r]));
        return n;
      }
      var d = (function (e) {
        var t, n;
        return (
          (n = t =
            (function (t) {
              function n() {
                return (
                  (function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, n),
                  (function (e, t) {
                    if (!e)
                      throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                      );
                    return !t ||
                      ("object" !== typeof t && "function" !== typeof t)
                      ? e
                      : t;
                  })(this, t.apply(this, arguments))
                );
              }
              return (
                (function (e, t) {
                  if ("function" !== typeof t && null !== t)
                    throw new TypeError(
                      "Super expression must either be null or a function, not " +
                        typeof t
                    );
                  (e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                      value: e,
                      enumerable: !1,
                      writable: !0,
                      configurable: !0,
                    },
                  })),
                    t &&
                      (Object.setPrototypeOf
                        ? Object.setPrototypeOf(e, t)
                        : (e.__proto__ = t));
                })(n, t),
                (n.prototype.shouldComponentUpdate = function (e) {
                  return !(0, u.default)(this.props, e);
                }),
                (n.prototype.mapNestedChildrenToProps = function (e, t) {
                  if (!t) return null;
                  switch (e.type) {
                    case c.TAG_NAMES.SCRIPT:
                    case c.TAG_NAMES.NOSCRIPT:
                      return { innerHTML: t };
                    case c.TAG_NAMES.STYLE:
                      return { cssText: t };
                  }
                  throw new Error(
                    "<" +
                      e.type +
                      " /> elements are self-closing and can not contain children. Refer to our API for more information."
                  );
                }),
                (n.prototype.flattenArrayTypeChildren = function (e) {
                  var t,
                    n = e.child,
                    i = e.arrayTypeChildren,
                    a = e.newChildProps,
                    o = e.nestedChildren;
                  return r(
                    {},
                    i,
                    (((t = {})[n.type] = [].concat(i[n.type] || [], [
                      r({}, a, this.mapNestedChildrenToProps(n, o)),
                    ])),
                    t)
                  );
                }),
                (n.prototype.mapObjectTypeChildren = function (e) {
                  var t,
                    n,
                    i = e.child,
                    a = e.newProps,
                    o = e.newChildProps,
                    s = e.nestedChildren;
                  switch (i.type) {
                    case c.TAG_NAMES.TITLE:
                      return r(
                        {},
                        a,
                        (((t = {})[i.type] = s),
                        (t.titleAttributes = r({}, o)),
                        t)
                      );
                    case c.TAG_NAMES.BODY:
                      return r({}, a, { bodyAttributes: r({}, o) });
                    case c.TAG_NAMES.HTML:
                      return r({}, a, { htmlAttributes: r({}, o) });
                  }
                  return r({}, a, (((n = {})[i.type] = r({}, o)), n));
                }),
                (n.prototype.mapArrayTypeChildrenToProps = function (e, t) {
                  var n = r({}, t);
                  return (
                    Object.keys(e).forEach(function (t) {
                      var i;
                      n = r({}, n, (((i = {})[t] = e[t]), i));
                    }),
                    n
                  );
                }),
                (n.prototype.warnOnInvalidChildren = function (e, t) {
                  return !0;
                }),
                (n.prototype.mapChildrenToProps = function (e, t) {
                  var n = this,
                    r = {};
                  return (
                    a.default.Children.forEach(e, function (e) {
                      if (e && e.props) {
                        var i = e.props,
                          a = i.children,
                          o = f(i, ["children"]),
                          s = (0, l.convertReactPropstoHtmlAttributes)(o);
                        switch ((n.warnOnInvalidChildren(e, a), e.type)) {
                          case c.TAG_NAMES.LINK:
                          case c.TAG_NAMES.META:
                          case c.TAG_NAMES.NOSCRIPT:
                          case c.TAG_NAMES.SCRIPT:
                          case c.TAG_NAMES.STYLE:
                            r = n.flattenArrayTypeChildren({
                              child: e,
                              arrayTypeChildren: r,
                              newChildProps: s,
                              nestedChildren: a,
                            });
                            break;
                          default:
                            t = n.mapObjectTypeChildren({
                              child: e,
                              newProps: t,
                              newChildProps: s,
                              nestedChildren: a,
                            });
                        }
                      }
                    }),
                    (t = this.mapArrayTypeChildrenToProps(r, t))
                  );
                }),
                (n.prototype.render = function () {
                  var t = this.props,
                    n = t.children,
                    i = f(t, ["children"]),
                    o = r({}, i);
                  return (
                    n && (o = this.mapChildrenToProps(n, o)),
                    a.default.createElement(e, o)
                  );
                }),
                i(n, null, [
                  {
                    key: "canUseDOM",
                    set: function (t) {
                      e.canUseDOM = t;
                    },
                  },
                ]),
                n
              );
            })(a.default.Component)),
          (t.propTypes = {
            base: o.default.object,
            bodyAttributes: o.default.object,
            children: o.default.oneOfType([
              o.default.arrayOf(o.default.node),
              o.default.node,
            ]),
            defaultTitle: o.default.string,
            defer: o.default.bool,
            encodeSpecialCharacters: o.default.bool,
            htmlAttributes: o.default.object,
            link: o.default.arrayOf(o.default.object),
            meta: o.default.arrayOf(o.default.object),
            noscript: o.default.arrayOf(o.default.object),
            onChangeClientState: o.default.func,
            script: o.default.arrayOf(o.default.object),
            style: o.default.arrayOf(o.default.object),
            title: o.default.string,
            titleAttributes: o.default.object,
            titleTemplate: o.default.string,
          }),
          (t.defaultProps = { defer: !0, encodeSpecialCharacters: !0 }),
          (t.peek = e.peek),
          (t.rewind = function () {
            var t = e.rewind();
            return (
              t ||
                (t = (0, l.mapStateOnServer)({
                  baseTag: [],
                  bodyAttributes: {},
                  encodeSpecialCharacters: !0,
                  htmlAttributes: {},
                  linkTags: [],
                  metaTags: [],
                  noscriptTags: [],
                  scriptTags: [],
                  styleTags: [],
                  title: "",
                  titleAttributes: {},
                })),
              t
            );
          }),
          n
        );
      })(
        (0, s.default)(
          l.reducePropsToState,
          l.handleClientStateChange,
          l.mapStateOnServer
        )(function () {
          return null;
        })
      );
      (d.renderStatic = d.rewind), (t.Helmet = d), (t.default = d);
    },
    function (e, t, n) {
      e.exports = n(98);
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        (e.prototype = Object.create(t.prototype)),
          (e.prototype.constructor = e),
          (e.__proto__ = t);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      function r(e) {
        return e.charAt(0).toUpperCase() + e.slice(1);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return u;
        });
      var r,
        i = n(7),
        a = n.n(i);
      function o(e, t) {
        return (
          void 0 === e && (e = ""),
          void 0 === t && (t = r),
          t
            ? e
                .split(" ")
                .map(function (e) {
                  return t[e] || e;
                })
                .join(" ")
            : e
        );
      }
      var s = ("object" === typeof window && window.Element) || function () {};
      a.a.oneOfType([
        a.a.string,
        a.a.func,
        function (e, t, n) {
          if (!(e[t] instanceof s))
            return new Error(
              "Invalid prop `" +
                t +
                "` supplied to `" +
                n +
                "`. Expected prop to be an instance of Element. Validation failed."
            );
        },
        a.a.shape({ current: a.a.any }),
      ]);
      var u = a.a.oneOfType([
        a.a.func,
        a.a.string,
        a.a.shape({ $$typeof: a.a.symbol, render: a.a.func }),
        a.a.arrayOf(
          a.a.oneOfType([
            a.a.func,
            a.a.string,
            a.a.shape({ $$typeof: a.a.symbol, render: a.a.func }),
          ])
        ),
      ]);
      "undefined" === typeof window ||
        !window.document ||
        window.document.createElement;
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = {},
          a = Object.keys(e);
        for (r = 0; r < a.length; r++)
          (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      var r = n(57),
        i = "undefined" !== typeof URLSearchParams ? URLSearchParams : r.a,
        a = FormData,
        o = (function () {
          var e;
          return (
            ("undefined" === typeof navigator ||
              ("ReactNative" !== (e = navigator.product) &&
                "NativeScript" !== e &&
                "NS" !== e)) &&
            "undefined" !== typeof window &&
            "undefined" !== typeof document
          );
        })(),
        s = {
          isBrowser: !0,
          classes: { URLSearchParams: i, FormData: a, Blob: Blob },
          isStandardBrowserEnv: o,
          protocols: ["http", "https", "file", "blob", "url", "data"],
        };
      n.d(t, "a", function () {
        return s;
      });
    },
    function (e, t, n) {
      "use strict";
      var r = !0,
        i = "Invariant failed";
      t.a = function (e, t) {
        if (!e) throw r ? new Error(i) : new Error(i + ": " + (t || ""));
      };
    },
    function (e, t, n) {
      "use strict";
      var r = n(8);
      function i(e) {
        return "/" === e.charAt(0);
      }
      function a(e, t) {
        for (var n = t, r = n + 1, i = e.length; r < i; n += 1, r += 1)
          e[n] = e[r];
        e.pop();
      }
      var o = function (e, t) {
        void 0 === t && (t = "");
        var n,
          r = (e && e.split("/")) || [],
          o = (t && t.split("/")) || [],
          s = e && i(e),
          u = t && i(t),
          l = s || u;
        if (
          (e && i(e) ? (o = r) : r.length && (o.pop(), (o = o.concat(r))),
          !o.length)
        )
          return "/";
        if (o.length) {
          var c = o[o.length - 1];
          n = "." === c || ".." === c || "" === c;
        } else n = !1;
        for (var h = 0, f = o.length; f >= 0; f--) {
          var d = o[f];
          "." === d
            ? a(o, f)
            : ".." === d
            ? (a(o, f), h++)
            : h && (a(o, f), h--);
        }
        if (!l) for (; h--; h) o.unshift("..");
        !l || "" === o[0] || (o[0] && i(o[0])) || o.unshift("");
        var p = o.join("/");
        return n && "/" !== p.substr(-1) && (p += "/"), p;
      };
      function s(e) {
        return e.valueOf ? e.valueOf() : Object.prototype.valueOf.call(e);
      }
      var u = function e(t, n) {
          if (t === n) return !0;
          if (null == t || null == n) return !1;
          if (Array.isArray(t))
            return (
              Array.isArray(n) &&
              t.length === n.length &&
              t.every(function (t, r) {
                return e(t, n[r]);
              })
            );
          if ("object" === typeof t || "object" === typeof n) {
            var r = s(t),
              i = s(n);
            return r !== t || i !== n
              ? e(r, i)
              : Object.keys(Object.assign({}, t, n)).every(function (r) {
                  return e(t[r], n[r]);
                });
          }
          return !1;
        },
        l = n(27);
      function c(e) {
        return "/" === e.charAt(0) ? e : "/" + e;
      }
      function h(e) {
        return "/" === e.charAt(0) ? e.substr(1) : e;
      }
      function f(e, t) {
        return (function (e, t) {
          return (
            0 === e.toLowerCase().indexOf(t.toLowerCase()) &&
            -1 !== "/?#".indexOf(e.charAt(t.length))
          );
        })(e, t)
          ? e.substr(t.length)
          : e;
      }
      function d(e) {
        return "/" === e.charAt(e.length - 1) ? e.slice(0, -1) : e;
      }
      function p(e) {
        var t = e.pathname,
          n = e.search,
          r = e.hash,
          i = t || "/";
        return (
          n && "?" !== n && (i += "?" === n.charAt(0) ? n : "?" + n),
          r && "#" !== r && (i += "#" === r.charAt(0) ? r : "#" + r),
          i
        );
      }
      function m(e, t, n, i) {
        var a;
        "string" === typeof e
          ? ((a = (function (e) {
              var t = e || "/",
                n = "",
                r = "",
                i = t.indexOf("#");
              -1 !== i && ((r = t.substr(i)), (t = t.substr(0, i)));
              var a = t.indexOf("?");
              return (
                -1 !== a && ((n = t.substr(a)), (t = t.substr(0, a))),
                {
                  pathname: t,
                  search: "?" === n ? "" : n,
                  hash: "#" === r ? "" : r,
                }
              );
            })(e)).state = t)
          : (void 0 === (a = Object(r.a)({}, e)).pathname && (a.pathname = ""),
            a.search
              ? "?" !== a.search.charAt(0) && (a.search = "?" + a.search)
              : (a.search = ""),
            a.hash
              ? "#" !== a.hash.charAt(0) && (a.hash = "#" + a.hash)
              : (a.hash = ""),
            void 0 !== t && void 0 === a.state && (a.state = t));
        try {
          a.pathname = decodeURI(a.pathname);
        } catch (s) {
          throw s instanceof URIError
            ? new URIError(
                'Pathname "' +
                  a.pathname +
                  '" could not be decoded. This is likely caused by an invalid percent-encoding.'
              )
            : s;
        }
        return (
          n && (a.key = n),
          i
            ? a.pathname
              ? "/" !== a.pathname.charAt(0) &&
                (a.pathname = o(a.pathname, i.pathname))
              : (a.pathname = i.pathname)
            : a.pathname || (a.pathname = "/"),
          a
        );
      }
      function v(e, t) {
        return (
          e.pathname === t.pathname &&
          e.search === t.search &&
          e.hash === t.hash &&
          e.key === t.key &&
          u(e.state, t.state)
        );
      }
      function g() {
        var e = null;
        var t = [];
        return {
          setPrompt: function (t) {
            return (
              (e = t),
              function () {
                e === t && (e = null);
              }
            );
          },
          confirmTransitionTo: function (t, n, r, i) {
            if (null != e) {
              var a = "function" === typeof e ? e(t, n) : e;
              "string" === typeof a
                ? "function" === typeof r
                  ? r(a, i)
                  : i(!0)
                : i(!1 !== a);
            } else i(!0);
          },
          appendListener: function (e) {
            var n = !0;
            function r() {
              n && e.apply(void 0, arguments);
            }
            return (
              t.push(r),
              function () {
                (n = !1),
                  (t = t.filter(function (e) {
                    return e !== r;
                  }));
              }
            );
          },
          notifyListeners: function () {
            for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
              n[r] = arguments[r];
            t.forEach(function (e) {
              return e.apply(void 0, n);
            });
          },
        };
      }
      n.d(t, "a", function () {
        return S;
      }),
        n.d(t, "b", function () {
          return A;
        }),
        n.d(t, "d", function () {
          return P;
        }),
        n.d(t, "c", function () {
          return m;
        }),
        n.d(t, "f", function () {
          return v;
        }),
        n.d(t, "e", function () {
          return p;
        });
      var y = !(
        "undefined" === typeof window ||
        !window.document ||
        !window.document.createElement
      );
      function b(e, t) {
        t(window.confirm(e));
      }
      var x = "popstate",
        _ = "hashchange";
      function w() {
        try {
          return window.history.state || {};
        } catch (e) {
          return {};
        }
      }
      function S(e) {
        void 0 === e && (e = {}), y || Object(l.a)(!1);
        var t = window.history,
          n = (function () {
            var e = window.navigator.userAgent;
            return (
              ((-1 === e.indexOf("Android 2.") &&
                -1 === e.indexOf("Android 4.0")) ||
                -1 === e.indexOf("Mobile Safari") ||
                -1 !== e.indexOf("Chrome") ||
                -1 !== e.indexOf("Windows Phone")) &&
              window.history &&
              "pushState" in window.history
            );
          })(),
          i = !(-1 === window.navigator.userAgent.indexOf("Trident")),
          a = e,
          o = a.forceRefresh,
          s = void 0 !== o && o,
          u = a.getUserConfirmation,
          h = void 0 === u ? b : u,
          v = a.keyLength,
          S = void 0 === v ? 6 : v,
          M = e.basename ? d(c(e.basename)) : "";
        function T(e) {
          var t = e || {},
            n = t.key,
            r = t.state,
            i = window.location,
            a = i.pathname + i.search + i.hash;
          return M && (a = f(a, M)), m(a, r, n);
        }
        function E() {
          return Math.random().toString(36).substr(2, S);
        }
        var O = g();
        function k(e) {
          Object(r.a)(B, e),
            (B.length = t.length),
            O.notifyListeners(B.location, B.action);
        }
        function A(e) {
          (function (e) {
            return (
              void 0 === e.state && -1 === navigator.userAgent.indexOf("CriOS")
            );
          })(e) || R(T(e.state));
        }
        function C() {
          R(T(w()));
        }
        var P = !1;
        function R(e) {
          if (P) (P = !1), k();
          else {
            O.confirmTransitionTo(e, "POP", h, function (t) {
              t
                ? k({ action: "POP", location: e })
                : (function (e) {
                    var t = B.location,
                      n = j.indexOf(t.key);
                    -1 === n && (n = 0);
                    var r = j.indexOf(e.key);
                    -1 === r && (r = 0);
                    var i = n - r;
                    i && ((P = !0), N(i));
                  })(e);
            });
          }
        }
        var L = T(w()),
          j = [L.key];
        function I(e) {
          return M + p(e);
        }
        function N(e) {
          t.go(e);
        }
        var D = 0;
        function z(e) {
          1 === (D += e) && 1 === e
            ? (window.addEventListener(x, A),
              i && window.addEventListener(_, C))
            : 0 === D &&
              (window.removeEventListener(x, A),
              i && window.removeEventListener(_, C));
        }
        var U = !1;
        var B = {
          length: t.length,
          action: "POP",
          location: L,
          createHref: I,
          push: function (e, r) {
            var i = m(e, r, E(), B.location);
            O.confirmTransitionTo(i, "PUSH", h, function (e) {
              if (e) {
                var r = I(i),
                  a = i.key,
                  o = i.state;
                if (n)
                  if ((t.pushState({ key: a, state: o }, null, r), s))
                    window.location.href = r;
                  else {
                    var u = j.indexOf(B.location.key),
                      l = j.slice(0, u + 1);
                    l.push(i.key), (j = l), k({ action: "PUSH", location: i });
                  }
                else window.location.href = r;
              }
            });
          },
          replace: function (e, r) {
            var i = m(e, r, E(), B.location);
            O.confirmTransitionTo(i, "REPLACE", h, function (e) {
              if (e) {
                var r = I(i),
                  a = i.key,
                  o = i.state;
                if (n)
                  if ((t.replaceState({ key: a, state: o }, null, r), s))
                    window.location.replace(r);
                  else {
                    var u = j.indexOf(B.location.key);
                    -1 !== u && (j[u] = i.key),
                      k({ action: "REPLACE", location: i });
                  }
                else window.location.replace(r);
              }
            });
          },
          go: N,
          goBack: function () {
            N(-1);
          },
          goForward: function () {
            N(1);
          },
          block: function (e) {
            void 0 === e && (e = !1);
            var t = O.setPrompt(e);
            return (
              U || (z(1), (U = !0)),
              function () {
                return U && ((U = !1), z(-1)), t();
              }
            );
          },
          listen: function (e) {
            var t = O.appendListener(e);
            return (
              z(1),
              function () {
                z(-1), t();
              }
            );
          },
        };
        return B;
      }
      var M = "hashchange",
        T = {
          hashbang: {
            encodePath: function (e) {
              return "!" === e.charAt(0) ? e : "!/" + h(e);
            },
            decodePath: function (e) {
              return "!" === e.charAt(0) ? e.substr(1) : e;
            },
          },
          noslash: { encodePath: h, decodePath: c },
          slash: { encodePath: c, decodePath: c },
        };
      function E(e) {
        var t = e.indexOf("#");
        return -1 === t ? e : e.slice(0, t);
      }
      function O() {
        var e = window.location.href,
          t = e.indexOf("#");
        return -1 === t ? "" : e.substring(t + 1);
      }
      function k(e) {
        window.location.replace(E(window.location.href) + "#" + e);
      }
      function A(e) {
        void 0 === e && (e = {}), y || Object(l.a)(!1);
        var t = window.history,
          n = (window.navigator.userAgent.indexOf("Firefox"), e),
          i = n.getUserConfirmation,
          a = void 0 === i ? b : i,
          o = n.hashType,
          s = void 0 === o ? "slash" : o,
          u = e.basename ? d(c(e.basename)) : "",
          h = T[s],
          v = h.encodePath,
          x = h.decodePath;
        function _() {
          var e = x(O());
          return u && (e = f(e, u)), m(e);
        }
        var w = g();
        function S(e) {
          Object(r.a)(B, e),
            (B.length = t.length),
            w.notifyListeners(B.location, B.action);
        }
        var A = !1,
          C = null;
        function P() {
          var e,
            t,
            n = O(),
            r = v(n);
          if (n !== r) k(r);
          else {
            var i = _(),
              o = B.location;
            if (
              !A &&
              ((t = i),
              (e = o).pathname === t.pathname &&
                e.search === t.search &&
                e.hash === t.hash)
            )
              return;
            if (C === p(i)) return;
            (C = null),
              (function (e) {
                if (A) (A = !1), S();
                else {
                  w.confirmTransitionTo(e, "POP", a, function (t) {
                    t
                      ? S({ action: "POP", location: e })
                      : (function (e) {
                          var t = B.location,
                            n = I.lastIndexOf(p(t));
                          -1 === n && (n = 0);
                          var r = I.lastIndexOf(p(e));
                          -1 === r && (r = 0);
                          var i = n - r;
                          i && ((A = !0), N(i));
                        })(e);
                  });
                }
              })(i);
          }
        }
        var R = O(),
          L = v(R);
        R !== L && k(L);
        var j = _(),
          I = [p(j)];
        function N(e) {
          t.go(e);
        }
        var D = 0;
        function z(e) {
          1 === (D += e) && 1 === e
            ? window.addEventListener(M, P)
            : 0 === D && window.removeEventListener(M, P);
        }
        var U = !1;
        var B = {
          length: t.length,
          action: "POP",
          location: j,
          createHref: function (e) {
            var t = document.querySelector("base"),
              n = "";
            return (
              t && t.getAttribute("href") && (n = E(window.location.href)),
              n + "#" + v(u + p(e))
            );
          },
          push: function (e, t) {
            var n = m(e, void 0, void 0, B.location);
            w.confirmTransitionTo(n, "PUSH", a, function (e) {
              if (e) {
                var t = p(n),
                  r = v(u + t);
                if (O() !== r) {
                  (C = t),
                    (function (e) {
                      window.location.hash = e;
                    })(r);
                  var i = I.lastIndexOf(p(B.location)),
                    a = I.slice(0, i + 1);
                  a.push(t), (I = a), S({ action: "PUSH", location: n });
                } else S();
              }
            });
          },
          replace: function (e, t) {
            var n = m(e, void 0, void 0, B.location);
            w.confirmTransitionTo(n, "REPLACE", a, function (e) {
              if (e) {
                var t = p(n),
                  r = v(u + t);
                O() !== r && ((C = t), k(r));
                var i = I.indexOf(p(B.location));
                -1 !== i && (I[i] = t), S({ action: "REPLACE", location: n });
              }
            });
          },
          go: N,
          goBack: function () {
            N(-1);
          },
          goForward: function () {
            N(1);
          },
          block: function (e) {
            void 0 === e && (e = !1);
            var t = w.setPrompt(e);
            return (
              U || (z(1), (U = !0)),
              function () {
                return U && ((U = !1), z(-1)), t();
              }
            );
          },
          listen: function (e) {
            var t = w.appendListener(e);
            return (
              z(1),
              function () {
                z(-1), t();
              }
            );
          },
        };
        return B;
      }
      function C(e, t, n) {
        return Math.min(Math.max(e, t), n);
      }
      function P(e) {
        void 0 === e && (e = {});
        var t = e,
          n = t.getUserConfirmation,
          i = t.initialEntries,
          a = void 0 === i ? ["/"] : i,
          o = t.initialIndex,
          s = void 0 === o ? 0 : o,
          u = t.keyLength,
          l = void 0 === u ? 6 : u,
          c = g();
        function h(e) {
          Object(r.a)(x, e),
            (x.length = x.entries.length),
            c.notifyListeners(x.location, x.action);
        }
        function f() {
          return Math.random().toString(36).substr(2, l);
        }
        var d = C(s, 0, a.length - 1),
          v = a.map(function (e) {
            return m(e, void 0, "string" === typeof e ? f() : e.key || f());
          }),
          y = p;
        function b(e) {
          var t = C(x.index + e, 0, x.entries.length - 1),
            r = x.entries[t];
          c.confirmTransitionTo(r, "POP", n, function (e) {
            e ? h({ action: "POP", location: r, index: t }) : h();
          });
        }
        var x = {
          length: v.length,
          action: "POP",
          location: v[d],
          index: d,
          entries: v,
          createHref: y,
          push: function (e, t) {
            var r = m(e, t, f(), x.location);
            c.confirmTransitionTo(r, "PUSH", n, function (e) {
              if (e) {
                var t = x.index + 1,
                  n = x.entries.slice(0);
                n.length > t ? n.splice(t, n.length - t, r) : n.push(r),
                  h({ action: "PUSH", location: r, index: t, entries: n });
              }
            });
          },
          replace: function (e, t) {
            var r = m(e, t, f(), x.location);
            c.confirmTransitionTo(r, "REPLACE", n, function (e) {
              e &&
                ((x.entries[x.index] = r),
                h({ action: "REPLACE", location: r }));
            });
          },
          go: b,
          goBack: function () {
            b(-1);
          },
          goForward: function () {
            b(1);
          },
          canGo: function (e) {
            var t = x.index + e;
            return t >= 0 && t < x.entries.length;
          },
          block: function (e) {
            return void 0 === e && (e = !1), c.setPrompt(e);
          },
          listen: function (e) {
            return c.appendListener(e);
          },
        };
        return x;
      }
    },
    function (e, t, n) {
      "use strict";
      var r = n(6),
        i = r.a.toObjectSet([
          "age",
          "authorization",
          "content-length",
          "content-type",
          "etag",
          "expires",
          "from",
          "host",
          "if-modified-since",
          "if-unmodified-since",
          "last-modified",
          "location",
          "max-forwards",
          "proxy-authorization",
          "referer",
          "retry-after",
          "user-agent",
        ]),
        a = Symbol("internals"),
        o = Symbol("defaults");
      function s(e) {
        return e && String(e).trim().toLowerCase();
      }
      function u(e) {
        return !1 === e || null == e ? e : String(e);
      }
      function l(e, t, n, i) {
        return r.a.isFunction(i)
          ? i.call(this, t, n)
          : r.a.isString(t)
          ? r.a.isString(i)
            ? -1 !== t.indexOf(i)
            : r.a.isRegExp(i)
            ? i.test(t)
            : void 0
          : void 0;
      }
      function c(e, t) {
        t = t.toLowerCase();
        for (var n, r = Object.keys(e), i = r.length; i-- > 0; )
          if (t === (n = r[i]).toLowerCase()) return n;
        return null;
      }
      function h(e, t) {
        e && this.set(e), (this[o] = t || null);
      }
      Object.assign(h.prototype, {
        set: function (e, t, n) {
          var i = this;
          function a(e, t, n) {
            var a = s(t);
            if (!a) throw new Error("header name must be a non-empty string");
            var o = c(i, a);
            (!o || !0 === n || (!1 !== i[o] && !1 !== n)) &&
              ((e = r.a.isArray(e) ? e.map(u) : u(e)), (i[o || t] = e));
          }
          return (
            r.a.isPlainObject(e)
              ? r.a.forEach(e, function (e, n) {
                  a(e, n, t);
                })
              : a(t, e, n),
            this
          );
        },
        get: function (e, t) {
          if ((e = s(e))) {
            var n = c(this, e);
            if (n) {
              var i = this[n];
              if (!t) return i;
              if (!0 === t)
                return (function (e) {
                  for (
                    var t,
                      n = Object.create(null),
                      r = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                    (t = r.exec(e));

                  )
                    n[t[1]] = t[2];
                  return n;
                })(i);
              if (r.a.isFunction(t)) return t.call(this, i, n);
              if (r.a.isRegExp(t)) return t.exec(i);
              throw new TypeError("parser must be boolean|regexp|function");
            }
          }
        },
        has: function (e, t) {
          if ((e = s(e))) {
            var n = c(this, e);
            return !(!n || (t && !l(0, this[n], n, t)));
          }
          return !1;
        },
        delete: function (e, t) {
          var n = this,
            i = !1;
          function a(e) {
            if ((e = s(e))) {
              var r = c(n, e);
              !r || (t && !l(0, n[r], r, t)) || (delete n[r], (i = !0));
            }
          }
          return r.a.isArray(e) ? e.forEach(a) : a(e), i;
        },
        clear: function () {
          return Object.keys(this).forEach(this.delete.bind(this));
        },
        normalize: function (e) {
          var t = this,
            n = {};
          return (
            r.a.forEach(this, function (r, i) {
              var a = c(n, i);
              if (a) return (t[a] = u(r)), void delete t[i];
              var o = e
                ? (function (e) {
                    return e
                      .trim()
                      .toLowerCase()
                      .replace(/([a-z\d])(\w*)/g, function (e, t, n) {
                        return t.toUpperCase() + n;
                      });
                  })(i)
                : String(i).trim();
              o !== i && delete t[i], (t[o] = u(r)), (n[o] = !0);
            }),
            this
          );
        },
        toJSON: function () {
          var e = Object.create(null);
          return (
            r.a.forEach(
              Object.assign({}, this[o] || null, this),
              function (t, n) {
                null != t &&
                  !1 !== t &&
                  (e[n] = r.a.isArray(t) ? t.join(", ") : t);
              }
            ),
            e
          );
        },
      }),
        Object.assign(h, {
          from: function (e) {
            return r.a.isString(e)
              ? new this(
                  (function (e) {
                    var t,
                      n,
                      r,
                      a = {};
                    return (
                      e &&
                        e.split("\n").forEach(function (e) {
                          (r = e.indexOf(":")),
                            (t = e.substring(0, r).trim().toLowerCase()),
                            (n = e.substring(r + 1).trim()),
                            !t ||
                              (a[t] && i[t]) ||
                              ("set-cookie" === t
                                ? a[t]
                                  ? a[t].push(n)
                                  : (a[t] = [n])
                                : (a[t] = a[t] ? a[t] + ", " + n : n));
                        }),
                      a
                    );
                  })(e)
                )
              : e instanceof this
              ? e
              : new this(e);
          },
          accessor: function (e) {
            var t = (this[a] = this[a] = { accessors: {} }).accessors,
              n = this.prototype;
            function i(e) {
              var i = s(e);
              t[i] ||
                (!(function (e, t) {
                  var n = r.a.toCamelCase(" " + t);
                  ["get", "set", "has"].forEach(function (r) {
                    Object.defineProperty(e, r + n, {
                      value: function (e, n, i) {
                        return this[r].call(this, t, e, n, i);
                      },
                      configurable: !0,
                    });
                  });
                })(n, e),
                (t[i] = !0));
            }
            return r.a.isArray(e) ? e.forEach(i) : i(e), this;
          },
        }),
        h.accessor([
          "Content-Type",
          "Content-Length",
          "Accept",
          "Accept-Encoding",
          "User-Agent",
        ]),
        r.a.freezeMethods(h.prototype),
        r.a.freezeMethods(h);
      t.a = h;
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var r = n(0),
        i = n.n(r),
        a = "undefined" !== typeof window ? i.a.useLayoutEffect : i.a.useEffect;
      function o(e) {
        var t = i.a.useRef(e);
        return (
          a(function () {
            t.current = e;
          }),
          i.a.useCallback(function (e) {
            return (0, t.current)(e);
          }, [])
        );
      }
    },
    function (e, t, n) {
      "use strict";
      function r() {
        return (r = Object.assign
          ? Object.assign.bind()
          : function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = {},
          a = Object.keys(e);
        for (r = 0; r < a.length; r++)
          (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      var r = !0;
      t.a = function (e, t) {
        if (!r) {
          if (e) return;
          var n = "Warning: " + t;
          "undefined" !== typeof console && console.warn(n);
          try {
            throw Error(n);
          } catch (i) {}
        }
      };
    },
    function (e, t, n) {
      "use strict";
      !(function e() {
        if (
          "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
          "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
        ) {
          0;
          try {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
          } catch (t) {
            console.error(t);
          }
        }
      })(),
        (e.exports = n(95));
    },
    function (e, t, n) {
      "use strict";
      var r = function (e) {
        return (
          (function (e) {
            return !!e && "object" === typeof e;
          })(e) &&
          !(function (e) {
            var t = Object.prototype.toString.call(e);
            return (
              "[object RegExp]" === t ||
              "[object Date]" === t ||
              (function (e) {
                return e.$$typeof === i;
              })(e)
            );
          })(e)
        );
      };
      var i =
        "function" === typeof Symbol && Symbol.for
          ? Symbol.for("react.element")
          : 60103;
      function a(e, t) {
        return !1 !== t.clone && t.isMergeableObject(e)
          ? l(((n = e), Array.isArray(n) ? [] : {}), e, t)
          : e;
        var n;
      }
      function o(e, t, n) {
        return e.concat(t).map(function (e) {
          return a(e, n);
        });
      }
      function s(e) {
        return Object.keys(e).concat(
          (function (e) {
            return Object.getOwnPropertySymbols
              ? Object.getOwnPropertySymbols(e).filter(function (t) {
                  return e.propertyIsEnumerable(t);
                })
              : [];
          })(e)
        );
      }
      function u(e, t, n) {
        var r = {};
        return (
          n.isMergeableObject(e) &&
            s(e).forEach(function (t) {
              r[t] = a(e[t], n);
            }),
          s(t).forEach(function (i) {
            n.isMergeableObject(t[i]) && e[i]
              ? (r[i] = (function (e, t) {
                  if (!t.customMerge) return l;
                  var n = t.customMerge(e);
                  return "function" === typeof n ? n : l;
                })(i, n)(e[i], t[i], n))
              : (r[i] = a(t[i], n));
          }),
          r
        );
      }
      function l(e, t, n) {
        ((n = n || {}).arrayMerge = n.arrayMerge || o),
          (n.isMergeableObject = n.isMergeableObject || r);
        var i = Array.isArray(t);
        return i === Array.isArray(e)
          ? i
            ? n.arrayMerge(e, t, n)
            : u(e, t, n)
          : a(t, n);
      }
      l.all = function (e, t) {
        if (!Array.isArray(e))
          throw new Error("first argument should be an array");
        return e.reduce(function (e, n) {
          return l(e, n, t);
        }, {});
      };
      var c = l;
      e.exports = c;
    },
    function (e, t, n) {
      "use strict";
      (function (e) {
        var r = n(6),
          i = n(17),
          a = n(84);
        function o(e) {
          return r.a.isPlainObject(e) || r.a.isArray(e);
        }
        function s(e) {
          return r.a.endsWith(e, "[]") ? e.slice(0, -2) : e;
        }
        function u(e, t, n) {
          return e
            ? e
                .concat(t)
                .map(function (e, t) {
                  return (e = s(e)), !n && t ? "[" + e + "]" : e;
                })
                .join(n ? "." : "")
            : t;
        }
        var l = r.a.toFlatObject(r.a, {}, null, function (e) {
          return /^is[A-Z]/.test(e);
        });
        t.a = function (t, n, c) {
          if (!r.a.isObject(t)) throw new TypeError("target must be an object");
          n = n || new (a.a || FormData)();
          var h,
            f = (c = r.a.toFlatObject(
              c,
              { metaTokens: !0, dots: !1, indexes: !1 },
              !1,
              function (e, t) {
                return !r.a.isUndefined(t[e]);
              }
            )).metaTokens,
            d = c.visitor || y,
            p = c.dots,
            m = c.indexes,
            v =
              (c.Blob || ("undefined" !== typeof Blob && Blob)) &&
              (h = n) &&
              r.a.isFunction(h.append) &&
              "FormData" === h[Symbol.toStringTag] &&
              h[Symbol.iterator];
          if (!r.a.isFunction(d))
            throw new TypeError("visitor must be a function");
          function g(t) {
            if (null === t) return "";
            if (r.a.isDate(t)) return t.toISOString();
            if (!v && r.a.isBlob(t))
              throw new i.a("Blob is not supported. Use a Buffer instead.");
            return r.a.isArrayBuffer(t) || r.a.isTypedArray(t)
              ? v && "function" === typeof Blob
                ? new Blob([t])
                : e.from(t)
              : t;
          }
          function y(e, t, i) {
            var a = e;
            if (e && !i && "object" === typeof e)
              if (r.a.endsWith(t, "{}"))
                (t = f ? t : t.slice(0, -2)), (e = JSON.stringify(e));
              else if (
                (r.a.isArray(e) &&
                  (function (e) {
                    return r.a.isArray(e) && !e.some(o);
                  })(e)) ||
                r.a.isFileList(e) ||
                (r.a.endsWith(t, "[]") && (a = r.a.toArray(e)))
              )
                return (
                  (t = s(t)),
                  a.forEach(function (e, i) {
                    !r.a.isUndefined(e) &&
                      n.append(
                        !0 === m ? u([t], i, p) : null === m ? t : t + "[]",
                        g(e)
                      );
                  }),
                  !1
                );
            return !!o(e) || (n.append(u(i, t, p), g(e)), !1);
          }
          var b = [],
            x = Object.assign(l, {
              defaultVisitor: y,
              convertValue: g,
              isVisitable: o,
            });
          if (!r.a.isObject(t)) throw new TypeError("data must be an object");
          return (
            (function e(t, i) {
              if (!r.a.isUndefined(t)) {
                if (-1 !== b.indexOf(t))
                  throw Error("Circular reference detected in " + i.join("."));
                b.push(t),
                  r.a.forEach(t, function (t, a) {
                    !0 ===
                      (!r.a.isUndefined(t) &&
                        d.call(n, t, r.a.isString(a) ? a.trim() : a, i, x)) &&
                      e(t, i ? i.concat(a) : [a]);
                  }),
                  b.pop();
              }
            })(t),
            n
          );
        };
      }.call(this, n(128).Buffer));
    },
    function (e, t, n) {
      "use strict";
      var r = n(17);
      function i(e, t, n) {
        r.a.call(this, null == e ? "canceled" : e, r.a.ERR_CANCELED, t, n),
          (this.name = "CanceledError");
      }
      n(6).a.inherits(i, r.a, { __CANCEL__: !0 }), (t.a = i);
    },
    function (e, t, n) {
      "use strict";
      var r = n(0),
        i = n.n(r),
        a = n(69),
        o = n.n(a),
        s = n(7),
        u = n.n(s),
        l = n(79),
        c = n.n(l),
        h = 1073741823;
      var f =
          i.a.createContext ||
          function (e, t) {
            var n,
              i,
              a = "__create-react-context-" + c()() + "__",
              s = (function (e) {
                function n() {
                  var t;
                  return (
                    ((t = e.apply(this, arguments) || this).emitter =
                      (function (e) {
                        var t = [];
                        return {
                          on: function (e) {
                            t.push(e);
                          },
                          off: function (e) {
                            t = t.filter(function (t) {
                              return t !== e;
                            });
                          },
                          get: function () {
                            return e;
                          },
                          set: function (n, r) {
                            (e = n),
                              t.forEach(function (t) {
                                return t(e, r);
                              });
                          },
                        };
                      })(t.props.value)),
                    t
                  );
                }
                o()(n, e);
                var r = n.prototype;
                return (
                  (r.getChildContext = function () {
                    var e;
                    return ((e = {})[a] = this.emitter), e;
                  }),
                  (r.componentWillReceiveProps = function (e) {
                    if (this.props.value !== e.value) {
                      var n,
                        r = this.props.value,
                        i = e.value;
                      (
                        (a = r) === (o = i)
                          ? 0 !== a || 1 / a === 1 / o
                          : a !== a && o !== o
                      )
                        ? (n = 0)
                        : ((n = "function" === typeof t ? t(r, i) : h),
                          0 !== (n |= 0) && this.emitter.set(e.value, n));
                    }
                    var a, o;
                  }),
                  (r.render = function () {
                    return this.props.children;
                  }),
                  n
                );
              })(r.Component);
            s.childContextTypes = (((n = {})[a] = u.a.object.isRequired), n);
            var l = (function (t) {
              function n() {
                var e;
                return (
                  ((e = t.apply(this, arguments) || this).state = {
                    value: e.getValue(),
                  }),
                  (e.onUpdate = function (t, n) {
                    0 !== ((0 | e.observedBits) & n) &&
                      e.setState({ value: e.getValue() });
                  }),
                  e
                );
              }
              o()(n, t);
              var r = n.prototype;
              return (
                (r.componentWillReceiveProps = function (e) {
                  var t = e.observedBits;
                  this.observedBits = void 0 === t || null === t ? h : t;
                }),
                (r.componentDidMount = function () {
                  this.context[a] && this.context[a].on(this.onUpdate);
                  var e = this.props.observedBits;
                  this.observedBits = void 0 === e || null === e ? h : e;
                }),
                (r.componentWillUnmount = function () {
                  this.context[a] && this.context[a].off(this.onUpdate);
                }),
                (r.getValue = function () {
                  return this.context[a] ? this.context[a].get() : e;
                }),
                (r.render = function () {
                  return ((e = this.props.children),
                  Array.isArray(e) ? e[0] : e)(this.state.value);
                  var e;
                }),
                n
              );
            })(r.Component);
            return (
              (l.contextTypes = (((i = {})[a] = u.a.object), i)),
              { Provider: s, Consumer: l }
            );
          },
        d = n(22),
        p = n(28),
        m = n(27),
        v = n(70),
        g = n.n(v),
        y = n(8),
        b = (n(49), n(25)),
        x = n(44),
        _ = n.n(x);
      n.d(t, "a", function () {
        return A;
      }),
        n.d(t, "b", function () {
          return j;
        }),
        n.d(t, "c", function () {
          return S;
        }),
        n.d(t, "d", function () {
          return B;
        }),
        n.d(t, "f", function () {
          return L;
        }),
        n.d(t, "g", function () {
          return F;
        }),
        n.d(t, "e", function () {
          return w;
        });
      var w = (function (e) {
          var t = f();
          return (t.displayName = e), t;
        })("Router"),
        S = (function (e) {
          function t(t) {
            var n;
            return (
              ((n = e.call(this, t) || this).state = {
                location: t.history.location,
              }),
              (n._isMounted = !1),
              (n._pendingLocation = null),
              t.staticContext ||
                (n.unlisten = t.history.listen(function (e) {
                  n._isMounted
                    ? n.setState({ location: e })
                    : (n._pendingLocation = e);
                })),
              n
            );
          }
          Object(d.a)(t, e),
            (t.computeRootMatch = function (e) {
              return { path: "/", url: "/", params: {}, isExact: "/" === e };
            });
          var n = t.prototype;
          return (
            (n.componentDidMount = function () {
              (this._isMounted = !0),
                this._pendingLocation &&
                  this.setState({ location: this._pendingLocation });
            }),
            (n.componentWillUnmount = function () {
              this.unlisten && this.unlisten();
            }),
            (n.render = function () {
              return i.a.createElement(w.Provider, {
                children: this.props.children || null,
                value: {
                  history: this.props.history,
                  location: this.state.location,
                  match: t.computeRootMatch(this.state.location.pathname),
                  staticContext: this.props.staticContext,
                },
              });
            }),
            t
          );
        })(i.a.Component);
      i.a.Component;
      var M = (function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }
        Object(d.a)(t, e);
        var n = t.prototype;
        return (
          (n.componentDidMount = function () {
            this.props.onMount && this.props.onMount.call(this, this);
          }),
          (n.componentDidUpdate = function (e) {
            this.props.onUpdate && this.props.onUpdate.call(this, this, e);
          }),
          (n.componentWillUnmount = function () {
            this.props.onUnmount && this.props.onUnmount.call(this, this);
          }),
          (n.render = function () {
            return null;
          }),
          t
        );
      })(i.a.Component);
      var T = {},
        E = 1e4,
        O = 0;
      function k(e, t) {
        return (
          void 0 === e && (e = "/"),
          void 0 === t && (t = {}),
          "/" === e
            ? e
            : (function (e) {
                if (T[e]) return T[e];
                var t = g.a.compile(e);
                return O < E && ((T[e] = t), O++), t;
              })(e)(t, { pretty: !0 })
        );
      }
      function A(e) {
        var t = e.computedMatch,
          n = e.to,
          r = e.push,
          a = void 0 !== r && r;
        return i.a.createElement(w.Consumer, null, function (e) {
          e || Object(m.a)(!1);
          var r = e.history,
            o = e.staticContext,
            s = a ? r.push : r.replace,
            u = Object(p.c)(
              t
                ? "string" === typeof n
                  ? k(n, t.params)
                  : Object(y.a)({}, n, { pathname: k(n.pathname, t.params) })
                : n
            );
          return o
            ? (s(u), null)
            : i.a.createElement(M, {
                onMount: function () {
                  s(u);
                },
                onUpdate: function (e, t) {
                  var n = Object(p.c)(t.to);
                  Object(p.f)(n, Object(y.a)({}, u, { key: n.key })) || s(u);
                },
                to: n,
              });
        });
      }
      var C = {},
        P = 1e4,
        R = 0;
      function L(e, t) {
        void 0 === t && (t = {}), "string" === typeof t && (t = { path: t });
        var n = t,
          r = n.path,
          i = n.exact,
          a = void 0 !== i && i,
          o = n.strict,
          s = void 0 !== o && o,
          u = n.sensitive,
          l = void 0 !== u && u;
        return [].concat(r).reduce(function (t, n) {
          if (!n) return null;
          if (t) return t;
          var r = (function (e, t) {
              var n = "" + t.end + t.strict + t.sensitive,
                r = C[n] || (C[n] = {});
              if (r[e]) return r[e];
              var i = [],
                a = { regexp: g()(e, i, t), keys: i };
              return R < P && ((r[e] = a), R++), a;
            })(n, { end: a, strict: s, sensitive: l }),
            i = r.regexp,
            o = r.keys,
            u = i.exec(e);
          if (!u) return null;
          var c = u[0],
            h = u.slice(1),
            f = e === c;
          return a && !f
            ? null
            : {
                path: n,
                url: "/" === n && "" === c ? "/" : c,
                isExact: f,
                params: o.reduce(function (e, t, n) {
                  return (e[t.name] = h[n]), e;
                }, {}),
              };
        }, null);
      }
      var j = (function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }
        return (
          Object(d.a)(t, e),
          (t.prototype.render = function () {
            var e = this;
            return i.a.createElement(w.Consumer, null, function (t) {
              t || Object(m.a)(!1);
              var n = e.props.location || t.location,
                r = e.props.computedMatch
                  ? e.props.computedMatch
                  : e.props.path
                  ? L(n.pathname, e.props)
                  : t.match,
                a = Object(y.a)({}, t, { location: n, match: r }),
                o = e.props,
                s = o.children,
                u = o.component,
                l = o.render;
              (Array.isArray(s) && 0 === s.length && (s = null),
              "function" === typeof s) &&
                void 0 === (s = s(a)) &&
                (s = null);
              return i.a.createElement(
                w.Provider,
                { value: a },
                s &&
                  !(function (e) {
                    return 0 === i.a.Children.count(e);
                  })(s)
                  ? s
                  : a.match
                  ? u
                    ? i.a.createElement(u, a)
                    : l
                    ? l(a)
                    : null
                  : null
              );
            });
          }),
          t
        );
      })(i.a.Component);
      function I(e) {
        return "/" === e.charAt(0) ? e : "/" + e;
      }
      function N(e, t) {
        if (!e) return t;
        var n = I(e);
        return 0 !== t.pathname.indexOf(n)
          ? t
          : Object(y.a)({}, t, { pathname: t.pathname.substr(n.length) });
      }
      function D(e) {
        return "string" === typeof e ? e : Object(p.e)(e);
      }
      function z(e) {
        return function () {
          Object(m.a)(!1);
        };
      }
      function U() {}
      i.a.Component;
      var B = (function (e) {
        function t() {
          return e.apply(this, arguments) || this;
        }
        return (
          Object(d.a)(t, e),
          (t.prototype.render = function () {
            var e = this;
            return i.a.createElement(w.Consumer, null, function (t) {
              t || Object(m.a)(!1);
              var n,
                r,
                a = e.props.location || t.location;
              return (
                i.a.Children.forEach(e.props.children, function (e) {
                  if (null == r && i.a.isValidElement(e)) {
                    n = e;
                    var o = e.props.path || e.props.from;
                    r = o
                      ? L(a.pathname, Object(y.a)({}, e.props, { path: o }))
                      : t.match;
                  }
                }),
                r
                  ? i.a.cloneElement(n, { location: a, computedMatch: r })
                  : null
              );
            });
          }),
          t
        );
      })(i.a.Component);
      function F(e) {
        var t = "withRouter(" + (e.displayName || e.name) + ")",
          n = function (t) {
            var n = t.wrappedComponentRef,
              r = Object(b.a)(t, ["wrappedComponentRef"]);
            return i.a.createElement(w.Consumer, null, function (t) {
              return (
                t || Object(m.a)(!1),
                i.a.createElement(e, Object(y.a)({}, r, t, { ref: n }))
              );
            });
          };
        return (n.displayName = t), (n.WrappedComponent = e), _()(n, e);
      }
    },
    function (e, t, n) {
      "use strict";
      function r(e, t, n, r, i, a, o) {
        try {
          var s = e[a](o),
            u = s.value;
        } catch (l) {
          return void n(l);
        }
        s.done ? t(u) : Promise.resolve(u).then(r, i);
      }
      function i(e) {
        return function () {
          var t = this,
            n = arguments;
          return new Promise(function (i, a) {
            var o = e.apply(t, n);
            function s(e) {
              r(o, i, a, s, u, "next", e);
            }
            function u(e) {
              r(o, i, a, s, u, "throw", e);
            }
            s(void 0);
          });
        };
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    function (e, t, n) {
      "use strict";
      function r(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return e < t ? t : e > n ? n : e;
      }
      function i(e) {
        if (e.type) return e;
        if ("#" === e.charAt(0))
          return i(
            (function (e) {
              e = e.substr(1);
              var t = new RegExp(".{1,".concat(e.length / 3, "}"), "g"),
                n = e.match(t);
              return (
                n &&
                  1 === n[0].length &&
                  (n = n.map(function (e) {
                    return e + e;
                  })),
                n
                  ? "rgb(".concat(
                      n
                        .map(function (e) {
                          return parseInt(e, 16);
                        })
                        .join(", "),
                      ")"
                    )
                  : ""
              );
            })(e)
          );
        var t = e.indexOf("("),
          n = e.substring(0, t);
        if (-1 === ["rgb", "rgba", "hsl", "hsla"].indexOf(n))
          throw new Error(
            [
              "Material-UI: unsupported `".concat(e, "` color."),
              "We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().",
            ].join("\n")
          );
        var r = e.substring(t + 1, e.length - 1).split(",");
        return {
          type: n,
          values: (r = r.map(function (e) {
            return parseFloat(e);
          })),
        };
      }
      function a(e) {
        var t = e.type,
          n = e.values;
        return (
          -1 !== t.indexOf("rgb")
            ? (n = n.map(function (e, t) {
                return t < 3 ? parseInt(e, 10) : e;
              }))
            : -1 !== t.indexOf("hsl") &&
              ((n[1] = "".concat(n[1], "%")), (n[2] = "".concat(n[2], "%"))),
          "".concat(t, "(").concat(n.join(", "), ")")
        );
      }
      function o(e, t) {
        var n = s(e),
          r = s(t);
        return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
      }
      function s(e) {
        var t =
          "hsl" === (e = i(e)).type
            ? i(
                (function (e) {
                  var t = (e = i(e)).values,
                    n = t[0],
                    r = t[1] / 100,
                    o = t[2] / 100,
                    s = r * Math.min(o, 1 - o),
                    u = function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : (e + n / 30) % 12;
                      return o - s * Math.max(Math.min(t - 3, 9 - t, 1), -1);
                    },
                    l = "rgb",
                    c = [
                      Math.round(255 * u(0)),
                      Math.round(255 * u(8)),
                      Math.round(255 * u(4)),
                    ];
                  return (
                    "hsla" === e.type && ((l += "a"), c.push(t[3])),
                    a({ type: l, values: c })
                  );
                })(e)
              ).values
            : e.values;
        return (
          (t = t.map(function (e) {
            return (e /= 255) <= 0.03928
              ? e / 12.92
              : Math.pow((e + 0.055) / 1.055, 2.4);
          })),
          Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3))
        );
      }
      function u(e, t) {
        return (
          (e = i(e)),
          (t = r(t)),
          ("rgb" !== e.type && "hsl" !== e.type) || (e.type += "a"),
          (e.values[3] = t),
          a(e)
        );
      }
      function l(e, t) {
        if (((e = i(e)), (t = r(t)), -1 !== e.type.indexOf("hsl")))
          e.values[2] *= 1 - t;
        else if (-1 !== e.type.indexOf("rgb"))
          for (var n = 0; n < 3; n += 1) e.values[n] *= 1 - t;
        return a(e);
      }
      function c(e, t) {
        if (((e = i(e)), (t = r(t)), -1 !== e.type.indexOf("hsl")))
          e.values[2] += (100 - e.values[2]) * t;
        else if (-1 !== e.type.indexOf("rgb"))
          for (var n = 0; n < 3; n += 1) e.values[n] += (255 - e.values[n]) * t;
        return a(e);
      }
      n.d(t, "c", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return u;
        }),
        n.d(t, "a", function () {
          return l;
        }),
        n.d(t, "d", function () {
          return c;
        });
    },
    ,
    ,
    function (e, t) {
      var n;
      n = (function () {
        return this;
      })();
      try {
        n = n || new Function("return this")();
      } catch (r) {
        "object" === typeof window && (n = window);
      }
      e.exports = n;
    },
    function (e, t, n) {
      "use strict";
      var r = n(49),
        i = {
          childContextTypes: !0,
          contextType: !0,
          contextTypes: !0,
          defaultProps: !0,
          displayName: !0,
          getDefaultProps: !0,
          getDerivedStateFromError: !0,
          getDerivedStateFromProps: !0,
          mixins: !0,
          propTypes: !0,
          type: !0,
        },
        a = {
          name: !0,
          length: !0,
          prototype: !0,
          caller: !0,
          callee: !0,
          arguments: !0,
          arity: !0,
        },
        o = {
          $$typeof: !0,
          compare: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
          type: !0,
        },
        s = {};
      function u(e) {
        return r.isMemo(e) ? o : s[e.$$typeof] || i;
      }
      s[r.ForwardRef] = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
      };
      var l = Object.defineProperty,
        c = Object.getOwnPropertyNames,
        h = Object.getOwnPropertySymbols,
        f = Object.getOwnPropertyDescriptor,
        d = Object.getPrototypeOf,
        p = Object.prototype;
      e.exports = function e(t, n, r) {
        if ("string" !== typeof n) {
          if (p) {
            var i = d(n);
            i && i !== p && e(t, i, r);
          }
          var o = c(n);
          h && (o = o.concat(h(n)));
          for (var s = u(t), m = u(n), v = 0; v < o.length; ++v) {
            var g = o[v];
            if (!a[g] && (!r || !r[g]) && (!m || !m[g]) && (!s || !s[g])) {
              var y = f(n, g);
              try {
                l(t, g, y);
              } catch (b) {}
            }
          }
          return t;
        }
        return t;
      };
    },
    function (e, t, n) {
      "use strict";
      var r = n(0),
        i = n.n(r);
      t.a = i.a.createContext(null);
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        return (r =
          Object.setPrototypeOf ||
          function (e, t) {
            return (e.__proto__ = t), e;
          })(e, t);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      (function (e) {
        var r = n(6),
          i = n(17),
          a = n(58),
          o = n(36),
          s = n(86),
          u = n(26),
          l = n(59),
          c = n(71),
          h = { "Content-Type": "application/x-www-form-urlencoded" };
        var f = {
          transitional: a.a,
          adapter: (function () {
            var t;
            return (
              "undefined" !== typeof XMLHttpRequest
                ? (t = c.a.getAdapter("xhr"))
                : "undefined" !== typeof e &&
                  "process" === r.a.kindOf(e) &&
                  (t = c.a.getAdapter("http")),
              t
            );
          })(),
          transformRequest: [
            function (e, t) {
              var n,
                i = t.getContentType() || "",
                a = i.indexOf("application/json") > -1,
                u = r.a.isObject(e);
              if (
                (u && r.a.isHTMLForm(e) && (e = new FormData(e)),
                r.a.isFormData(e))
              )
                return a && a ? JSON.stringify(Object(l.a)(e)) : e;
              if (
                r.a.isArrayBuffer(e) ||
                r.a.isBuffer(e) ||
                r.a.isStream(e) ||
                r.a.isFile(e) ||
                r.a.isBlob(e)
              )
                return e;
              if (r.a.isArrayBufferView(e)) return e.buffer;
              if (r.a.isURLSearchParams(e))
                return (
                  t.setContentType(
                    "application/x-www-form-urlencoded;charset=utf-8",
                    !1
                  ),
                  e.toString()
                );
              if (u) {
                if (i.indexOf("application/x-www-form-urlencoded") > -1)
                  return Object(s.a)(e, this.formSerializer).toString();
                if (
                  (n = r.a.isFileList(e)) ||
                  i.indexOf("multipart/form-data") > -1
                ) {
                  var c = this.env && this.env.FormData;
                  return Object(o.a)(
                    n ? { "files[]": e } : e,
                    c && new c(),
                    this.formSerializer
                  );
                }
              }
              return u || a
                ? (t.setContentType("application/json", !1),
                  (function (e, t, n) {
                    if (r.a.isString(e))
                      try {
                        return (t || JSON.parse)(e), r.a.trim(e);
                      } catch (i) {
                        if ("SyntaxError" !== i.name) throw i;
                      }
                    return (n || JSON.stringify)(e);
                  })(e))
                : e;
            },
          ],
          transformResponse: [
            function (e) {
              var t = this.transitional || f.transitional,
                n = t && t.forcedJSONParsing,
                a = "json" === this.responseType;
              if (e && r.a.isString(e) && ((n && !this.responseType) || a)) {
                var o = !(t && t.silentJSONParsing) && a;
                try {
                  return JSON.parse(e);
                } catch (s) {
                  if (o) {
                    if ("SyntaxError" === s.name)
                      throw i.a.from(
                        s,
                        i.a.ERR_BAD_RESPONSE,
                        this,
                        null,
                        this.response
                      );
                    throw s;
                  }
                }
              }
              return e;
            },
          ],
          timeout: 0,
          xsrfCookieName: "XSRF-TOKEN",
          xsrfHeaderName: "X-XSRF-TOKEN",
          maxContentLength: -1,
          maxBodyLength: -1,
          env: { FormData: u.a.classes.FormData, Blob: u.a.classes.Blob },
          validateStatus: function (e) {
            return e >= 200 && e < 300;
          },
          headers: { common: { Accept: "application/json, text/plain, */*" } },
        };
        r.a.forEach(["delete", "get", "head"], function (e) {
          f.headers[e] = {};
        }),
          r.a.forEach(["post", "put", "patch"], function (e) {
            f.headers[e] = r.a.merge(h);
          }),
          (t.a = f);
      }.call(this, n(64)));
    },
    function (e, t, n) {
      "use strict";
      var r = n(52);
      function i(e) {
        return (
          (function (e) {
            if (Array.isArray(e)) {
              for (var t = 0, n = new Array(e.length); t < e.length; t++)
                n[t] = e[t];
              return n;
            }
          })(e) ||
          Object(r.a)(e) ||
          (function () {
            throw new TypeError(
              "Invalid attempt to spread non-iterable instance"
            );
          })()
        );
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    function (e, t, n) {
      "use strict";
      e.exports = n(105);
    },
    function (e, t, n) {
      "use strict";
      function r(e) {
        if (Array.isArray(e)) return e;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      function r() {
        throw new TypeError(
          "Invalid attempt to destructure non-iterable instance"
        );
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      function r(e) {
        if (
          Symbol.iterator in Object(e) ||
          "[object Arguments]" === Object.prototype.toString.call(e)
        )
          return Array.from(e);
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "b", function () {
        return a;
      });
      var r = n(10),
        i = {
          easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
          easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
          easeIn: "cubic-bezier(0.4, 0, 1, 1)",
          sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        a = {
          shortest: 150,
          shorter: 200,
          short: 250,
          standard: 300,
          complex: 375,
          enteringScreen: 225,
          leavingScreen: 195,
        },
        o = function (e) {
          return "".concat(Math.round(e), "ms");
        };
      t.a = {
        easing: i,
        duration: a,
        create: function () {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : ["all"],
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = t.duration,
            s = void 0 === n ? a.standard : n,
            u = t.easing,
            l = void 0 === u ? i.easeInOut : u,
            c = t.delay,
            h = void 0 === c ? 0 : c;
          Object(r.a)(t, ["duration", "easing", "delay"]);
          return (Array.isArray(e) ? e : [e])
            .map(function (e) {
              return ""
                .concat(e, " ")
                .concat("string" === typeof s ? s : o(s), " ")
                .concat(l, " ")
                .concat("string" === typeof h ? h : o(h));
            })
            .join(",");
        },
        getAutoHeightDuration: function (e) {
          if (!e) return 0;
          var t = e / 36;
          return Math.round(10 * (4 + 15 * Math.pow(t, 0.25) + t / 5));
        },
      };
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var r = n(139),
        i = n(60);
      function a() {
        return Object(r.a)() || i.a;
      }
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        return function () {
          return e.apply(t, arguments);
        };
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var r = n(6),
        i = n(57);
      function a(e) {
        return encodeURIComponent(e)
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",")
          .replace(/%20/g, "+")
          .replace(/%5B/gi, "[")
          .replace(/%5D/gi, "]");
      }
      function o(e, t, n) {
        if (!t) return e;
        var o = e.indexOf("#");
        -1 !== o && (e = e.slice(0, o));
        var s = (n && n.encode) || a,
          u = r.a.isURLSearchParams(t)
            ? t.toString()
            : new i.a(t, n).toString(s);
        return u && (e += (-1 === e.indexOf("?") ? "?" : "&") + u), e;
      }
    },
    function (e, t, n) {
      "use strict";
      var r = n(36);
      function i(e) {
        var t = {
          "!": "%21",
          "'": "%27",
          "(": "%28",
          ")": "%29",
          "~": "%7E",
          "%20": "+",
          "%00": "\0",
        };
        return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (e) {
          return t[e];
        });
      }
      function a(e, t) {
        (this._pairs = []), e && Object(r.a)(e, this, t);
      }
      var o = a.prototype;
      (o.append = function (e, t) {
        this._pairs.push([e, t]);
      }),
        (o.toString = function (e) {
          var t = e
            ? function (t) {
                return e.call(this, t, i);
              }
            : i;
          return this._pairs
            .map(function (e) {
              return t(e[0]) + "=" + t(e[1]);
            }, "")
            .join("&");
        }),
        (t.a = a);
    },
    function (e, t, n) {
      "use strict";
      t.a = {
        silentJSONParsing: !0,
        forcedJSONParsing: !0,
        clarifyTimeoutError: !1,
      };
    },
    function (e, t, n) {
      "use strict";
      var r = n(6);
      t.a = function (e) {
        function t(e, n, i, a) {
          var o = e[a++],
            s = Number.isFinite(+o),
            u = a >= e.length;
          return (
            (o = !o && r.a.isArray(i) ? i.length : o),
            u
              ? (r.a.hasOwnProp(i, o) ? (i[o] = [i[o], n]) : (i[o] = n), !s)
              : ((i[o] && r.a.isObject(i[o])) || (i[o] = []),
                t(e, n, i[o], a) &&
                  r.a.isArray(i[o]) &&
                  (i[o] = (function (e) {
                    var t,
                      n,
                      r = {},
                      i = Object.keys(e),
                      a = i.length;
                    for (t = 0; t < a; t++) r[(n = i[t])] = e[n];
                    return r;
                  })(i[o])),
                !s)
          );
        }
        if (r.a.isFormData(e) && r.a.isFunction(e.entries)) {
          var n = {};
          return (
            r.a.forEachEntry(e, function (e, i) {
              t(
                (function (e) {
                  return r.a.matchAll(/\w+|\[(\w*)]/g, e).map(function (e) {
                    return "[]" === e[0] ? "" : e[1] || e[0];
                  });
                })(e),
                i,
                n,
                0
              );
            }),
            n
          );
        }
        return null;
      };
    },
    function (e, t, n) {
      "use strict";
      var r = n(9),
        i = n(8),
        a = n(10),
        o = n(35),
        s = n.n(o);
      function u(e) {
        return (
          !0 ===
            (null != (t = e) &&
              "object" === typeof t &&
              !1 === Array.isArray(t)) &&
          "[object Object]" === Object.prototype.toString.call(e)
        );
        var t;
      }
      function l(e) {
        var t, n;
        return (
          !1 !== u(e) &&
          "function" === typeof (t = e.constructor) &&
          !1 !== u((n = t.prototype)) &&
          !1 !== n.hasOwnProperty("isPrototypeOf")
        );
      }
      var c = ["xs", "sm", "md", "lg", "xl"];
      function h(e, t, n) {
        var a;
        return Object(i.a)(
          {
            gutters: function () {
              var n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              return Object(i.a)(
                { paddingLeft: t(2), paddingRight: t(2) },
                n,
                Object(r.a)(
                  {},
                  e.up("sm"),
                  Object(i.a)(
                    { paddingLeft: t(3), paddingRight: t(3) },
                    n[e.up("sm")]
                  )
                )
              );
            },
            toolbar:
              ((a = { minHeight: 56 }),
              Object(r.a)(
                a,
                "".concat(e.up("xs"), " and (orientation: landscape)"),
                { minHeight: 48 }
              ),
              Object(r.a)(a, e.up("sm"), { minHeight: 64 }),
              a),
          },
          n
        );
      }
      var f = {
          50: "#e8eaf6",
          100: "#c5cae9",
          200: "#9fa8da",
          300: "#7986cb",
          400: "#5c6bc0",
          500: "#3f51b5",
          600: "#3949ab",
          700: "#303f9f",
          800: "#283593",
          900: "#1a237e",
          A100: "#8c9eff",
          A200: "#536dfe",
          A400: "#3d5afe",
          A700: "#304ffe",
        },
        d = {
          50: "#fce4ec",
          100: "#f8bbd0",
          200: "#f48fb1",
          300: "#f06292",
          400: "#ec407a",
          500: "#e91e63",
          600: "#d81b60",
          700: "#c2185b",
          800: "#ad1457",
          900: "#880e4f",
          A100: "#ff80ab",
          A200: "#ff4081",
          A400: "#f50057",
          A700: "#c51162",
        },
        p = {
          50: "#fafafa",
          100: "#f5f5f5",
          200: "#eeeeee",
          300: "#e0e0e0",
          400: "#bdbdbd",
          500: "#9e9e9e",
          600: "#757575",
          700: "#616161",
          800: "#424242",
          900: "#212121",
          A100: "#d5d5d5",
          A200: "#aaaaaa",
          A400: "#303030",
          A700: "#616161",
        },
        m = {
          50: "#ffebee",
          100: "#ffcdd2",
          200: "#ef9a9a",
          300: "#e57373",
          400: "#ef5350",
          500: "#f44336",
          600: "#e53935",
          700: "#d32f2f",
          800: "#c62828",
          900: "#b71c1c",
          A100: "#ff8a80",
          A200: "#ff5252",
          A400: "#ff1744",
          A700: "#d50000",
        },
        v = { black: "#000", white: "#fff" },
        g = n(40),
        y = {
          text: {
            primary: "rgba(0, 0, 0, 0.87)",
            secondary: "rgba(0, 0, 0, 0.54)",
            disabled: "rgba(0, 0, 0, 0.38)",
            hint: "rgba(0, 0, 0, 0.38)",
          },
          divider: "rgba(0, 0, 0, 0.12)",
          background: { paper: v.white, default: p[50] },
          action: {
            active: "rgba(0, 0, 0, 0.54)",
            hover: "rgba(0, 0, 0, 0.08)",
            hoverOpacity: 0.08,
            selected: "rgba(0, 0, 0, 0.14)",
            disabled: "rgba(0, 0, 0, 0.26)",
            disabledBackground: "rgba(0, 0, 0, 0.12)",
          },
        },
        b = {
          text: {
            primary: v.white,
            secondary: "rgba(255, 255, 255, 0.7)",
            disabled: "rgba(255, 255, 255, 0.5)",
            hint: "rgba(255, 255, 255, 0.5)",
            icon: "rgba(255, 255, 255, 0.5)",
          },
          divider: "rgba(255, 255, 255, 0.12)",
          background: { paper: p[800], default: "#303030" },
          action: {
            active: v.white,
            hover: "rgba(255, 255, 255, 0.1)",
            hoverOpacity: 0.1,
            selected: "rgba(255, 255, 255, 0.2)",
            disabled: "rgba(255, 255, 255, 0.3)",
            disabledBackground: "rgba(255, 255, 255, 0.12)",
          },
        };
      function x(e, t, n, r) {
        e[t] ||
          (e.hasOwnProperty(n)
            ? (e[t] = e[n])
            : "light" === t
            ? (e.light = Object(g.d)(e.main, r))
            : "dark" === t && (e.dark = Object(g.a)(e.main, 1.5 * r)));
      }
      function _(e) {
        return Math.round(1e5 * e) / 1e5;
      }
      var w = { textTransform: "uppercase" },
        S = '"Roboto", "Helvetica", "Arial", sans-serif';
      function M(e, t) {
        var n = "function" === typeof t ? t(e) : t,
          r = n.fontFamily,
          o = void 0 === r ? S : r,
          u = n.fontSize,
          l = void 0 === u ? 14 : u,
          c = n.fontWeightLight,
          h = void 0 === c ? 300 : c,
          f = n.fontWeightRegular,
          d = void 0 === f ? 400 : f,
          p = n.fontWeightMedium,
          m = void 0 === p ? 500 : p,
          v = n.fontWeightBold,
          g = void 0 === v ? 700 : v,
          y = n.htmlFontSize,
          b = void 0 === y ? 16 : y,
          x = n.allVariants,
          M = n.pxToRem,
          T = Object(a.a)(n, [
            "fontFamily",
            "fontSize",
            "fontWeightLight",
            "fontWeightRegular",
            "fontWeightMedium",
            "fontWeightBold",
            "htmlFontSize",
            "allVariants",
            "pxToRem",
          ]);
        var E = l / 14,
          O =
            M ||
            function (e) {
              return "".concat((e / b) * E, "rem");
            },
          k = function (e, t, n, r, a) {
            return Object(i.a)(
              { fontFamily: o, fontWeight: e, fontSize: O(t), lineHeight: n },
              o === S ? { letterSpacing: "".concat(_(r / t), "em") } : {},
              {},
              a,
              {},
              x
            );
          },
          A = {
            h1: k(h, 96, 1, -1.5),
            h2: k(h, 60, 1, -0.5),
            h3: k(d, 48, 1.04, 0),
            h4: k(d, 34, 1.17, 0.25),
            h5: k(d, 24, 1.33, 0),
            h6: k(m, 20, 1.6, 0.15),
            subtitle1: k(d, 16, 1.75, 0.15),
            subtitle2: k(m, 14, 1.57, 0.1),
            body1: k(d, 16, 1.5, 0.15),
            body2: k(d, 14, 1.43, 0.15),
            button: k(m, 14, 1.75, 0.4, w),
            caption: k(d, 12, 1.66, 0.4),
            overline: k(d, 12, 2.66, 1, w),
          };
        return s()(
          Object(i.a)(
            {
              htmlFontSize: b,
              pxToRem: O,
              round: _,
              fontFamily: o,
              fontSize: l,
              fontWeightLight: h,
              fontWeightRegular: d,
              fontWeightMedium: m,
              fontWeightBold: g,
            },
            A
          ),
          T,
          { clone: !1 }
        );
      }
      var T = 0.2,
        E = 0.14,
        O = 0.12;
      function k() {
        return [
          ""
            .concat(arguments.length <= 0 ? void 0 : arguments[0], "px ")
            .concat(arguments.length <= 1 ? void 0 : arguments[1], "px ")
            .concat(arguments.length <= 2 ? void 0 : arguments[2], "px ")
            .concat(
              arguments.length <= 3 ? void 0 : arguments[3],
              "px rgba(0,0,0,"
            )
            .concat(T, ")"),
          ""
            .concat(arguments.length <= 4 ? void 0 : arguments[4], "px ")
            .concat(arguments.length <= 5 ? void 0 : arguments[5], "px ")
            .concat(arguments.length <= 6 ? void 0 : arguments[6], "px ")
            .concat(
              arguments.length <= 7 ? void 0 : arguments[7],
              "px rgba(0,0,0,"
            )
            .concat(E, ")"),
          ""
            .concat(arguments.length <= 8 ? void 0 : arguments[8], "px ")
            .concat(arguments.length <= 9 ? void 0 : arguments[9], "px ")
            .concat(arguments.length <= 10 ? void 0 : arguments[10], "px ")
            .concat(
              arguments.length <= 11 ? void 0 : arguments[11],
              "px rgba(0,0,0,"
            )
            .concat(O, ")"),
        ].join(",");
      }
      var A = [
          "none",
          k(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1),
          k(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2),
          k(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2),
          k(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
          k(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
          k(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
          k(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
          k(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
          k(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
          k(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
          k(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
          k(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
          k(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
          k(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
          k(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
          k(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
          k(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
          k(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
          k(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
          k(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
          k(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
          k(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
          k(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
          k(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
        ],
        C = { borderRadius: 4 };
      var P = n(53),
        R = {
          mobileStepper: 1e3,
          speedDial: 1050,
          appBar: 1100,
          drawer: 1200,
          modal: 1300,
          snackbar: 1400,
          tooltip: 1500,
        };
      var L = (function () {
        var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          t = e.breakpoints,
          n = void 0 === t ? {} : t,
          r = e.mixins,
          o = void 0 === r ? {} : r,
          u = e.palette,
          _ = void 0 === u ? {} : u,
          w = e.shadows,
          S = e.spacing,
          T = e.typography,
          E = void 0 === T ? {} : T,
          O = Object(a.a)(e, [
            "breakpoints",
            "mixins",
            "palette",
            "shadows",
            "spacing",
            "typography",
          ]),
          k = (function (e) {
            var t = e.primary,
              n =
                void 0 === t
                  ? { light: f[300], main: f[500], dark: f[700] }
                  : t,
              r = e.secondary,
              o =
                void 0 === r
                  ? { light: d.A200, main: d.A400, dark: d.A700 }
                  : r,
              u = e.error,
              l =
                void 0 === u
                  ? { light: m[300], main: m[500], dark: m[700] }
                  : u,
              c = e.type,
              h = void 0 === c ? "light" : c,
              _ = e.contrastThreshold,
              w = void 0 === _ ? 3 : _,
              S = e.tonalOffset,
              M = void 0 === S ? 0.2 : S,
              T = Object(a.a)(e, [
                "primary",
                "secondary",
                "error",
                "type",
                "contrastThreshold",
                "tonalOffset",
              ]);
            function E(e) {
              return Object(g.c)(e, b.text.primary) >= w
                ? b.text.primary
                : y.text.primary;
            }
            function O(e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 500,
                n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 300,
                r =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : 700;
              return (
                !(e = Object(i.a)({}, e)).main && e[t] && (e.main = e[t]),
                x(e, "light", n, M),
                x(e, "dark", r, M),
                e.contrastText || (e.contrastText = E(e.main)),
                e
              );
            }
            var k = { dark: b, light: y };
            return s()(
              Object(i.a)(
                {
                  common: v,
                  type: h,
                  primary: O(n),
                  secondary: O(o, "A400", "A200", "A700"),
                  error: O(l),
                  grey: p,
                  contrastThreshold: w,
                  getContrastText: E,
                  augmentColor: O,
                  tonalOffset: M,
                },
                k[h]
              ),
              T,
              { clone: !1 }
            );
          })(_),
          L = (function (e) {
            var t = e.values,
              n =
                void 0 === t
                  ? { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 }
                  : t,
              r = e.unit,
              o = void 0 === r ? "px" : r,
              s = e.step,
              u = void 0 === s ? 5 : s,
              l = Object(a.a)(e, ["values", "unit", "step"]);
            function h(e) {
              var t = "number" === typeof n[e] ? n[e] : e;
              return "@media (min-width:".concat(t).concat(o, ")");
            }
            function f(e, t) {
              var r = c.indexOf(t) + 1;
              return r === c.length
                ? h(e)
                : "@media (min-width:".concat(n[e]).concat(o, ") and ") +
                    "(max-width:".concat(n[c[r]] - u / 100).concat(o, ")");
            }
            return Object(i.a)(
              {
                keys: c,
                values: n,
                up: h,
                down: function (e) {
                  var t = c.indexOf(e) + 1,
                    r = n[c[t]];
                  return t === c.length
                    ? h("xs")
                    : "@media (max-width:"
                        .concat(
                          ("number" === typeof r && t > 0 ? r : e) - u / 100
                        )
                        .concat(o, ")");
                },
                between: f,
                only: function (e) {
                  return f(e, e);
                },
                width: function (e) {
                  return n[e];
                },
              },
              l
            );
          })(n),
          j = (function () {
            var e,
              t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 8;
            if (t.mui) return t;
            e =
              "function" === typeof t
                ? t
                : function (e) {
                    return t * e;
                  };
            var n = function () {
              for (
                var t = arguments.length, n = new Array(t), r = 0;
                r < t;
                r++
              )
                n[r] = arguments[r];
              return 0 === n.length
                ? e(1)
                : 1 === n.length
                ? e(n[0])
                : n
                    .map(function (t) {
                      var n = e(t);
                      return "number" === typeof n ? "".concat(n, "px") : n;
                    })
                    .join(" ");
            };
            return (
              Object.defineProperty(n, "unit", {
                get: function () {
                  return t;
                },
              }),
              (n.mui = !0),
              n
            );
          })(S);
        return Object(i.a)(
          {
            breakpoints: L,
            direction: "ltr",
            mixins: h(L, j, o),
            overrides: {},
            palette: k,
            props: {},
            shadows: w || A,
            typography: M(k, E),
            spacing: j,
          },
          s()({ shape: C, transitions: P.a, zIndex: R }, O, {
            isMergeableObject: l,
          })
        );
      })();
      t.a = L;
    },
    function (e, t, n) {
      "use strict";
      function r(e, t) {
        return e && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)
          ? (function (e, t) {
              return t
                ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "")
                : e;
            })(e, t)
          : t;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    ,
    function (e, t, n) {
      "use strict";
      var r = Object.getOwnPropertySymbols,
        i = Object.prototype.hasOwnProperty,
        a = Object.prototype.propertyIsEnumerable;
      function o(e) {
        if (null === e || void 0 === e)
          throw new TypeError(
            "Object.assign cannot be called with null or undefined"
          );
        return Object(e);
      }
      e.exports = (function () {
        try {
          if (!Object.assign) return !1;
          var e = new String("abc");
          if (((e[5] = "de"), "5" === Object.getOwnPropertyNames(e)[0]))
            return !1;
          for (var t = {}, n = 0; n < 10; n++)
            t["_" + String.fromCharCode(n)] = n;
          if (
            "0123456789" !==
            Object.getOwnPropertyNames(t)
              .map(function (e) {
                return t[e];
              })
              .join("")
          )
            return !1;
          var r = {};
          return (
            "abcdefghijklmnopqrst".split("").forEach(function (e) {
              r[e] = e;
            }),
            "abcdefghijklmnopqrst" ===
              Object.keys(Object.assign({}, r)).join("")
          );
        } catch (i) {
          return !1;
        }
      })()
        ? Object.assign
        : function (e, t) {
            for (var n, s, u = o(e), l = 1; l < arguments.length; l++) {
              for (var c in (n = Object(arguments[l])))
                i.call(n, c) && (u[c] = n[c]);
              if (r) {
                s = r(n);
                for (var h = 0; h < s.length; h++)
                  a.call(n, s[h]) && (u[s[h]] = n[s[h]]);
              }
            }
            return u;
          };
    },
    function (e, t) {
      var n,
        r,
        i = (e.exports = {});
      function a() {
        throw new Error("setTimeout has not been defined");
      }
      function o() {
        throw new Error("clearTimeout has not been defined");
      }
      function s(e) {
        if (n === setTimeout) return setTimeout(e, 0);
        if ((n === a || !n) && setTimeout)
          return (n = setTimeout), setTimeout(e, 0);
        try {
          return n(e, 0);
        } catch (t) {
          try {
            return n.call(null, e, 0);
          } catch (t) {
            return n.call(this, e, 0);
          }
        }
      }
      !(function () {
        try {
          n = "function" === typeof setTimeout ? setTimeout : a;
        } catch (e) {
          n = a;
        }
        try {
          r = "function" === typeof clearTimeout ? clearTimeout : o;
        } catch (e) {
          r = o;
        }
      })();
      var u,
        l = [],
        c = !1,
        h = -1;
      function f() {
        c &&
          u &&
          ((c = !1), u.length ? (l = u.concat(l)) : (h = -1), l.length && d());
      }
      function d() {
        if (!c) {
          var e = s(f);
          c = !0;
          for (var t = l.length; t; ) {
            for (u = l, l = []; ++h < t; ) u && u[h].run();
            (h = -1), (t = l.length);
          }
          (u = null),
            (c = !1),
            (function (e) {
              if (r === clearTimeout) return clearTimeout(e);
              if ((r === o || !r) && clearTimeout)
                return (r = clearTimeout), clearTimeout(e);
              try {
                r(e);
              } catch (t) {
                try {
                  return r.call(null, e);
                } catch (t) {
                  return r.call(this, e);
                }
              }
            })(e);
        }
      }
      function p(e, t) {
        (this.fun = e), (this.array = t);
      }
      function m() {}
      (i.nextTick = function (e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
        l.push(new p(e, t)), 1 !== l.length || c || s(d);
      }),
        (p.prototype.run = function () {
          this.fun.apply(null, this.array);
        }),
        (i.title = "browser"),
        (i.browser = !0),
        (i.env = {}),
        (i.argv = []),
        (i.version = ""),
        (i.versions = {}),
        (i.on = m),
        (i.addListener = m),
        (i.once = m),
        (i.off = m),
        (i.removeListener = m),
        (i.removeAllListeners = m),
        (i.emit = m),
        (i.prependListener = m),
        (i.prependOnceListener = m),
        (i.listeners = function (e) {
          return [];
        }),
        (i.binding = function (e) {
          throw new Error("process.binding is not supported");
        }),
        (i.cwd = function () {
          return "/";
        }),
        (i.chdir = function (e) {
          throw new Error("process.chdir is not supported");
        }),
        (i.umask = function () {
          return 0;
        });
    },
    ,
    function (e, t, n) {
      "use strict";
      function r(e) {
        return (r =
          "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" === typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              })(e);
      }
      function i(e) {
        return (i =
          "function" === typeof Symbol && "symbol" === r(Symbol.iterator)
            ? function (e) {
                return r(e);
              }
            : function (e) {
                return e &&
                  "function" === typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : r(e);
              })(e);
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    function (e, t) {
      e.exports = function (e, t, n, r) {
        var i = n ? n.call(r, e, t) : void 0;
        if (void 0 !== i) return !!i;
        if (e === t) return !0;
        if ("object" !== typeof e || !e || "object" !== typeof t || !t)
          return !1;
        var a = Object.keys(e),
          o = Object.keys(t);
        if (a.length !== o.length) return !1;
        for (
          var s = Object.prototype.hasOwnProperty.bind(t), u = 0;
          u < a.length;
          u++
        ) {
          var l = a[u];
          if (!s(l)) return !1;
          var c = e[l],
            h = t[l];
          if (
            !1 === (i = n ? n.call(r, c, h, l) : void 0) ||
            (void 0 === i && c !== h)
          )
            return !1;
        }
        return !0;
      };
    },
    function (e, t, n) {
      "use strict";
      (function (e, r) {
        function i(e) {
          return (i =
            "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" === typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function a(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function o(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function s(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              r = Object.keys(n);
            "function" === typeof Object.getOwnPropertySymbols &&
              (r = r.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                })
              )),
              r.forEach(function (t) {
                o(e, t, n[t]);
              });
          }
          return e;
        }
        function u(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                r = !0,
                i = !1,
                a = void 0;
              try {
                for (
                  var o, s = e[Symbol.iterator]();
                  !(r = (o = s.next()).done) &&
                  (n.push(o.value), !t || n.length !== t);
                  r = !0
                );
              } catch (u) {
                (i = !0), (a = u);
              } finally {
                try {
                  r || null == s.return || s.return();
                } finally {
                  if (i) throw a;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to destructure non-iterable instance"
              );
            })()
          );
        }
        n.d(t, "a", function () {
          return Le;
        }),
          n.d(t, "b", function () {
            return Re;
          });
        var l = function () {},
          c = {},
          h = {},
          f = { mark: l, measure: l };
        try {
          "undefined" !== typeof window && (c = window),
            "undefined" !== typeof document && (h = document),
            "undefined" !== typeof MutationObserver && MutationObserver,
            "undefined" !== typeof performance && (f = performance);
        } catch (je) {}
        var d = (c.navigator || {}).userAgent,
          p = void 0 === d ? "" : d,
          m = c,
          v = h,
          g = f,
          y =
            (m.document,
            !!v.documentElement &&
              !!v.head &&
              "function" === typeof v.addEventListener &&
              "function" === typeof v.createElement),
          b = (~p.indexOf("MSIE") || p.indexOf("Trident/"), "fa"),
          x = "svg-inline--fa",
          _ = "data-fa-i2svg",
          w =
            ((function () {
              try {
              } catch (je) {
                return !1;
              }
            })(),
            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),
          S = w.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]),
          M = {
            GROUP: "group",
            SWAP_OPACITY: "swap-opacity",
            PRIMARY: "primary",
            SECONDARY: "secondary",
          },
          T =
            ([
              "xs",
              "sm",
              "lg",
              "fw",
              "ul",
              "li",
              "border",
              "pull-left",
              "pull-right",
              "spin",
              "pulse",
              "rotate-90",
              "rotate-180",
              "rotate-270",
              "flip-horizontal",
              "flip-vertical",
              "flip-both",
              "stack",
              "stack-1x",
              "stack-2x",
              "inverse",
              "layers",
              "layers-text",
              "layers-counter",
              M.GROUP,
              M.SWAP_OPACITY,
              M.PRIMARY,
              M.SECONDARY,
            ]
              .concat(
                w.map(function (e) {
                  return "".concat(e, "x");
                })
              )
              .concat(
                S.map(function (e) {
                  return "w-".concat(e);
                })
              ),
            m.FontAwesomeConfig || {});
        if (v && "function" === typeof v.querySelector) {
          [
            ["data-family-prefix", "familyPrefix"],
            ["data-replacement-class", "replacementClass"],
            ["data-auto-replace-svg", "autoReplaceSvg"],
            ["data-auto-add-css", "autoAddCss"],
            ["data-auto-a11y", "autoA11y"],
            ["data-search-pseudo-elements", "searchPseudoElements"],
            ["data-observe-mutations", "observeMutations"],
            ["data-mutate-approach", "mutateApproach"],
            ["data-keep-original-source", "keepOriginalSource"],
            ["data-measure-performance", "measurePerformance"],
            ["data-show-missing-icons", "showMissingIcons"],
          ].forEach(function (e) {
            var t = u(e, 2),
              n = t[0],
              r = t[1],
              i = (function (e) {
                return "" === e || ("false" !== e && ("true" === e || e));
              })(
                (function (e) {
                  var t = v.querySelector("script[" + e + "]");
                  if (t) return t.getAttribute(e);
                })(n)
              );
            void 0 !== i && null !== i && (T[r] = i);
          });
        }
        var E = s(
          {},
          {
            familyPrefix: b,
            replacementClass: x,
            autoReplaceSvg: !0,
            autoAddCss: !0,
            autoA11y: !0,
            searchPseudoElements: !1,
            observeMutations: !0,
            mutateApproach: "async",
            keepOriginalSource: !0,
            measurePerformance: !1,
            showMissingIcons: !0,
          },
          T
        );
        E.autoReplaceSvg || (E.observeMutations = !1);
        var O = s({}, E);
        m.FontAwesomeConfig = O;
        var k = m || {};
        k.___FONT_AWESOME___ || (k.___FONT_AWESOME___ = {}),
          k.___FONT_AWESOME___.styles || (k.___FONT_AWESOME___.styles = {}),
          k.___FONT_AWESOME___.hooks || (k.___FONT_AWESOME___.hooks = {}),
          k.___FONT_AWESOME___.shims || (k.___FONT_AWESOME___.shims = []);
        var A = k.___FONT_AWESOME___,
          C = [];
        y &&
          ((v.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(
            v.readyState
          ) ||
            v.addEventListener("DOMContentLoaded", function e() {
              v.removeEventListener("DOMContentLoaded", e),
                1,
                C.map(function (e) {
                  return e();
                });
            }));
        var P,
          R = "pending",
          L = "settled",
          j = "fulfilled",
          I = "rejected",
          N = function () {},
          D =
            "undefined" !== typeof e &&
            "undefined" !== typeof e.process &&
            "function" === typeof e.process.emit,
          z = "undefined" === typeof r ? setTimeout : r,
          U = [];
        function B() {
          for (var e = 0; e < U.length; e++) U[e][0](U[e][1]);
          (U = []), (P = !1);
        }
        function F(e, t) {
          U.push([e, t]), P || ((P = !0), z(B, 0));
        }
        function G(e) {
          var t = e.owner,
            n = t._state,
            r = t._data,
            i = e[n],
            a = e.then;
          if ("function" === typeof i) {
            n = j;
            try {
              r = i(r);
            } catch (je) {
              q(a, je);
            }
          }
          H(a, r) || (n === j && V(a, r), n === I && q(a, r));
        }
        function H(e, t) {
          var n;
          try {
            if (e === t)
              throw new TypeError(
                "A promises callback cannot return that same promise."
              );
            if (t && ("function" === typeof t || "object" === i(t))) {
              var r = t.then;
              if ("function" === typeof r)
                return (
                  r.call(
                    t,
                    function (r) {
                      n || ((n = !0), t === r ? W(e, r) : V(e, r));
                    },
                    function (t) {
                      n || ((n = !0), q(e, t));
                    }
                  ),
                  !0
                );
            }
          } catch (je) {
            return n || q(e, je), !0;
          }
          return !1;
        }
        function V(e, t) {
          (e !== t && H(e, t)) || W(e, t);
        }
        function W(e, t) {
          e._state === R && ((e._state = L), (e._data = t), F(Y, e));
        }
        function q(e, t) {
          e._state === R && ((e._state = L), (e._data = t), F(J, e));
        }
        function X(e) {
          e._then = e._then.forEach(G);
        }
        function Y(e) {
          (e._state = j), X(e);
        }
        function J(t) {
          (t._state = I),
            X(t),
            !t._handled &&
              D &&
              e.process.emit("unhandledRejection", t._data, t);
        }
        function Z(t) {
          e.process.emit("rejectionHandled", t);
        }
        function $(e) {
          if ("function" !== typeof e)
            throw new TypeError("Promise resolver " + e + " is not a function");
          if (this instanceof $ === !1)
            throw new TypeError(
              "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."
            );
          (this._then = []),
            (function (e, t) {
              function n(e) {
                q(t, e);
              }
              try {
                e(function (e) {
                  V(t, e);
                }, n);
              } catch (je) {
                n(je);
              }
            })(e, this);
        }
        ($.prototype = {
          constructor: $,
          _state: R,
          _then: null,
          _data: void 0,
          _handled: !1,
          then: function (e, t) {
            var n = {
              owner: this,
              then: new this.constructor(N),
              fulfilled: e,
              rejected: t,
            };
            return (
              (!t && !e) ||
                this._handled ||
                ((this._handled = !0), this._state === I && D && F(Z, this)),
              this._state === j || this._state === I
                ? F(G, n)
                : this._then.push(n),
              n.then
            );
          },
          catch: function (e) {
            return this.then(null, e);
          },
        }),
          ($.all = function (e) {
            if (!Array.isArray(e))
              throw new TypeError("You must pass an array to Promise.all().");
            return new $(function (t, n) {
              var r = [],
                i = 0;
              function a(e) {
                return (
                  i++,
                  function (n) {
                    (r[e] = n), --i || t(r);
                  }
                );
              }
              for (var o, s = 0; s < e.length; s++)
                (o = e[s]) && "function" === typeof o.then
                  ? o.then(a(s), n)
                  : (r[s] = o);
              i || t(r);
            });
          }),
          ($.race = function (e) {
            if (!Array.isArray(e))
              throw new TypeError("You must pass an array to Promise.race().");
            return new $(function (t, n) {
              for (var r, i = 0; i < e.length; i++)
                (r = e[i]) && "function" === typeof r.then
                  ? r.then(t, n)
                  : t(r);
            });
          }),
          ($.resolve = function (e) {
            return e && "object" === i(e) && e.constructor === $
              ? e
              : new $(function (t) {
                  t(e);
                });
          }),
          ($.reject = function (e) {
            return new $(function (t, n) {
              n(e);
            });
          });
        "function" === typeof Promise && Promise;
        var K = { size: 16, x: 0, y: 0, rotate: 0, flipX: !1, flipY: !1 };
        function Q(e) {
          if (e && y) {
            var t = v.createElement("style");
            t.setAttribute("type", "text/css"), (t.innerHTML = e);
            for (
              var n = v.head.childNodes, r = null, i = n.length - 1;
              i > -1;
              i--
            ) {
              var a = n[i],
                o = (a.tagName || "").toUpperCase();
              ["STYLE", "LINK"].indexOf(o) > -1 && (r = a);
            }
            return v.head.insertBefore(t, r), e;
          }
        }
        var ee =
          "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
        function te() {
          for (var e = 12, t = ""; e-- > 0; ) t += ee[(62 * Math.random()) | 0];
          return t;
        }
        function ne(e) {
          return ""
            .concat(e)
            .replace(/&/g, "&amp;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#39;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;");
        }
        function re(e) {
          return Object.keys(e || {}).reduce(function (t, n) {
            return t + "".concat(n, ": ").concat(e[n], ";");
          }, "");
        }
        function ie(e) {
          return (
            e.size !== K.size ||
            e.x !== K.x ||
            e.y !== K.y ||
            e.rotate !== K.rotate ||
            e.flipX ||
            e.flipY
          );
        }
        function ae(e) {
          var t = e.transform,
            n = e.containerWidth,
            r = e.iconWidth,
            i = { transform: "translate(".concat(n / 2, " 256)") },
            a = "translate(".concat(32 * t.x, ", ").concat(32 * t.y, ") "),
            o = "scale("
              .concat((t.size / 16) * (t.flipX ? -1 : 1), ", ")
              .concat((t.size / 16) * (t.flipY ? -1 : 1), ") "),
            s = "rotate(".concat(t.rotate, " 0 0)");
          return {
            outer: i,
            inner: { transform: "".concat(a, " ").concat(o, " ").concat(s) },
            path: { transform: "translate(".concat((r / 2) * -1, " -256)") },
          };
        }
        var oe = { x: 0, y: 0, width: "100%", height: "100%" };
        function se(e) {
          var t =
            !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          return (
            e.attributes &&
              (e.attributes.fill || t) &&
              (e.attributes.fill = "black"),
            e
          );
        }
        function ue(e) {
          var t = e.icons,
            n = t.main,
            r = t.mask,
            i = e.prefix,
            a = e.iconName,
            o = e.transform,
            u = e.symbol,
            l = e.title,
            c = e.extra,
            h = e.watchable,
            f = void 0 !== h && h,
            d = r.found ? r : n,
            p = d.width,
            m = d.height,
            v = "fa-w-".concat(Math.ceil((p / m) * 16)),
            g = [
              O.replacementClass,
              a ? "".concat(O.familyPrefix, "-").concat(a) : "",
              v,
            ]
              .filter(function (e) {
                return -1 === c.classes.indexOf(e);
              })
              .concat(c.classes)
              .join(" "),
            y = {
              children: [],
              attributes: s({}, c.attributes, {
                "data-prefix": i,
                "data-icon": a,
                class: g,
                role: c.attributes.role || "img",
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 ".concat(p, " ").concat(m),
              }),
            };
          f && (y.attributes[_] = ""),
            l &&
              y.children.push({
                tag: "title",
                attributes: {
                  id: y.attributes["aria-labelledby"] || "title-".concat(te()),
                },
                children: [l],
              });
          var b = s({}, y, {
              prefix: i,
              iconName: a,
              main: n,
              mask: r,
              transform: o,
              symbol: u,
              styles: c.styles,
            }),
            x =
              r.found && n.found
                ? (function (e) {
                    var t,
                      n = e.children,
                      r = e.attributes,
                      i = e.main,
                      a = e.mask,
                      o = e.transform,
                      u = i.width,
                      l = i.icon,
                      c = a.width,
                      h = a.icon,
                      f = ae({ transform: o, containerWidth: c, iconWidth: u }),
                      d = {
                        tag: "rect",
                        attributes: s({}, oe, { fill: "white" }),
                      },
                      p = l.children ? { children: l.children.map(se) } : {},
                      m = {
                        tag: "g",
                        attributes: s({}, f.inner),
                        children: [
                          se(
                            s(
                              {
                                tag: l.tag,
                                attributes: s({}, l.attributes, f.path),
                              },
                              p
                            )
                          ),
                        ],
                      },
                      v = {
                        tag: "g",
                        attributes: s({}, f.outer),
                        children: [m],
                      },
                      g = "mask-".concat(te()),
                      y = "clip-".concat(te()),
                      b = {
                        tag: "mask",
                        attributes: s({}, oe, {
                          id: g,
                          maskUnits: "userSpaceOnUse",
                          maskContentUnits: "userSpaceOnUse",
                        }),
                        children: [d, v],
                      },
                      x = {
                        tag: "defs",
                        children: [
                          {
                            tag: "clipPath",
                            attributes: { id: y },
                            children:
                              ((t = h), "g" === t.tag ? t.children : [t]),
                          },
                          b,
                        ],
                      };
                    return (
                      n.push(x, {
                        tag: "rect",
                        attributes: s(
                          {
                            fill: "currentColor",
                            "clip-path": "url(#".concat(y, ")"),
                            mask: "url(#".concat(g, ")"),
                          },
                          oe
                        ),
                      }),
                      { children: n, attributes: r }
                    );
                  })(b)
                : (function (e) {
                    var t = e.children,
                      n = e.attributes,
                      r = e.main,
                      i = e.transform,
                      a = re(e.styles);
                    if ((a.length > 0 && (n.style = a), ie(i))) {
                      var o = ae({
                        transform: i,
                        containerWidth: r.width,
                        iconWidth: r.width,
                      });
                      t.push({
                        tag: "g",
                        attributes: s({}, o.outer),
                        children: [
                          {
                            tag: "g",
                            attributes: s({}, o.inner),
                            children: [
                              {
                                tag: r.icon.tag,
                                children: r.icon.children,
                                attributes: s({}, r.icon.attributes, o.path),
                              },
                            ],
                          },
                        ],
                      });
                    } else t.push(r.icon);
                    return { children: t, attributes: n };
                  })(b),
            w = x.children,
            S = x.attributes;
          return (
            (b.children = w),
            (b.attributes = S),
            u
              ? (function (e) {
                  var t = e.prefix,
                    n = e.iconName,
                    r = e.children,
                    i = e.attributes,
                    a = e.symbol;
                  return [
                    {
                      tag: "svg",
                      attributes: { style: "display: none;" },
                      children: [
                        {
                          tag: "symbol",
                          attributes: s({}, i, {
                            id:
                              !0 === a
                                ? ""
                                    .concat(t, "-")
                                    .concat(O.familyPrefix, "-")
                                    .concat(n)
                                : a,
                          }),
                          children: r,
                        },
                      ],
                    },
                  ];
                })(b)
              : (function (e) {
                  var t = e.children,
                    n = e.main,
                    r = e.mask,
                    i = e.attributes,
                    a = e.styles,
                    o = e.transform;
                  if (ie(o) && n.found && !r.found) {
                    var u = { x: n.width / n.height / 2, y: 0.5 };
                    i.style = re(
                      s({}, a, {
                        "transform-origin": ""
                          .concat(u.x + o.x / 16, "em ")
                          .concat(u.y + o.y / 16, "em"),
                      })
                    );
                  }
                  return [{ tag: "svg", attributes: i, children: t }];
                })(b)
          );
        }
        var le = function () {},
          ce =
            (O.measurePerformance && g && g.mark && g.measure,
            function (e, t, n, r) {
              var i,
                a,
                o,
                s = Object.keys(e),
                u = s.length,
                l =
                  void 0 !== r
                    ? (function (e, t) {
                        return function (n, r, i, a) {
                          return e.call(t, n, r, i, a);
                        };
                      })(t, r)
                    : t;
              for (
                void 0 === n ? ((i = 1), (o = e[s[0]])) : ((i = 0), (o = n));
                i < u;
                i++
              )
                o = l(o, e[(a = s[i])], a, e);
              return o;
            });
        function he(e, t) {
          var n = (
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {}
            ).skipHooks,
            r = void 0 !== n && n,
            i = Object.keys(t).reduce(function (e, n) {
              var r = t[n];
              return !!r.icon ? (e[r.iconName] = r.icon) : (e[n] = r), e;
            }, {});
          "function" !== typeof A.hooks.addPack || r
            ? (A.styles[e] = s({}, A.styles[e] || {}, i))
            : A.hooks.addPack(e, i),
            "fas" === e && he("fa", t);
        }
        var fe = A.styles,
          de = A.shims,
          pe = function () {
            var e = function (e) {
              return ce(
                fe,
                function (t, n, r) {
                  return (t[r] = ce(n, e, {})), t;
                },
                {}
              );
            };
            e(function (e, t, n) {
              return t[3] && (e[t[3]] = n), e;
            }),
              e(function (e, t, n) {
                var r = t[2];
                return (
                  (e[n] = n),
                  r.forEach(function (t) {
                    e[t] = n;
                  }),
                  e
                );
              });
            var t = "far" in fe;
            ce(
              de,
              function (e, n) {
                var r = n[0],
                  i = n[1],
                  a = n[2];
                return (
                  "far" !== i || t || (i = "fas"),
                  (e[r] = { prefix: i, iconName: a }),
                  e
                );
              },
              {}
            );
          };
        pe();
        A.styles;
        function me(e, t, n) {
          if (e && e[t] && e[t][n])
            return { prefix: t, iconName: n, icon: e[t][n] };
        }
        function ve(e) {
          var t = e.tag,
            n = e.attributes,
            r = void 0 === n ? {} : n,
            i = e.children,
            a = void 0 === i ? [] : i;
          return "string" === typeof e
            ? ne(e)
            : "<"
                .concat(t, " ")
                .concat(
                  (function (e) {
                    return Object.keys(e || {})
                      .reduce(function (t, n) {
                        return t + "".concat(n, '="').concat(ne(e[n]), '" ');
                      }, "")
                      .trim();
                  })(r),
                  ">"
                )
                .concat(a.map(ve).join(""), "</")
                .concat(t, ">");
        }
        var ge = function (e) {
          var t = { size: 16, x: 0, y: 0, flipX: !1, flipY: !1, rotate: 0 };
          return e
            ? e
                .toLowerCase()
                .split(" ")
                .reduce(function (e, t) {
                  var n = t.toLowerCase().split("-"),
                    r = n[0],
                    i = n.slice(1).join("-");
                  if (r && "h" === i) return (e.flipX = !0), e;
                  if (r && "v" === i) return (e.flipY = !0), e;
                  if (((i = parseFloat(i)), isNaN(i))) return e;
                  switch (r) {
                    case "grow":
                      e.size = e.size + i;
                      break;
                    case "shrink":
                      e.size = e.size - i;
                      break;
                    case "left":
                      e.x = e.x - i;
                      break;
                    case "right":
                      e.x = e.x + i;
                      break;
                    case "up":
                      e.y = e.y - i;
                      break;
                    case "down":
                      e.y = e.y + i;
                      break;
                    case "rotate":
                      e.rotate = e.rotate + i;
                  }
                  return e;
                }, t)
            : t;
        };
        function ye(e) {
          (this.name = "MissingIcon"),
            (this.message = e || "Icon unavailable"),
            (this.stack = new Error().stack);
        }
        (ye.prototype = Object.create(Error.prototype)),
          (ye.prototype.constructor = ye);
        var be = { fill: "currentColor" },
          xe = { attributeType: "XML", repeatCount: "indefinite", dur: "2s" },
          _e = {
            tag: "path",
            attributes: s({}, be, {
              d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z",
            }),
          },
          we = s({}, xe, { attributeName: "opacity" });
        s({}, be, { cx: "256", cy: "364", r: "28" }),
          s({}, xe, { attributeName: "r", values: "28;14;28;28;14;28;" }),
          s({}, we, { values: "1;0;1;1;0;1;" }),
          s({}, be, {
            opacity: "1",
            d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z",
          }),
          s({}, we, { values: "1;0;0;0;0;1;" }),
          s({}, be, {
            opacity: "0",
            d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z",
          }),
          s({}, we, { values: "0;0;1;1;0;0;" }),
          A.styles;
        function Se(e) {
          var t = e[0],
            n = e[1],
            r = u(e.slice(4), 1)[0];
          return {
            found: !0,
            width: t,
            height: n,
            icon: Array.isArray(r)
              ? {
                  tag: "g",
                  attributes: {
                    class: "".concat(O.familyPrefix, "-").concat(M.GROUP),
                  },
                  children: [
                    {
                      tag: "path",
                      attributes: {
                        class: ""
                          .concat(O.familyPrefix, "-")
                          .concat(M.SECONDARY),
                        fill: "currentColor",
                        d: r[0],
                      },
                    },
                    {
                      tag: "path",
                      attributes: {
                        class: "".concat(O.familyPrefix, "-").concat(M.PRIMARY),
                        fill: "currentColor",
                        d: r[1],
                      },
                    },
                  ],
                }
              : { tag: "path", attributes: { fill: "currentColor", d: r } },
          };
        }
        A.styles;
        var Me =
          'svg:not(:root).svg-inline--fa {\n  overflow: visible;\n}\n\n.svg-inline--fa {\n  display: inline-block;\n  font-size: inherit;\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.225em;\n}\n.svg-inline--fa.fa-w-1 {\n  width: 0.0625em;\n}\n.svg-inline--fa.fa-w-2 {\n  width: 0.125em;\n}\n.svg-inline--fa.fa-w-3 {\n  width: 0.1875em;\n}\n.svg-inline--fa.fa-w-4 {\n  width: 0.25em;\n}\n.svg-inline--fa.fa-w-5 {\n  width: 0.3125em;\n}\n.svg-inline--fa.fa-w-6 {\n  width: 0.375em;\n}\n.svg-inline--fa.fa-w-7 {\n  width: 0.4375em;\n}\n.svg-inline--fa.fa-w-8 {\n  width: 0.5em;\n}\n.svg-inline--fa.fa-w-9 {\n  width: 0.5625em;\n}\n.svg-inline--fa.fa-w-10 {\n  width: 0.625em;\n}\n.svg-inline--fa.fa-w-11 {\n  width: 0.6875em;\n}\n.svg-inline--fa.fa-w-12 {\n  width: 0.75em;\n}\n.svg-inline--fa.fa-w-13 {\n  width: 0.8125em;\n}\n.svg-inline--fa.fa-w-14 {\n  width: 0.875em;\n}\n.svg-inline--fa.fa-w-15 {\n  width: 0.9375em;\n}\n.svg-inline--fa.fa-w-16 {\n  width: 1em;\n}\n.svg-inline--fa.fa-w-17 {\n  width: 1.0625em;\n}\n.svg-inline--fa.fa-w-18 {\n  width: 1.125em;\n}\n.svg-inline--fa.fa-w-19 {\n  width: 1.1875em;\n}\n.svg-inline--fa.fa-w-20 {\n  width: 1.25em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-border {\n  height: 1.5em;\n}\n.svg-inline--fa.fa-li {\n  width: 2em;\n}\n.svg-inline--fa.fa-fw {\n  width: 1.25em;\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: #ff253a;\n  border-radius: 1em;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  height: 1.5em;\n  line-height: 1;\n  max-width: 5em;\n  min-width: 1.5em;\n  overflow: hidden;\n  padding: 0.25em;\n  right: 0;\n  text-overflow: ellipsis;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: 0;\n  right: 0;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: 0;\n  left: 0;\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  right: 0;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: 0;\n  right: auto;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -0.0667em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: 0.1em;\n  padding: 0.2em 0.25em 0.15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: 0.3em;\n}\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: 0.3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n          animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n          animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse {\n  color: #fff;\n}';
        function Te() {
          var e = b,
            t = x,
            n = O.familyPrefix,
            r = O.replacementClass,
            i = Me;
          if (n !== e || r !== t) {
            var a = new RegExp("\\.".concat(e, "\\-"), "g"),
              o = new RegExp("\\--".concat(e, "\\-"), "g"),
              s = new RegExp("\\.".concat(t), "g");
            i = i
              .replace(a, ".".concat(n, "-"))
              .replace(o, "--".concat(n, "-"))
              .replace(s, ".".concat(r));
          }
          return i;
        }
        function Ee() {
          O.autoAddCss && !Pe && (Q(Te()), (Pe = !0));
        }
        function Oe(e, t) {
          return (
            Object.defineProperty(e, "abstract", { get: t }),
            Object.defineProperty(e, "html", {
              get: function () {
                return e.abstract.map(function (e) {
                  return ve(e);
                });
              },
            }),
            Object.defineProperty(e, "node", {
              get: function () {
                if (y) {
                  var t = v.createElement("div");
                  return (t.innerHTML = e.html), t.children;
                }
              },
            }),
            e
          );
        }
        function ke(e) {
          var t = e.prefix,
            n = void 0 === t ? "fa" : t,
            r = e.iconName;
          if (r) return me(Ce.definitions, n, r) || me(A.styles, n, r);
        }
        var Ae,
          Ce = new ((function () {
            function e() {
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError("Cannot call a class as a function");
              })(this, e),
                (this.definitions = {});
            }
            var t, n, r;
            return (
              (t = e),
              (n = [
                {
                  key: "add",
                  value: function () {
                    for (
                      var e = this,
                        t = arguments.length,
                        n = new Array(t),
                        r = 0;
                      r < t;
                      r++
                    )
                      n[r] = arguments[r];
                    var i = n.reduce(this._pullDefinitions, {});
                    Object.keys(i).forEach(function (t) {
                      (e.definitions[t] = s({}, e.definitions[t] || {}, i[t])),
                        he(t, i[t]),
                        pe();
                    });
                  },
                },
                {
                  key: "reset",
                  value: function () {
                    this.definitions = {};
                  },
                },
                {
                  key: "_pullDefinitions",
                  value: function (e, t) {
                    var n = t.prefix && t.iconName && t.icon ? { 0: t } : t;
                    return (
                      Object.keys(n).map(function (t) {
                        var r = n[t],
                          i = r.prefix,
                          a = r.iconName,
                          o = r.icon;
                        e[i] || (e[i] = {}), (e[i][a] = o);
                      }),
                      e
                    );
                  },
                },
              ]) && a(t.prototype, n),
              r && a(t, r),
              e
            );
          })())(),
          Pe = !1,
          Re = {
            transform: function (e) {
              return ge(e);
            },
          },
          Le =
            ((Ae = function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                n = t.transform,
                r = void 0 === n ? K : n,
                i = t.symbol,
                a = void 0 !== i && i,
                o = t.mask,
                u = void 0 === o ? null : o,
                l = t.title,
                c = void 0 === l ? null : l,
                h = t.classes,
                f = void 0 === h ? [] : h,
                d = t.attributes,
                p = void 0 === d ? {} : d,
                m = t.styles,
                v = void 0 === m ? {} : m;
              if (e) {
                var g = e.prefix,
                  y = e.iconName,
                  b = e.icon;
                return Oe(s({ type: "icon" }, e), function () {
                  return (
                    Ee(),
                    O.autoA11y &&
                      (c
                        ? (p["aria-labelledby"] = ""
                            .concat(O.replacementClass, "-title-")
                            .concat(te()))
                        : ((p["aria-hidden"] = "true"),
                          (p.focusable = "false"))),
                    ue({
                      icons: {
                        main: Se(b),
                        mask: u
                          ? Se(u.icon)
                          : { found: !1, width: null, height: null, icon: {} },
                      },
                      prefix: g,
                      iconName: y,
                      transform: s({}, K, r),
                      symbol: a,
                      title: c,
                      extra: { attributes: p, styles: v, classes: f },
                    })
                  );
                });
              }
            }),
            function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                n = (e || {}).icon ? e : ke(e || {}),
                r = t.mask;
              return (
                r && (r = (r || {}).icon ? r : ke(r || {})),
                Ae(n, s({}, t, { mask: r }))
              );
            });
      }.call(this, n(43), n(100).setImmediate));
    },
    function (e, t) {
      e.exports = function (e, t) {
        (e.prototype = Object.create(t.prototype)),
          (e.prototype.constructor = e),
          (e.__proto__ = t);
      };
    },
    function (e, t, n) {
      var r = n(106);
      (e.exports = d),
        (e.exports.parse = a),
        (e.exports.compile = function (e, t) {
          return s(a(e, t));
        }),
        (e.exports.tokensToFunction = s),
        (e.exports.tokensToRegExp = f);
      var i = new RegExp(
        [
          "(\\\\.)",
          "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))",
        ].join("|"),
        "g"
      );
      function a(e, t) {
        for (
          var n, r = [], a = 0, o = 0, s = "", c = (t && t.delimiter) || "/";
          null != (n = i.exec(e));

        ) {
          var h = n[0],
            f = n[1],
            d = n.index;
          if (((s += e.slice(o, d)), (o = d + h.length), f)) s += f[1];
          else {
            var p = e[o],
              m = n[2],
              v = n[3],
              g = n[4],
              y = n[5],
              b = n[6],
              x = n[7];
            s && (r.push(s), (s = ""));
            var _ = null != m && null != p && p !== m,
              w = "+" === b || "*" === b,
              S = "?" === b || "*" === b,
              M = n[2] || c,
              T = g || y;
            r.push({
              name: v || a++,
              prefix: m || "",
              delimiter: M,
              optional: S,
              repeat: w,
              partial: _,
              asterisk: !!x,
              pattern: T ? l(T) : x ? ".*" : "[^" + u(M) + "]+?",
            });
          }
        }
        return o < e.length && (s += e.substr(o)), s && r.push(s), r;
      }
      function o(e) {
        return encodeURI(e).replace(/[\/?#]/g, function (e) {
          return "%" + e.charCodeAt(0).toString(16).toUpperCase();
        });
      }
      function s(e) {
        for (var t = new Array(e.length), n = 0; n < e.length; n++)
          "object" === typeof e[n] &&
            (t[n] = new RegExp("^(?:" + e[n].pattern + ")$"));
        return function (n, i) {
          for (
            var a = "",
              s = n || {},
              u = (i || {}).pretty ? o : encodeURIComponent,
              l = 0;
            l < e.length;
            l++
          ) {
            var c = e[l];
            if ("string" !== typeof c) {
              var h,
                f = s[c.name];
              if (null == f) {
                if (c.optional) {
                  c.partial && (a += c.prefix);
                  continue;
                }
                throw new TypeError('Expected "' + c.name + '" to be defined');
              }
              if (r(f)) {
                if (!c.repeat)
                  throw new TypeError(
                    'Expected "' +
                      c.name +
                      '" to not repeat, but received `' +
                      JSON.stringify(f) +
                      "`"
                  );
                if (0 === f.length) {
                  if (c.optional) continue;
                  throw new TypeError(
                    'Expected "' + c.name + '" to not be empty'
                  );
                }
                for (var d = 0; d < f.length; d++) {
                  if (((h = u(f[d])), !t[l].test(h)))
                    throw new TypeError(
                      'Expected all "' +
                        c.name +
                        '" to match "' +
                        c.pattern +
                        '", but received `' +
                        JSON.stringify(h) +
                        "`"
                    );
                  a += (0 === d ? c.prefix : c.delimiter) + h;
                }
              } else {
                if (
                  ((h = c.asterisk
                    ? encodeURI(f).replace(/[?#]/g, function (e) {
                        return "%" + e.charCodeAt(0).toString(16).toUpperCase();
                      })
                    : u(f)),
                  !t[l].test(h))
                )
                  throw new TypeError(
                    'Expected "' +
                      c.name +
                      '" to match "' +
                      c.pattern +
                      '", but received "' +
                      h +
                      '"'
                  );
                a += c.prefix + h;
              }
            } else a += c;
          }
          return a;
        };
      }
      function u(e) {
        return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
      }
      function l(e) {
        return e.replace(/([=!:$\/()])/g, "\\$1");
      }
      function c(e, t) {
        return (e.keys = t), e;
      }
      function h(e) {
        return e.sensitive ? "" : "i";
      }
      function f(e, t, n) {
        r(t) || ((n = t || n), (t = []));
        for (
          var i = (n = n || {}).strict, a = !1 !== n.end, o = "", s = 0;
          s < e.length;
          s++
        ) {
          var l = e[s];
          if ("string" === typeof l) o += u(l);
          else {
            var f = u(l.prefix),
              d = "(?:" + l.pattern + ")";
            t.push(l),
              l.repeat && (d += "(?:" + f + d + ")*"),
              (o += d =
                l.optional
                  ? l.partial
                    ? f + "(" + d + ")?"
                    : "(?:" + f + "(" + d + "))?"
                  : f + "(" + d + ")");
          }
        }
        var p = u(n.delimiter || "/"),
          m = o.slice(-p.length) === p;
        return (
          i || (o = (m ? o.slice(0, -p.length) : o) + "(?:" + p + "(?=$))?"),
          (o += a ? "$" : i && m ? "" : "(?=" + p + "|$)"),
          c(new RegExp("^" + o, h(n)), t)
        );
      }
      function d(e, t, n) {
        return (
          r(t) || ((n = t || n), (t = [])),
          (n = n || {}),
          e instanceof RegExp
            ? (function (e, t) {
                var n = e.source.match(/\((?!\?)/g);
                if (n)
                  for (var r = 0; r < n.length; r++)
                    t.push({
                      name: r,
                      prefix: null,
                      delimiter: null,
                      optional: !1,
                      repeat: !1,
                      partial: !1,
                      asterisk: !1,
                      pattern: null,
                    });
                return c(e, t);
              })(e, t)
            : r(e)
            ? (function (e, t, n) {
                for (var r = [], i = 0; i < e.length; i++)
                  r.push(d(e[i], t, n).source);
                return c(new RegExp("(?:" + r.join("|") + ")", h(n)), t);
              })(e, t, n)
            : (function (e, t, n) {
                return f(a(e, n), t, n);
              })(e, t, n)
        );
      }
    },
    function (e, t, n) {
      "use strict";
      var r = n(6),
        i = n(17);
      var a = n(26),
        o = a.a.isStandardBrowserEnv
          ? {
              write: function (e, t, n, i, a, o) {
                var s = [];
                s.push(e + "=" + encodeURIComponent(t)),
                  r.a.isNumber(n) &&
                    s.push("expires=" + new Date(n).toGMTString()),
                  r.a.isString(i) && s.push("path=" + i),
                  r.a.isString(a) && s.push("domain=" + a),
                  !0 === o && s.push("secure"),
                  (document.cookie = s.join("; "));
              },
              read: function (e) {
                var t = document.cookie.match(
                  new RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
                );
                return t ? decodeURIComponent(t[3]) : null;
              },
              remove: function (e) {
                this.write(e, "", Date.now() - 864e5);
              },
            }
          : {
              write: function () {},
              read: function () {
                return null;
              },
              remove: function () {},
            },
        s = n(56),
        u = n(61),
        l = a.a.isStandardBrowserEnv
          ? (function () {
              var e,
                t = /(msie|trident)/i.test(navigator.userAgent),
                n = document.createElement("a");
              function i(e) {
                var r = e;
                return (
                  t && (n.setAttribute("href", r), (r = n.href)),
                  n.setAttribute("href", r),
                  {
                    href: n.href,
                    protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
                    host: n.host,
                    search: n.search ? n.search.replace(/^\?/, "") : "",
                    hash: n.hash ? n.hash.replace(/^#/, "") : "",
                    hostname: n.hostname,
                    port: n.port,
                    pathname:
                      "/" === n.pathname.charAt(0)
                        ? n.pathname
                        : "/" + n.pathname,
                  }
                );
              }
              return (
                (e = i(window.location.href)),
                function (t) {
                  var n = r.a.isString(t) ? i(t) : t;
                  return n.protocol === e.protocol && n.host === e.host;
                }
              );
            })()
          : function () {
              return !0;
            },
        c = n(58),
        h = n(37);
      var f = n(29);
      var d = function (e, t) {
        e = e || 10;
        var n,
          r = new Array(e),
          i = new Array(e),
          a = 0,
          o = 0;
        return (
          (t = void 0 !== t ? t : 1e3),
          function (s) {
            var u = Date.now(),
              l = i[o];
            n || (n = u), (r[a] = s), (i[a] = u);
            for (var c = o, h = 0; c !== a; ) (h += r[c++]), (c %= e);
            if (((a = (a + 1) % e) === o && (o = (o + 1) % e), !(u - n < t))) {
              var f = l && u - l;
              return f ? Math.round((1e3 * h) / f) : void 0;
            }
          }
        );
      };
      function p(e, t) {
        var n = 0,
          r = d(50, 250);
        return function (i) {
          var a = i.loaded,
            o = i.lengthComputable ? i.total : void 0,
            s = a - n,
            u = r(s);
          n = a;
          var l = {
            loaded: a,
            total: o,
            progress: o ? a / o : void 0,
            bytes: s,
            rate: u || void 0,
            estimated: u && o && a <= o ? (o - a) / u : void 0,
          };
          (l[t ? "download" : "upload"] = !0), e(l);
        };
      }
      function m(e) {
        return new Promise(function (t, n) {
          var d,
            m = e.data,
            v = f.a.from(e.headers).normalize(),
            g = e.responseType;
          function y() {
            e.cancelToken && e.cancelToken.unsubscribe(d),
              e.signal && e.signal.removeEventListener("abort", d);
          }
          r.a.isFormData(m) && a.a.isStandardBrowserEnv && v.setContentType(!1);
          var b = new XMLHttpRequest();
          if (e.auth) {
            var x = e.auth.username || "",
              _ = e.auth.password
                ? unescape(encodeURIComponent(e.auth.password))
                : "";
            v.set("Authorization", "Basic " + btoa(x + ":" + _));
          }
          var w = Object(u.a)(e.baseURL, e.url);
          function S() {
            if (b) {
              var r = f.a.from(
                "getAllResponseHeaders" in b && b.getAllResponseHeaders()
              );
              !(function (e, t, n) {
                var r = n.config.validateStatus;
                n.status && r && !r(n.status)
                  ? t(
                      new i.a(
                        "Request failed with status code " + n.status,
                        [i.a.ERR_BAD_REQUEST, i.a.ERR_BAD_RESPONSE][
                          Math.floor(n.status / 100) - 4
                        ],
                        n.config,
                        n.request,
                        n
                      )
                    )
                  : e(n);
              })(
                function (e) {
                  t(e), y();
                },
                function (e) {
                  n(e), y();
                },
                {
                  data:
                    g && "text" !== g && "json" !== g
                      ? b.response
                      : b.responseText,
                  status: b.status,
                  statusText: b.statusText,
                  headers: r,
                  config: e,
                  request: b,
                }
              ),
                (b = null);
            }
          }
          if (
            (b.open(
              e.method.toUpperCase(),
              Object(s.a)(w, e.params, e.paramsSerializer),
              !0
            ),
            (b.timeout = e.timeout),
            "onloadend" in b
              ? (b.onloadend = S)
              : (b.onreadystatechange = function () {
                  b &&
                    4 === b.readyState &&
                    (0 !== b.status ||
                      (b.responseURL &&
                        0 === b.responseURL.indexOf("file:"))) &&
                    setTimeout(S);
                }),
            (b.onabort = function () {
              b &&
                (n(new i.a("Request aborted", i.a.ECONNABORTED, e, b)),
                (b = null));
            }),
            (b.onerror = function () {
              n(new i.a("Network Error", i.a.ERR_NETWORK, e, b)), (b = null);
            }),
            (b.ontimeout = function () {
              var t = e.timeout
                  ? "timeout of " + e.timeout + "ms exceeded"
                  : "timeout exceeded",
                r = e.transitional || c.a;
              e.timeoutErrorMessage && (t = e.timeoutErrorMessage),
                n(
                  new i.a(
                    t,
                    r.clarifyTimeoutError ? i.a.ETIMEDOUT : i.a.ECONNABORTED,
                    e,
                    b
                  )
                ),
                (b = null);
            }),
            a.a.isStandardBrowserEnv)
          ) {
            var M =
              (e.withCredentials || l(w)) &&
              e.xsrfCookieName &&
              o.read(e.xsrfCookieName);
            M && v.set(e.xsrfHeaderName, M);
          }
          void 0 === m && v.setContentType(null),
            "setRequestHeader" in b &&
              r.a.forEach(v.toJSON(), function (e, t) {
                b.setRequestHeader(t, e);
              }),
            r.a.isUndefined(e.withCredentials) ||
              (b.withCredentials = !!e.withCredentials),
            g && "json" !== g && (b.responseType = e.responseType),
            "function" === typeof e.onDownloadProgress &&
              b.addEventListener("progress", p(e.onDownloadProgress, !0)),
            "function" === typeof e.onUploadProgress &&
              b.upload &&
              b.upload.addEventListener("progress", p(e.onUploadProgress)),
            (e.cancelToken || e.signal) &&
              ((d = function (t) {
                b &&
                  (n(!t || t.type ? new h.a(null, e, b) : t),
                  b.abort(),
                  (b = null));
              }),
              e.cancelToken && e.cancelToken.subscribe(d),
              e.signal &&
                (e.signal.aborted
                  ? d()
                  : e.signal.addEventListener("abort", d)));
          var T = (function (e) {
            var t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
            return (t && t[1]) || "";
          })(w);
          T && -1 === a.a.protocols.indexOf(T)
            ? n(
                new i.a(
                  "Unsupported protocol " + T + ":",
                  i.a.ERR_BAD_REQUEST,
                  e
                )
              )
            : b.send(m || null);
        });
      }
      var v = { http: m, xhr: m };
      t.a = {
        getAdapter: function (e) {
          if (r.a.isString(e)) {
            var t = v[e];
            if (!e)
              throw Error(
                r.a.hasOwnProp(e)
                  ? "Adapter '".concat(e, "' is not available in the build")
                  : "Can not resolve adapter '".concat(e, "'")
              );
            return t;
          }
          if (!r.a.isFunction(e))
            throw new TypeError("adapter is not a function");
          return e;
        },
        adapters: v,
      };
    },
    function (e, t, n) {
      "use strict";
      var r =
          /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
        i = (function (e) {
          var t = Object.create(null);
          return function (n) {
            return void 0 === t[n] && (t[n] = e(n)), t[n];
          };
        })(function (e) {
          return (
            r.test(e) ||
            (111 === e.charCodeAt(0) &&
              110 === e.charCodeAt(1) &&
              e.charCodeAt(2) < 91)
          );
        });
      t.a = i;
    },
    function (e, t) {
      e.exports = function (e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      };
    },
    function (e, t) {
      function n(t) {
        return (
          (e.exports = n =
            Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
          n(t)
        );
      }
      e.exports = n;
    },
    function (e, t) {
      t.__esModule = !0;
      t.ATTRIBUTE_NAMES = {
        BODY: "bodyAttributes",
        HTML: "htmlAttributes",
        TITLE: "titleAttributes",
      };
      var n = (t.TAG_NAMES = {
          BASE: "base",
          BODY: "body",
          HEAD: "head",
          HTML: "html",
          LINK: "link",
          META: "meta",
          NOSCRIPT: "noscript",
          SCRIPT: "script",
          STYLE: "style",
          TITLE: "title",
        }),
        r =
          ((t.VALID_TAG_NAMES = Object.keys(n).map(function (e) {
            return n[e];
          })),
          (t.TAG_PROPERTIES = {
            CHARSET: "charset",
            CSS_TEXT: "cssText",
            HREF: "href",
            HTTPEQUIV: "http-equiv",
            INNER_HTML: "innerHTML",
            ITEM_PROP: "itemprop",
            NAME: "name",
            PROPERTY: "property",
            REL: "rel",
            SRC: "src",
          }),
          (t.REACT_TAG_MAP = {
            accesskey: "accessKey",
            charset: "charSet",
            class: "className",
            contenteditable: "contentEditable",
            contextmenu: "contextMenu",
            "http-equiv": "httpEquiv",
            itemprop: "itemProp",
            tabindex: "tabIndex",
          }));
      (t.HELMET_PROPS = {
        DEFAULT_TITLE: "defaultTitle",
        DEFER: "defer",
        ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
        ON_CHANGE_CLIENT_STATE: "onChangeClientState",
        TITLE_TEMPLATE: "titleTemplate",
      }),
        (t.HTML_TAG_MAP = Object.keys(r).reduce(function (e, t) {
          return (e[r[t]] = t), e;
        }, {})),
        (t.SELF_CLOSING_TAGS = [n.NOSCRIPT, n.SCRIPT, n.STYLE]),
        (t.HELMET_ATTRIBUTE = "data-react-helmet");
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(14)),
        u = n(18),
        l = n(23),
        c = o.a.forwardRef(function (e, t) {
          var n = e.children,
            a = e.classes,
            u = e.className,
            c = e.color,
            h = void 0 === c ? "inherit" : c,
            f = e.component,
            d = void 0 === f ? "svg" : f,
            p = e.fontSize,
            m = void 0 === p ? "default" : p,
            v = e.htmlColor,
            g = e.titleAccess,
            y = e.viewBox,
            b = void 0 === y ? "0 0 24 24" : y,
            x = Object(i.a)(e, [
              "children",
              "classes",
              "className",
              "color",
              "component",
              "fontSize",
              "htmlColor",
              "titleAccess",
              "viewBox",
            ]);
          return o.a.createElement(
            d,
            Object(r.a)(
              {
                className: Object(s.a)(
                  a.root,
                  u,
                  "inherit" !== h && a["color".concat(Object(l.a)(h))],
                  "default" !== m && a["fontSize".concat(Object(l.a)(m))]
                ),
                focusable: "false",
                viewBox: b,
                color: v,
                "aria-hidden": g ? "false" : "true",
                role: g ? "img" : "presentation",
                ref: t,
              },
              x
            ),
            n,
            g ? o.a.createElement("title", null, g) : null
          );
        });
      (c.muiName = "SvgIcon"),
        (t.a = Object(u.a)(
          function (e) {
            return {
              root: {
                userSelect: "none",
                width: "1em",
                height: "1em",
                display: "inline-block",
                fill: "currentColor",
                flexShrink: 0,
                fontSize: e.typography.pxToRem(24),
                transition: e.transitions.create("fill", {
                  duration: e.transitions.duration.shorter,
                }),
              },
              colorPrimary: { color: e.palette.primary.main },
              colorSecondary: { color: e.palette.secondary.main },
              colorAction: { color: e.palette.action.active },
              colorError: { color: e.palette.error.main },
              colorDisabled: { color: e.palette.action.disabled },
              fontSizeInherit: { fontSize: "inherit" },
              fontSizeSmall: { fontSize: e.typography.pxToRem(20) },
              fontSizeLarge: { fontSize: e.typography.pxToRem(35) },
            };
          },
          { name: "MuiSvgIcon" }
        )(c));
    },
    function (e, t) {
      e.exports = function (e) {
        return e && e.__esModule ? e : { default: e };
      };
    },
    function (e, t, n) {
      "use strict";
      n.r(t);
      var r = n(76);
      n.d(t, "default", function () {
        return r.a;
      });
    },
    function (e, t, n) {
      "use strict";
      (function (t) {
        var n = "__global_unique_id__";
        e.exports = function () {
          return (t[n] = (t[n] || 0) + 1);
        };
      }.call(this, n(43)));
    },
    function (e, t, n) {
      var r = n(108),
        i = n(73),
        a = n(74),
        o = n(110),
        s = n(112),
        u = n(114),
        l = n(115);
      "undefined" != typeof self && self,
        (e.exports = (function () {
          "use strict";
          var e = {
              d: function (t, n) {
                for (var r in n)
                  e.o(n, r) &&
                    !e.o(t, r) &&
                    Object.defineProperty(t, r, { enumerable: !0, get: n[r] });
              },
              o: function (e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
              },
              r: function (e) {
                "undefined" != typeof Symbol &&
                  Symbol.toStringTag &&
                  Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module",
                  }),
                  Object.defineProperty(e, "__esModule", { value: !0 });
              },
            },
            t = {};
          e.r(t),
            e.d(t, {
              default: function () {
                return v;
              },
            }),
            (Number.prototype.clamp = function (e, t) {
              return Math.min(Math.max(this, e), t);
            });
          var n = "object" == typeof window,
            c = (n && window.THREE) || {};
          n && !window.VANTA && (window.VANTA = {});
          var h = (n && window.VANTA) || {};
          (h.register = function (e, t) {
            return (h[e] = function (e) {
              return new t(e);
            });
          }),
            (h.version = "0.5.24");
          var f = function () {
            return (
              Array.prototype.unshift.call(arguments, "[VANTA]"),
              console.error.apply(this, arguments)
            );
          };
          h.VantaBase = (function () {
            function e() {
              var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              if ((u(this, e), !n)) return !1;
              (h.current = this),
                (this.windowMouseMoveWrapper =
                  this.windowMouseMoveWrapper.bind(this)),
                (this.windowTouchWrapper = this.windowTouchWrapper.bind(this)),
                (this.windowGyroWrapper = this.windowGyroWrapper.bind(this)),
                (this.resize = this.resize.bind(this)),
                (this.animationLoop = this.animationLoop.bind(this)),
                (this.restart = this.restart.bind(this));
              var r,
                i,
                a =
                  "function" == typeof this.getDefaultOptions
                    ? this.getDefaultOptions()
                    : this.defaultOptions;
              if (
                ((this.options = Object.assign(
                  {
                    mouseControls: !0,
                    touchControls: !0,
                    gyroControls: !1,
                    minHeight: 200,
                    minWidth: 200,
                    scale: 1,
                    scaleMobile: 1,
                  },
                  a
                )),
                (t instanceof HTMLElement || "string" == typeof t) &&
                  (t = { el: t }),
                Object.assign(this.options, t),
                this.options.THREE && (c = this.options.THREE),
                (this.el = this.options.el),
                null == this.el)
              )
                f('Instance needs "el" param!');
              else if (!(this.options.el instanceof HTMLElement)) {
                var o = this.el;
                if (
                  ((this.el = ((r = o), document.querySelector(r))), !this.el)
                )
                  return void f("Cannot find element", o);
              }
              this.prepareEl(), this.initThree(), this.setSize();
              try {
                this.init();
              } catch (t) {
                return (
                  f("Init error", t),
                  this.renderer &&
                    this.renderer.domElement &&
                    this.el.removeChild(this.renderer.domElement),
                  void (
                    this.options.backgroundColor &&
                    (console.log("[VANTA] Falling back to backgroundColor"),
                    (this.el.style.background =
                      ((i = this.options.backgroundColor),
                      "number" == typeof i
                        ? "#" + ("00000" + i.toString(16)).slice(-6)
                        : i)))
                  )
                );
              }
              this.initMouse(), this.resize(), this.animationLoop();
              var s = window.addEventListener;
              s("resize", this.resize),
                window.requestAnimationFrame(this.resize),
                this.options.mouseControls &&
                  (s("scroll", this.windowMouseMoveWrapper),
                  s("mousemove", this.windowMouseMoveWrapper)),
                this.options.touchControls &&
                  (s("touchstart", this.windowTouchWrapper),
                  s("touchmove", this.windowTouchWrapper)),
                this.options.gyroControls &&
                  s("deviceorientation", this.windowGyroWrapper);
            }
            return (
              l(e, [
                {
                  key: "setOptions",
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    Object.assign(this.options, e), this.triggerMouseMove();
                  },
                },
                {
                  key: "prepareEl",
                  value: function () {
                    var e, t;
                    if ("undefined" != typeof Node && Node.TEXT_NODE)
                      for (e = 0; e < this.el.childNodes.length; e++) {
                        var n = this.el.childNodes[e];
                        if (n.nodeType === Node.TEXT_NODE) {
                          var r = document.createElement("span");
                          (r.textContent = n.textContent),
                            n.parentElement.insertBefore(r, n),
                            n.remove();
                        }
                      }
                    for (e = 0; e < this.el.children.length; e++)
                      (t = this.el.children[e]),
                        "static" === getComputedStyle(t).position &&
                          (t.style.position = "relative"),
                        "auto" === getComputedStyle(t).zIndex &&
                          (t.style.zIndex = 1);
                    "static" === getComputedStyle(this.el).position &&
                      (this.el.style.position = "relative");
                  },
                },
                {
                  key: "applyCanvasStyles",
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    Object.assign(e.style, {
                      position: "absolute",
                      zIndex: 0,
                      top: 0,
                      left: 0,
                      background: "",
                    }),
                      Object.assign(e.style, t),
                      e.classList.add("vanta-canvas");
                  },
                },
                {
                  key: "initThree",
                  value: function () {
                    c.WebGLRenderer
                      ? ((this.renderer = new c.WebGLRenderer({
                          alpha: !0,
                          antialias: !0,
                        })),
                        this.el.appendChild(this.renderer.domElement),
                        this.applyCanvasStyles(this.renderer.domElement),
                        isNaN(this.options.backgroundAlpha) &&
                          (this.options.backgroundAlpha = 1),
                        (this.scene = new c.Scene()))
                      : console.warn("[VANTA] No THREE defined on window");
                  },
                },
                {
                  key: "getCanvasElement",
                  value: function () {
                    return this.renderer
                      ? this.renderer.domElement
                      : this.p5renderer
                      ? this.p5renderer.canvas
                      : void 0;
                  },
                },
                {
                  key: "getCanvasRect",
                  value: function () {
                    var e = this.getCanvasElement();
                    return !!e && e.getBoundingClientRect();
                  },
                },
                {
                  key: "windowMouseMoveWrapper",
                  value: function (e) {
                    var t = this.getCanvasRect();
                    if (!t) return !1;
                    var n = e.clientX - t.left,
                      r = e.clientY - t.top;
                    n >= 0 &&
                      r >= 0 &&
                      n <= t.width &&
                      r <= t.height &&
                      ((this.mouseX = n),
                      (this.mouseY = r),
                      this.options.mouseEase || this.triggerMouseMove(n, r));
                  },
                },
                {
                  key: "windowTouchWrapper",
                  value: function (e) {
                    var t = this.getCanvasRect();
                    if (!t) return !1;
                    if (1 === e.touches.length) {
                      var n = e.touches[0].clientX - t.left,
                        r = e.touches[0].clientY - t.top;
                      n >= 0 &&
                        r >= 0 &&
                        n <= t.width &&
                        r <= t.height &&
                        ((this.mouseX = n),
                        (this.mouseY = r),
                        this.options.mouseEase || this.triggerMouseMove(n, r));
                    }
                  },
                },
                {
                  key: "windowGyroWrapper",
                  value: function (e) {
                    var t = this.getCanvasRect();
                    if (!t) return !1;
                    var n = Math.round(2 * e.alpha) - t.left,
                      r = Math.round(2 * e.beta) - t.top;
                    n >= 0 &&
                      r >= 0 &&
                      n <= t.width &&
                      r <= t.height &&
                      ((this.mouseX = n),
                      (this.mouseY = r),
                      this.options.mouseEase || this.triggerMouseMove(n, r));
                  },
                },
                {
                  key: "triggerMouseMove",
                  value: function (e, t) {
                    void 0 === e &&
                      void 0 === t &&
                      (this.options.mouseEase
                        ? ((e = this.mouseEaseX), (t = this.mouseEaseY))
                        : ((e = this.mouseX), (t = this.mouseY))),
                      this.uniforms &&
                        ((this.uniforms.iMouse.value.x = e / this.scale),
                        (this.uniforms.iMouse.value.y = t / this.scale));
                    var n = e / this.width,
                      r = t / this.height;
                    "function" == typeof this.onMouseMove &&
                      this.onMouseMove(n, r);
                  },
                },
                {
                  key: "setSize",
                  value: function () {
                    this.scale || (this.scale = 1),
                      "undefined" != typeof navigator &&
                      (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                        navigator.userAgent
                      ) ||
                        window.innerWidth < 600) &&
                      this.options.scaleMobile
                        ? (this.scale = this.options.scaleMobile)
                        : this.options.scale &&
                          (this.scale = this.options.scale),
                      (this.width = Math.max(
                        this.el.offsetWidth,
                        this.options.minWidth
                      )),
                      (this.height = Math.max(
                        this.el.offsetHeight,
                        this.options.minHeight
                      ));
                  },
                },
                {
                  key: "initMouse",
                  value: function () {
                    ((!this.mouseX && !this.mouseY) ||
                      (this.mouseX === this.options.minWidth / 2 &&
                        this.mouseY === this.options.minHeight / 2)) &&
                      ((this.mouseX = this.width / 2),
                      (this.mouseY = this.height / 2),
                      this.triggerMouseMove(this.mouseX, this.mouseY));
                  },
                },
                {
                  key: "resize",
                  value: function () {
                    this.setSize(),
                      this.camera &&
                        ((this.camera.aspect = this.width / this.height),
                        "function" ==
                          typeof this.camera.updateProjectionMatrix &&
                          this.camera.updateProjectionMatrix()),
                      this.renderer &&
                        (this.renderer.setSize(this.width, this.height),
                        this.renderer.setPixelRatio(
                          window.devicePixelRatio / this.scale
                        )),
                      "function" == typeof this.onResize && this.onResize();
                  },
                },
                {
                  key: "isOnScreen",
                  value: function () {
                    var e = this.el.offsetHeight,
                      t = this.el.getBoundingClientRect(),
                      n =
                        window.pageYOffset ||
                        (
                          document.documentElement ||
                          document.body.parentNode ||
                          document.body
                        ).scrollTop,
                      r = t.top + n;
                    return r - window.innerHeight <= n && n <= r + e;
                  },
                },
                {
                  key: "animationLoop",
                  value: function () {
                    this.t || (this.t = 0), this.t2 || (this.t2 = 0);
                    var e = performance.now();
                    if (this.prevNow) {
                      var t = (e - this.prevNow) / (1e3 / 60);
                      (t = Math.max(0.2, Math.min(t, 5))),
                        (this.t += t),
                        (this.t2 += (this.options.speed || 1) * t),
                        this.uniforms &&
                          (this.uniforms.iTime.value = 0.016667 * this.t2);
                    }
                    return (
                      (this.prevNow = e),
                      this.options.mouseEase &&
                        ((this.mouseEaseX =
                          this.mouseEaseX || this.mouseX || 0),
                        (this.mouseEaseY = this.mouseEaseY || this.mouseY || 0),
                        Math.abs(this.mouseEaseX - this.mouseX) +
                          Math.abs(this.mouseEaseY - this.mouseY) >
                          0.1 &&
                          ((this.mouseEaseX +=
                            0.05 * (this.mouseX - this.mouseEaseX)),
                          (this.mouseEaseY +=
                            0.05 * (this.mouseY - this.mouseEaseY)),
                          this.triggerMouseMove(
                            this.mouseEaseX,
                            this.mouseEaseY
                          ))),
                      (this.isOnScreen() || this.options.forceAnimate) &&
                        ("function" == typeof this.onUpdate && this.onUpdate(),
                        this.scene &&
                          this.camera &&
                          (this.renderer.render(this.scene, this.camera),
                          this.renderer.setClearColor(
                            this.options.backgroundColor,
                            this.options.backgroundAlpha
                          )),
                        this.fps && this.fps.update && this.fps.update(),
                        "function" == typeof this.afterRender &&
                          this.afterRender()),
                      (this.req = window.requestAnimationFrame(
                        this.animationLoop
                      ))
                    );
                  },
                },
                {
                  key: "restart",
                  value: function () {
                    if (this.scene)
                      for (; this.scene.children.length; )
                        this.scene.remove(this.scene.children[0]);
                    "function" == typeof this.onRestart && this.onRestart(),
                      this.init();
                  },
                },
                {
                  key: "init",
                  value: function () {
                    "function" == typeof this.onInit && this.onInit();
                  },
                },
                {
                  key: "destroy",
                  value: function () {
                    "function" == typeof this.onDestroy && this.onDestroy();
                    var e = window.removeEventListener;
                    e("touchstart", this.windowTouchWrapper),
                      e("touchmove", this.windowTouchWrapper),
                      e("scroll", this.windowMouseMoveWrapper),
                      e("mousemove", this.windowMouseMoveWrapper),
                      e("deviceorientation", this.windowGyroWrapper),
                      e("resize", this.resize),
                      window.cancelAnimationFrame(this.req);
                    var t = this.scene;
                    t &&
                      t.children &&
                      (function e(t) {
                        for (; t.children && t.children.length > 0; )
                          e(t.children[0]), t.remove(t.children[0]);
                        t.geometry && t.geometry.dispose(),
                          t.material &&
                            (Object.keys(t.material).forEach(function (e) {
                              t.material[e] &&
                                null !== t.material[e] &&
                                "function" == typeof t.material[e].dispose &&
                                t.material[e].dispose();
                            }),
                            t.material.dispose());
                      })(t),
                      this.renderer &&
                        (this.renderer.domElement &&
                          this.el.removeChild(this.renderer.domElement),
                        (this.renderer = null),
                        (this.scene = null)),
                      h.current === this && (h.current = null);
                  },
                },
              ]),
              e
            );
          })();
          var d = h.VantaBase,
            p = "object" == typeof window && window.THREE,
            m = (function (e) {
              function t() {
                return u(this, t), r(this, a(t).apply(this, arguments));
              }
              return s(t, e), t;
            })(
              (function (e) {
                function t(e) {
                  var n;
                  return (
                    u(this, t),
                    ((p = e.THREE || p).Color.prototype.toVector = function () {
                      return new p.Vector3(this.r, this.g, this.b);
                    }),
                    ((n = r(this, a(t).call(this, e))).updateUniforms =
                      n.updateUniforms.bind(i(n))),
                    n
                  );
                }
                return (
                  s(t, e),
                  l(t, [
                    {
                      key: "init",
                      value: function () {
                        (this.mode = "shader"),
                          (this.uniforms = {
                            iTime: { type: "f", value: 1 },
                            iResolution: {
                              type: "v2",
                              value: new p.Vector2(1, 1),
                            },
                            iDpr: {
                              type: "f",
                              value: window.devicePixelRatio || 1,
                            },
                            iMouse: {
                              type: "v2",
                              value: new p.Vector2(
                                this.mouseX || 0,
                                this.mouseY || 0
                              ),
                            },
                          }),
                          o(a(t.prototype), "init", this).call(this),
                          this.fragmentShader && this.initBasicShader();
                      },
                    },
                    {
                      key: "setOptions",
                      value: function (e) {
                        o(a(t.prototype), "setOptions", this).call(this, e),
                          this.updateUniforms();
                      },
                    },
                    {
                      key: "initBasicShader",
                      value: function () {
                        var e =
                            arguments.length > 0 && void 0 !== arguments[0]
                              ? arguments[0]
                              : this.fragmentShader,
                          t =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : this.vertexShader;
                        t ||
                          (t =
                            "uniform float uTime;\nuniform vec2 uResolution;\nvoid main() {\n  gl_Position = vec4( position, 1.0 );\n}"),
                          this.updateUniforms(),
                          "function" == typeof this.valuesChanger &&
                            this.valuesChanger();
                        var n = new p.ShaderMaterial({
                            uniforms: this.uniforms,
                            vertexShader: t,
                            fragmentShader: e,
                          }),
                          r = this.options.texturePath;
                        r &&
                          (this.uniforms.iTex = {
                            type: "t",
                            value: new p.TextureLoader().load(r),
                          });
                        var i = new p.Mesh(new p.PlaneGeometry(2, 2), n);
                        this.scene.add(i),
                          (this.camera = new p.Camera()),
                          (this.camera.position.z = 1);
                      },
                    },
                    {
                      key: "updateUniforms",
                      value: function () {
                        var e,
                          t,
                          n = {};
                        for (e in this.options)
                          (t = this.options[e]),
                            -1 !== e.toLowerCase().indexOf("color")
                              ? (n[e] = {
                                  type: "v3",
                                  value: new p.Color(t).toVector(),
                                })
                              : "number" == typeof t &&
                                (n[e] = { type: "f", value: t });
                        return Object.assign(this.uniforms, n);
                      },
                    },
                    {
                      key: "resize",
                      value: function () {
                        o(a(t.prototype), "resize", this).call(this),
                          (this.uniforms.iResolution.value.x =
                            this.width / this.scale),
                          (this.uniforms.iResolution.value.y =
                            this.height / this.scale);
                      },
                    },
                  ]),
                  t
                );
              })(d)
            ),
            v = h.register("CLOUDS", m);
          return (
            (m.prototype.defaultOptions = {
              backgroundColor: 16777215,
              skyColor: 6863063,
              cloudColor: 11387358,
              cloudShadowColor: 1586512,
              sunColor: 16750873,
              sunGlareColor: 16737843,
              sunlightColor: 16750899,
              scale: 3,
              scaleMobile: 12,
              speed: 1,
              mouseEase: !0,
            }),
            (m.prototype.fragmentShader =
              "uniform vec2 iResolution;\nuniform vec2 iMouse;\nuniform float iTime;\nuniform sampler2D iTex;\n\nuniform float speed;\nuniform vec3 skyColor;\nuniform vec3 cloudColor;\nuniform vec3 cloudShadowColor;\nuniform vec3 sunColor;\nuniform vec3 sunlightColor;\nuniform vec3 sunGlareColor;\nuniform vec3 backgroundColor;\n\n// uniform vec4      iMouse;                // mouse pixel coords. xy: current (if MLB down), zw: click\n// uniform samplerXX iChannel0..3;          // input channel. XX = 2D/Cube\n\n\n// Volumetric clouds. It performs level of detail (LOD) for faster rendering\nfloat hash(float p) {\n  p = fract(p * 0.011);\n  p *= (p + 7.5);\n  p *= (p + p);\n  return fract(p);\n}\n\nfloat noise( vec3 x ){\n    // The noise function returns a value in the range -1.0f -> 1.0f\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f       = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n    return mix(mix(mix( hash(n+0.0  ), hash(n+1.0  ),f.x),\n                   mix( hash(n+57.0 ), hash(n+58.0 ),f.x),f.y),\n               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                   mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n}\n\nconst float constantTime = 1000.;\nfloat map5( in vec3 p ){\n    vec3 speed1 = vec3(0.5,0.01,1.0) * 0.5 * speed;\n    vec3 q = p - speed1*(iTime + constantTime);\n    float f;\n    f  = 0.50000*noise( q ); q = q*2.02;\n    f += 0.25000*noise( q ); q = q*2.03;\n    f += 0.12500*noise( q ); q = q*2.01;\n    f += 0.06250*noise( q ); q = q*2.02;\n    f += 0.03125*noise( q );\n    return clamp( 1.5 - p.y - 2.0 + 1.75*f, 0.0, 1.0 );\n}\nfloat map4( in vec3 p ){\n    vec3 speed1 = vec3(0.5,0.01,1.0) * 0.5 * speed;\n    vec3 q = p - speed1*(iTime + constantTime);\n    float f;\n    f  = 0.50000*noise( q ); q = q*2.02;\n    f += 0.25000*noise( q ); q = q*2.03;\n    f += 0.12500*noise( q ); q = q*2.01;\n    f += 0.06250*noise( q );\n    return clamp( 1.5 - p.y - 2.0 + 1.75*f, 0.0, 1.0 );\n}\nfloat map3( in vec3 p ){\n    vec3 speed1 = vec3(0.5,0.01,1.0) * 0.5 * speed;\n    vec3 q = p - speed1*(iTime + constantTime);\n    float f;\n    f  = 0.50000*noise( q ); q = q*2.02;\n    f += 0.25000*noise( q ); q = q*2.03;\n    f += 0.12500*noise( q );\n    return clamp( 1.5 - p.y - 2.0 + 1.75*f, 0.0, 1.0 );\n}\nfloat map2( in vec3 p ){\n    vec3 speed1 = vec3(0.5,0.01,1.0) * 0.5 * speed;\n    vec3 q = p - speed1*(iTime + constantTime);\n    float f;\n    f  = 0.50000*noise( q ); q = q*2.02;\n    f += 0.25000*noise( q );\n    return clamp( 1.5 - p.y - 2.0 + 1.75*f, 0.0, 1.0 );\n}\n\nvec3 sundir = normalize( vec3(-1.0,0.0,-1.0) );\n\nvec4 integrate( in vec4 sum, in float dif, in float den, in vec3 bgcol, in float t ){\n    // lighting\n    vec3 lin = cloudColor*1.4 + sunlightColor*dif;\n    vec4 col = vec4( mix( vec3(1.0,0.95,0.8), cloudShadowColor, den ), den );\n    col.xyz *= lin;\n    col.xyz = mix( col.xyz, bgcol, 1.0-exp(-0.003*t*t) );\n    // front to back blending\n    col.a *= 0.4;\n    col.rgb *= col.a;\n    return sum + col*(1.0-sum.a);\n}\n\n#define MARCH(STEPS,MAPLOD) for(int i=0; i<STEPS; i++) { vec3  pos = ro + t*rd; if( pos.y<-3.0 || pos.y>2.0 || sum.a > 0.99 ) break; float den = MAPLOD( pos ); if( den>0.01 ) { float dif = clamp((den - MAPLOD(pos+0.3*sundir))/0.6, 0.0, 1.0 ); sum = integrate( sum, dif, den, bgcol, t ); } t += max(0.075,0.02*t); }\n\nvec4 raymarch( in vec3 ro, in vec3 rd, in vec3 bgcol, in ivec2 px ){\n    vec4 sum = vec4(0.0);\n\n    float t = 0.0;\n\n    MARCH(20,map5);\n    MARCH(25,map4);\n    MARCH(30,map3);\n    MARCH(40,map2);\n\n    return clamp( sum, 0.0, 1.0 );\n}\n\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr ){\n    vec3 cw = normalize(ta-ro);\n    vec3 cp = vec3(sin(cr), cos(cr),0.0);\n    vec3 cu = normalize( cross(cw,cp) );\n    vec3 cv = normalize( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\nvec4 render( in vec3 ro, in vec3 rd, in ivec2 px ){\n    // background sky\n    float sun = clamp( dot(sundir,rd), 0.0, 1.0 );\n    vec3 col = skyColor - rd.y*0.2*vec3(1.0,0.5,1.0) + 0.15*0.5;\n    col += 0.2*sunColor*pow( sun, 8.0 );\n\n    // clouds\n    vec4 res = raymarch( ro, rd, col, px );\n    col = col*(1.0-res.w) + res.xyz;\n\n    // sun glare\n    col += 0.2*sunGlareColor*pow( sun, 3.0 );\n\n    return vec4( col, 1.0 );\n}\n\nvoid main(){\n    vec2 p = (-iResolution.xy + 2.0*gl_FragCoord.xy)/ iResolution.y;\n\n    vec2 m = iMouse.xy/iResolution.xy;\n    m.y = (1.0 - m.y) * 0.33 + 0.28; // camera height\n\n    m.x *= 0.25;\n    m.x += sin(iTime * 0.1 + 3.1415) * 0.25 + 0.25;\n\n    // camera\n    vec3 ro = 4.0*normalize(vec3(sin(3.0*m.x), 0.4*m.y, cos(3.0*m.x))); // origin\n    vec3 ta = vec3(0.0, -1.0, 0.0);\n    mat3 ca = setCamera( ro, ta, 0.0 );\n    // ray\n    vec3 rd = ca * normalize( vec3(p.xy,1.5));\n\n    gl_FragColor = render( ro, rd, ivec2(gl_FragCoord-0.5) );\n}\n"),
            t
          );
        })());
    },
    function (e, t, n) {
      "use strict";
      t.a = function (e) {
        function t(e, t, r) {
          var i = t.trim().split(p);
          t = i;
          var a = i.length,
            o = e.length;
          switch (o) {
            case 0:
            case 1:
              var s = 0;
              for (e = 0 === o ? "" : e[0] + " "; s < a; ++s)
                t[s] = n(e, t[s], r).trim();
              break;
            default:
              var u = (s = 0);
              for (t = []; s < a; ++s)
                for (var l = 0; l < o; ++l)
                  t[u++] = n(e[l] + " ", i[s], r).trim();
          }
          return t;
        }
        function n(e, t, n) {
          var r = t.charCodeAt(0);
          switch ((33 > r && (r = (t = t.trim()).charCodeAt(0)), r)) {
            case 38:
              return t.replace(m, "$1" + e.trim());
            case 58:
              return e.trim() + t.replace(m, "$1" + e.trim());
            default:
              if (0 < 1 * n && 0 < t.indexOf("\f"))
                return t.replace(
                  m,
                  (58 === e.charCodeAt(0) ? "" : "$1") + e.trim()
                );
          }
          return e + t;
        }
        function r(e, t, n, a) {
          var o = e + ";",
            s = 2 * t + 3 * n + 4 * a;
          if (944 === s) {
            e = o.indexOf(":", 9) + 1;
            var u = o.substring(e, o.length - 1).trim();
            return (
              (u = o.substring(0, e).trim() + u + ";"),
              1 === A || (2 === A && i(u, 1)) ? "-webkit-" + u + u : u
            );
          }
          if (0 === A || (2 === A && !i(o, 1))) return o;
          switch (s) {
            case 1015:
              return 97 === o.charCodeAt(10) ? "-webkit-" + o + o : o;
            case 951:
              return 116 === o.charCodeAt(3) ? "-webkit-" + o + o : o;
            case 963:
              return 110 === o.charCodeAt(5) ? "-webkit-" + o + o : o;
            case 1009:
              if (100 !== o.charCodeAt(4)) break;
            case 969:
            case 942:
              return "-webkit-" + o + o;
            case 978:
              return "-webkit-" + o + "-moz-" + o + o;
            case 1019:
            case 983:
              return "-webkit-" + o + "-moz-" + o + "-ms-" + o + o;
            case 883:
              if (45 === o.charCodeAt(8)) return "-webkit-" + o + o;
              if (0 < o.indexOf("image-set(", 11))
                return o.replace(T, "$1-webkit-$2") + o;
              break;
            case 932:
              if (45 === o.charCodeAt(4))
                switch (o.charCodeAt(5)) {
                  case 103:
                    return (
                      "-webkit-box-" +
                      o.replace("-grow", "") +
                      "-webkit-" +
                      o +
                      "-ms-" +
                      o.replace("grow", "positive") +
                      o
                    );
                  case 115:
                    return (
                      "-webkit-" +
                      o +
                      "-ms-" +
                      o.replace("shrink", "negative") +
                      o
                    );
                  case 98:
                    return (
                      "-webkit-" +
                      o +
                      "-ms-" +
                      o.replace("basis", "preferred-size") +
                      o
                    );
                }
              return "-webkit-" + o + "-ms-" + o + o;
            case 964:
              return "-webkit-" + o + "-ms-flex-" + o + o;
            case 1023:
              if (99 !== o.charCodeAt(8)) break;
              return (
                "-webkit-box-pack" +
                (u = o
                  .substring(o.indexOf(":", 15))
                  .replace("flex-", "")
                  .replace("space-between", "justify")) +
                "-webkit-" +
                o +
                "-ms-flex-pack" +
                u +
                o
              );
            case 1005:
              return f.test(o)
                ? o.replace(h, ":-webkit-") + o.replace(h, ":-moz-") + o
                : o;
            case 1e3:
              switch (
                ((t = (u = o.substring(13).trim()).indexOf("-") + 1),
                u.charCodeAt(0) + u.charCodeAt(t))
              ) {
                case 226:
                  u = o.replace(b, "tb");
                  break;
                case 232:
                  u = o.replace(b, "tb-rl");
                  break;
                case 220:
                  u = o.replace(b, "lr");
                  break;
                default:
                  return o;
              }
              return "-webkit-" + o + "-ms-" + u + o;
            case 1017:
              if (-1 === o.indexOf("sticky", 9)) break;
            case 975:
              switch (
                ((t = (o = e).length - 10),
                (s =
                  (u = (33 === o.charCodeAt(t) ? o.substring(0, t) : o)
                    .substring(e.indexOf(":", 7) + 1)
                    .trim()).charCodeAt(0) +
                  (0 | u.charCodeAt(7))))
              ) {
                case 203:
                  if (111 > u.charCodeAt(8)) break;
                case 115:
                  o = o.replace(u, "-webkit-" + u) + ";" + o;
                  break;
                case 207:
                case 102:
                  o =
                    o.replace(
                      u,
                      "-webkit-" + (102 < s ? "inline-" : "") + "box"
                    ) +
                    ";" +
                    o.replace(u, "-webkit-" + u) +
                    ";" +
                    o.replace(u, "-ms-" + u + "box") +
                    ";" +
                    o;
              }
              return o + ";";
            case 938:
              if (45 === o.charCodeAt(5))
                switch (o.charCodeAt(6)) {
                  case 105:
                    return (
                      (u = o.replace("-items", "")),
                      "-webkit-" + o + "-webkit-box-" + u + "-ms-flex-" + u + o
                    );
                  case 115:
                    return (
                      "-webkit-" + o + "-ms-flex-item-" + o.replace(w, "") + o
                    );
                  default:
                    return (
                      "-webkit-" +
                      o +
                      "-ms-flex-line-pack" +
                      o.replace("align-content", "").replace(w, "") +
                      o
                    );
                }
              break;
            case 973:
            case 989:
              if (45 !== o.charCodeAt(3) || 122 === o.charCodeAt(4)) break;
            case 931:
            case 953:
              if (!0 === M.test(e))
                return 115 ===
                  (u = e.substring(e.indexOf(":") + 1)).charCodeAt(0)
                  ? r(e.replace("stretch", "fill-available"), t, n, a).replace(
                      ":fill-available",
                      ":stretch"
                    )
                  : o.replace(u, "-webkit-" + u) +
                      o.replace(u, "-moz-" + u.replace("fill-", "")) +
                      o;
              break;
            case 962:
              if (
                ((o =
                  "-webkit-" +
                  o +
                  (102 === o.charCodeAt(5) ? "-ms-" + o : "") +
                  o),
                211 === n + a &&
                  105 === o.charCodeAt(13) &&
                  0 < o.indexOf("transform", 10))
              )
                return (
                  o
                    .substring(0, o.indexOf(";", 27) + 1)
                    .replace(d, "$1-webkit-$2") + o
                );
          }
          return o;
        }
        function i(e, t) {
          var n = e.indexOf(1 === t ? ":" : "{"),
            r = e.substring(0, 3 !== t ? n : 10);
          return (
            (n = e.substring(n + 1, e.length - 1)),
            L(2 !== t ? r : r.replace(S, "$1"), n, t)
          );
        }
        function a(e, t) {
          var n = r(t, t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2));
          return n !== t + ";"
            ? n.replace(_, " or ($1)").substring(4)
            : "(" + t + ")";
        }
        function o(e, t, n, r, i, a, o, s, l, c) {
          for (var h, f = 0, d = t; f < R; ++f)
            switch ((h = P[f].call(u, e, d, n, r, i, a, o, s, l, c))) {
              case void 0:
              case !1:
              case !0:
              case null:
                break;
              default:
                d = h;
            }
          if (d !== t) return d;
        }
        function s(e) {
          return (
            void 0 !== (e = e.prefix) &&
              ((L = null),
              e
                ? "function" !== typeof e
                  ? (A = 1)
                  : ((A = 2), (L = e))
                : (A = 0)),
            s
          );
        }
        function u(e, n) {
          var s = e;
          if ((33 > s.charCodeAt(0) && (s = s.trim()), (s = [s]), 0 < R)) {
            var u = o(-1, n, s, s, O, E, 0, 0, 0, 0);
            void 0 !== u && "string" === typeof u && (n = u);
          }
          var h = (function e(n, s, u, h, f) {
            for (
              var d,
                p,
                m,
                b,
                _,
                w = 0,
                S = 0,
                M = 0,
                T = 0,
                P = 0,
                L = 0,
                I = (m = d = 0),
                N = 0,
                D = 0,
                z = 0,
                U = 0,
                B = u.length,
                F = B - 1,
                G = "",
                H = "",
                V = "",
                W = "";
              N < B;

            ) {
              if (
                ((p = u.charCodeAt(N)),
                N === F &&
                  0 !== S + T + M + w &&
                  (0 !== S && (p = 47 === S ? 10 : 47),
                  (T = M = w = 0),
                  B++,
                  F++),
                0 === S + T + M + w)
              ) {
                if (
                  N === F &&
                  (0 < D && (G = G.replace(c, "")), 0 < G.trim().length)
                ) {
                  switch (p) {
                    case 32:
                    case 9:
                    case 59:
                    case 13:
                    case 10:
                      break;
                    default:
                      G += u.charAt(N);
                  }
                  p = 59;
                }
                switch (p) {
                  case 123:
                    for (
                      d = (G = G.trim()).charCodeAt(0), m = 1, U = ++N;
                      N < B;

                    ) {
                      switch ((p = u.charCodeAt(N))) {
                        case 123:
                          m++;
                          break;
                        case 125:
                          m--;
                          break;
                        case 47:
                          switch ((p = u.charCodeAt(N + 1))) {
                            case 42:
                            case 47:
                              e: {
                                for (I = N + 1; I < F; ++I)
                                  switch (u.charCodeAt(I)) {
                                    case 47:
                                      if (
                                        42 === p &&
                                        42 === u.charCodeAt(I - 1) &&
                                        N + 2 !== I
                                      ) {
                                        N = I + 1;
                                        break e;
                                      }
                                      break;
                                    case 10:
                                      if (47 === p) {
                                        N = I + 1;
                                        break e;
                                      }
                                  }
                                N = I;
                              }
                          }
                          break;
                        case 91:
                          p++;
                        case 40:
                          p++;
                        case 34:
                        case 39:
                          for (; N++ < F && u.charCodeAt(N) !== p; );
                      }
                      if (0 === m) break;
                      N++;
                    }
                    switch (
                      ((m = u.substring(U, N)),
                      0 === d &&
                        (d = (G = G.replace(l, "").trim()).charCodeAt(0)),
                      d)
                    ) {
                      case 64:
                        switch (
                          (0 < D && (G = G.replace(c, "")),
                          (p = G.charCodeAt(1)))
                        ) {
                          case 100:
                          case 109:
                          case 115:
                          case 45:
                            D = s;
                            break;
                          default:
                            D = C;
                        }
                        if (
                          ((U = (m = e(s, D, m, p, f + 1)).length),
                          0 < R &&
                            ((_ = o(
                              3,
                              m,
                              (D = t(C, G, z)),
                              s,
                              O,
                              E,
                              U,
                              p,
                              f,
                              h
                            )),
                            (G = D.join("")),
                            void 0 !== _ &&
                              0 === (U = (m = _.trim()).length) &&
                              ((p = 0), (m = ""))),
                          0 < U)
                        )
                          switch (p) {
                            case 115:
                              G = G.replace(x, a);
                            case 100:
                            case 109:
                            case 45:
                              m = G + "{" + m + "}";
                              break;
                            case 107:
                              (m = (G = G.replace(v, "$1 $2")) + "{" + m + "}"),
                                (m =
                                  1 === A || (2 === A && i("@" + m, 3))
                                    ? "@-webkit-" + m + "@" + m
                                    : "@" + m);
                              break;
                            default:
                              (m = G + m), 112 === h && ((H += m), (m = ""));
                          }
                        else m = "";
                        break;
                      default:
                        m = e(s, t(s, G, z), m, h, f + 1);
                    }
                    (V += m),
                      (m = z = D = I = d = 0),
                      (G = ""),
                      (p = u.charCodeAt(++N));
                    break;
                  case 125:
                  case 59:
                    if (
                      1 <
                      (U = (G = (0 < D ? G.replace(c, "") : G).trim()).length)
                    )
                      switch (
                        (0 === I &&
                          ((d = G.charCodeAt(0)),
                          45 === d || (96 < d && 123 > d)) &&
                          (U = (G = G.replace(" ", ":")).length),
                        0 < R &&
                          void 0 !==
                            (_ = o(1, G, s, n, O, E, H.length, h, f, h)) &&
                          0 === (U = (G = _.trim()).length) &&
                          (G = "\0\0"),
                        (d = G.charCodeAt(0)),
                        (p = G.charCodeAt(1)),
                        d)
                      ) {
                        case 0:
                          break;
                        case 64:
                          if (105 === p || 99 === p) {
                            W += G + u.charAt(N);
                            break;
                          }
                        default:
                          58 !== G.charCodeAt(U - 1) &&
                            (H += r(G, d, p, G.charCodeAt(2)));
                      }
                    (z = D = I = d = 0), (G = ""), (p = u.charCodeAt(++N));
                }
              }
              switch (p) {
                case 13:
                case 10:
                  47 === S
                    ? (S = 0)
                    : 0 === 1 + d &&
                      107 !== h &&
                      0 < G.length &&
                      ((D = 1), (G += "\0")),
                    0 < R * j && o(0, G, s, n, O, E, H.length, h, f, h),
                    (E = 1),
                    O++;
                  break;
                case 59:
                case 125:
                  if (0 === S + T + M + w) {
                    E++;
                    break;
                  }
                default:
                  switch ((E++, (b = u.charAt(N)), p)) {
                    case 9:
                    case 32:
                      if (0 === T + w + S)
                        switch (P) {
                          case 44:
                          case 58:
                          case 9:
                          case 32:
                            b = "";
                            break;
                          default:
                            32 !== p && (b = " ");
                        }
                      break;
                    case 0:
                      b = "\\0";
                      break;
                    case 12:
                      b = "\\f";
                      break;
                    case 11:
                      b = "\\v";
                      break;
                    case 38:
                      0 === T + S + w && ((D = z = 1), (b = "\f" + b));
                      break;
                    case 108:
                      if (0 === T + S + w + k && 0 < I)
                        switch (N - I) {
                          case 2:
                            112 === P && 58 === u.charCodeAt(N - 3) && (k = P);
                          case 8:
                            111 === L && (k = L);
                        }
                      break;
                    case 58:
                      0 === T + S + w && (I = N);
                      break;
                    case 44:
                      0 === S + M + T + w && ((D = 1), (b += "\r"));
                      break;
                    case 34:
                    case 39:
                      0 === S && (T = T === p ? 0 : 0 === T ? p : T);
                      break;
                    case 91:
                      0 === T + S + M && w++;
                      break;
                    case 93:
                      0 === T + S + M && w--;
                      break;
                    case 41:
                      0 === T + S + w && M--;
                      break;
                    case 40:
                      if (0 === T + S + w) {
                        if (0 === d)
                          switch (2 * P + 3 * L) {
                            case 533:
                              break;
                            default:
                              d = 1;
                          }
                        M++;
                      }
                      break;
                    case 64:
                      0 === S + M + T + w + I + m && (m = 1);
                      break;
                    case 42:
                    case 47:
                      if (!(0 < T + w + M))
                        switch (S) {
                          case 0:
                            switch (2 * p + 3 * u.charCodeAt(N + 1)) {
                              case 235:
                                S = 47;
                                break;
                              case 220:
                                (U = N), (S = 42);
                            }
                            break;
                          case 42:
                            47 === p &&
                              42 === P &&
                              U + 2 !== N &&
                              (33 === u.charCodeAt(U + 2) &&
                                (H += u.substring(U, N + 1)),
                              (b = ""),
                              (S = 0));
                        }
                  }
                  0 === S && (G += b);
              }
              (L = P), (P = p), N++;
            }
            if (0 < (U = H.length)) {
              if (
                ((D = s),
                0 < R &&
                  void 0 !== (_ = o(2, H, D, n, O, E, U, h, f, h)) &&
                  0 === (H = _).length)
              )
                return W + H + V;
              if (((H = D.join(",") + "{" + H + "}"), 0 !== A * k)) {
                switch ((2 !== A || i(H, 2) || (k = 0), k)) {
                  case 111:
                    H = H.replace(y, ":-moz-$1") + H;
                    break;
                  case 112:
                    H =
                      H.replace(g, "::-webkit-input-$1") +
                      H.replace(g, "::-moz-$1") +
                      H.replace(g, ":-ms-input-$1") +
                      H;
                }
                k = 0;
              }
            }
            return W + H + V;
          })(C, s, n, 0, 0);
          return (
            0 < R &&
              void 0 !== (u = o(-2, h, s, s, O, E, h.length, 0, 0, 0)) &&
              (h = u),
            "",
            (k = 0),
            (E = O = 1),
            h
          );
        }
        var l = /^\0+/g,
          c = /[\0\r\f]/g,
          h = /: */g,
          f = /zoo|gra/,
          d = /([,: ])(transform)/g,
          p = /,\r+?/g,
          m = /([\t\r\n ])*\f?&/g,
          v = /@(k\w+)\s*(\S*)\s*/,
          g = /::(place)/g,
          y = /:(read-only)/g,
          b = /[svh]\w+-[tblr]{2}/,
          x = /\(\s*(.*)\s*\)/g,
          _ = /([\s\S]*?);/g,
          w = /-self|flex-/g,
          S = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
          M = /stretch|:\s*\w+\-(?:conte|avail)/,
          T = /([^-])(image-set\()/,
          E = 1,
          O = 1,
          k = 0,
          A = 1,
          C = [],
          P = [],
          R = 0,
          L = null,
          j = 0;
        return (
          (u.use = function e(t) {
            switch (t) {
              case void 0:
              case null:
                R = P.length = 0;
                break;
              default:
                if ("function" === typeof t) P[R++] = t;
                else if ("object" === typeof t)
                  for (var n = 0, r = t.length; n < r; ++n) e(t[n]);
                else j = 0 | !!t;
            }
            return e;
          }),
          (u.set = s),
          void 0 !== e && s(e),
          u
        );
      };
    },
    function (e, t, n) {
      "use strict";
      t.a = {
        animationIterationCount: 1,
        borderImageOutset: 1,
        borderImageSlice: 1,
        borderImageWidth: 1,
        boxFlex: 1,
        boxFlexGroup: 1,
        boxOrdinalGroup: 1,
        columnCount: 1,
        columns: 1,
        flex: 1,
        flexGrow: 1,
        flexPositive: 1,
        flexShrink: 1,
        flexNegative: 1,
        flexOrder: 1,
        gridRow: 1,
        gridRowEnd: 1,
        gridRowSpan: 1,
        gridRowStart: 1,
        gridColumn: 1,
        gridColumnEnd: 1,
        gridColumnSpan: 1,
        gridColumnStart: 1,
        msGridRow: 1,
        msGridRowSpan: 1,
        msGridColumn: 1,
        msGridColumnSpan: 1,
        fontWeight: 1,
        lineHeight: 1,
        opacity: 1,
        order: 1,
        orphans: 1,
        tabSize: 1,
        widows: 1,
        zIndex: 1,
        zoom: 1,
        WebkitLineClamp: 1,
        fillOpacity: 1,
        floodOpacity: 1,
        stopOpacity: 1,
        strokeDasharray: 1,
        strokeDashoffset: 1,
        strokeMiterlimit: 1,
        strokeOpacity: 1,
        strokeWidth: 1,
      };
    },
    function (e, t, n) {
      "use strict";
      var r = n(77);
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = void 0);
      var i = r(n(0)),
        a = (0, r(n(121)).default)(
          i.default.createElement("path", {
            d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z",
          }),
          "ExpandMore"
        );
      t.default = a;
    },
    function (e, t, n) {
      "use strict";
      var r = n(85),
        i = n.n(r);
      t.a = i.a;
    },
    function (e, t) {
      e.exports = "object" == typeof self ? self.FormData : window.FormData;
    },
    function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var r = n(6),
        i = n(36),
        a = n(26);
      function o(e, t) {
        return Object(i.a)(
          e,
          new a.a.classes.URLSearchParams(),
          Object.assign(
            {
              visitor: function (e, t, n, i) {
                return a.a.isNode && r.a.isBuffer(e)
                  ? (this.append(t, e.toString("base64")), !1)
                  : i.defaultVisitor.apply(this, arguments);
              },
            },
            t
          )
        );
      }
    },
    function (e, t, n) {
      "use strict";
      n.r(t);
      var r = n(1),
        i = n(46);
      function a(e, t, n) {
        return (a = (function () {
          if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" === typeof Proxy) return !0;
          try {
            return (
              Date.prototype.toString.call(
                Reflect.construct(Date, [], function () {})
              ),
              !0
            );
          } catch (e) {
            return !1;
          }
        })()
          ? Reflect.construct
          : function (e, t, n) {
              var r = [null];
              r.push.apply(r, t);
              var a = new (Function.bind.apply(e, r))();
              return n && Object(i.a)(a, n.prototype), a;
            }).apply(null, arguments);
      }
      function o(e) {
        var t = "function" === typeof Map ? new Map() : void 0;
        return (o = function (e) {
          if (
            null === e ||
            ((n = e), -1 === Function.toString.call(n).indexOf("[native code]"))
          )
            return e;
          var n;
          if ("function" !== typeof e)
            throw new TypeError(
              "Super expression must either be null or a function"
            );
          if ("undefined" !== typeof t) {
            if (t.has(e)) return t.get(e);
            t.set(e, o);
          }
          function o() {
            return a(e, arguments, Object(r.a)(this).constructor);
          }
          return (
            (o.prototype = Object.create(e.prototype, {
              constructor: {
                value: o,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
            Object(i.a)(o, e)
          );
        })(e);
      }
      var s = n(48),
        u = n(39),
        l = n(16);
      function c(e, t, n) {
        return (c =
          "undefined" !== typeof Reflect && Reflect.get
            ? Reflect.get
            : function (e, t, n) {
                var i = (function (e, t) {
                  for (
                    ;
                    !Object.prototype.hasOwnProperty.call(e, t) &&
                    null !== (e = Object(r.a)(e));

                  );
                  return e;
                })(e, t);
                if (i) {
                  var a = Object.getOwnPropertyDescriptor(i, t);
                  return a.get ? a.get.call(n) : a.value;
                }
              })(e, t, n || e);
      }
      var h,
        f = n(4),
        d = n(19),
        p = n(5),
        m = n(9),
        v = n(21),
        g = n.n(v),
        y = n(2),
        b = n(3);
      n.d(t, "ACESFilmicToneMapping", function () {
        return ge;
      }),
        n.d(t, "AddEquation", function () {
          return B;
        }),
        n.d(t, "AddOperation", function () {
          return fe;
        }),
        n.d(t, "AdditiveAnimationBlendMode", function () {
          return Ht;
        }),
        n.d(t, "AdditiveBlending", function () {
          return N;
        }),
        n.d(t, "AlphaFormat", function () {
          return Je;
        }),
        n.d(t, "AlwaysDepth", function () {
          return re;
        }),
        n.d(t, "AlwaysStencilFunc", function () {
          return yn;
        }),
        n.d(t, "AmbientLight", function () {
          return vf;
        }),
        n.d(t, "AmbientLightProbe", function () {
          return Rf;
        }),
        n.d(t, "AnimationClip", function () {
          return zh;
        }),
        n.d(t, "AnimationLoader", function () {
          return Yh;
        }),
        n.d(t, "AnimationMixer", function () {
          return sd;
        }),
        n.d(t, "AnimationObjectGroup", function () {
          return id;
        }),
        n.d(t, "AnimationUtils", function () {
          return Th;
        }),
        n.d(t, "ArcCurve", function () {
          return Fl;
        }),
        n.d(t, "ArrayCamera", function () {
          return bu;
        }),
        n.d(t, "ArrowHelper", function () {
          return $d;
        }),
        n.d(t, "Audio", function () {
          return Vf;
        }),
        n.d(t, "AudioAnalyser", function () {
          return Zf;
        }),
        n.d(t, "AudioContext", function () {
          return Af;
        }),
        n.d(t, "AudioListener", function () {
          return Hf;
        }),
        n.d(t, "AudioLoader", function () {
          return Cf;
        }),
        n.d(t, "AxesHelper", function () {
          return Kd;
        }),
        n.d(t, "BackSide", function () {
          return R;
        }),
        n.d(t, "BasicDepthPacking", function () {
          return Jt;
        }),
        n.d(t, "BasicShadowMap", function () {
          return O;
        }),
        n.d(t, "Bone", function () {
          return ol;
        }),
        n.d(t, "BooleanKeyframeTrack", function () {
          return Ph;
        }),
        n.d(t, "Box2", function () {
          return bd;
        }),
        n.d(t, "Box3", function () {
          return Er;
        }),
        n.d(t, "Box3Helper", function () {
          return Yd;
        }),
        n.d(t, "BoxBufferGeometry", function () {
          return sp;
        }),
        n.d(t, "BoxGeometry", function () {
          return Ea;
        }),
        n.d(t, "BoxHelper", function () {
          return Xd;
        }),
        n.d(t, "BufferAttribute", function () {
          return Gi;
        }),
        n.d(t, "BufferGeometry", function () {
          return oa;
        }),
        n.d(t, "BufferGeometryLoader", function () {
          return Sf;
        }),
        n.d(t, "ByteType", function () {
          return Ue;
        }),
        n.d(t, "Cache", function () {
          return Fh;
        }),
        n.d(t, "Camera", function () {
          return La;
        }),
        n.d(t, "CameraHelper", function () {
          return Gd;
        }),
        n.d(t, "CanvasTexture", function () {
          return zl;
        }),
        n.d(t, "CapsuleBufferGeometry", function () {
          return up;
        }),
        n.d(t, "CapsuleGeometry", function () {
          return uc;
        }),
        n.d(t, "CatmullRomCurve3", function () {
          return Xl;
        }),
        n.d(t, "CineonToneMapping", function () {
          return ve;
        }),
        n.d(t, "CircleBufferGeometry", function () {
          return lp;
        }),
        n.d(t, "CircleGeometry", function () {
          return lc;
        }),
        n.d(t, "ClampToEdgeWrapping", function () {
          return Ee;
        }),
        n.d(t, "Clock", function () {
          return Df;
        }),
        n.d(t, "Color", function () {
          return lr;
        }),
        n.d(t, "ColorKeyframeTrack", function () {
          return Rh;
        }),
        n.d(t, "ColorManagement", function () {
          return tr;
        }),
        n.d(t, "CompressedTexture", function () {
          return Dl;
        }),
        n.d(t, "CompressedTextureLoader", function () {
          return Jh;
        }),
        n.d(t, "ConeBufferGeometry", function () {
          return cp;
        }),
        n.d(t, "ConeGeometry", function () {
          return hc;
        }),
        n.d(t, "CubeCamera", function () {
          return Da;
        }),
        n.d(t, "CubeReflectionMapping", function () {
          return xe;
        }),
        n.d(t, "CubeRefractionMapping", function () {
          return _e;
        }),
        n.d(t, "CubeTexture", function () {
          return za;
        }),
        n.d(t, "CubeTextureLoader", function () {
          return $h;
        }),
        n.d(t, "CubeUVReflectionMapping", function () {
          return Me;
        }),
        n.d(t, "CubicBezierCurve", function () {
          return $l;
        }),
        n.d(t, "CubicBezierCurve3", function () {
          return Kl;
        }),
        n.d(t, "CubicInterpolant", function () {
          return Oh;
        }),
        n.d(t, "CullFaceBack", function () {
          return M;
        }),
        n.d(t, "CullFaceFront", function () {
          return T;
        }),
        n.d(t, "CullFaceFrontBack", function () {
          return E;
        }),
        n.d(t, "CullFaceNone", function () {
          return S;
        }),
        n.d(t, "Curve", function () {
          return Ul;
        }),
        n.d(t, "CurvePath", function () {
          return ac;
        }),
        n.d(t, "CustomBlending", function () {
          return U;
        }),
        n.d(t, "CustomToneMapping", function () {
          return ye;
        }),
        n.d(t, "CylinderBufferGeometry", function () {
          return hp;
        }),
        n.d(t, "CylinderGeometry", function () {
          return cc;
        }),
        n.d(t, "Cylindrical", function () {
          return gd;
        }),
        n.d(t, "Data3DTexture", function () {
          return br;
        }),
        n.d(t, "DataArrayTexture", function () {
          return gr;
        }),
        n.d(t, "DataTexture", function () {
          return sl;
        }),
        n.d(t, "DataTexture2DArray", function () {
          return ap;
        }),
        n.d(t, "DataTexture3D", function () {
          return op;
        }),
        n.d(t, "DataTextureLoader", function () {
          return Kh;
        }),
        n.d(t, "DataUtils", function () {
          return np;
        }),
        n.d(t, "DecrementStencilOp", function () {
          return sn;
        }),
        n.d(t, "DecrementWrapStencilOp", function () {
          return ln;
        }),
        n.d(t, "DefaultLoadingManager", function () {
          return Hh;
        }),
        n.d(t, "DepthFormat", function () {
          return et;
        }),
        n.d(t, "DepthStencilFormat", function () {
          return tt;
        }),
        n.d(t, "DepthTexture", function () {
          return Su;
        }),
        n.d(t, "DirectionalLight", function () {
          return mf;
        }),
        n.d(t, "DirectionalLightHelper", function () {
          return Ud;
        }),
        n.d(t, "DiscreteInterpolant", function () {
          return Ah;
        }),
        n.d(t, "DodecahedronBufferGeometry", function () {
          return fp;
        }),
        n.d(t, "DodecahedronGeometry", function () {
          return dc;
        }),
        n.d(t, "DoubleSide", function () {
          return L;
        }),
        n.d(t, "DstAlphaFactor", function () {
          return $;
        }),
        n.d(t, "DstColorFactor", function () {
          return Q;
        }),
        n.d(t, "DynamicCopyUsage", function () {
          return En;
        }),
        n.d(t, "DynamicDrawUsage", function () {
          return xn;
        }),
        n.d(t, "DynamicReadUsage", function () {
          return Sn;
        }),
        n.d(t, "EdgesGeometry", function () {
          return yc;
        }),
        n.d(t, "EllipseCurve", function () {
          return Bl;
        }),
        n.d(t, "EqualDepth", function () {
          return oe;
        }),
        n.d(t, "EqualStencilFunc", function () {
          return dn;
        }),
        n.d(t, "EquirectangularReflectionMapping", function () {
          return we;
        }),
        n.d(t, "EquirectangularRefractionMapping", function () {
          return Se;
        }),
        n.d(t, "Euler", function () {
          return ci;
        }),
        n.d(t, "EventDispatcher", function () {
          return Pn;
        }),
        n.d(t, "ExtrudeBufferGeometry", function () {
          return dp;
        }),
        n.d(t, "ExtrudeGeometry", function () {
          return Jc;
        }),
        n.d(t, "FileLoader", function () {
          return Xh;
        }),
        n.d(t, "Float16BufferAttribute", function () {
          return Zi;
        }),
        n.d(t, "Float32BufferAttribute", function () {
          return $i;
        }),
        n.d(t, "Float64BufferAttribute", function () {
          return Ki;
        }),
        n.d(t, "FloatType", function () {
          return Ve;
        }),
        n.d(t, "Fog", function () {
          return Pu;
        }),
        n.d(t, "FogExp2", function () {
          return Cu;
        }),
        n.d(t, "FramebufferTexture", function () {
          return Nl;
        }),
        n.d(t, "FrontSide", function () {
          return P;
        }),
        n.d(t, "Frustum", function () {
          return qa;
        }),
        n.d(t, "GLBufferAttribute", function () {
          return fd;
        }),
        n.d(t, "GLSL1", function () {
          return kn;
        }),
        n.d(t, "GLSL3", function () {
          return An;
        }),
        n.d(t, "GreaterDepth", function () {
          return ue;
        }),
        n.d(t, "GreaterEqualDepth", function () {
          return se;
        }),
        n.d(t, "GreaterEqualStencilFunc", function () {
          return gn;
        }),
        n.d(t, "GreaterStencilFunc", function () {
          return mn;
        }),
        n.d(t, "GridHelper", function () {
          return jd;
        }),
        n.d(t, "Group", function () {
          return xu;
        }),
        n.d(t, "HalfFloatType", function () {
          return We;
        }),
        n.d(t, "HemisphereLight", function () {
          return tf;
        }),
        n.d(t, "HemisphereLightHelper", function () {
          return Ld;
        }),
        n.d(t, "HemisphereLightProbe", function () {
          return Pf;
        }),
        n.d(t, "IcosahedronBufferGeometry", function () {
          return pp;
        }),
        n.d(t, "IcosahedronGeometry", function () {
          return $c;
        }),
        n.d(t, "ImageBitmapLoader", function () {
          return kf;
        }),
        n.d(t, "ImageLoader", function () {
          return Zh;
        }),
        n.d(t, "ImageUtils", function () {
          return cr;
        }),
        n.d(t, "ImmediateRenderObject", function () {
          return rp;
        }),
        n.d(t, "IncrementStencilOp", function () {
          return on;
        }),
        n.d(t, "IncrementWrapStencilOp", function () {
          return un;
        }),
        n.d(t, "InstancedBufferAttribute", function () {
          return hl;
        }),
        n.d(t, "InstancedBufferGeometry", function () {
          return wf;
        }),
        n.d(t, "InstancedInterleavedBuffer", function () {
          return hd;
        }),
        n.d(t, "InstancedMesh", function () {
          return vl;
        }),
        n.d(t, "Int16BufferAttribute", function () {
          return qi;
        }),
        n.d(t, "Int32BufferAttribute", function () {
          return Yi;
        }),
        n.d(t, "Int8BufferAttribute", function () {
          return Hi;
        }),
        n.d(t, "IntType", function () {
          return Ge;
        }),
        n.d(t, "InterleavedBuffer", function () {
          return Lu;
        }),
        n.d(t, "InterleavedBufferAttribute", function () {
          return Iu;
        }),
        n.d(t, "Interpolant", function () {
          return Eh;
        }),
        n.d(t, "InterpolateDiscrete", function () {
          return Nt;
        }),
        n.d(t, "InterpolateLinear", function () {
          return Dt;
        }),
        n.d(t, "InterpolateSmooth", function () {
          return zt;
        }),
        n.d(t, "InvertStencilOp", function () {
          return cn;
        }),
        n.d(t, "KeepStencilOp", function () {
          return rn;
        }),
        n.d(t, "KeyframeTrack", function () {
          return Ch;
        }),
        n.d(t, "LOD", function () {
          return Qu;
        }),
        n.d(t, "LatheBufferGeometry", function () {
          return mp;
        }),
        n.d(t, "LatheGeometry", function () {
          return sc;
        }),
        n.d(t, "Layers", function () {
          return hi;
        }),
        n.d(t, "LessDepth", function () {
          return ie;
        }),
        n.d(t, "LessEqualDepth", function () {
          return ae;
        }),
        n.d(t, "LessEqualStencilFunc", function () {
          return pn;
        }),
        n.d(t, "LessStencilFunc", function () {
          return fn;
        }),
        n.d(t, "Light", function () {
          return ef;
        }),
        n.d(t, "LightProbe", function () {
          return bf;
        }),
        n.d(t, "Line", function () {
          return Sl;
        }),
        n.d(t, "Line3", function () {
          return wd;
        }),
        n.d(t, "LineBasicMaterial", function () {
          return gl;
        }),
        n.d(t, "LineCurve", function () {
          return Ql;
        }),
        n.d(t, "LineCurve3", function () {
          return ec;
        }),
        n.d(t, "LineDashedMaterial", function () {
          return yh;
        }),
        n.d(t, "LineLoop", function () {
          return Ol;
        }),
        n.d(t, "LineSegments", function () {
          return El;
        }),
        n.d(t, "LinearEncoding", function () {
          return Xt;
        }),
        n.d(t, "LinearFilter", function () {
          return Le;
        }),
        n.d(t, "LinearInterpolant", function () {
          return kh;
        }),
        n.d(t, "LinearMipMapLinearFilter", function () {
          return De;
        }),
        n.d(t, "LinearMipMapNearestFilter", function () {
          return Ie;
        }),
        n.d(t, "LinearMipmapLinearFilter", function () {
          return Ne;
        }),
        n.d(t, "LinearMipmapNearestFilter", function () {
          return je;
        }),
        n.d(t, "LinearSRGBColorSpace", function () {
          return tn;
        }),
        n.d(t, "LinearToneMapping", function () {
          return pe;
        }),
        n.d(t, "Loader", function () {
          return Vh;
        }),
        n.d(t, "LoaderUtils", function () {
          return _f;
        }),
        n.d(t, "LoadingManager", function () {
          return Gh;
        }),
        n.d(t, "LoopOnce", function () {
          return Lt;
        }),
        n.d(t, "LoopPingPong", function () {
          return It;
        }),
        n.d(t, "LoopRepeat", function () {
          return jt;
        }),
        n.d(t, "LuminanceAlphaFormat", function () {
          return Qe;
        }),
        n.d(t, "LuminanceFormat", function () {
          return Ke;
        }),
        n.d(t, "MOUSE", function () {
          return _;
        }),
        n.d(t, "Material", function () {
          return zi;
        }),
        n.d(t, "MaterialLoader", function () {
          return xf;
        }),
        n.d(t, "MathUtils", function () {
          return Wn;
        }),
        n.d(t, "Matrix3", function () {
          return Xn;
        }),
        n.d(t, "Matrix4", function () {
          return ei;
        }),
        n.d(t, "MaxEquation", function () {
          return V;
        }),
        n.d(t, "Mesh", function () {
          return Ma;
        }),
        n.d(t, "MeshBasicMaterial", function () {
          return Ui;
        }),
        n.d(t, "MeshDepthMaterial", function () {
          return hu;
        }),
        n.d(t, "MeshDistanceMaterial", function () {
          return fu;
        }),
        n.d(t, "MeshLambertMaterial", function () {
          return vh;
        }),
        n.d(t, "MeshMatcapMaterial", function () {
          return gh;
        }),
        n.d(t, "MeshNormalMaterial", function () {
          return mh;
        }),
        n.d(t, "MeshPhongMaterial", function () {
          return dh;
        }),
        n.d(t, "MeshPhysicalMaterial", function () {
          return fh;
        }),
        n.d(t, "MeshStandardMaterial", function () {
          return hh;
        }),
        n.d(t, "MeshToonMaterial", function () {
          return ph;
        }),
        n.d(t, "MinEquation", function () {
          return H;
        }),
        n.d(t, "MirroredRepeatWrapping", function () {
          return Oe;
        }),
        n.d(t, "MixOperation", function () {
          return he;
        }),
        n.d(t, "MultiplyBlending", function () {
          return z;
        }),
        n.d(t, "MultiplyOperation", function () {
          return ce;
        }),
        n.d(t, "NearestFilter", function () {
          return ke;
        }),
        n.d(t, "NearestMipMapLinearFilter", function () {
          return Re;
        }),
        n.d(t, "NearestMipMapNearestFilter", function () {
          return Ce;
        }),
        n.d(t, "NearestMipmapLinearFilter", function () {
          return Pe;
        }),
        n.d(t, "NearestMipmapNearestFilter", function () {
          return Ae;
        }),
        n.d(t, "NeverDepth", function () {
          return ne;
        }),
        n.d(t, "NeverStencilFunc", function () {
          return hn;
        }),
        n.d(t, "NoBlending", function () {
          return j;
        }),
        n.d(t, "NoColorSpace", function () {
          return Qt;
        }),
        n.d(t, "NoToneMapping", function () {
          return de;
        }),
        n.d(t, "NormalAnimationBlendMode", function () {
          return Gt;
        }),
        n.d(t, "NormalBlending", function () {
          return I;
        }),
        n.d(t, "NotEqualDepth", function () {
          return le;
        }),
        n.d(t, "NotEqualStencilFunc", function () {
          return vn;
        }),
        n.d(t, "NumberKeyframeTrack", function () {
          return Lh;
        }),
        n.d(t, "Object3D", function () {
          return Ti;
        }),
        n.d(t, "ObjectLoader", function () {
          return Mf;
        }),
        n.d(t, "ObjectSpaceNormalMap", function () {
          return Kt;
        }),
        n.d(t, "OctahedronBufferGeometry", function () {
          return vp;
        }),
        n.d(t, "OctahedronGeometry", function () {
          return Kc;
        }),
        n.d(t, "OneFactor", function () {
          return q;
        }),
        n.d(t, "OneMinusDstAlphaFactor", function () {
          return K;
        }),
        n.d(t, "OneMinusDstColorFactor", function () {
          return ee;
        }),
        n.d(t, "OneMinusSrcAlphaFactor", function () {
          return Z;
        }),
        n.d(t, "OneMinusSrcColorFactor", function () {
          return Y;
        }),
        n.d(t, "OrthographicCamera", function () {
          return ao;
        }),
        n.d(t, "PCFShadowMap", function () {
          return k;
        }),
        n.d(t, "PCFSoftShadowMap", function () {
          return A;
        }),
        n.d(t, "PMREMGenerator", function () {
          return vo;
        }),
        n.d(t, "Path", function () {
          return oc;
        }),
        n.d(t, "PerspectiveCamera", function () {
          return ja;
        }),
        n.d(t, "Plane", function () {
          return Ha;
        }),
        n.d(t, "PlaneBufferGeometry", function () {
          return gp;
        }),
        n.d(t, "PlaneGeometry", function () {
          return Ja;
        }),
        n.d(t, "PlaneHelper", function () {
          return Jd;
        }),
        n.d(t, "PointLight", function () {
          return df;
        }),
        n.d(t, "PointLightHelper", function () {
          return Ad;
        }),
        n.d(t, "Points", function () {
          return Ll;
        }),
        n.d(t, "PointsMaterial", function () {
          return kl;
        }),
        n.d(t, "PolarGridHelper", function () {
          return Id;
        }),
        n.d(t, "PolyhedronBufferGeometry", function () {
          return yp;
        }),
        n.d(t, "PolyhedronGeometry", function () {
          return fc;
        }),
        n.d(t, "PositionalAudio", function () {
          return Jf;
        }),
        n.d(t, "PropertyBinding", function () {
          return rd;
        }),
        n.d(t, "PropertyMixer", function () {
          return $f;
        }),
        n.d(t, "QuadraticBezierCurve", function () {
          return tc;
        }),
        n.d(t, "QuadraticBezierCurve3", function () {
          return nc;
        }),
        n.d(t, "Quaternion", function () {
          return wr;
        }),
        n.d(t, "QuaternionKeyframeTrack", function () {
          return Ih;
        }),
        n.d(t, "QuaternionLinearInterpolant", function () {
          return jh;
        }),
        n.d(t, "REVISION", function () {
          return x;
        }),
        n.d(t, "RGBADepthPacking", function () {
          return Zt;
        }),
        n.d(t, "RGBAFormat", function () {
          return $e;
        }),
        n.d(t, "RGBAIntegerFormat", function () {
          return ot;
        }),
        n.d(t, "RGBA_ASTC_10x10_Format", function () {
          return At;
        }),
        n.d(t, "RGBA_ASTC_10x5_Format", function () {
          return Et;
        }),
        n.d(t, "RGBA_ASTC_10x6_Format", function () {
          return Ot;
        }),
        n.d(t, "RGBA_ASTC_10x8_Format", function () {
          return kt;
        }),
        n.d(t, "RGBA_ASTC_12x10_Format", function () {
          return Ct;
        }),
        n.d(t, "RGBA_ASTC_12x12_Format", function () {
          return Pt;
        }),
        n.d(t, "RGBA_ASTC_4x4_Format", function () {
          return yt;
        }),
        n.d(t, "RGBA_ASTC_5x4_Format", function () {
          return bt;
        }),
        n.d(t, "RGBA_ASTC_5x5_Format", function () {
          return xt;
        }),
        n.d(t, "RGBA_ASTC_6x5_Format", function () {
          return _t;
        }),
        n.d(t, "RGBA_ASTC_6x6_Format", function () {
          return wt;
        }),
        n.d(t, "RGBA_ASTC_8x5_Format", function () {
          return St;
        }),
        n.d(t, "RGBA_ASTC_8x6_Format", function () {
          return Mt;
        }),
        n.d(t, "RGBA_ASTC_8x8_Format", function () {
          return Tt;
        }),
        n.d(t, "RGBA_BPTC_Format", function () {
          return Rt;
        }),
        n.d(t, "RGBA_ETC2_EAC_Format", function () {
          return gt;
        }),
        n.d(t, "RGBA_PVRTC_2BPPV1_Format", function () {
          return pt;
        }),
        n.d(t, "RGBA_PVRTC_4BPPV1_Format", function () {
          return dt;
        }),
        n.d(t, "RGBA_S3TC_DXT1_Format", function () {
          return ut;
        }),
        n.d(t, "RGBA_S3TC_DXT3_Format", function () {
          return lt;
        }),
        n.d(t, "RGBA_S3TC_DXT5_Format", function () {
          return ct;
        }),
        n.d(t, "RGBFormat", function () {
          return Ze;
        }),
        n.d(t, "RGB_ETC1_Format", function () {
          return mt;
        }),
        n.d(t, "RGB_ETC2_Format", function () {
          return vt;
        }),
        n.d(t, "RGB_PVRTC_2BPPV1_Format", function () {
          return ft;
        }),
        n.d(t, "RGB_PVRTC_4BPPV1_Format", function () {
          return ht;
        }),
        n.d(t, "RGB_S3TC_DXT1_Format", function () {
          return st;
        }),
        n.d(t, "RGFormat", function () {
          return it;
        }),
        n.d(t, "RGIntegerFormat", function () {
          return at;
        }),
        n.d(t, "RawShaderMaterial", function () {
          return ch;
        }),
        n.d(t, "Ray", function () {
          return Qr;
        }),
        n.d(t, "Raycaster", function () {
          return dd;
        }),
        n.d(t, "RectAreaLight", function () {
          return gf;
        }),
        n.d(t, "RedFormat", function () {
          return nt;
        }),
        n.d(t, "RedIntegerFormat", function () {
          return rt;
        }),
        n.d(t, "ReinhardToneMapping", function () {
          return me;
        }),
        n.d(t, "RepeatWrapping", function () {
          return Te;
        }),
        n.d(t, "ReplaceStencilOp", function () {
          return an;
        }),
        n.d(t, "ReverseSubtractEquation", function () {
          return G;
        }),
        n.d(t, "RingBufferGeometry", function () {
          return bp;
        }),
        n.d(t, "RingGeometry", function () {
          return Qc;
        }),
        n.d(t, "SRGBColorSpace", function () {
          return en;
        }),
        n.d(t, "Scene", function () {
          return Ru;
        }),
        n.d(t, "ShaderChunk", function () {
          return Za;
        }),
        n.d(t, "ShaderLib", function () {
          return Ka;
        }),
        n.d(t, "ShaderMaterial", function () {
          return Ra;
        }),
        n.d(t, "ShadowMaterial", function () {
          return lh;
        }),
        n.d(t, "Shape", function () {
          return bc;
        }),
        n.d(t, "ShapeBufferGeometry", function () {
          return xp;
        }),
        n.d(t, "ShapeGeometry", function () {
          return eh;
        }),
        n.d(t, "ShapePath", function () {
          return Qd;
        }),
        n.d(t, "ShapeUtils", function () {
          return qc;
        }),
        n.d(t, "ShortType", function () {
          return Be;
        }),
        n.d(t, "Skeleton", function () {
          return cl;
        }),
        n.d(t, "SkeletonHelper", function () {
          return kd;
        }),
        n.d(t, "SkinnedMesh", function () {
          return al;
        }),
        n.d(t, "Source", function () {
          return hr;
        }),
        n.d(t, "Sphere", function () {
          return Wr;
        }),
        n.d(t, "SphereBufferGeometry", function () {
          return _p;
        }),
        n.d(t, "SphereGeometry", function () {
          return th;
        }),
        n.d(t, "Spherical", function () {
          return vd;
        }),
        n.d(t, "SphericalHarmonics3", function () {
          return yf;
        }),
        n.d(t, "SplineCurve", function () {
          return rc;
        }),
        n.d(t, "SpotLight", function () {
          return uf;
        }),
        n.d(t, "SpotLightHelper", function () {
          return Md;
        }),
        n.d(t, "Sprite", function () {
          return Ju;
        }),
        n.d(t, "SpriteMaterial", function () {
          return Nu;
        }),
        n.d(t, "SrcAlphaFactor", function () {
          return J;
        }),
        n.d(t, "SrcAlphaSaturateFactor", function () {
          return te;
        }),
        n.d(t, "SrcColorFactor", function () {
          return X;
        }),
        n.d(t, "StaticCopyUsage", function () {
          return Tn;
        }),
        n.d(t, "StaticDrawUsage", function () {
          return bn;
        }),
        n.d(t, "StaticReadUsage", function () {
          return wn;
        }),
        n.d(t, "StereoCamera", function () {
          return Nf;
        }),
        n.d(t, "StreamCopyUsage", function () {
          return On;
        }),
        n.d(t, "StreamDrawUsage", function () {
          return _n;
        }),
        n.d(t, "StreamReadUsage", function () {
          return Mn;
        }),
        n.d(t, "StringKeyframeTrack", function () {
          return Nh;
        }),
        n.d(t, "SubtractEquation", function () {
          return F;
        }),
        n.d(t, "SubtractiveBlending", function () {
          return D;
        }),
        n.d(t, "TOUCH", function () {
          return w;
        }),
        n.d(t, "TangentSpaceNormalMap", function () {
          return $t;
        }),
        n.d(t, "TetrahedronBufferGeometry", function () {
          return wp;
        }),
        n.d(t, "TetrahedronGeometry", function () {
          return nh;
        }),
        n.d(t, "Texture", function () {
          return pr;
        }),
        n.d(t, "TextureLoader", function () {
          return Qh;
        }),
        n.d(t, "TorusBufferGeometry", function () {
          return Sp;
        }),
        n.d(t, "TorusGeometry", function () {
          return rh;
        }),
        n.d(t, "TorusKnotBufferGeometry", function () {
          return Mp;
        }),
        n.d(t, "TorusKnotGeometry", function () {
          return ih;
        }),
        n.d(t, "Triangle", function () {
          return Ni;
        }),
        n.d(t, "TriangleFanDrawMode", function () {
          return qt;
        }),
        n.d(t, "TriangleStripDrawMode", function () {
          return Wt;
        }),
        n.d(t, "TrianglesDrawMode", function () {
          return Vt;
        }),
        n.d(t, "TubeBufferGeometry", function () {
          return Tp;
        }),
        n.d(t, "TubeGeometry", function () {
          return ah;
        }),
        n.d(t, "UVMapping", function () {
          return be;
        }),
        n.d(t, "Uint16BufferAttribute", function () {
          return Xi;
        }),
        n.d(t, "Uint32BufferAttribute", function () {
          return Ji;
        }),
        n.d(t, "Uint8BufferAttribute", function () {
          return Vi;
        }),
        n.d(t, "Uint8ClampedBufferAttribute", function () {
          return Wi;
        }),
        n.d(t, "Uniform", function () {
          return ud;
        }),
        n.d(t, "UniformsGroup", function () {
          return cd;
        }),
        n.d(t, "UniformsLib", function () {
          return $a;
        }),
        n.d(t, "UniformsUtils", function () {
          return Aa;
        }),
        n.d(t, "UnsignedByteType", function () {
          return ze;
        }),
        n.d(t, "UnsignedInt248Type", function () {
          return Ye;
        }),
        n.d(t, "UnsignedIntType", function () {
          return He;
        }),
        n.d(t, "UnsignedShort4444Type", function () {
          return qe;
        }),
        n.d(t, "UnsignedShort5551Type", function () {
          return Xe;
        }),
        n.d(t, "UnsignedShortType", function () {
          return Fe;
        }),
        n.d(t, "VSMShadowMap", function () {
          return C;
        }),
        n.d(t, "Vector2", function () {
          return qn;
        }),
        n.d(t, "Vector3", function () {
          return Sr;
        }),
        n.d(t, "Vector4", function () {
          return mr;
        }),
        n.d(t, "VectorKeyframeTrack", function () {
          return Dh;
        }),
        n.d(t, "VideoTexture", function () {
          return Il;
        }),
        n.d(t, "WebGL1Renderer", function () {
          return ku;
        }),
        n.d(t, "WebGL3DRenderTarget", function () {
          return xr;
        }),
        n.d(t, "WebGLArrayRenderTarget", function () {
          return yr;
        }),
        n.d(t, "WebGLCubeRenderTarget", function () {
          return Ua;
        }),
        n.d(t, "WebGLMultipleRenderTargets", function () {
          return _r;
        }),
        n.d(t, "WebGLMultisampleRenderTarget", function () {
          return ip;
        }),
        n.d(t, "WebGLRenderTarget", function () {
          return vr;
        }),
        n.d(t, "WebGLRenderer", function () {
          return Ou;
        }),
        n.d(t, "WebGLUtils", function () {
          return yu;
        }),
        n.d(t, "WireframeGeometry", function () {
          return oh;
        }),
        n.d(t, "WrapAroundEnding", function () {
          return Ft;
        }),
        n.d(t, "ZeroCurvatureEnding", function () {
          return Ut;
        }),
        n.d(t, "ZeroFactor", function () {
          return W;
        }),
        n.d(t, "ZeroSlopeEnding", function () {
          return Bt;
        }),
        n.d(t, "ZeroStencilOp", function () {
          return nn;
        }),
        n.d(t, "_SRGBAFormat", function () {
          return Cn;
        }),
        n.d(t, "sRGBEncoding", function () {
          return Yt;
        });
      var x = "145",
        _ = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
        w = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
        S = 0,
        M = 1,
        T = 2,
        E = 3,
        O = 0,
        k = 1,
        A = 2,
        C = 3,
        P = 0,
        R = 1,
        L = 2,
        j = 0,
        I = 1,
        N = 2,
        D = 3,
        z = 4,
        U = 5,
        B = 100,
        F = 101,
        G = 102,
        H = 103,
        V = 104,
        W = 200,
        q = 201,
        X = 202,
        Y = 203,
        J = 204,
        Z = 205,
        $ = 206,
        K = 207,
        Q = 208,
        ee = 209,
        te = 210,
        ne = 0,
        re = 1,
        ie = 2,
        ae = 3,
        oe = 4,
        se = 5,
        ue = 6,
        le = 7,
        ce = 0,
        he = 1,
        fe = 2,
        de = 0,
        pe = 1,
        me = 2,
        ve = 3,
        ge = 4,
        ye = 5,
        be = 300,
        xe = 301,
        _e = 302,
        we = 303,
        Se = 304,
        Me = 306,
        Te = 1e3,
        Ee = 1001,
        Oe = 1002,
        ke = 1003,
        Ae = 1004,
        Ce = 1004,
        Pe = 1005,
        Re = 1005,
        Le = 1006,
        je = 1007,
        Ie = 1007,
        Ne = 1008,
        De = 1008,
        ze = 1009,
        Ue = 1010,
        Be = 1011,
        Fe = 1012,
        Ge = 1013,
        He = 1014,
        Ve = 1015,
        We = 1016,
        qe = 1017,
        Xe = 1018,
        Ye = 1020,
        Je = 1021,
        Ze = 1022,
        $e = 1023,
        Ke = 1024,
        Qe = 1025,
        et = 1026,
        tt = 1027,
        nt = 1028,
        rt = 1029,
        it = 1030,
        at = 1031,
        ot = 1033,
        st = 33776,
        ut = 33777,
        lt = 33778,
        ct = 33779,
        ht = 35840,
        ft = 35841,
        dt = 35842,
        pt = 35843,
        mt = 36196,
        vt = 37492,
        gt = 37496,
        yt = 37808,
        bt = 37809,
        xt = 37810,
        _t = 37811,
        wt = 37812,
        St = 37813,
        Mt = 37814,
        Tt = 37815,
        Et = 37816,
        Ot = 37817,
        kt = 37818,
        At = 37819,
        Ct = 37820,
        Pt = 37821,
        Rt = 36492,
        Lt = 2200,
        jt = 2201,
        It = 2202,
        Nt = 2300,
        Dt = 2301,
        zt = 2302,
        Ut = 2400,
        Bt = 2401,
        Ft = 2402,
        Gt = 2500,
        Ht = 2501,
        Vt = 0,
        Wt = 1,
        qt = 2,
        Xt = 3e3,
        Yt = 3001,
        Jt = 3200,
        Zt = 3201,
        $t = 0,
        Kt = 1,
        Qt = "",
        en = "srgb",
        tn = "srgb-linear",
        nn = 0,
        rn = 7680,
        an = 7681,
        on = 7682,
        sn = 7683,
        un = 34055,
        ln = 34056,
        cn = 5386,
        hn = 512,
        fn = 513,
        dn = 514,
        pn = 515,
        mn = 516,
        vn = 517,
        gn = 518,
        yn = 519,
        bn = 35044,
        xn = 35048,
        _n = 35040,
        wn = 35045,
        Sn = 35049,
        Mn = 35041,
        Tn = 35046,
        En = 35050,
        On = 35042,
        kn = "100",
        An = "300 es",
        Cn = 1035,
        Pn = (function () {
          function e() {
            Object(y.a)(this, e);
          }
          return (
            Object(b.a)(e, [
              {
                key: "addEventListener",
                value: function (e, t) {
                  void 0 === this._listeners && (this._listeners = {});
                  var n = this._listeners;
                  void 0 === n[e] && (n[e] = []),
                    -1 === n[e].indexOf(t) && n[e].push(t);
                },
              },
              {
                key: "hasEventListener",
                value: function (e, t) {
                  if (void 0 === this._listeners) return !1;
                  var n = this._listeners;
                  return void 0 !== n[e] && -1 !== n[e].indexOf(t);
                },
              },
              {
                key: "removeEventListener",
                value: function (e, t) {
                  if (void 0 !== this._listeners) {
                    var n = this._listeners[e];
                    if (void 0 !== n) {
                      var r = n.indexOf(t);
                      -1 !== r && n.splice(r, 1);
                    }
                  }
                },
              },
              {
                key: "dispatchEvent",
                value: function (e) {
                  if (void 0 !== this._listeners) {
                    var t = this._listeners[e.type];
                    if (void 0 !== t) {
                      e.target = this;
                      for (var n = t.slice(0), r = 0, i = n.length; r < i; r++)
                        n[r].call(this, e);
                      e.target = null;
                    }
                  }
                },
              },
            ]),
            e
          );
        })(),
        Rn = [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "0a",
          "0b",
          "0c",
          "0d",
          "0e",
          "0f",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "1a",
          "1b",
          "1c",
          "1d",
          "1e",
          "1f",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "2a",
          "2b",
          "2c",
          "2d",
          "2e",
          "2f",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "3a",
          "3b",
          "3c",
          "3d",
          "3e",
          "3f",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "4a",
          "4b",
          "4c",
          "4d",
          "4e",
          "4f",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "5a",
          "5b",
          "5c",
          "5d",
          "5e",
          "5f",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "6a",
          "6b",
          "6c",
          "6d",
          "6e",
          "6f",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "7a",
          "7b",
          "7c",
          "7d",
          "7e",
          "7f",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "8a",
          "8b",
          "8c",
          "8d",
          "8e",
          "8f",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "9a",
          "9b",
          "9c",
          "9d",
          "9e",
          "9f",
          "a0",
          "a1",
          "a2",
          "a3",
          "a4",
          "a5",
          "a6",
          "a7",
          "a8",
          "a9",
          "aa",
          "ab",
          "ac",
          "ad",
          "ae",
          "af",
          "b0",
          "b1",
          "b2",
          "b3",
          "b4",
          "b5",
          "b6",
          "b7",
          "b8",
          "b9",
          "ba",
          "bb",
          "bc",
          "bd",
          "be",
          "bf",
          "c0",
          "c1",
          "c2",
          "c3",
          "c4",
          "c5",
          "c6",
          "c7",
          "c8",
          "c9",
          "ca",
          "cb",
          "cc",
          "cd",
          "ce",
          "cf",
          "d0",
          "d1",
          "d2",
          "d3",
          "d4",
          "d5",
          "d6",
          "d7",
          "d8",
          "d9",
          "da",
          "db",
          "dc",
          "dd",
          "de",
          "df",
          "e0",
          "e1",
          "e2",
          "e3",
          "e4",
          "e5",
          "e6",
          "e7",
          "e8",
          "e9",
          "ea",
          "eb",
          "ec",
          "ed",
          "ee",
          "ef",
          "f0",
          "f1",
          "f2",
          "f3",
          "f4",
          "f5",
          "f6",
          "f7",
          "f8",
          "f9",
          "fa",
          "fb",
          "fc",
          "fd",
          "fe",
          "ff",
        ],
        Ln = 1234567,
        jn = Math.PI / 180,
        In = 180 / Math.PI;
      function Nn() {
        var e = (4294967295 * Math.random()) | 0,
          t = (4294967295 * Math.random()) | 0,
          n = (4294967295 * Math.random()) | 0,
          r = (4294967295 * Math.random()) | 0;
        return (
          Rn[255 & e] +
          Rn[(e >> 8) & 255] +
          Rn[(e >> 16) & 255] +
          Rn[(e >> 24) & 255] +
          "-" +
          Rn[255 & t] +
          Rn[(t >> 8) & 255] +
          "-" +
          Rn[((t >> 16) & 15) | 64] +
          Rn[(t >> 24) & 255] +
          "-" +
          Rn[(63 & n) | 128] +
          Rn[(n >> 8) & 255] +
          "-" +
          Rn[(n >> 16) & 255] +
          Rn[(n >> 24) & 255] +
          Rn[255 & r] +
          Rn[(r >> 8) & 255] +
          Rn[(r >> 16) & 255] +
          Rn[(r >> 24) & 255]
        ).toLowerCase();
      }
      function Dn(e, t, n) {
        return Math.max(t, Math.min(n, e));
      }
      function zn(e, t) {
        return ((e % t) + t) % t;
      }
      function Un(e, t, n) {
        return (1 - n) * e + n * t;
      }
      function Bn(e) {
        return 0 === (e & (e - 1)) && 0 !== e;
      }
      function Fn(e) {
        return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
      }
      function Gn(e) {
        return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
      }
      function Hn(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint16Array:
            return e / 65535;
          case Uint8Array:
            return e / 255;
          case Int16Array:
            return Math.max(e / 32767, -1);
          case Int8Array:
            return Math.max(e / 127, -1);
          default:
            throw new Error("Invalid component type.");
        }
      }
      function Vn(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint16Array:
            return Math.round(65535 * e);
          case Uint8Array:
            return Math.round(255 * e);
          case Int16Array:
            return Math.round(32767 * e);
          case Int8Array:
            return Math.round(127 * e);
          default:
            throw new Error("Invalid component type.");
        }
      }
      var Wn = Object.freeze({
          __proto__: null,
          DEG2RAD: jn,
          RAD2DEG: In,
          generateUUID: Nn,
          clamp: Dn,
          euclideanModulo: zn,
          mapLinear: function (e, t, n, r, i) {
            return r + ((e - t) * (i - r)) / (n - t);
          },
          inverseLerp: function (e, t, n) {
            return e !== t ? (n - e) / (t - e) : 0;
          },
          lerp: Un,
          damp: function (e, t, n, r) {
            return Un(e, t, 1 - Math.exp(-n * r));
          },
          pingpong: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            return t - Math.abs(zn(e, 2 * t) - t);
          },
          smoothstep: function (e, t, n) {
            return e <= t
              ? 0
              : e >= n
              ? 1
              : (e = (e - t) / (n - t)) * e * (3 - 2 * e);
          },
          smootherstep: function (e, t, n) {
            return e <= t
              ? 0
              : e >= n
              ? 1
              : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10);
          },
          randInt: function (e, t) {
            return e + Math.floor(Math.random() * (t - e + 1));
          },
          randFloat: function (e, t) {
            return e + Math.random() * (t - e);
          },
          randFloatSpread: function (e) {
            return e * (0.5 - Math.random());
          },
          seededRandom: function (e) {
            void 0 !== e && (Ln = e);
            var t = (Ln += 1831565813);
            return (
              (t = Math.imul(t ^ (t >>> 15), 1 | t)),
              (((t ^= t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ (t >>> 14)) >>>
                0) /
                4294967296
            );
          },
          degToRad: function (e) {
            return e * jn;
          },
          radToDeg: function (e) {
            return e * In;
          },
          isPowerOfTwo: Bn,
          ceilPowerOfTwo: Fn,
          floorPowerOfTwo: Gn,
          setQuaternionFromProperEuler: function (e, t, n, r, i) {
            var a = Math.cos,
              o = Math.sin,
              s = a(n / 2),
              u = o(n / 2),
              l = a((t + r) / 2),
              c = o((t + r) / 2),
              h = a((t - r) / 2),
              f = o((t - r) / 2),
              d = a((r - t) / 2),
              p = o((r - t) / 2);
            switch (i) {
              case "XYX":
                e.set(s * c, u * h, u * f, s * l);
                break;
              case "YZY":
                e.set(u * f, s * c, u * h, s * l);
                break;
              case "ZXZ":
                e.set(u * h, u * f, s * c, s * l);
                break;
              case "XZX":
                e.set(s * c, u * p, u * d, s * l);
                break;
              case "YXY":
                e.set(u * d, s * c, u * p, s * l);
                break;
              case "ZYZ":
                e.set(u * p, u * d, s * c, s * l);
                break;
              default:
                console.warn(
                  "THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " +
                    i
                );
            }
          },
          normalize: Vn,
          denormalize: Hn,
        }),
        qn = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Object(y.a)(this, e),
              (e.prototype.isVector2 = !0),
              (this.x = t),
              (this.y = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  return (this.x = e), (this.y = t), this;
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.x = e), (this.y = e), this;
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.x = e.x), (this.y = e.y), this;
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (this.x += e.x), (this.y += e.y), this;
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.x += e), (this.y += e), this;
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (this.x += e.x * t), (this.y += e.y * t), this;
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (this.x -= e.x), (this.y -= e.y), this;
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (this.x -= e), (this.y -= e), this;
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (this.x *= e.x), (this.y *= e.y), this;
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.x *= e), (this.y *= e), this;
                },
              },
              {
                key: "divide",
                value: function (e) {
                  return (this.x /= e.x), (this.y /= e.y), this;
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = e.elements;
                  return (
                    (this.x = r[0] * t + r[3] * n + r[6]),
                    (this.y = r[1] * t + r[4] * n + r[7]),
                    this
                  );
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x =
                      this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                    (this.y =
                      this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.x = -this.x), (this.y = -this.y), this;
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return this.x * e.x + this.y * e.y;
                },
              },
              {
                key: "cross",
                value: function (e) {
                  return this.x * e.y - this.y * e.x;
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return this.x * this.x + this.y * this.y;
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(this.x * this.x + this.y * this.y);
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return Math.abs(this.x) + Math.abs(this.y);
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "angle",
                value: function () {
                  var e = Math.atan2(-this.y, -this.x) + Math.PI;
                  return e;
                },
              },
              {
                key: "distanceTo",
                value: function (e) {
                  return Math.sqrt(this.distanceToSquared(e));
                },
              },
              {
                key: "distanceToSquared",
                value: function (e) {
                  var t = this.x - e.x,
                    n = this.y - e.y;
                  return t * t + n * n;
                },
              },
              {
                key: "manhattanDistanceTo",
                value: function (e) {
                  return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.x === this.x && e.y === this.y;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (this.x = e[t]), (this.y = e[t + 1]), this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (e[t] = this.x), (e[t + 1] = this.y), e;
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (this.x = e.getX(t)), (this.y = e.getY(t)), this;
                },
              },
              {
                key: "rotateAround",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    i = this.x - e.x,
                    a = this.y - e.y;
                  return (
                    (this.x = i * n - a * r + e.x),
                    (this.y = i * r + a * n + e.y),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()), (this.y = Math.random()), this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: g.a.mark(function e() {
                  return g.a.wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
              {
                key: "width",
                get: function () {
                  return this.x;
                },
                set: function (e) {
                  this.x = e;
                },
              },
              {
                key: "height",
                get: function () {
                  return this.y;
                },
                set: function (e) {
                  this.y = e;
                },
              },
            ]),
            e
          );
        })(),
        Xn = (function () {
          function e() {
            Object(y.a)(this, e),
              (e.prototype.isMatrix3 = !0),
              (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t, n, r, i, a, o, s, u) {
                  var l = this.elements;
                  return (
                    (l[0] = e),
                    (l[1] = r),
                    (l[2] = o),
                    (l[3] = t),
                    (l[4] = i),
                    (l[5] = s),
                    (l[6] = n),
                    (l[7] = a),
                    (l[8] = u),
                    this
                  );
                },
              },
              {
                key: "identity",
                value: function () {
                  return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[0] = n[0]),
                    (t[1] = n[1]),
                    (t[2] = n[2]),
                    (t[3] = n[3]),
                    (t[4] = n[4]),
                    (t[5] = n[5]),
                    (t[6] = n[6]),
                    (t[7] = n[7]),
                    (t[8] = n[8]),
                    this
                  );
                },
              },
              {
                key: "extractBasis",
                value: function (e, t, n) {
                  return (
                    e.setFromMatrix3Column(this, 0),
                    t.setFromMatrix3Column(this, 1),
                    n.setFromMatrix3Column(this, 2),
                    this
                  );
                },
              },
              {
                key: "setFromMatrix4",
                value: function (e) {
                  var t = e.elements;
                  return (
                    this.set(
                      t[0],
                      t[4],
                      t[8],
                      t[1],
                      t[5],
                      t[9],
                      t[2],
                      t[6],
                      t[10]
                    ),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return this.multiplyMatrices(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyMatrices(e, this);
                },
              },
              {
                key: "multiplyMatrices",
                value: function (e, t) {
                  var n = e.elements,
                    r = t.elements,
                    i = this.elements,
                    a = n[0],
                    o = n[3],
                    s = n[6],
                    u = n[1],
                    l = n[4],
                    c = n[7],
                    h = n[2],
                    f = n[5],
                    d = n[8],
                    p = r[0],
                    m = r[3],
                    v = r[6],
                    g = r[1],
                    y = r[4],
                    b = r[7],
                    x = r[2],
                    _ = r[5],
                    w = r[8];
                  return (
                    (i[0] = a * p + o * g + s * x),
                    (i[3] = a * m + o * y + s * _),
                    (i[6] = a * v + o * b + s * w),
                    (i[1] = u * p + l * g + c * x),
                    (i[4] = u * m + l * y + c * _),
                    (i[7] = u * v + l * b + c * w),
                    (i[2] = h * p + f * g + d * x),
                    (i[5] = h * m + f * y + d * _),
                    (i[8] = h * v + f * b + d * w),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (t[0] *= e),
                    (t[3] *= e),
                    (t[6] *= e),
                    (t[1] *= e),
                    (t[4] *= e),
                    (t[7] *= e),
                    (t[2] *= e),
                    (t[5] *= e),
                    (t[8] *= e),
                    this
                  );
                },
              },
              {
                key: "determinant",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    i = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    u = e[7],
                    l = e[8];
                  return (
                    t * a * l -
                    t * o * u -
                    n * i * l +
                    n * o * s +
                    r * i * u -
                    r * a * s
                  );
                },
              },
              {
                key: "invert",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    i = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    u = e[7],
                    l = e[8],
                    c = l * a - o * u,
                    h = o * s - l * i,
                    f = u * i - a * s,
                    d = t * c + n * h + r * f;
                  if (0 === d) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                  var p = 1 / d;
                  return (
                    (e[0] = c * p),
                    (e[1] = (r * u - l * n) * p),
                    (e[2] = (o * n - r * a) * p),
                    (e[3] = h * p),
                    (e[4] = (l * t - r * s) * p),
                    (e[5] = (r * i - o * t) * p),
                    (e[6] = f * p),
                    (e[7] = (n * s - u * t) * p),
                    (e[8] = (a * t - n * i) * p),
                    this
                  );
                },
              },
              {
                key: "transpose",
                value: function () {
                  var e,
                    t = this.elements;
                  return (
                    (e = t[1]),
                    (t[1] = t[3]),
                    (t[3] = e),
                    (e = t[2]),
                    (t[2] = t[6]),
                    (t[6] = e),
                    (e = t[5]),
                    (t[5] = t[7]),
                    (t[7] = e),
                    this
                  );
                },
              },
              {
                key: "getNormalMatrix",
                value: function (e) {
                  return this.setFromMatrix4(e).invert().transpose();
                },
              },
              {
                key: "transposeIntoArray",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (e[0] = t[0]),
                    (e[1] = t[3]),
                    (e[2] = t[6]),
                    (e[3] = t[1]),
                    (e[4] = t[4]),
                    (e[5] = t[7]),
                    (e[6] = t[2]),
                    (e[7] = t[5]),
                    (e[8] = t[8]),
                    this
                  );
                },
              },
              {
                key: "setUvTransform",
                value: function (e, t, n, r, i, a, o) {
                  var s = Math.cos(i),
                    u = Math.sin(i);
                  return (
                    this.set(
                      n * s,
                      n * u,
                      -n * (s * a + u * o) + a + e,
                      -r * u,
                      r * s,
                      -r * (-u * a + s * o) + o + t,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "scale",
                value: function (e, t) {
                  var n = this.elements;
                  return (
                    (n[0] *= e),
                    (n[3] *= e),
                    (n[6] *= e),
                    (n[1] *= t),
                    (n[4] *= t),
                    (n[7] *= t),
                    this
                  );
                },
              },
              {
                key: "rotate",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e),
                    r = this.elements,
                    i = r[0],
                    a = r[3],
                    o = r[6],
                    s = r[1],
                    u = r[4],
                    l = r[7];
                  return (
                    (r[0] = t * i + n * s),
                    (r[3] = t * a + n * u),
                    (r[6] = t * o + n * l),
                    (r[1] = -n * i + t * s),
                    (r[4] = -n * a + t * u),
                    (r[7] = -n * o + t * l),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e, t) {
                  var n = this.elements;
                  return (
                    (n[0] += e * n[2]),
                    (n[3] += e * n[5]),
                    (n[6] += e * n[8]),
                    (n[1] += t * n[2]),
                    (n[4] += t * n[5]),
                    (n[7] += t * n[8]),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                    if (t[r] !== n[r]) return !1;
                  return !0;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = 0;
                    n < 9;
                    n++
                  )
                    this.elements[n] = e[n + t];
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.elements;
                  return (
                    (e[t] = n[0]),
                    (e[t + 1] = n[1]),
                    (e[t + 2] = n[2]),
                    (e[t + 3] = n[3]),
                    (e[t + 4] = n[4]),
                    (e[t + 5] = n[5]),
                    (e[t + 6] = n[6]),
                    (e[t + 7] = n[7]),
                    (e[t + 8] = n[8]),
                    e
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().fromArray(this.elements);
                },
              },
            ]),
            e
          );
        })();
      function Yn(e) {
        for (var t = e.length - 1; t >= 0; --t) if (e[t] >= 65535) return !0;
        return !1;
      }
      var Jn = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: Uint8ClampedArray,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array,
      };
      function Zn(e, t) {
        return new Jn[e](t);
      }
      function $n(e) {
        return document.createElementNS("http://www.w3.org/1999/xhtml", e);
      }
      function Kn(e) {
        return e < 0.04045
          ? 0.0773993808 * e
          : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
      }
      function Qn(e) {
        return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
      }
      var er =
          ((h = {}),
          Object(m.a)(h, en, Object(m.a)({}, tn, Kn)),
          Object(m.a)(h, tn, Object(m.a)({}, en, Qn)),
          h),
        tr = {
          legacyMode: !0,
          get workingColorSpace() {
            return tn;
          },
          set workingColorSpace(e) {
            console.warn(
              "THREE.ColorManagement: .workingColorSpace is readonly."
            );
          },
          convert: function (e, t, n) {
            if (this.legacyMode || t === n || !t || !n) return e;
            if (er[t] && void 0 !== er[t][n]) {
              var r = er[t][n];
              return (e.r = r(e.r)), (e.g = r(e.g)), (e.b = r(e.b)), e;
            }
            throw new Error("Unsupported color space conversion.");
          },
          fromWorkingColorSpace: function (e, t) {
            return this.convert(e, this.workingColorSpace, t);
          },
          toWorkingColorSpace: function (e, t) {
            return this.convert(e, t, this.workingColorSpace);
          },
        },
        nr = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        },
        rr = { r: 0, g: 0, b: 0 },
        ir = { h: 0, s: 0, l: 0 },
        ar = { h: 0, s: 0, l: 0 };
      function or(e, t, n) {
        return (
          n < 0 && (n += 1),
          n > 1 && (n -= 1),
          n < 1 / 6
            ? e + 6 * (t - e) * n
            : n < 0.5
            ? t
            : n < 2 / 3
            ? e + 6 * (t - e) * (2 / 3 - n)
            : e
        );
      }
      function sr(e, t) {
        return (t.r = e.r), (t.g = e.g), (t.b = e.b), t;
      }
      var ur,
        lr = (function () {
          function e(t, n, r) {
            return (
              Object(y.a)(this, e),
              (this.isColor = !0),
              (this.r = 1),
              (this.g = 1),
              (this.b = 1),
              void 0 === n && void 0 === r ? this.set(t) : this.setRGB(t, n, r)
            );
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e) {
                  return (
                    e && e.isColor
                      ? this.copy(e)
                      : "number" === typeof e
                      ? this.setHex(e)
                      : "string" === typeof e && this.setStyle(e),
                    this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.r = e), (this.g = e), (this.b = e), this;
                },
              },
              {
                key: "setHex",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : en;
                  return (
                    (e = Math.floor(e)),
                    (this.r = ((e >> 16) & 255) / 255),
                    (this.g = ((e >> 8) & 255) / 255),
                    (this.b = (255 & e) / 255),
                    tr.toWorkingColorSpace(this, t),
                    this
                  );
                },
              },
              {
                key: "setRGB",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : tn;
                  return (
                    (this.r = e),
                    (this.g = t),
                    (this.b = n),
                    tr.toWorkingColorSpace(this, r),
                    this
                  );
                },
              },
              {
                key: "setHSL",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : tn;
                  if (
                    ((e = zn(e, 1)),
                    (t = Dn(t, 0, 1)),
                    (n = Dn(n, 0, 1)),
                    0 === t)
                  )
                    this.r = this.g = this.b = n;
                  else {
                    var i = n <= 0.5 ? n * (1 + t) : n + t - n * t,
                      a = 2 * n - i;
                    (this.r = or(a, i, e + 1 / 3)),
                      (this.g = or(a, i, e)),
                      (this.b = or(a, i, e - 1 / 3));
                  }
                  return tr.toWorkingColorSpace(this, r), this;
                },
              },
              {
                key: "setStyle",
                value: function (e) {
                  var t,
                    n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : en;
                  function r(t) {
                    void 0 !== t &&
                      parseFloat(t) < 1 &&
                      console.warn(
                        "THREE.Color: Alpha component of " +
                          e +
                          " will be ignored."
                      );
                  }
                  if ((t = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e))) {
                    var i,
                      a = t[1],
                      o = t[2];
                    switch (a) {
                      case "rgb":
                      case "rgba":
                        if (
                          (i =
                            /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            (this.r = Math.min(255, parseInt(i[1], 10)) / 255),
                            (this.g = Math.min(255, parseInt(i[2], 10)) / 255),
                            (this.b = Math.min(255, parseInt(i[3], 10)) / 255),
                            tr.toWorkingColorSpace(this, n),
                            r(i[4]),
                            this
                          );
                        if (
                          (i =
                            /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            (this.r = Math.min(100, parseInt(i[1], 10)) / 100),
                            (this.g = Math.min(100, parseInt(i[2], 10)) / 100),
                            (this.b = Math.min(100, parseInt(i[3], 10)) / 100),
                            tr.toWorkingColorSpace(this, n),
                            r(i[4]),
                            this
                          );
                        break;
                      case "hsl":
                      case "hsla":
                        if (
                          (i =
                            /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        ) {
                          var s = parseFloat(i[1]) / 360,
                            u = parseFloat(i[2]) / 100,
                            l = parseFloat(i[3]) / 100;
                          return r(i[4]), this.setHSL(s, u, l, n);
                        }
                    }
                  } else if ((t = /^\#([A-Fa-f\d]+)$/.exec(e))) {
                    var c = t[1],
                      h = c.length;
                    if (3 === h)
                      return (
                        (this.r =
                          parseInt(c.charAt(0) + c.charAt(0), 16) / 255),
                        (this.g =
                          parseInt(c.charAt(1) + c.charAt(1), 16) / 255),
                        (this.b =
                          parseInt(c.charAt(2) + c.charAt(2), 16) / 255),
                        tr.toWorkingColorSpace(this, n),
                        this
                      );
                    if (6 === h)
                      return (
                        (this.r =
                          parseInt(c.charAt(0) + c.charAt(1), 16) / 255),
                        (this.g =
                          parseInt(c.charAt(2) + c.charAt(3), 16) / 255),
                        (this.b =
                          parseInt(c.charAt(4) + c.charAt(5), 16) / 255),
                        tr.toWorkingColorSpace(this, n),
                        this
                      );
                  }
                  return e && e.length > 0 ? this.setColorName(e, n) : this;
                },
              },
              {
                key: "setColorName",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : en,
                    n = nr[e.toLowerCase()];
                  return (
                    void 0 !== n
                      ? this.setHex(n, t)
                      : console.warn("THREE.Color: Unknown color " + e),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.r, this.g, this.b);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
                },
              },
              {
                key: "copySRGBToLinear",
                value: function (e) {
                  return (
                    (this.r = Kn(e.r)),
                    (this.g = Kn(e.g)),
                    (this.b = Kn(e.b)),
                    this
                  );
                },
              },
              {
                key: "copyLinearToSRGB",
                value: function (e) {
                  return (
                    (this.r = Qn(e.r)),
                    (this.g = Qn(e.g)),
                    (this.b = Qn(e.b)),
                    this
                  );
                },
              },
              {
                key: "convertSRGBToLinear",
                value: function () {
                  return this.copySRGBToLinear(this), this;
                },
              },
              {
                key: "convertLinearToSRGB",
                value: function () {
                  return this.copyLinearToSRGB(this), this;
                },
              },
              {
                key: "getHex",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : en;
                  return (
                    tr.fromWorkingColorSpace(sr(this, rr), e),
                    (Dn(255 * rr.r, 0, 255) << 16) ^
                      (Dn(255 * rr.g, 0, 255) << 8) ^
                      (Dn(255 * rr.b, 0, 255) << 0)
                  );
                },
              },
              {
                key: "getHexString",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : en;
                  return ("000000" + this.getHex(e).toString(16)).slice(-6);
                },
              },
              {
                key: "getHSL",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : tn;
                  tr.fromWorkingColorSpace(sr(this, rr), t);
                  var n,
                    r,
                    i = rr.r,
                    a = rr.g,
                    o = rr.b,
                    s = Math.max(i, a, o),
                    u = Math.min(i, a, o),
                    l = (u + s) / 2;
                  if (u === s) (n = 0), (r = 0);
                  else {
                    var c = s - u;
                    switch (
                      ((r = l <= 0.5 ? c / (s + u) : c / (2 - s - u)), s)
                    ) {
                      case i:
                        n = (a - o) / c + (a < o ? 6 : 0);
                        break;
                      case a:
                        n = (o - i) / c + 2;
                        break;
                      case o:
                        n = (i - a) / c + 4;
                    }
                    n /= 6;
                  }
                  return (e.h = n), (e.s = r), (e.l = l), e;
                },
              },
              {
                key: "getRGB",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : tn;
                  return (
                    tr.fromWorkingColorSpace(sr(this, rr), t),
                    (e.r = rr.r),
                    (e.g = rr.g),
                    (e.b = rr.b),
                    e
                  );
                },
              },
              {
                key: "getStyle",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : en;
                  return (
                    tr.fromWorkingColorSpace(sr(this, rr), e),
                    e !== en
                      ? "color("
                          .concat(e, " ")
                          .concat(rr.r, " ")
                          .concat(rr.g, " ")
                          .concat(rr.b, ")")
                      : "rgb("
                          .concat((255 * rr.r) | 0, ",")
                          .concat((255 * rr.g) | 0, ",")
                          .concat((255 * rr.b) | 0, ")")
                  );
                },
              },
              {
                key: "offsetHSL",
                value: function (e, t, n) {
                  return (
                    this.getHSL(ir),
                    (ir.h += e),
                    (ir.s += t),
                    (ir.l += n),
                    this.setHSL(ir.h, ir.s, ir.l),
                    this
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.r += e.r), (this.g += e.g), (this.b += e.b), this
                  );
                },
              },
              {
                key: "addColors",
                value: function (e, t) {
                  return (
                    (this.r = e.r + t.r),
                    (this.g = e.g + t.g),
                    (this.b = e.b + t.b),
                    this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.r += e), (this.g += e), (this.b += e), this;
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.r = Math.max(0, this.r - e.r)),
                    (this.g = Math.max(0, this.g - e.g)),
                    (this.b = Math.max(0, this.b - e.b)),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.r *= e), (this.g *= e), (this.b *= e), this;
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.r += (e.r - this.r) * t),
                    (this.g += (e.g - this.g) * t),
                    (this.b += (e.b - this.b) * t),
                    this
                  );
                },
              },
              {
                key: "lerpColors",
                value: function (e, t, n) {
                  return (
                    (this.r = e.r + (t.r - e.r) * n),
                    (this.g = e.g + (t.g - e.g) * n),
                    (this.b = e.b + (t.b - e.b) * n),
                    this
                  );
                },
              },
              {
                key: "lerpHSL",
                value: function (e, t) {
                  this.getHSL(ir), e.getHSL(ar);
                  var n = Un(ir.h, ar.h, t),
                    r = Un(ir.s, ar.s, t),
                    i = Un(ir.l, ar.l, t);
                  return this.setHSL(n, r, i), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.r === this.r && e.g === this.g && e.b === this.b;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.r = e[t]),
                    (this.g = e[t + 1]),
                    (this.b = e[t + 2]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.r = e.getX(t)),
                    (this.g = e.getY(t)),
                    (this.b = e.getZ(t)),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.getHex();
                },
              },
              {
                key: Symbol.iterator,
                value: g.a.mark(function e() {
                  return g.a.wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.r;
                          case 2:
                            return (e.next = 4), this.g;
                          case 4:
                            return (e.next = 6), this.b;
                          case 6:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            e
          );
        })();
      lr.NAMES = nr;
      var cr = (function () {
          function e() {
            Object(y.a)(this, e);
          }
          return (
            Object(b.a)(e, null, [
              {
                key: "getDataURL",
                value: function (e) {
                  if (/^data:/i.test(e.src)) return e.src;
                  if ("undefined" == typeof HTMLCanvasElement) return e.src;
                  var t;
                  if (e instanceof HTMLCanvasElement) t = e;
                  else {
                    void 0 === ur && (ur = $n("canvas")),
                      (ur.width = e.width),
                      (ur.height = e.height);
                    var n = ur.getContext("2d");
                    e instanceof ImageData
                      ? n.putImageData(e, 0, 0)
                      : n.drawImage(e, 0, 0, e.width, e.height),
                      (t = ur);
                  }
                  return t.width > 2048 || t.height > 2048
                    ? (console.warn(
                        "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
                        e
                      ),
                      t.toDataURL("image/jpeg", 0.6))
                    : t.toDataURL("image/png");
                },
              },
              {
                key: "sRGBToLinear",
                value: function (e) {
                  if (
                    ("undefined" !== typeof HTMLImageElement &&
                      e instanceof HTMLImageElement) ||
                    ("undefined" !== typeof HTMLCanvasElement &&
                      e instanceof HTMLCanvasElement) ||
                    ("undefined" !== typeof ImageBitmap &&
                      e instanceof ImageBitmap)
                  ) {
                    var t = $n("canvas");
                    (t.width = e.width), (t.height = e.height);
                    var n = t.getContext("2d");
                    n.drawImage(e, 0, 0, e.width, e.height);
                    for (
                      var r = n.getImageData(0, 0, e.width, e.height),
                        i = r.data,
                        a = 0;
                      a < i.length;
                      a++
                    )
                      i[a] = 255 * Kn(i[a] / 255);
                    return n.putImageData(r, 0, 0), t;
                  }
                  if (e.data) {
                    for (var o = e.data.slice(0), s = 0; s < o.length; s++)
                      o instanceof Uint8Array || o instanceof Uint8ClampedArray
                        ? (o[s] = Math.floor(255 * Kn(o[s] / 255)))
                        : (o[s] = Kn(o[s]));
                    return { data: o, width: e.width, height: e.height };
                  }
                  return (
                    console.warn(
                      "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
                    ),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        hr = (function () {
          function e() {
            var t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null;
            Object(y.a)(this, e),
              (this.isSource = !0),
              (this.uuid = Nn()),
              (this.data = t),
              (this.version = 0);
          }
          return (
            Object(b.a)(e, [
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.images[this.uuid])
                    return e.images[this.uuid];
                  var n = { uuid: this.uuid, url: "" },
                    r = this.data;
                  if (null !== r) {
                    var i;
                    if (Array.isArray(r)) {
                      i = [];
                      for (var a = 0, o = r.length; a < o; a++)
                        r[a].isDataTexture
                          ? i.push(fr(r[a].image))
                          : i.push(fr(r[a]));
                    } else i = fr(r);
                    n.url = i;
                  }
                  return t || (e.images[this.uuid] = n), n;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            e
          );
        })();
      function fr(e) {
        return ("undefined" !== typeof HTMLImageElement &&
          e instanceof HTMLImageElement) ||
          ("undefined" !== typeof HTMLCanvasElement &&
            e instanceof HTMLCanvasElement) ||
          ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
          ? cr.getDataURL(e)
          : e.data
          ? {
              data: Array.from(e.data),
              width: e.width,
              height: e.height,
              type: e.data.constructor.name,
            }
          : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
      }
      var dr = 0,
        pr = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : t.DEFAULT_IMAGE,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : t.DEFAULT_MAPPING,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : Ee,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : Ee,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : Le,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : Ne,
              l =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : $e,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : ze,
              h =
                arguments.length > 8 && void 0 !== arguments[8]
                  ? arguments[8]
                  : 1,
              p =
                arguments.length > 9 && void 0 !== arguments[9]
                  ? arguments[9]
                  : Xt;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isTexture =
                !0),
              Object.defineProperty(Object(d.a)(e), "id", { value: dr++ }),
              (e.uuid = Nn()),
              (e.name = ""),
              (e.source = new hr(n)),
              (e.mipmaps = []),
              (e.mapping = i),
              (e.wrapS = a),
              (e.wrapT = o),
              (e.magFilter = s),
              (e.minFilter = u),
              (e.anisotropy = h),
              (e.format = l),
              (e.internalFormat = null),
              (e.type = c),
              (e.offset = new qn(0, 0)),
              (e.repeat = new qn(1, 1)),
              (e.center = new qn(0, 0)),
              (e.rotation = 0),
              (e.matrixAutoUpdate = !0),
              (e.matrix = new Xn()),
              (e.generateMipmaps = !0),
              (e.premultiplyAlpha = !1),
              (e.flipY = !0),
              (e.unpackAlignment = 4),
              (e.encoding = p),
              (e.userData = {}),
              (e.version = 0),
              (e.onUpdate = null),
              (e.isRenderTargetTexture = !1),
              (e.needsPMREMUpdate = !1),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.setUvTransform(
                    this.offset.x,
                    this.offset.y,
                    this.repeat.x,
                    this.repeat.y,
                    this.rotation,
                    this.center.x,
                    this.center.y
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.source = e.source),
                    (this.mipmaps = e.mipmaps.slice(0)),
                    (this.mapping = e.mapping),
                    (this.wrapS = e.wrapS),
                    (this.wrapT = e.wrapT),
                    (this.magFilter = e.magFilter),
                    (this.minFilter = e.minFilter),
                    (this.anisotropy = e.anisotropy),
                    (this.format = e.format),
                    (this.internalFormat = e.internalFormat),
                    (this.type = e.type),
                    this.offset.copy(e.offset),
                    this.repeat.copy(e.repeat),
                    this.center.copy(e.center),
                    (this.rotation = e.rotation),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    this.matrix.copy(e.matrix),
                    (this.generateMipmaps = e.generateMipmaps),
                    (this.premultiplyAlpha = e.premultiplyAlpha),
                    (this.flipY = e.flipY),
                    (this.unpackAlignment = e.unpackAlignment),
                    (this.encoding = e.encoding),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    (this.needsUpdate = !0),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.textures[this.uuid])
                    return e.textures[this.uuid];
                  var n = {
                    metadata: {
                      version: 4.5,
                      type: "Texture",
                      generator: "Texture.toJSON",
                    },
                    uuid: this.uuid,
                    name: this.name,
                    image: this.source.toJSON(e).uuid,
                    mapping: this.mapping,
                    repeat: [this.repeat.x, this.repeat.y],
                    offset: [this.offset.x, this.offset.y],
                    center: [this.center.x, this.center.y],
                    rotation: this.rotation,
                    wrap: [this.wrapS, this.wrapT],
                    format: this.format,
                    type: this.type,
                    encoding: this.encoding,
                    minFilter: this.minFilter,
                    magFilter: this.magFilter,
                    anisotropy: this.anisotropy,
                    flipY: this.flipY,
                    premultiplyAlpha: this.premultiplyAlpha,
                    unpackAlignment: this.unpackAlignment,
                  };
                  return (
                    "{}" !== JSON.stringify(this.userData) &&
                      (n.userData = this.userData),
                    t || (e.textures[this.uuid] = n),
                    n
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "transformUv",
                value: function (e) {
                  if (this.mapping !== be) return e;
                  if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
                    switch (this.wrapS) {
                      case Te:
                        e.x = e.x - Math.floor(e.x);
                        break;
                      case Ee:
                        e.x = e.x < 0 ? 0 : 1;
                        break;
                      case Oe:
                        1 === Math.abs(Math.floor(e.x) % 2)
                          ? (e.x = Math.ceil(e.x) - e.x)
                          : (e.x = e.x - Math.floor(e.x));
                    }
                  if (e.y < 0 || e.y > 1)
                    switch (this.wrapT) {
                      case Te:
                        e.y = e.y - Math.floor(e.y);
                        break;
                      case Ee:
                        e.y = e.y < 0 ? 0 : 1;
                        break;
                      case Oe:
                        1 === Math.abs(Math.floor(e.y) % 2)
                          ? (e.y = Math.ceil(e.y) - e.y)
                          : (e.y = e.y - Math.floor(e.y));
                    }
                  return this.flipY && (e.y = 1 - e.y), e;
                },
              },
              {
                key: "image",
                get: function () {
                  return this.source.data;
                },
                set: function (e) {
                  this.source.data = e;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && (this.version++, (this.source.needsUpdate = !0));
                },
              },
            ]),
            t
          );
        })(Pn);
      (pr.DEFAULT_IMAGE = null), (pr.DEFAULT_MAPPING = be);
      var mr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            Object(y.a)(this, e),
              (e.prototype.isVector4 = !0),
              (this.x = t),
              (this.y = n),
              (this.z = r),
              (this.w = i);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t, n, r) {
                  return (
                    (this.x = e), (this.y = t), (this.z = n), (this.w = r), this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (
                    (this.x = e), (this.y = e), (this.z = e), (this.w = e), this
                  );
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setZ",
                value: function (e) {
                  return (this.z = e), this;
                },
              },
              {
                key: "setW",
                value: function (e) {
                  return (this.w = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    case 2:
                      this.z = t;
                      break;
                    case 3:
                      this.w = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    case 2:
                      return this.z;
                    case 3:
                      return this.w;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y, this.z, this.w);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.x = e.x),
                    (this.y = e.y),
                    (this.z = e.z),
                    (this.w = void 0 !== e.w ? e.w : 1),
                    this
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.x += e.x),
                    (this.y += e.y),
                    (this.z += e.z),
                    (this.w += e.w),
                    this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (
                    (this.x += e),
                    (this.y += e),
                    (this.z += e),
                    (this.w += e),
                    this
                  );
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x + t.x),
                    (this.y = e.y + t.y),
                    (this.z = e.z + t.z),
                    (this.w = e.w + t.w),
                    this
                  );
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (
                    (this.x += e.x * t),
                    (this.y += e.y * t),
                    (this.z += e.z * t),
                    (this.w += e.w * t),
                    this
                  );
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.x -= e.x),
                    (this.y -= e.y),
                    (this.z -= e.z),
                    (this.w -= e.w),
                    this
                  );
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (
                    (this.x -= e),
                    (this.y -= e),
                    (this.z -= e),
                    (this.w -= e),
                    this
                  );
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x - t.x),
                    (this.y = e.y - t.y),
                    (this.z = e.z - t.z),
                    (this.w = e.w - t.w),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.x *= e.x),
                    (this.y *= e.y),
                    (this.z *= e.z),
                    (this.w *= e.w),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (
                    (this.x *= e),
                    (this.y *= e),
                    (this.z *= e),
                    (this.w *= e),
                    this
                  );
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = this.w,
                    a = e.elements;
                  return (
                    (this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i),
                    (this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i),
                    (this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i),
                    (this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i),
                    this
                  );
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "setAxisAngleFromQuaternion",
                value: function (e) {
                  this.w = 2 * Math.acos(e.w);
                  var t = Math.sqrt(1 - e.w * e.w);
                  return (
                    t < 1e-4
                      ? ((this.x = 1), (this.y = 0), (this.z = 0))
                      : ((this.x = e.x / t),
                        (this.y = e.y / t),
                        (this.z = e.z / t)),
                    this
                  );
                },
              },
              {
                key: "setAxisAngleFromRotationMatrix",
                value: function (e) {
                  var t,
                    n,
                    r,
                    i,
                    a = e.elements,
                    o = a[0],
                    s = a[4],
                    u = a[8],
                    l = a[1],
                    c = a[5],
                    h = a[9],
                    f = a[2],
                    d = a[6],
                    p = a[10];
                  if (
                    Math.abs(s - l) < 0.01 &&
                    Math.abs(u - f) < 0.01 &&
                    Math.abs(h - d) < 0.01
                  ) {
                    if (
                      Math.abs(s + l) < 0.1 &&
                      Math.abs(u + f) < 0.1 &&
                      Math.abs(h + d) < 0.1 &&
                      Math.abs(o + c + p - 3) < 0.1
                    )
                      return this.set(1, 0, 0, 0), this;
                    t = Math.PI;
                    var m = (o + 1) / 2,
                      v = (c + 1) / 2,
                      g = (p + 1) / 2,
                      y = (s + l) / 4,
                      b = (u + f) / 4,
                      x = (h + d) / 4;
                    return (
                      m > v && m > g
                        ? m < 0.01
                          ? ((n = 0), (r = 0.707106781), (i = 0.707106781))
                          : ((r = y / (n = Math.sqrt(m))), (i = b / n))
                        : v > g
                        ? v < 0.01
                          ? ((n = 0.707106781), (r = 0), (i = 0.707106781))
                          : ((n = y / (r = Math.sqrt(v))), (i = x / r))
                        : g < 0.01
                        ? ((n = 0.707106781), (r = 0.707106781), (i = 0))
                        : ((n = b / (i = Math.sqrt(g))), (r = x / i)),
                      this.set(n, r, i, t),
                      this
                    );
                  }
                  var _ = Math.sqrt(
                    (d - h) * (d - h) + (u - f) * (u - f) + (l - s) * (l - s)
                  );
                  return (
                    Math.abs(_) < 0.001 && (_ = 1),
                    (this.x = (d - h) / _),
                    (this.y = (u - f) / _),
                    (this.z = (l - s) / _),
                    (this.w = Math.acos((o + c + p - 1) / 2)),
                    this
                  );
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    (this.z = Math.min(this.z, e.z)),
                    (this.w = Math.min(this.w, e.w)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    (this.z = Math.max(this.z, e.z)),
                    (this.w = Math.max(this.w, e.w)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                    (this.w = Math.max(e.w, Math.min(t.w, this.w))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    (this.z = Math.max(e, Math.min(t, this.z))),
                    (this.w = Math.max(e, Math.min(t, this.w))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    (this.z = Math.floor(this.z)),
                    (this.w = Math.floor(this.w)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    (this.z = Math.ceil(this.z)),
                    (this.w = Math.ceil(this.w)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    (this.z = Math.round(this.z)),
                    (this.w = Math.round(this.w)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x =
                      this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                    (this.y =
                      this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                    (this.z =
                      this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
                    (this.w =
                      this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (
                    (this.x = -this.x),
                    (this.y = -this.y),
                    (this.z = -this.z),
                    (this.w = -this.w),
                    this
                  );
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return (
                    this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                  );
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return (
                    this.x * this.x +
                    this.y * this.y +
                    this.z * this.z +
                    this.w * this.w
                  );
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(
                    this.x * this.x +
                      this.y * this.y +
                      this.z * this.z +
                      this.w * this.w
                  );
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return (
                    Math.abs(this.x) +
                    Math.abs(this.y) +
                    Math.abs(this.z) +
                    Math.abs(this.w)
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    (this.z += (e.z - this.z) * t),
                    (this.w += (e.w - this.w) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    (this.z = e.z + (t.z - e.z) * n),
                    (this.w = e.w + (t.w - e.w) * n),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.x === this.x &&
                    e.y === this.y &&
                    e.z === this.z &&
                    e.w === this.w
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.x = e[t]),
                    (this.y = e[t + 1]),
                    (this.z = e[t + 2]),
                    (this.w = e[t + 3]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.x),
                    (e[t + 1] = this.y),
                    (e[t + 2] = this.z),
                    (e[t + 3] = this.w),
                    e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.x = e.getX(t)),
                    (this.y = e.getY(t)),
                    (this.z = e.getZ(t)),
                    (this.w = e.getW(t)),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()),
                    (this.y = Math.random()),
                    (this.z = Math.random()),
                    (this.w = Math.random()),
                    this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: g.a.mark(function e() {
                  return g.a.wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                            return (e.next = 6), this.z;
                          case 6:
                            return (e.next = 8), this.w;
                          case 8:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
              {
                key: "width",
                get: function () {
                  return this.z;
                },
                set: function (e) {
                  this.z = e;
                },
              },
              {
                key: "height",
                get: function () {
                  return this.w;
                },
                set: function (e) {
                  this.w = e;
                },
              },
            ]),
            e
          );
        })(),
        vr = (function (e) {
          function t(e, n) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
            Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isWebGLRenderTarget = !0),
              (i.width = e),
              (i.height = n),
              (i.depth = 1),
              (i.scissor = new mr(0, 0, e, n)),
              (i.scissorTest = !1),
              (i.viewport = new mr(0, 0, e, n));
            var o = { width: e, height: n, depth: 1 };
            return (
              (i.texture = new pr(
                o,
                a.mapping,
                a.wrapS,
                a.wrapT,
                a.magFilter,
                a.minFilter,
                a.format,
                a.type,
                a.anisotropy,
                a.encoding
              )),
              (i.texture.isRenderTargetTexture = !0),
              (i.texture.flipY = !1),
              (i.texture.generateMipmaps =
                void 0 !== a.generateMipmaps && a.generateMipmaps),
              (i.texture.internalFormat =
                void 0 !== a.internalFormat ? a.internalFormat : null),
              (i.texture.minFilter = void 0 !== a.minFilter ? a.minFilter : Le),
              (i.depthBuffer = void 0 === a.depthBuffer || a.depthBuffer),
              (i.stencilBuffer = void 0 !== a.stencilBuffer && a.stencilBuffer),
              (i.depthTexture =
                void 0 !== a.depthTexture ? a.depthTexture : null),
              (i.samples = void 0 !== a.samples ? a.samples : 0),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "setSize",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 1;
                  (this.width === e && this.height === t && this.depth === n) ||
                    ((this.width = e),
                    (this.height = t),
                    (this.depth = n),
                    (this.texture.image.width = e),
                    (this.texture.image.height = t),
                    (this.texture.image.depth = n),
                    this.dispose()),
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.width = e.width),
                    (this.height = e.height),
                    (this.depth = e.depth),
                    this.viewport.copy(e.viewport),
                    (this.texture = e.texture.clone()),
                    (this.texture.isRenderTargetTexture = !0);
                  var t = Object.assign({}, e.texture.image);
                  return (
                    (this.texture.source = new hr(t)),
                    (this.depthBuffer = e.depthBuffer),
                    (this.stencilBuffer = e.stencilBuffer),
                    null !== e.depthTexture &&
                      (this.depthTexture = e.depthTexture.clone()),
                    (this.samples = e.samples),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            t
          );
        })(Pn),
        gr = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, null)
              )).isDataArrayTexture = !0),
              (e.image = { data: n, width: i, height: a, depth: o }),
              (e.magFilter = ke),
              (e.minFilter = ke),
              (e.wrapR = Ee),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return Object(p.a)(t, e), t;
        })(pr),
        yr = (function (e) {
          function t(e, n, i) {
            var a;
            return (
              Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isWebGLArrayRenderTarget = !0),
              (a.depth = i),
              (a.texture = new gr(null, e, n, i)),
              (a.texture.isRenderTargetTexture = !0),
              a
            );
          }
          return Object(p.a)(t, e), t;
        })(vr),
        br = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, null)
              )).isData3DTexture = !0),
              (e.image = { data: n, width: i, height: a, depth: o }),
              (e.magFilter = ke),
              (e.minFilter = ke),
              (e.wrapR = Ee),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return Object(p.a)(t, e), t;
        })(pr),
        xr = (function (e) {
          function t(e, n, i) {
            var a;
            return (
              Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isWebGL3DRenderTarget = !0),
              (a.depth = i),
              (a.texture = new br(null, e, n, i)),
              (a.texture.isRenderTargetTexture = !0),
              a
            );
          }
          return Object(p.a)(t, e), t;
        })(vr),
        _r = (function (e) {
          function t(e, n, i) {
            var a,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {};
            Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, o)
              )).isWebGLMultipleRenderTargets = !0);
            var s = a.texture;
            a.texture = [];
            for (var u = 0; u < i; u++)
              (a.texture[u] = s.clone()),
                (a.texture[u].isRenderTargetTexture = !0);
            return a;
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "setSize",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 1;
                  if (
                    this.width !== e ||
                    this.height !== t ||
                    this.depth !== n
                  ) {
                    (this.width = e), (this.height = t), (this.depth = n);
                    for (var r = 0, i = this.texture.length; r < i; r++)
                      (this.texture[r].image.width = e),
                        (this.texture[r].image.height = t),
                        (this.texture[r].image.depth = n);
                    this.dispose();
                  }
                  return (
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t),
                    this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  this.dispose(),
                    (this.width = e.width),
                    (this.height = e.height),
                    (this.depth = e.depth),
                    this.viewport.set(0, 0, this.width, this.height),
                    this.scissor.set(0, 0, this.width, this.height),
                    (this.depthBuffer = e.depthBuffer),
                    (this.stencilBuffer = e.stencilBuffer),
                    null !== e.depthTexture &&
                      (this.depthTexture = e.depthTexture.clone()),
                    (this.texture.length = 0);
                  for (var t = 0, n = e.texture.length; t < n; t++)
                    (this.texture[t] = e.texture[t].clone()),
                      (this.texture[t].isRenderTargetTexture = !0);
                  return this;
                },
              },
            ]),
            t
          );
        })(vr),
        wr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            Object(y.a)(this, e),
              (this.isQuaternion = !0),
              (this._x = t),
              (this._y = n),
              (this._z = r),
              (this._w = i);
          }
          return (
            Object(b.a)(
              e,
              [
                {
                  key: "set",
                  value: function (e, t, n, r) {
                    return (
                      (this._x = e),
                      (this._y = t),
                      (this._z = n),
                      (this._w = r),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor(
                      this._x,
                      this._y,
                      this._z,
                      this._w
                    );
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      (this._x = e.x),
                      (this._y = e.y),
                      (this._z = e.z),
                      (this._w = e.w),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "setFromEuler",
                  value: function (e, t) {
                    var n = e._x,
                      r = e._y,
                      i = e._z,
                      a = e._order,
                      o = Math.cos,
                      s = Math.sin,
                      u = o(n / 2),
                      l = o(r / 2),
                      c = o(i / 2),
                      h = s(n / 2),
                      f = s(r / 2),
                      d = s(i / 2);
                    switch (a) {
                      case "XYZ":
                        (this._x = h * l * c + u * f * d),
                          (this._y = u * f * c - h * l * d),
                          (this._z = u * l * d + h * f * c),
                          (this._w = u * l * c - h * f * d);
                        break;
                      case "YXZ":
                        (this._x = h * l * c + u * f * d),
                          (this._y = u * f * c - h * l * d),
                          (this._z = u * l * d - h * f * c),
                          (this._w = u * l * c + h * f * d);
                        break;
                      case "ZXY":
                        (this._x = h * l * c - u * f * d),
                          (this._y = u * f * c + h * l * d),
                          (this._z = u * l * d + h * f * c),
                          (this._w = u * l * c - h * f * d);
                        break;
                      case "ZYX":
                        (this._x = h * l * c - u * f * d),
                          (this._y = u * f * c + h * l * d),
                          (this._z = u * l * d - h * f * c),
                          (this._w = u * l * c + h * f * d);
                        break;
                      case "YZX":
                        (this._x = h * l * c + u * f * d),
                          (this._y = u * f * c + h * l * d),
                          (this._z = u * l * d - h * f * c),
                          (this._w = u * l * c - h * f * d);
                        break;
                      case "XZY":
                        (this._x = h * l * c - u * f * d),
                          (this._y = u * f * c - h * l * d),
                          (this._z = u * l * d + h * f * c),
                          (this._w = u * l * c + h * f * d);
                        break;
                      default:
                        console.warn(
                          "THREE.Quaternion: .setFromEuler() encountered an unknown order: " +
                            a
                        );
                    }
                    return !1 !== t && this._onChangeCallback(), this;
                  },
                },
                {
                  key: "setFromAxisAngle",
                  value: function (e, t) {
                    var n = t / 2,
                      r = Math.sin(n);
                    return (
                      (this._x = e.x * r),
                      (this._y = e.y * r),
                      (this._z = e.z * r),
                      (this._w = Math.cos(n)),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "setFromRotationMatrix",
                  value: function (e) {
                    var t = e.elements,
                      n = t[0],
                      r = t[4],
                      i = t[8],
                      a = t[1],
                      o = t[5],
                      s = t[9],
                      u = t[2],
                      l = t[6],
                      c = t[10],
                      h = n + o + c;
                    if (h > 0) {
                      var f = 0.5 / Math.sqrt(h + 1);
                      (this._w = 0.25 / f),
                        (this._x = (l - s) * f),
                        (this._y = (i - u) * f),
                        (this._z = (a - r) * f);
                    } else if (n > o && n > c) {
                      var d = 2 * Math.sqrt(1 + n - o - c);
                      (this._w = (l - s) / d),
                        (this._x = 0.25 * d),
                        (this._y = (r + a) / d),
                        (this._z = (i + u) / d);
                    } else if (o > c) {
                      var p = 2 * Math.sqrt(1 + o - n - c);
                      (this._w = (i - u) / p),
                        (this._x = (r + a) / p),
                        (this._y = 0.25 * p),
                        (this._z = (s + l) / p);
                    } else {
                      var m = 2 * Math.sqrt(1 + c - n - o);
                      (this._w = (a - r) / m),
                        (this._x = (i + u) / m),
                        (this._y = (s + l) / m),
                        (this._z = 0.25 * m);
                    }
                    return this._onChangeCallback(), this;
                  },
                },
                {
                  key: "setFromUnitVectors",
                  value: function (e, t) {
                    var n = e.dot(t) + 1;
                    return (
                      n < Number.EPSILON
                        ? ((n = 0),
                          Math.abs(e.x) > Math.abs(e.z)
                            ? ((this._x = -e.y),
                              (this._y = e.x),
                              (this._z = 0),
                              (this._w = n))
                            : ((this._x = 0),
                              (this._y = -e.z),
                              (this._z = e.y),
                              (this._w = n)))
                        : ((this._x = e.y * t.z - e.z * t.y),
                          (this._y = e.z * t.x - e.x * t.z),
                          (this._z = e.x * t.y - e.y * t.x),
                          (this._w = n)),
                      this.normalize()
                    );
                  },
                },
                {
                  key: "angleTo",
                  value: function (e) {
                    return 2 * Math.acos(Math.abs(Dn(this.dot(e), -1, 1)));
                  },
                },
                {
                  key: "rotateTowards",
                  value: function (e, t) {
                    var n = this.angleTo(e);
                    if (0 === n) return this;
                    var r = Math.min(1, t / n);
                    return this.slerp(e, r), this;
                  },
                },
                {
                  key: "identity",
                  value: function () {
                    return this.set(0, 0, 0, 1);
                  },
                },
                {
                  key: "invert",
                  value: function () {
                    return this.conjugate();
                  },
                },
                {
                  key: "conjugate",
                  value: function () {
                    return (
                      (this._x *= -1),
                      (this._y *= -1),
                      (this._z *= -1),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "dot",
                  value: function (e) {
                    return (
                      this._x * e._x +
                      this._y * e._y +
                      this._z * e._z +
                      this._w * e._w
                    );
                  },
                },
                {
                  key: "lengthSq",
                  value: function () {
                    return (
                      this._x * this._x +
                      this._y * this._y +
                      this._z * this._z +
                      this._w * this._w
                    );
                  },
                },
                {
                  key: "length",
                  value: function () {
                    return Math.sqrt(
                      this._x * this._x +
                        this._y * this._y +
                        this._z * this._z +
                        this._w * this._w
                    );
                  },
                },
                {
                  key: "normalize",
                  value: function () {
                    var e = this.length();
                    return (
                      0 === e
                        ? ((this._x = 0),
                          (this._y = 0),
                          (this._z = 0),
                          (this._w = 1))
                        : ((e = 1 / e),
                          (this._x = this._x * e),
                          (this._y = this._y * e),
                          (this._z = this._z * e),
                          (this._w = this._w * e)),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "multiply",
                  value: function (e) {
                    return this.multiplyQuaternions(this, e);
                  },
                },
                {
                  key: "premultiply",
                  value: function (e) {
                    return this.multiplyQuaternions(e, this);
                  },
                },
                {
                  key: "multiplyQuaternions",
                  value: function (e, t) {
                    var n = e._x,
                      r = e._y,
                      i = e._z,
                      a = e._w,
                      o = t._x,
                      s = t._y,
                      u = t._z,
                      l = t._w;
                    return (
                      (this._x = n * l + a * o + r * u - i * s),
                      (this._y = r * l + a * s + i * o - n * u),
                      (this._z = i * l + a * u + n * s - r * o),
                      (this._w = a * l - n * o - r * s - i * u),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "slerp",
                  value: function (e, t) {
                    if (0 === t) return this;
                    if (1 === t) return this.copy(e);
                    var n = this._x,
                      r = this._y,
                      i = this._z,
                      a = this._w,
                      o = a * e._w + n * e._x + r * e._y + i * e._z;
                    if (
                      (o < 0
                        ? ((this._w = -e._w),
                          (this._x = -e._x),
                          (this._y = -e._y),
                          (this._z = -e._z),
                          (o = -o))
                        : this.copy(e),
                      o >= 1)
                    )
                      return (
                        (this._w = a),
                        (this._x = n),
                        (this._y = r),
                        (this._z = i),
                        this
                      );
                    var s = 1 - o * o;
                    if (s <= Number.EPSILON) {
                      var u = 1 - t;
                      return (
                        (this._w = u * a + t * this._w),
                        (this._x = u * n + t * this._x),
                        (this._y = u * r + t * this._y),
                        (this._z = u * i + t * this._z),
                        this.normalize(),
                        this._onChangeCallback(),
                        this
                      );
                    }
                    var l = Math.sqrt(s),
                      c = Math.atan2(l, o),
                      h = Math.sin((1 - t) * c) / l,
                      f = Math.sin(t * c) / l;
                    return (
                      (this._w = a * h + this._w * f),
                      (this._x = n * h + this._x * f),
                      (this._y = r * h + this._y * f),
                      (this._z = i * h + this._z * f),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "slerpQuaternions",
                  value: function (e, t, n) {
                    return this.copy(e).slerp(t, n);
                  },
                },
                {
                  key: "random",
                  value: function () {
                    var e = Math.random(),
                      t = Math.sqrt(1 - e),
                      n = Math.sqrt(e),
                      r = 2 * Math.PI * Math.random(),
                      i = 2 * Math.PI * Math.random();
                    return this.set(
                      t * Math.cos(r),
                      n * Math.sin(i),
                      n * Math.cos(i),
                      t * Math.sin(r)
                    );
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    return (
                      e._x === this._x &&
                      e._y === this._y &&
                      e._z === this._z &&
                      e._w === this._w
                    );
                  },
                },
                {
                  key: "fromArray",
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                    return (
                      (this._x = e[t]),
                      (this._y = e[t + 1]),
                      (this._z = e[t + 2]),
                      (this._w = e[t + 3]),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "toArray",
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : [],
                      t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0;
                    return (
                      (e[t] = this._x),
                      (e[t + 1] = this._y),
                      (e[t + 2] = this._z),
                      (e[t + 3] = this._w),
                      e
                    );
                  },
                },
                {
                  key: "fromBufferAttribute",
                  value: function (e, t) {
                    return (
                      (this._x = e.getX(t)),
                      (this._y = e.getY(t)),
                      (this._z = e.getZ(t)),
                      (this._w = e.getW(t)),
                      this
                    );
                  },
                },
                {
                  key: "_onChange",
                  value: function (e) {
                    return (this._onChangeCallback = e), this;
                  },
                },
                { key: "_onChangeCallback", value: function () {} },
                {
                  key: Symbol.iterator,
                  value: g.a.mark(function e() {
                    return g.a.wrap(
                      function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              return (e.next = 2), this._x;
                            case 2:
                              return (e.next = 4), this._y;
                            case 4:
                              return (e.next = 6), this._z;
                            case 6:
                              return (e.next = 8), this._w;
                            case 8:
                            case "end":
                              return e.stop();
                          }
                      },
                      e,
                      this
                    );
                  }),
                },
                {
                  key: "x",
                  get: function () {
                    return this._x;
                  },
                  set: function (e) {
                    (this._x = e), this._onChangeCallback();
                  },
                },
                {
                  key: "y",
                  get: function () {
                    return this._y;
                  },
                  set: function (e) {
                    (this._y = e), this._onChangeCallback();
                  },
                },
                {
                  key: "z",
                  get: function () {
                    return this._z;
                  },
                  set: function (e) {
                    (this._z = e), this._onChangeCallback();
                  },
                },
                {
                  key: "w",
                  get: function () {
                    return this._w;
                  },
                  set: function (e) {
                    (this._w = e), this._onChangeCallback();
                  },
                },
              ],
              [
                {
                  key: "slerpFlat",
                  value: function (e, t, n, r, i, a, o) {
                    var s = n[r + 0],
                      u = n[r + 1],
                      l = n[r + 2],
                      c = n[r + 3],
                      h = i[a + 0],
                      f = i[a + 1],
                      d = i[a + 2],
                      p = i[a + 3];
                    if (0 === o)
                      return (
                        (e[t + 0] = s),
                        (e[t + 1] = u),
                        (e[t + 2] = l),
                        void (e[t + 3] = c)
                      );
                    if (1 === o)
                      return (
                        (e[t + 0] = h),
                        (e[t + 1] = f),
                        (e[t + 2] = d),
                        void (e[t + 3] = p)
                      );
                    if (c !== p || s !== h || u !== f || l !== d) {
                      var m = 1 - o,
                        v = s * h + u * f + l * d + c * p,
                        g = v >= 0 ? 1 : -1,
                        y = 1 - v * v;
                      if (y > Number.EPSILON) {
                        var b = Math.sqrt(y),
                          x = Math.atan2(b, v * g);
                        (m = Math.sin(m * x) / b), (o = Math.sin(o * x) / b);
                      }
                      var _ = o * g;
                      if (
                        ((s = s * m + h * _),
                        (u = u * m + f * _),
                        (l = l * m + d * _),
                        (c = c * m + p * _),
                        m === 1 - o)
                      ) {
                        var w = 1 / Math.sqrt(s * s + u * u + l * l + c * c);
                        (s *= w), (u *= w), (l *= w), (c *= w);
                      }
                    }
                    (e[t] = s), (e[t + 1] = u), (e[t + 2] = l), (e[t + 3] = c);
                  },
                },
                {
                  key: "multiplyQuaternionsFlat",
                  value: function (e, t, n, r, i, a) {
                    var o = n[r],
                      s = n[r + 1],
                      u = n[r + 2],
                      l = n[r + 3],
                      c = i[a],
                      h = i[a + 1],
                      f = i[a + 2],
                      d = i[a + 3];
                    return (
                      (e[t] = o * d + l * c + s * f - u * h),
                      (e[t + 1] = s * d + l * h + u * c - o * f),
                      (e[t + 2] = u * d + l * f + o * h - s * c),
                      (e[t + 3] = l * d - o * c - s * h - u * f),
                      e
                    );
                  },
                },
              ]
            ),
            e
          );
        })(),
        Sr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            Object(y.a)(this, e),
              (e.prototype.isVector3 = !0),
              (this.x = t),
              (this.y = n),
              (this.z = r);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    void 0 === n && (n = this.z),
                    (this.x = e),
                    (this.y = t),
                    (this.z = n),
                    this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.x = e), (this.y = e), (this.z = e), this;
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setZ",
                value: function (e) {
                  return (this.z = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    case 2:
                      this.z = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    case 2:
                      return this.z;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y, this.z);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.x += e.x), (this.y += e.y), (this.z += e.z), this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.x += e), (this.y += e), (this.z += e), this;
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x + t.x),
                    (this.y = e.y + t.y),
                    (this.z = e.z + t.z),
                    this
                  );
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (
                    (this.x += e.x * t),
                    (this.y += e.y * t),
                    (this.z += e.z * t),
                    this
                  );
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this
                  );
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (this.x -= e), (this.y -= e), (this.z -= e), this;
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x - t.x),
                    (this.y = e.y - t.y),
                    (this.z = e.z - t.z),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.x *= e), (this.y *= e), (this.z *= e), this;
                },
              },
              {
                key: "multiplyVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x * t.x),
                    (this.y = e.y * t.y),
                    (this.z = e.z * t.z),
                    this
                  );
                },
              },
              {
                key: "applyEuler",
                value: function (e) {
                  return this.applyQuaternion(Tr.setFromEuler(e));
                },
              },
              {
                key: "applyAxisAngle",
                value: function (e, t) {
                  return this.applyQuaternion(Tr.setFromAxisAngle(e, t));
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.elements;
                  return (
                    (this.x = i[0] * t + i[3] * n + i[6] * r),
                    (this.y = i[1] * t + i[4] * n + i[7] * r),
                    (this.z = i[2] * t + i[5] * n + i[8] * r),
                    this
                  );
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  return this.applyMatrix3(e).normalize();
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.elements,
                    a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
                  return (
                    (this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a),
                    (this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a),
                    (this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a),
                    this
                  );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.x,
                    a = e.y,
                    o = e.z,
                    s = e.w,
                    u = s * t + a * r - o * n,
                    l = s * n + o * t - i * r,
                    c = s * r + i * n - a * t,
                    h = -i * t - a * n - o * r;
                  return (
                    (this.x = u * s + h * -i + l * -o - c * -a),
                    (this.y = l * s + h * -a + c * -i - u * -o),
                    (this.z = c * s + h * -o + u * -a - l * -i),
                    this
                  );
                },
              },
              {
                key: "project",
                value: function (e) {
                  return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
                    e.projectionMatrix
                  );
                },
              },
              {
                key: "unproject",
                value: function (e) {
                  return this.applyMatrix4(
                    e.projectionMatrixInverse
                  ).applyMatrix4(e.matrixWorld);
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    i = e.elements;
                  return (
                    (this.x = i[0] * t + i[4] * n + i[8] * r),
                    (this.y = i[1] * t + i[5] * n + i[9] * r),
                    (this.z = i[2] * t + i[6] * n + i[10] * r),
                    this.normalize()
                  );
                },
              },
              {
                key: "divide",
                value: function (e) {
                  return (
                    (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this
                  );
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    (this.z = Math.min(this.z, e.z)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    (this.z = Math.max(this.z, e.z)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    (this.z = Math.max(e, Math.min(t, this.z))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    (this.z = Math.floor(this.z)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    (this.z = Math.ceil(this.z)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    (this.z = Math.round(this.z)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x =
                      this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                    (this.y =
                      this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                    (this.z =
                      this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (
                    (this.x = -this.x),
                    (this.y = -this.y),
                    (this.z = -this.z),
                    this
                  );
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return this.x * e.x + this.y * e.y + this.z * e.z;
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return this.x * this.x + this.y * this.y + this.z * this.z;
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(
                    this.x * this.x + this.y * this.y + this.z * this.z
                  );
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    (this.z += (e.z - this.z) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    (this.z = e.z + (t.z - e.z) * n),
                    this
                  );
                },
              },
              {
                key: "cross",
                value: function (e) {
                  return this.crossVectors(this, e);
                },
              },
              {
                key: "crossVectors",
                value: function (e, t) {
                  var n = e.x,
                    r = e.y,
                    i = e.z,
                    a = t.x,
                    o = t.y,
                    s = t.z;
                  return (
                    (this.x = r * s - i * o),
                    (this.y = i * a - n * s),
                    (this.z = n * o - r * a),
                    this
                  );
                },
              },
              {
                key: "projectOnVector",
                value: function (e) {
                  var t = e.lengthSq();
                  if (0 === t) return this.set(0, 0, 0);
                  var n = e.dot(this) / t;
                  return this.copy(e).multiplyScalar(n);
                },
              },
              {
                key: "projectOnPlane",
                value: function (e) {
                  return Mr.copy(this).projectOnVector(e), this.sub(Mr);
                },
              },
              {
                key: "reflect",
                value: function (e) {
                  return this.sub(Mr.copy(e).multiplyScalar(2 * this.dot(e)));
                },
              },
              {
                key: "angleTo",
                value: function (e) {
                  var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                  if (0 === t) return Math.PI / 2;
                  var n = this.dot(e) / t;
                  return Math.acos(Dn(n, -1, 1));
                },
              },
              {
                key: "distanceTo",
                value: function (e) {
                  return Math.sqrt(this.distanceToSquared(e));
                },
              },
              {
                key: "distanceToSquared",
                value: function (e) {
                  var t = this.x - e.x,
                    n = this.y - e.y,
                    r = this.z - e.z;
                  return t * t + n * n + r * r;
                },
              },
              {
                key: "manhattanDistanceTo",
                value: function (e) {
                  return (
                    Math.abs(this.x - e.x) +
                    Math.abs(this.y - e.y) +
                    Math.abs(this.z - e.z)
                  );
                },
              },
              {
                key: "setFromSpherical",
                value: function (e) {
                  return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
                },
              },
              {
                key: "setFromSphericalCoords",
                value: function (e, t, n) {
                  var r = Math.sin(t) * e;
                  return (
                    (this.x = r * Math.sin(n)),
                    (this.y = Math.cos(t) * e),
                    (this.z = r * Math.cos(n)),
                    this
                  );
                },
              },
              {
                key: "setFromCylindrical",
                value: function (e) {
                  return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
                },
              },
              {
                key: "setFromCylindricalCoords",
                value: function (e, t, n) {
                  return (
                    (this.x = e * Math.sin(t)),
                    (this.y = n),
                    (this.z = e * Math.cos(t)),
                    this
                  );
                },
              },
              {
                key: "setFromMatrixPosition",
                value: function (e) {
                  var t = e.elements;
                  return (
                    (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this
                  );
                },
              },
              {
                key: "setFromMatrixScale",
                value: function (e) {
                  var t = this.setFromMatrixColumn(e, 0).length(),
                    n = this.setFromMatrixColumn(e, 1).length(),
                    r = this.setFromMatrixColumn(e, 2).length();
                  return (this.x = t), (this.y = n), (this.z = r), this;
                },
              },
              {
                key: "setFromMatrixColumn",
                value: function (e, t) {
                  return this.fromArray(e.elements, 4 * t);
                },
              },
              {
                key: "setFromMatrix3Column",
                value: function (e, t) {
                  return this.fromArray(e.elements, 3 * t);
                },
              },
              {
                key: "setFromEuler",
                value: function (e) {
                  return (
                    (this.x = e._x), (this.y = e._y), (this.z = e._z), this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.x === this.x && e.y === this.y && e.z === this.z;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.x = e[t]),
                    (this.y = e[t + 1]),
                    (this.z = e[t + 2]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.x = e.getX(t)),
                    (this.y = e.getY(t)),
                    (this.z = e.getZ(t)),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()),
                    (this.y = Math.random()),
                    (this.z = Math.random()),
                    this
                  );
                },
              },
              {
                key: "randomDirection",
                value: function () {
                  var e = 2 * (Math.random() - 0.5),
                    t = Math.random() * Math.PI * 2,
                    n = Math.sqrt(1 - Math.pow(e, 2));
                  return (
                    (this.x = n * Math.cos(t)),
                    (this.y = n * Math.sin(t)),
                    (this.z = e),
                    this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: g.a.mark(function e() {
                  return g.a.wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                            return (e.next = 6), this.z;
                          case 6:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            e
          );
        })(),
        Mr = new Sr(),
        Tr = new wr(),
        Er = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(1 / 0, 1 / 0, 1 / 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr(-1 / 0, -1 / 0, -1 / 0);
            Object(y.a)(this, e),
              (this.isBox3 = !0),
              (this.min = t),
              (this.max = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.min.copy(e), this.max.copy(t), this;
                },
              },
              {
                key: "setFromArray",
                value: function (e) {
                  for (
                    var t = 1 / 0,
                      n = 1 / 0,
                      r = 1 / 0,
                      i = -1 / 0,
                      a = -1 / 0,
                      o = -1 / 0,
                      s = 0,
                      u = e.length;
                    s < u;
                    s += 3
                  ) {
                    var l = e[s],
                      c = e[s + 1],
                      h = e[s + 2];
                    l < t && (t = l),
                      c < n && (n = c),
                      h < r && (r = h),
                      l > i && (i = l),
                      c > a && (a = c),
                      h > o && (o = h);
                  }
                  return this.min.set(t, n, r), this.max.set(i, a, o), this;
                },
              },
              {
                key: "setFromBufferAttribute",
                value: function (e) {
                  for (
                    var t = 1 / 0,
                      n = 1 / 0,
                      r = 1 / 0,
                      i = -1 / 0,
                      a = -1 / 0,
                      o = -1 / 0,
                      s = 0,
                      u = e.count;
                    s < u;
                    s++
                  ) {
                    var l = e.getX(s),
                      c = e.getY(s),
                      h = e.getZ(s);
                    l < t && (t = l),
                      c < n && (n = c),
                      h < r && (r = h),
                      l > i && (i = l),
                      c > a && (a = c),
                      h > o && (o = h);
                  }
                  return this.min.set(t, n, r), this.max.set(i, a, o), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t++)
                    this.expandByPoint(e[t]);
                  return this;
                },
              },
              {
                key: "setFromCenterAndSize",
                value: function (e, t) {
                  var n = kr.copy(t).multiplyScalar(0.5);
                  return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                },
              },
              {
                key: "setFromObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  return this.makeEmpty(), this.expandByObject(e, t);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.min.copy(e.min), this.max.copy(e.max), this;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return (
                    (this.min.x = this.min.y = this.min.z = 1 / 0),
                    (this.max.x = this.max.y = this.max.z = -1 / 0),
                    this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return (
                    this.max.x < this.min.x ||
                    this.max.y < this.min.y ||
                    this.max.z < this.min.z
                  );
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                },
              },
              {
                key: "getSize",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.subVectors(this.max, this.min);
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  return this.min.min(e), this.max.max(e), this;
                },
              },
              {
                key: "expandByVector",
                value: function (e) {
                  return this.min.sub(e), this.max.add(e), this;
                },
              },
              {
                key: "expandByScalar",
                value: function (e) {
                  return this.min.addScalar(-e), this.max.addScalar(e), this;
                },
              },
              {
                key: "expandByObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  e.updateWorldMatrix(!1, !1);
                  var n = e.geometry;
                  if (void 0 !== n)
                    if (
                      t &&
                      void 0 != n.attributes &&
                      void 0 !== n.attributes.position
                    )
                      for (
                        var r = n.attributes.position, i = 0, a = r.count;
                        i < a;
                        i++
                      )
                        kr
                          .fromBufferAttribute(r, i)
                          .applyMatrix4(e.matrixWorld),
                          this.expandByPoint(kr);
                    else
                      null === n.boundingBox && n.computeBoundingBox(),
                        Ar.copy(n.boundingBox),
                        Ar.applyMatrix4(e.matrixWorld),
                        this.union(Ar);
                  for (var o = e.children, s = 0, u = o.length; s < u; s++)
                    this.expandByObject(o[s], t);
                  return this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return !(
                    e.x < this.min.x ||
                    e.x > this.max.x ||
                    e.y < this.min.y ||
                    e.y > this.max.y ||
                    e.z < this.min.z ||
                    e.z > this.max.z
                  );
                },
              },
              {
                key: "containsBox",
                value: function (e) {
                  return (
                    this.min.x <= e.min.x &&
                    e.max.x <= this.max.x &&
                    this.min.y <= e.min.y &&
                    e.max.y <= this.max.y &&
                    this.min.z <= e.min.z &&
                    e.max.z <= this.max.z
                  );
                },
              },
              {
                key: "getParameter",
                value: function (e, t) {
                  return t.set(
                    (e.x - this.min.x) / (this.max.x - this.min.x),
                    (e.y - this.min.y) / (this.max.y - this.min.y),
                    (e.z - this.min.z) / (this.max.z - this.min.z)
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return !(
                    e.max.x < this.min.x ||
                    e.min.x > this.max.x ||
                    e.max.y < this.min.y ||
                    e.min.y > this.max.y ||
                    e.max.z < this.min.z ||
                    e.min.z > this.max.z
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.clampPoint(e.center, kr),
                    kr.distanceToSquared(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t, n;
                  return (
                    e.normal.x > 0
                      ? ((t = e.normal.x * this.min.x),
                        (n = e.normal.x * this.max.x))
                      : ((t = e.normal.x * this.max.x),
                        (n = e.normal.x * this.min.x)),
                    e.normal.y > 0
                      ? ((t += e.normal.y * this.min.y),
                        (n += e.normal.y * this.max.y))
                      : ((t += e.normal.y * this.max.y),
                        (n += e.normal.y * this.min.y)),
                    e.normal.z > 0
                      ? ((t += e.normal.z * this.min.z),
                        (n += e.normal.z * this.max.z))
                      : ((t += e.normal.z * this.max.z),
                        (n += e.normal.z * this.min.z)),
                    t <= -e.constant && n >= -e.constant
                  );
                },
              },
              {
                key: "intersectsTriangle",
                value: function (e) {
                  if (this.isEmpty()) return !1;
                  this.getCenter(Nr),
                    Dr.subVectors(this.max, Nr),
                    Cr.subVectors(e.a, Nr),
                    Pr.subVectors(e.b, Nr),
                    Rr.subVectors(e.c, Nr),
                    Lr.subVectors(Pr, Cr),
                    jr.subVectors(Rr, Pr),
                    Ir.subVectors(Cr, Rr);
                  var t = [
                    0,
                    -Lr.z,
                    Lr.y,
                    0,
                    -jr.z,
                    jr.y,
                    0,
                    -Ir.z,
                    Ir.y,
                    Lr.z,
                    0,
                    -Lr.x,
                    jr.z,
                    0,
                    -jr.x,
                    Ir.z,
                    0,
                    -Ir.x,
                    -Lr.y,
                    Lr.x,
                    0,
                    -jr.y,
                    jr.x,
                    0,
                    -Ir.y,
                    Ir.x,
                    0,
                  ];
                  return (
                    !!Br(t, Cr, Pr, Rr, Dr) &&
                    !!Br((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), Cr, Pr, Rr, Dr) &&
                    (zr.crossVectors(Lr, jr),
                    Br((t = [zr.x, zr.y, zr.z]), Cr, Pr, Rr, Dr))
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  return t.copy(e).clamp(this.min, this.max);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return kr.copy(e).clamp(this.min, this.max).sub(e).length();
                },
              },
              {
                key: "getBoundingSphere",
                value: function (e) {
                  return (
                    this.getCenter(e.center),
                    (e.radius = 0.5 * this.getSize(kr).length()),
                    e
                  );
                },
              },
              {
                key: "intersect",
                value: function (e) {
                  return (
                    this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                  );
                },
              },
              {
                key: "union",
                value: function (e) {
                  return this.min.min(e.min), this.max.max(e.max), this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return this.isEmpty()
                    ? this
                    : (Or[0]
                        .set(this.min.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      Or[1]
                        .set(this.min.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      Or[2]
                        .set(this.min.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      Or[3]
                        .set(this.min.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      Or[4]
                        .set(this.max.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      Or[5]
                        .set(this.max.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      Or[6]
                        .set(this.max.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      Or[7]
                        .set(this.max.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      this.setFromPoints(Or),
                      this);
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.min.add(e), this.max.add(e), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.min.equals(this.min) && e.max.equals(this.max);
                },
              },
            ]),
            e
          );
        })(),
        Or = [
          new Sr(),
          new Sr(),
          new Sr(),
          new Sr(),
          new Sr(),
          new Sr(),
          new Sr(),
          new Sr(),
        ],
        kr = new Sr(),
        Ar = new Er(),
        Cr = new Sr(),
        Pr = new Sr(),
        Rr = new Sr(),
        Lr = new Sr(),
        jr = new Sr(),
        Ir = new Sr(),
        Nr = new Sr(),
        Dr = new Sr(),
        zr = new Sr(),
        Ur = new Sr();
      function Br(e, t, n, r, i) {
        for (var a = 0, o = e.length - 3; a <= o; a += 3) {
          Ur.fromArray(e, a);
          var s =
              i.x * Math.abs(Ur.x) +
              i.y * Math.abs(Ur.y) +
              i.z * Math.abs(Ur.z),
            u = t.dot(Ur),
            l = n.dot(Ur),
            c = r.dot(Ur);
          if (Math.max(-Math.max(u, l, c), Math.min(u, l, c)) > s) return !1;
        }
        return !0;
      }
      var Fr = new Er(),
        Gr = new Sr(),
        Hr = new Sr(),
        Vr = new Sr(),
        Wr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : -1;
            Object(y.a)(this, e), (this.center = t), (this.radius = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.center.copy(e), (this.radius = t), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e, t) {
                  var n = this.center;
                  void 0 !== t ? n.copy(t) : Fr.setFromPoints(e).getCenter(n);
                  for (var r = 0, i = 0, a = e.length; i < a; i++)
                    r = Math.max(r, n.distanceToSquared(e[i]));
                  return (this.radius = Math.sqrt(r)), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.center.copy(e.center), (this.radius = e.radius), this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return this.radius < 0;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return this.center.set(0, 0, 0), (this.radius = -1), this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return (
                    e.distanceToSquared(this.center) <=
                    this.radius * this.radius
                  );
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return e.distanceTo(this.center) - this.radius;
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  var t = this.radius + e.radius;
                  return e.center.distanceToSquared(this.center) <= t * t;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsSphere(this);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  return (
                    Math.abs(e.distanceToPoint(this.center)) <= this.radius
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  var n = this.center.distanceToSquared(e);
                  return (
                    t.copy(e),
                    n > this.radius * this.radius &&
                      (t.sub(this.center).normalize(),
                      t.multiplyScalar(this.radius).add(this.center)),
                    t
                  );
                },
              },
              {
                key: "getBoundingBox",
                value: function (e) {
                  return this.isEmpty()
                    ? (e.makeEmpty(), e)
                    : (e.set(this.center, this.center),
                      e.expandByScalar(this.radius),
                      e);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.center.applyMatrix4(e),
                    (this.radius = this.radius * e.getMaxScaleOnAxis()),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.center.add(e), this;
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  if (this.isEmpty())
                    return this.center.copy(e), (this.radius = 0), this;
                  Vr.subVectors(e, this.center);
                  var t = Vr.lengthSq();
                  if (t > this.radius * this.radius) {
                    var n = Math.sqrt(t),
                      r = 0.5 * (n - this.radius);
                    this.center.add(Vr.multiplyScalar(r / n)),
                      (this.radius += r);
                  }
                  return this;
                },
              },
              {
                key: "union",
                value: function (e) {
                  return e.isEmpty()
                    ? this
                    : this.isEmpty()
                    ? (this.copy(e), this)
                    : (!0 === this.center.equals(e.center)
                        ? Hr.set(0, 0, 1).multiplyScalar(e.radius)
                        : Hr.subVectors(e.center, this.center)
                            .normalize()
                            .multiplyScalar(e.radius),
                      this.expandByPoint(Gr.copy(e.center).add(Hr)),
                      this.expandByPoint(Gr.copy(e.center).sub(Hr)),
                      this);
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.center.equals(this.center) && e.radius === this.radius
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        qr = new Sr(),
        Xr = new Sr(),
        Yr = new Sr(),
        Jr = new Sr(),
        Zr = new Sr(),
        $r = new Sr(),
        Kr = new Sr(),
        Qr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr(0, 0, -1);
            Object(y.a)(this, e), (this.origin = t), (this.direction = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.origin.copy(e), this.direction.copy(t), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.origin.copy(e.origin),
                    this.direction.copy(e.direction),
                    this
                  );
                },
              },
              {
                key: "at",
                value: function (e, t) {
                  return t
                    .copy(this.direction)
                    .multiplyScalar(e)
                    .add(this.origin);
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    this.direction.copy(e).sub(this.origin).normalize(), this
                  );
                },
              },
              {
                key: "recast",
                value: function (e) {
                  return this.origin.copy(this.at(e, qr)), this;
                },
              },
              {
                key: "closestPointToPoint",
                value: function (e, t) {
                  t.subVectors(e, this.origin);
                  var n = t.dot(this.direction);
                  return n < 0
                    ? t.copy(this.origin)
                    : t.copy(this.direction).multiplyScalar(n).add(this.origin);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return Math.sqrt(this.distanceSqToPoint(e));
                },
              },
              {
                key: "distanceSqToPoint",
                value: function (e) {
                  var t = qr.subVectors(e, this.origin).dot(this.direction);
                  return t < 0
                    ? this.origin.distanceToSquared(e)
                    : (qr
                        .copy(this.direction)
                        .multiplyScalar(t)
                        .add(this.origin),
                      qr.distanceToSquared(e));
                },
              },
              {
                key: "distanceSqToSegment",
                value: function (e, t, n, r) {
                  Xr.copy(e).add(t).multiplyScalar(0.5),
                    Yr.copy(t).sub(e).normalize(),
                    Jr.copy(this.origin).sub(Xr);
                  var i,
                    a,
                    o,
                    s,
                    u = 0.5 * e.distanceTo(t),
                    l = -this.direction.dot(Yr),
                    c = Jr.dot(this.direction),
                    h = -Jr.dot(Yr),
                    f = Jr.lengthSq(),
                    d = Math.abs(1 - l * l);
                  if (d > 0)
                    if (((a = l * c - h), (s = u * d), (i = l * h - c) >= 0))
                      if (a >= -s)
                        if (a <= s) {
                          var p = 1 / d;
                          o =
                            (i *= p) * (i + l * (a *= p) + 2 * c) +
                            a * (l * i + a + 2 * h) +
                            f;
                        } else
                          (a = u),
                            (o =
                              -(i = Math.max(0, -(l * a + c))) * i +
                              a * (a + 2 * h) +
                              f);
                      else
                        (a = -u),
                          (o =
                            -(i = Math.max(0, -(l * a + c))) * i +
                            a * (a + 2 * h) +
                            f);
                    else
                      a <= -s
                        ? (o =
                            -(i = Math.max(0, -(-l * u + c))) * i +
                            (a = i > 0 ? -u : Math.min(Math.max(-u, -h), u)) *
                              (a + 2 * h) +
                            f)
                        : a <= s
                        ? ((i = 0),
                          (o =
                            (a = Math.min(Math.max(-u, -h), u)) * (a + 2 * h) +
                            f))
                        : (o =
                            -(i = Math.max(0, -(l * u + c))) * i +
                            (a = i > 0 ? u : Math.min(Math.max(-u, -h), u)) *
                              (a + 2 * h) +
                            f);
                  else
                    (a = l > 0 ? -u : u),
                      (o =
                        -(i = Math.max(0, -(l * a + c))) * i +
                        a * (a + 2 * h) +
                        f);
                  return (
                    n &&
                      n.copy(this.direction).multiplyScalar(i).add(this.origin),
                    r && r.copy(Yr).multiplyScalar(a).add(Xr),
                    o
                  );
                },
              },
              {
                key: "intersectSphere",
                value: function (e, t) {
                  qr.subVectors(e.center, this.origin);
                  var n = qr.dot(this.direction),
                    r = qr.dot(qr) - n * n,
                    i = e.radius * e.radius;
                  if (r > i) return null;
                  var a = Math.sqrt(i - r),
                    o = n - a,
                    s = n + a;
                  return o < 0 && s < 0
                    ? null
                    : o < 0
                    ? this.at(s, t)
                    : this.at(o, t);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.distanceSqToPoint(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "distanceToPlane",
                value: function (e) {
                  var t = e.normal.dot(this.direction);
                  if (0 === t)
                    return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                  var n = -(this.origin.dot(e.normal) + e.constant) / t;
                  return n >= 0 ? n : null;
                },
              },
              {
                key: "intersectPlane",
                value: function (e, t) {
                  var n = this.distanceToPlane(e);
                  return null === n ? null : this.at(n, t);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t = e.distanceToPoint(this.origin);
                  return 0 === t || e.normal.dot(this.direction) * t < 0;
                },
              },
              {
                key: "intersectBox",
                value: function (e, t) {
                  var n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    u = 1 / this.direction.x,
                    l = 1 / this.direction.y,
                    c = 1 / this.direction.z,
                    h = this.origin;
                  return (
                    u >= 0
                      ? ((n = (e.min.x - h.x) * u), (r = (e.max.x - h.x) * u))
                      : ((n = (e.max.x - h.x) * u), (r = (e.min.x - h.x) * u)),
                    l >= 0
                      ? ((i = (e.min.y - h.y) * l), (a = (e.max.y - h.y) * l))
                      : ((i = (e.max.y - h.y) * l), (a = (e.min.y - h.y) * l)),
                    n > a || i > r
                      ? null
                      : ((i > n || n !== n) && (n = i),
                        (a < r || r !== r) && (r = a),
                        c >= 0
                          ? ((o = (e.min.z - h.z) * c),
                            (s = (e.max.z - h.z) * c))
                          : ((o = (e.max.z - h.z) * c),
                            (s = (e.min.z - h.z) * c)),
                        n > s || o > r
                          ? null
                          : ((o > n || n !== n) && (n = o),
                            (s < r || r !== r) && (r = s),
                            r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return null !== this.intersectBox(e, qr);
                },
              },
              {
                key: "intersectTriangle",
                value: function (e, t, n, r, i) {
                  Zr.subVectors(t, e),
                    $r.subVectors(n, e),
                    Kr.crossVectors(Zr, $r);
                  var a,
                    o = this.direction.dot(Kr);
                  if (o > 0) {
                    if (r) return null;
                    a = 1;
                  } else {
                    if (!(o < 0)) return null;
                    (a = -1), (o = -o);
                  }
                  Jr.subVectors(this.origin, e);
                  var s = a * this.direction.dot($r.crossVectors(Jr, $r));
                  if (s < 0) return null;
                  var u = a * this.direction.dot(Zr.cross(Jr));
                  if (u < 0) return null;
                  if (s + u > o) return null;
                  var l = -a * Jr.dot(Kr);
                  return l < 0 ? null : this.at(l / o, i);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.origin.applyMatrix4(e),
                    this.direction.transformDirection(e),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.origin.equals(this.origin) &&
                    e.direction.equals(this.direction)
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        ei = (function () {
          function e() {
            Object(y.a)(this, e),
              (e.prototype.isMatrix4 = !0),
              (this.elements = [
                1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
              ]);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (
                  e,
                  t,
                  n,
                  r,
                  i,
                  a,
                  o,
                  s,
                  u,
                  l,
                  c,
                  h,
                  f,
                  d,
                  p,
                  m
                ) {
                  var v = this.elements;
                  return (
                    (v[0] = e),
                    (v[4] = t),
                    (v[8] = n),
                    (v[12] = r),
                    (v[1] = i),
                    (v[5] = a),
                    (v[9] = o),
                    (v[13] = s),
                    (v[2] = u),
                    (v[6] = l),
                    (v[10] = c),
                    (v[14] = h),
                    (v[3] = f),
                    (v[7] = d),
                    (v[11] = p),
                    (v[15] = m),
                    this
                  );
                },
              },
              {
                key: "identity",
                value: function () {
                  return (
                    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new e().fromArray(this.elements);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[0] = n[0]),
                    (t[1] = n[1]),
                    (t[2] = n[2]),
                    (t[3] = n[3]),
                    (t[4] = n[4]),
                    (t[5] = n[5]),
                    (t[6] = n[6]),
                    (t[7] = n[7]),
                    (t[8] = n[8]),
                    (t[9] = n[9]),
                    (t[10] = n[10]),
                    (t[11] = n[11]),
                    (t[12] = n[12]),
                    (t[13] = n[13]),
                    (t[14] = n[14]),
                    (t[15] = n[15]),
                    this
                  );
                },
              },
              {
                key: "copyPosition",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this
                  );
                },
              },
              {
                key: "setFromMatrix3",
                value: function (e) {
                  var t = e.elements;
                  return (
                    this.set(
                      t[0],
                      t[3],
                      t[6],
                      0,
                      t[1],
                      t[4],
                      t[7],
                      0,
                      t[2],
                      t[5],
                      t[8],
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractBasis",
                value: function (e, t, n) {
                  return (
                    e.setFromMatrixColumn(this, 0),
                    t.setFromMatrixColumn(this, 1),
                    n.setFromMatrixColumn(this, 2),
                    this
                  );
                },
              },
              {
                key: "makeBasis",
                value: function (e, t, n) {
                  return (
                    this.set(
                      e.x,
                      t.x,
                      n.x,
                      0,
                      e.y,
                      t.y,
                      n.y,
                      0,
                      e.z,
                      t.z,
                      n.z,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractRotation",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements,
                    r = 1 / ti.setFromMatrixColumn(e, 0).length(),
                    i = 1 / ti.setFromMatrixColumn(e, 1).length(),
                    a = 1 / ti.setFromMatrixColumn(e, 2).length();
                  return (
                    (t[0] = n[0] * r),
                    (t[1] = n[1] * r),
                    (t[2] = n[2] * r),
                    (t[3] = 0),
                    (t[4] = n[4] * i),
                    (t[5] = n[5] * i),
                    (t[6] = n[6] * i),
                    (t[7] = 0),
                    (t[8] = n[8] * a),
                    (t[9] = n[9] * a),
                    (t[10] = n[10] * a),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromEuler",
                value: function (e) {
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    i = e.z,
                    a = Math.cos(n),
                    o = Math.sin(n),
                    s = Math.cos(r),
                    u = Math.sin(r),
                    l = Math.cos(i),
                    c = Math.sin(i);
                  if ("XYZ" === e.order) {
                    var h = a * l,
                      f = a * c,
                      d = o * l,
                      p = o * c;
                    (t[0] = s * l),
                      (t[4] = -s * c),
                      (t[8] = u),
                      (t[1] = f + d * u),
                      (t[5] = h - p * u),
                      (t[9] = -o * s),
                      (t[2] = p - h * u),
                      (t[6] = d + f * u),
                      (t[10] = a * s);
                  } else if ("YXZ" === e.order) {
                    var m = s * l,
                      v = s * c,
                      g = u * l,
                      y = u * c;
                    (t[0] = m + y * o),
                      (t[4] = g * o - v),
                      (t[8] = a * u),
                      (t[1] = a * c),
                      (t[5] = a * l),
                      (t[9] = -o),
                      (t[2] = v * o - g),
                      (t[6] = y + m * o),
                      (t[10] = a * s);
                  } else if ("ZXY" === e.order) {
                    var b = s * l,
                      x = s * c,
                      _ = u * l,
                      w = u * c;
                    (t[0] = b - w * o),
                      (t[4] = -a * c),
                      (t[8] = _ + x * o),
                      (t[1] = x + _ * o),
                      (t[5] = a * l),
                      (t[9] = w - b * o),
                      (t[2] = -a * u),
                      (t[6] = o),
                      (t[10] = a * s);
                  } else if ("ZYX" === e.order) {
                    var S = a * l,
                      M = a * c,
                      T = o * l,
                      E = o * c;
                    (t[0] = s * l),
                      (t[4] = T * u - M),
                      (t[8] = S * u + E),
                      (t[1] = s * c),
                      (t[5] = E * u + S),
                      (t[9] = M * u - T),
                      (t[2] = -u),
                      (t[6] = o * s),
                      (t[10] = a * s);
                  } else if ("YZX" === e.order) {
                    var O = a * s,
                      k = a * u,
                      A = o * s,
                      C = o * u;
                    (t[0] = s * l),
                      (t[4] = C - O * c),
                      (t[8] = A * c + k),
                      (t[1] = c),
                      (t[5] = a * l),
                      (t[9] = -o * l),
                      (t[2] = -u * l),
                      (t[6] = k * c + A),
                      (t[10] = O - C * c);
                  } else if ("XZY" === e.order) {
                    var P = a * s,
                      R = a * u,
                      L = o * s,
                      j = o * u;
                    (t[0] = s * l),
                      (t[4] = -c),
                      (t[8] = u * l),
                      (t[1] = P * c + j),
                      (t[5] = a * l),
                      (t[9] = R * c - L),
                      (t[2] = L * c - R),
                      (t[6] = o * l),
                      (t[10] = j * c + P);
                  }
                  return (
                    (t[3] = 0),
                    (t[7] = 0),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromQuaternion",
                value: function (e) {
                  return this.compose(ri, e, ii);
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    si.subVectors(e, t),
                    0 === si.lengthSq() && (si.z = 1),
                    si.normalize(),
                    ai.crossVectors(n, si),
                    0 === ai.lengthSq() &&
                      (1 === Math.abs(n.z) ? (si.x += 1e-4) : (si.z += 1e-4),
                      si.normalize(),
                      ai.crossVectors(n, si)),
                    ai.normalize(),
                    oi.crossVectors(si, ai),
                    (r[0] = ai.x),
                    (r[4] = oi.x),
                    (r[8] = si.x),
                    (r[1] = ai.y),
                    (r[5] = oi.y),
                    (r[9] = si.y),
                    (r[2] = ai.z),
                    (r[6] = oi.z),
                    (r[10] = si.z),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return this.multiplyMatrices(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyMatrices(e, this);
                },
              },
              {
                key: "multiplyMatrices",
                value: function (e, t) {
                  var n = e.elements,
                    r = t.elements,
                    i = this.elements,
                    a = n[0],
                    o = n[4],
                    s = n[8],
                    u = n[12],
                    l = n[1],
                    c = n[5],
                    h = n[9],
                    f = n[13],
                    d = n[2],
                    p = n[6],
                    m = n[10],
                    v = n[14],
                    g = n[3],
                    y = n[7],
                    b = n[11],
                    x = n[15],
                    _ = r[0],
                    w = r[4],
                    S = r[8],
                    M = r[12],
                    T = r[1],
                    E = r[5],
                    O = r[9],
                    k = r[13],
                    A = r[2],
                    C = r[6],
                    P = r[10],
                    R = r[14],
                    L = r[3],
                    j = r[7],
                    I = r[11],
                    N = r[15];
                  return (
                    (i[0] = a * _ + o * T + s * A + u * L),
                    (i[4] = a * w + o * E + s * C + u * j),
                    (i[8] = a * S + o * O + s * P + u * I),
                    (i[12] = a * M + o * k + s * R + u * N),
                    (i[1] = l * _ + c * T + h * A + f * L),
                    (i[5] = l * w + c * E + h * C + f * j),
                    (i[9] = l * S + c * O + h * P + f * I),
                    (i[13] = l * M + c * k + h * R + f * N),
                    (i[2] = d * _ + p * T + m * A + v * L),
                    (i[6] = d * w + p * E + m * C + v * j),
                    (i[10] = d * S + p * O + m * P + v * I),
                    (i[14] = d * M + p * k + m * R + v * N),
                    (i[3] = g * _ + y * T + b * A + x * L),
                    (i[7] = g * w + y * E + b * C + x * j),
                    (i[11] = g * S + y * O + b * P + x * I),
                    (i[15] = g * M + y * k + b * R + x * N),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (t[0] *= e),
                    (t[4] *= e),
                    (t[8] *= e),
                    (t[12] *= e),
                    (t[1] *= e),
                    (t[5] *= e),
                    (t[9] *= e),
                    (t[13] *= e),
                    (t[2] *= e),
                    (t[6] *= e),
                    (t[10] *= e),
                    (t[14] *= e),
                    (t[3] *= e),
                    (t[7] *= e),
                    (t[11] *= e),
                    (t[15] *= e),
                    this
                  );
                },
              },
              {
                key: "determinant",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[4],
                    r = e[8],
                    i = e[12],
                    a = e[1],
                    o = e[5],
                    s = e[9],
                    u = e[13],
                    l = e[2],
                    c = e[6],
                    h = e[10],
                    f = e[14];
                  return (
                    e[3] *
                      (+i * s * c -
                        r * u * c -
                        i * o * h +
                        n * u * h +
                        r * o * f -
                        n * s * f) +
                    e[7] *
                      (+t * s * f -
                        t * u * h +
                        i * a * h -
                        r * a * f +
                        r * u * l -
                        i * s * l) +
                    e[11] *
                      (+t * u * c -
                        t * o * f -
                        i * a * c +
                        n * a * f +
                        i * o * l -
                        n * u * l) +
                    e[15] *
                      (-r * o * l -
                        t * s * c +
                        t * o * h +
                        r * a * c -
                        n * a * h +
                        n * s * l)
                  );
                },
              },
              {
                key: "transpose",
                value: function () {
                  var e,
                    t = this.elements;
                  return (
                    (e = t[1]),
                    (t[1] = t[4]),
                    (t[4] = e),
                    (e = t[2]),
                    (t[2] = t[8]),
                    (t[8] = e),
                    (e = t[6]),
                    (t[6] = t[9]),
                    (t[9] = e),
                    (e = t[3]),
                    (t[3] = t[12]),
                    (t[12] = e),
                    (e = t[7]),
                    (t[7] = t[13]),
                    (t[13] = e),
                    (e = t[11]),
                    (t[11] = t[14]),
                    (t[14] = e),
                    this
                  );
                },
              },
              {
                key: "setPosition",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    e.isVector3
                      ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
                      : ((r[12] = e), (r[13] = t), (r[14] = n)),
                    this
                  );
                },
              },
              {
                key: "invert",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    i = e[3],
                    a = e[4],
                    o = e[5],
                    s = e[6],
                    u = e[7],
                    l = e[8],
                    c = e[9],
                    h = e[10],
                    f = e[11],
                    d = e[12],
                    p = e[13],
                    m = e[14],
                    v = e[15],
                    g =
                      c * m * u -
                      p * h * u +
                      p * s * f -
                      o * m * f -
                      c * s * v +
                      o * h * v,
                    y =
                      d * h * u -
                      l * m * u -
                      d * s * f +
                      a * m * f +
                      l * s * v -
                      a * h * v,
                    b =
                      l * p * u -
                      d * c * u +
                      d * o * f -
                      a * p * f -
                      l * o * v +
                      a * c * v,
                    x =
                      d * c * s -
                      l * p * s -
                      d * o * h +
                      a * p * h +
                      l * o * m -
                      a * c * m,
                    _ = t * g + n * y + r * b + i * x;
                  if (0 === _)
                    return this.set(
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    );
                  var w = 1 / _;
                  return (
                    (e[0] = g * w),
                    (e[1] =
                      (p * h * i -
                        c * m * i -
                        p * r * f +
                        n * m * f +
                        c * r * v -
                        n * h * v) *
                      w),
                    (e[2] =
                      (o * m * i -
                        p * s * i +
                        p * r * u -
                        n * m * u -
                        o * r * v +
                        n * s * v) *
                      w),
                    (e[3] =
                      (c * s * i -
                        o * h * i -
                        c * r * u +
                        n * h * u +
                        o * r * f -
                        n * s * f) *
                      w),
                    (e[4] = y * w),
                    (e[5] =
                      (l * m * i -
                        d * h * i +
                        d * r * f -
                        t * m * f -
                        l * r * v +
                        t * h * v) *
                      w),
                    (e[6] =
                      (d * s * i -
                        a * m * i -
                        d * r * u +
                        t * m * u +
                        a * r * v -
                        t * s * v) *
                      w),
                    (e[7] =
                      (a * h * i -
                        l * s * i +
                        l * r * u -
                        t * h * u -
                        a * r * f +
                        t * s * f) *
                      w),
                    (e[8] = b * w),
                    (e[9] =
                      (d * c * i -
                        l * p * i -
                        d * n * f +
                        t * p * f +
                        l * n * v -
                        t * c * v) *
                      w),
                    (e[10] =
                      (a * p * i -
                        d * o * i +
                        d * n * u -
                        t * p * u -
                        a * n * v +
                        t * o * v) *
                      w),
                    (e[11] =
                      (l * o * i -
                        a * c * i -
                        l * n * u +
                        t * c * u +
                        a * n * f -
                        t * o * f) *
                      w),
                    (e[12] = x * w),
                    (e[13] =
                      (l * p * r -
                        d * c * r +
                        d * n * h -
                        t * p * h -
                        l * n * m +
                        t * c * m) *
                      w),
                    (e[14] =
                      (d * o * r -
                        a * p * r -
                        d * n * s +
                        t * p * s +
                        a * n * m -
                        t * o * m) *
                      w),
                    (e[15] =
                      (a * c * r -
                        l * o * r +
                        l * n * s -
                        t * c * s -
                        a * n * h +
                        t * o * h) *
                      w),
                    this
                  );
                },
              },
              {
                key: "scale",
                value: function (e) {
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    i = e.z;
                  return (
                    (t[0] *= n),
                    (t[4] *= r),
                    (t[8] *= i),
                    (t[1] *= n),
                    (t[5] *= r),
                    (t[9] *= i),
                    (t[2] *= n),
                    (t[6] *= r),
                    (t[10] *= i),
                    (t[3] *= n),
                    (t[7] *= r),
                    (t[11] *= i),
                    this
                  );
                },
              },
              {
                key: "getMaxScaleOnAxis",
                value: function () {
                  var e = this.elements,
                    t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                    n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                    r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                  return Math.sqrt(Math.max(t, n, r));
                },
              },
              {
                key: "makeTranslation",
                value: function (e, t, n) {
                  return (
                    this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationX",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationY",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationZ",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationAxis",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    i = 1 - n,
                    a = e.x,
                    o = e.y,
                    s = e.z,
                    u = i * a,
                    l = i * o;
                  return (
                    this.set(
                      u * a + n,
                      u * o - r * s,
                      u * s + r * o,
                      0,
                      u * o + r * s,
                      l * o + n,
                      l * s - r * a,
                      0,
                      u * s - r * o,
                      l * s + r * a,
                      i * s * s + n,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "makeScale",
                value: function (e, t, n) {
                  return (
                    this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeShear",
                value: function (e, t, n, r, i, a) {
                  return (
                    this.set(1, n, i, 0, e, 1, a, 0, t, r, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "compose",
                value: function (e, t, n) {
                  var r = this.elements,
                    i = t._x,
                    a = t._y,
                    o = t._z,
                    s = t._w,
                    u = i + i,
                    l = a + a,
                    c = o + o,
                    h = i * u,
                    f = i * l,
                    d = i * c,
                    p = a * l,
                    m = a * c,
                    v = o * c,
                    g = s * u,
                    y = s * l,
                    b = s * c,
                    x = n.x,
                    _ = n.y,
                    w = n.z;
                  return (
                    (r[0] = (1 - (p + v)) * x),
                    (r[1] = (f + b) * x),
                    (r[2] = (d - y) * x),
                    (r[3] = 0),
                    (r[4] = (f - b) * _),
                    (r[5] = (1 - (h + v)) * _),
                    (r[6] = (m + g) * _),
                    (r[7] = 0),
                    (r[8] = (d + y) * w),
                    (r[9] = (m - g) * w),
                    (r[10] = (1 - (h + p)) * w),
                    (r[11] = 0),
                    (r[12] = e.x),
                    (r[13] = e.y),
                    (r[14] = e.z),
                    (r[15] = 1),
                    this
                  );
                },
              },
              {
                key: "decompose",
                value: function (e, t, n) {
                  var r = this.elements,
                    i = ti.set(r[0], r[1], r[2]).length(),
                    a = ti.set(r[4], r[5], r[6]).length(),
                    o = ti.set(r[8], r[9], r[10]).length();
                  this.determinant() < 0 && (i = -i),
                    (e.x = r[12]),
                    (e.y = r[13]),
                    (e.z = r[14]),
                    ni.copy(this);
                  var s = 1 / i,
                    u = 1 / a,
                    l = 1 / o;
                  return (
                    (ni.elements[0] *= s),
                    (ni.elements[1] *= s),
                    (ni.elements[2] *= s),
                    (ni.elements[4] *= u),
                    (ni.elements[5] *= u),
                    (ni.elements[6] *= u),
                    (ni.elements[8] *= l),
                    (ni.elements[9] *= l),
                    (ni.elements[10] *= l),
                    t.setFromRotationMatrix(ni),
                    (n.x = i),
                    (n.y = a),
                    (n.z = o),
                    this
                  );
                },
              },
              {
                key: "makePerspective",
                value: function (e, t, n, r, i, a) {
                  var o = this.elements,
                    s = (2 * i) / (t - e),
                    u = (2 * i) / (n - r),
                    l = (t + e) / (t - e),
                    c = (n + r) / (n - r),
                    h = -(a + i) / (a - i),
                    f = (-2 * a * i) / (a - i);
                  return (
                    (o[0] = s),
                    (o[4] = 0),
                    (o[8] = l),
                    (o[12] = 0),
                    (o[1] = 0),
                    (o[5] = u),
                    (o[9] = c),
                    (o[13] = 0),
                    (o[2] = 0),
                    (o[6] = 0),
                    (o[10] = h),
                    (o[14] = f),
                    (o[3] = 0),
                    (o[7] = 0),
                    (o[11] = -1),
                    (o[15] = 0),
                    this
                  );
                },
              },
              {
                key: "makeOrthographic",
                value: function (e, t, n, r, i, a) {
                  var o = this.elements,
                    s = 1 / (t - e),
                    u = 1 / (n - r),
                    l = 1 / (a - i),
                    c = (t + e) * s,
                    h = (n + r) * u,
                    f = (a + i) * l;
                  return (
                    (o[0] = 2 * s),
                    (o[4] = 0),
                    (o[8] = 0),
                    (o[12] = -c),
                    (o[1] = 0),
                    (o[5] = 2 * u),
                    (o[9] = 0),
                    (o[13] = -h),
                    (o[2] = 0),
                    (o[6] = 0),
                    (o[10] = -2 * l),
                    (o[14] = -f),
                    (o[3] = 0),
                    (o[7] = 0),
                    (o[11] = 0),
                    (o[15] = 1),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (
                    var t = this.elements, n = e.elements, r = 0;
                    r < 16;
                    r++
                  )
                    if (t[r] !== n[r]) return !1;
                  return !0;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = 0;
                    n < 16;
                    n++
                  )
                    this.elements[n] = e[n + t];
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.elements;
                  return (
                    (e[t] = n[0]),
                    (e[t + 1] = n[1]),
                    (e[t + 2] = n[2]),
                    (e[t + 3] = n[3]),
                    (e[t + 4] = n[4]),
                    (e[t + 5] = n[5]),
                    (e[t + 6] = n[6]),
                    (e[t + 7] = n[7]),
                    (e[t + 8] = n[8]),
                    (e[t + 9] = n[9]),
                    (e[t + 10] = n[10]),
                    (e[t + 11] = n[11]),
                    (e[t + 12] = n[12]),
                    (e[t + 13] = n[13]),
                    (e[t + 14] = n[14]),
                    (e[t + 15] = n[15]),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        ti = new Sr(),
        ni = new ei(),
        ri = new Sr(0, 0, 0),
        ii = new Sr(1, 1, 1),
        ai = new Sr(),
        oi = new Sr(),
        si = new Sr(),
        ui = new ei(),
        li = new wr(),
        ci = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : e.DefaultOrder;
            Object(y.a)(this, e),
              (this.isEuler = !0),
              (this._x = t),
              (this._y = n),
              (this._z = r),
              (this._order = i);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : this._order;
                  return (
                    (this._x = e),
                    (this._y = t),
                    (this._z = n),
                    (this._order = r),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(
                    this._x,
                    this._y,
                    this._z,
                    this._order
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this._x = e._x),
                    (this._y = e._y),
                    (this._z = e._z),
                    (this._order = e._order),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromRotationMatrix",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this._order,
                    n =
                      !(arguments.length > 2 && void 0 !== arguments[2]) ||
                      arguments[2],
                    r = e.elements,
                    i = r[0],
                    a = r[4],
                    o = r[8],
                    s = r[1],
                    u = r[5],
                    l = r[9],
                    c = r[2],
                    h = r[6],
                    f = r[10];
                  switch (t) {
                    case "XYZ":
                      (this._y = Math.asin(Dn(o, -1, 1))),
                        Math.abs(o) < 0.9999999
                          ? ((this._x = Math.atan2(-l, f)),
                            (this._z = Math.atan2(-a, i)))
                          : ((this._x = Math.atan2(h, u)), (this._z = 0));
                      break;
                    case "YXZ":
                      (this._x = Math.asin(-Dn(l, -1, 1))),
                        Math.abs(l) < 0.9999999
                          ? ((this._y = Math.atan2(o, f)),
                            (this._z = Math.atan2(s, u)))
                          : ((this._y = Math.atan2(-c, i)), (this._z = 0));
                      break;
                    case "ZXY":
                      (this._x = Math.asin(Dn(h, -1, 1))),
                        Math.abs(h) < 0.9999999
                          ? ((this._y = Math.atan2(-c, f)),
                            (this._z = Math.atan2(-a, u)))
                          : ((this._y = 0), (this._z = Math.atan2(s, i)));
                      break;
                    case "ZYX":
                      (this._y = Math.asin(-Dn(c, -1, 1))),
                        Math.abs(c) < 0.9999999
                          ? ((this._x = Math.atan2(h, f)),
                            (this._z = Math.atan2(s, i)))
                          : ((this._x = 0), (this._z = Math.atan2(-a, u)));
                      break;
                    case "YZX":
                      (this._z = Math.asin(Dn(s, -1, 1))),
                        Math.abs(s) < 0.9999999
                          ? ((this._x = Math.atan2(-l, u)),
                            (this._y = Math.atan2(-c, i)))
                          : ((this._x = 0), (this._y = Math.atan2(o, f)));
                      break;
                    case "XZY":
                      (this._z = Math.asin(-Dn(a, -1, 1))),
                        Math.abs(a) < 0.9999999
                          ? ((this._x = Math.atan2(h, u)),
                            (this._y = Math.atan2(o, i)))
                          : ((this._x = Math.atan2(-l, f)), (this._y = 0));
                      break;
                    default:
                      console.warn(
                        "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
                          t
                      );
                  }
                  return (
                    (this._order = t),
                    !0 === n && this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromQuaternion",
                value: function (e, t, n) {
                  return (
                    ui.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(ui, t, n)
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : this._order;
                  return this.set(e.x, e.y, e.z, t);
                },
              },
              {
                key: "reorder",
                value: function (e) {
                  return li.setFromEuler(this), this.setFromQuaternion(li, e);
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e._x === this._x &&
                    e._y === this._y &&
                    e._z === this._z &&
                    e._order === this._order
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  return (
                    (this._x = e[0]),
                    (this._y = e[1]),
                    (this._z = e[2]),
                    void 0 !== e[3] && (this._order = e[3]),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this._x),
                    (e[t + 1] = this._y),
                    (e[t + 2] = this._z),
                    (e[t + 3] = this._order),
                    e
                  );
                },
              },
              {
                key: "_onChange",
                value: function (e) {
                  return (this._onChangeCallback = e), this;
                },
              },
              { key: "_onChangeCallback", value: function () {} },
              {
                key: Symbol.iterator,
                value: g.a.mark(function e() {
                  return g.a.wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this._x;
                          case 2:
                            return (e.next = 4), this._y;
                          case 4:
                            return (e.next = 6), this._z;
                          case 6:
                            return (e.next = 8), this._order;
                          case 8:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
              {
                key: "toVector3",
                value: function () {
                  console.error(
                    "THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead"
                  );
                },
              },
              {
                key: "x",
                get: function () {
                  return this._x;
                },
                set: function (e) {
                  (this._x = e), this._onChangeCallback();
                },
              },
              {
                key: "y",
                get: function () {
                  return this._y;
                },
                set: function (e) {
                  (this._y = e), this._onChangeCallback();
                },
              },
              {
                key: "z",
                get: function () {
                  return this._z;
                },
                set: function (e) {
                  (this._z = e), this._onChangeCallback();
                },
              },
              {
                key: "order",
                get: function () {
                  return this._order;
                },
                set: function (e) {
                  (this._order = e), this._onChangeCallback();
                },
              },
            ]),
            e
          );
        })();
      (ci.DefaultOrder = "XYZ"),
        (ci.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"]);
      var hi = (function () {
          function e() {
            Object(y.a)(this, e), (this.mask = 1);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e) {
                  this.mask = ((1 << e) | 0) >>> 0;
                },
              },
              {
                key: "enable",
                value: function (e) {
                  this.mask |= (1 << e) | 0;
                },
              },
              {
                key: "enableAll",
                value: function () {
                  this.mask = -1;
                },
              },
              {
                key: "toggle",
                value: function (e) {
                  this.mask ^= (1 << e) | 0;
                },
              },
              {
                key: "disable",
                value: function (e) {
                  this.mask &= ~((1 << e) | 0);
                },
              },
              {
                key: "disableAll",
                value: function () {
                  this.mask = 0;
                },
              },
              {
                key: "test",
                value: function (e) {
                  return 0 !== (this.mask & e.mask);
                },
              },
              {
                key: "isEnabled",
                value: function (e) {
                  return 0 !== (this.mask & ((1 << e) | 0));
                },
              },
            ]),
            e
          );
        })(),
        fi = 0,
        di = new Sr(),
        pi = new wr(),
        mi = new ei(),
        vi = new Sr(),
        gi = new Sr(),
        yi = new Sr(),
        bi = new wr(),
        xi = new Sr(1, 0, 0),
        _i = new Sr(0, 1, 0),
        wi = new Sr(0, 0, 1),
        Si = { type: "added" },
        Mi = { type: "removed" },
        Ti = (function (e) {
          function t() {
            var e;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isObject3D =
                !0),
              Object.defineProperty(Object(d.a)(e), "id", { value: fi++ }),
              (e.uuid = Nn()),
              (e.name = ""),
              (e.type = "Object3D"),
              (e.parent = null),
              (e.children = []),
              (e.up = t.DefaultUp.clone());
            var n = new Sr(),
              i = new ci(),
              a = new wr(),
              o = new Sr(1, 1, 1);
            return (
              i._onChange(function () {
                a.setFromEuler(i, !1);
              }),
              a._onChange(function () {
                i.setFromQuaternion(a, void 0, !1);
              }),
              Object.defineProperties(Object(d.a)(e), {
                position: { configurable: !0, enumerable: !0, value: n },
                rotation: { configurable: !0, enumerable: !0, value: i },
                quaternion: { configurable: !0, enumerable: !0, value: a },
                scale: { configurable: !0, enumerable: !0, value: o },
                modelViewMatrix: { value: new ei() },
                normalMatrix: { value: new Xn() },
              }),
              (e.matrix = new ei()),
              (e.matrixWorld = new ei()),
              (e.matrixAutoUpdate = t.DefaultMatrixAutoUpdate),
              (e.matrixWorldNeedsUpdate = !1),
              (e.matrixWorldAutoUpdate = t.DefaultMatrixWorldAutoUpdate),
              (e.layers = new hi()),
              (e.visible = !0),
              (e.castShadow = !1),
              (e.receiveShadow = !1),
              (e.frustumCulled = !0),
              (e.renderOrder = 0),
              (e.animations = []),
              (e.userData = {}),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              { key: "onBeforeRender", value: function () {} },
              { key: "onAfterRender", value: function () {} },
              {
                key: "applyMatrix4",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    this.matrix.premultiply(e),
                    this.matrix.decompose(
                      this.position,
                      this.quaternion,
                      this.scale
                    );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return this.quaternion.premultiply(e), this;
                },
              },
              {
                key: "setRotationFromAxisAngle",
                value: function (e, t) {
                  this.quaternion.setFromAxisAngle(e, t);
                },
              },
              {
                key: "setRotationFromEuler",
                value: function (e) {
                  this.quaternion.setFromEuler(e, !0);
                },
              },
              {
                key: "setRotationFromMatrix",
                value: function (e) {
                  this.quaternion.setFromRotationMatrix(e);
                },
              },
              {
                key: "setRotationFromQuaternion",
                value: function (e) {
                  this.quaternion.copy(e);
                },
              },
              {
                key: "rotateOnAxis",
                value: function (e, t) {
                  return (
                    pi.setFromAxisAngle(e, t),
                    this.quaternion.multiply(pi),
                    this
                  );
                },
              },
              {
                key: "rotateOnWorldAxis",
                value: function (e, t) {
                  return (
                    pi.setFromAxisAngle(e, t),
                    this.quaternion.premultiply(pi),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return this.rotateOnAxis(xi, e);
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return this.rotateOnAxis(_i, e);
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return this.rotateOnAxis(wi, e);
                },
              },
              {
                key: "translateOnAxis",
                value: function (e, t) {
                  return (
                    di.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(di.multiplyScalar(t)),
                    this
                  );
                },
              },
              {
                key: "translateX",
                value: function (e) {
                  return this.translateOnAxis(xi, e);
                },
              },
              {
                key: "translateY",
                value: function (e) {
                  return this.translateOnAxis(_i, e);
                },
              },
              {
                key: "translateZ",
                value: function (e) {
                  return this.translateOnAxis(wi, e);
                },
              },
              {
                key: "localToWorld",
                value: function (e) {
                  return e.applyMatrix4(this.matrixWorld);
                },
              },
              {
                key: "worldToLocal",
                value: function (e) {
                  return e.applyMatrix4(mi.copy(this.matrixWorld).invert());
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  e.isVector3 ? vi.copy(e) : vi.set(e, t, n);
                  var r = this.parent;
                  this.updateWorldMatrix(!0, !1),
                    gi.setFromMatrixPosition(this.matrixWorld),
                    this.isCamera || this.isLight
                      ? mi.lookAt(gi, vi, this.up)
                      : mi.lookAt(vi, gi, this.up),
                    this.quaternion.setFromRotationMatrix(mi),
                    r &&
                      (mi.extractRotation(r.matrixWorld),
                      pi.setFromRotationMatrix(mi),
                      this.quaternion.premultiply(pi.invert()));
                },
              },
              {
                key: "add",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.add(arguments[t]);
                    return this;
                  }
                  return e === this
                    ? (console.error(
                        "THREE.Object3D.add: object can't be added as a child of itself.",
                        e
                      ),
                      this)
                    : (e && e.isObject3D
                        ? (null !== e.parent && e.parent.remove(e),
                          (e.parent = this),
                          this.children.push(e),
                          e.dispatchEvent(Si))
                        : console.error(
                            "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                            e
                          ),
                      this);
                },
              },
              {
                key: "remove",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.remove(arguments[t]);
                    return this;
                  }
                  var n = this.children.indexOf(e);
                  return (
                    -1 !== n &&
                      ((e.parent = null),
                      this.children.splice(n, 1),
                      e.dispatchEvent(Mi)),
                    this
                  );
                },
              },
              {
                key: "removeFromParent",
                value: function () {
                  var e = this.parent;
                  return null !== e && e.remove(this), this;
                },
              },
              {
                key: "clear",
                value: function () {
                  for (var e = 0; e < this.children.length; e++) {
                    var t = this.children[e];
                    (t.parent = null), t.dispatchEvent(Mi);
                  }
                  return (this.children.length = 0), this;
                },
              },
              {
                key: "attach",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    mi.copy(this.matrixWorld).invert(),
                    null !== e.parent &&
                      (e.parent.updateWorldMatrix(!0, !1),
                      mi.multiply(e.parent.matrixWorld)),
                    e.applyMatrix4(mi),
                    this.add(e),
                    e.updateWorldMatrix(!1, !0),
                    this
                  );
                },
              },
              {
                key: "getObjectById",
                value: function (e) {
                  return this.getObjectByProperty("id", e);
                },
              },
              {
                key: "getObjectByName",
                value: function (e) {
                  return this.getObjectByProperty("name", e);
                },
              },
              {
                key: "getObjectByProperty",
                value: function (e, t) {
                  if (this[e] === t) return this;
                  for (var n = 0, r = this.children.length; n < r; n++) {
                    var i = this.children[n].getObjectByProperty(e, t);
                    if (void 0 !== i) return i;
                  }
                },
              },
              {
                key: "getWorldPosition",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.setFromMatrixPosition(this.matrixWorld)
                  );
                },
              },
              {
                key: "getWorldQuaternion",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(gi, e, yi),
                    e
                  );
                },
              },
              {
                key: "getWorldScale",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(gi, bi, e),
                    e
                  );
                },
              },
              {
                key: "getWorldDirection",
                value: function (e) {
                  this.updateWorldMatrix(!0, !1);
                  var t = this.matrixWorld.elements;
                  return e.set(t[8], t[9], t[10]).normalize();
                },
              },
              { key: "raycast", value: function () {} },
              {
                key: "traverse",
                value: function (e) {
                  e(this);
                  for (var t = this.children, n = 0, r = t.length; n < r; n++)
                    t[n].traverse(e);
                },
              },
              {
                key: "traverseVisible",
                value: function (e) {
                  if (!1 !== this.visible) {
                    e(this);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++)
                      t[n].traverseVisible(e);
                  }
                },
              },
              {
                key: "traverseAncestors",
                value: function (e) {
                  var t = this.parent;
                  null !== t && (e(t), t.traverseAncestors(e));
                },
              },
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.compose(
                    this.position,
                    this.quaternion,
                    this.scale
                  ),
                    (this.matrixWorldNeedsUpdate = !0);
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || e) &&
                      (null === this.parent
                        ? this.matrixWorld.copy(this.matrix)
                        : this.matrixWorld.multiplyMatrices(
                            this.parent.matrixWorld,
                            this.matrix
                          ),
                      (this.matrixWorldNeedsUpdate = !1),
                      (e = !0));
                  for (var t = this.children, n = 0, r = t.length; n < r; n++) {
                    var i = t[n];
                    (!0 !== i.matrixWorldAutoUpdate && !0 !== e) ||
                      i.updateMatrixWorld(e);
                  }
                },
              },
              {
                key: "updateWorldMatrix",
                value: function (e, t) {
                  var n = this.parent;
                  if (
                    (!0 === e &&
                      null !== n &&
                      !0 === n.matrixWorldAutoUpdate &&
                      n.updateWorldMatrix(!0, !1),
                    this.matrixAutoUpdate && this.updateMatrix(),
                    null === this.parent
                      ? this.matrixWorld.copy(this.matrix)
                      : this.matrixWorld.multiplyMatrices(
                          this.parent.matrixWorld,
                          this.matrix
                        ),
                    !0 === t)
                  )
                    for (
                      var r = this.children, i = 0, a = r.length;
                      i < a;
                      i++
                    ) {
                      var o = r[i];
                      !0 === o.matrixWorldAutoUpdate &&
                        o.updateWorldMatrix(!1, !0);
                    }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e,
                    n = {};
                  t &&
                    ((e = {
                      geometries: {},
                      materials: {},
                      textures: {},
                      images: {},
                      shapes: {},
                      skeletons: {},
                      animations: {},
                      nodes: {},
                    }),
                    (n.metadata = {
                      version: 4.5,
                      type: "Object",
                      generator: "Object3D.toJSON",
                    }));
                  var r = {};
                  function i(t, n) {
                    return (
                      void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
                    );
                  }
                  if (
                    ((r.uuid = this.uuid),
                    (r.type = this.type),
                    "" !== this.name && (r.name = this.name),
                    !0 === this.castShadow && (r.castShadow = !0),
                    !0 === this.receiveShadow && (r.receiveShadow = !0),
                    !1 === this.visible && (r.visible = !1),
                    !1 === this.frustumCulled && (r.frustumCulled = !1),
                    0 !== this.renderOrder &&
                      (r.renderOrder = this.renderOrder),
                    "{}" !== JSON.stringify(this.userData) &&
                      (r.userData = this.userData),
                    (r.layers = this.layers.mask),
                    (r.matrix = this.matrix.toArray()),
                    !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
                    this.isInstancedMesh &&
                      ((r.type = "InstancedMesh"),
                      (r.count = this.count),
                      (r.instanceMatrix = this.instanceMatrix.toJSON()),
                      null !== this.instanceColor &&
                        (r.instanceColor = this.instanceColor.toJSON())),
                    this.isScene)
                  )
                    this.background &&
                      (this.background.isColor
                        ? (r.background = this.background.toJSON())
                        : this.background.isTexture &&
                          (r.background = this.background.toJSON(e).uuid)),
                      this.environment &&
                        this.environment.isTexture &&
                        !0 !== this.environment.isRenderTargetTexture &&
                        (r.environment = this.environment.toJSON(e).uuid);
                  else if (this.isMesh || this.isLine || this.isPoints) {
                    r.geometry = i(e.geometries, this.geometry);
                    var a = this.geometry.parameters;
                    if (void 0 !== a && void 0 !== a.shapes) {
                      var o = a.shapes;
                      if (Array.isArray(o))
                        for (var s = 0, u = o.length; s < u; s++) {
                          var l = o[s];
                          i(e.shapes, l);
                        }
                      else i(e.shapes, o);
                    }
                  }
                  if (
                    (this.isSkinnedMesh &&
                      ((r.bindMode = this.bindMode),
                      (r.bindMatrix = this.bindMatrix.toArray()),
                      void 0 !== this.skeleton &&
                        (i(e.skeletons, this.skeleton),
                        (r.skeleton = this.skeleton.uuid))),
                    void 0 !== this.material)
                  )
                    if (Array.isArray(this.material)) {
                      for (
                        var c = [], h = 0, f = this.material.length;
                        h < f;
                        h++
                      )
                        c.push(i(e.materials, this.material[h]));
                      r.material = c;
                    } else r.material = i(e.materials, this.material);
                  if (this.children.length > 0) {
                    r.children = [];
                    for (var d = 0; d < this.children.length; d++)
                      r.children.push(this.children[d].toJSON(e).object);
                  }
                  if (this.animations.length > 0) {
                    r.animations = [];
                    for (var p = 0; p < this.animations.length; p++) {
                      var m = this.animations[p];
                      r.animations.push(i(e.animations, m));
                    }
                  }
                  if (t) {
                    var v = M(e.geometries),
                      g = M(e.materials),
                      y = M(e.textures),
                      b = M(e.images),
                      x = M(e.shapes),
                      _ = M(e.skeletons),
                      w = M(e.animations),
                      S = M(e.nodes);
                    v.length > 0 && (n.geometries = v),
                      g.length > 0 && (n.materials = g),
                      y.length > 0 && (n.textures = y),
                      b.length > 0 && (n.images = b),
                      x.length > 0 && (n.shapes = x),
                      _.length > 0 && (n.skeletons = _),
                      w.length > 0 && (n.animations = w),
                      S.length > 0 && (n.nodes = S);
                  }
                  return (n.object = r), n;
                  function M(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                },
              },
              {
                key: "clone",
                value: function (e) {
                  return new this.constructor().copy(this, e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1];
                  if (
                    ((this.name = e.name),
                    this.up.copy(e.up),
                    this.position.copy(e.position),
                    (this.rotation.order = e.rotation.order),
                    this.quaternion.copy(e.quaternion),
                    this.scale.copy(e.scale),
                    this.matrix.copy(e.matrix),
                    this.matrixWorld.copy(e.matrixWorld),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
                    (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
                    (this.layers.mask = e.layers.mask),
                    (this.visible = e.visible),
                    (this.castShadow = e.castShadow),
                    (this.receiveShadow = e.receiveShadow),
                    (this.frustumCulled = e.frustumCulled),
                    (this.renderOrder = e.renderOrder),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    !0 === t)
                  )
                    for (var n = 0; n < e.children.length; n++) {
                      var r = e.children[n];
                      this.add(r.clone());
                    }
                  return this;
                },
              },
            ]),
            t
          );
        })(Pn);
      (Ti.DefaultUp = new Sr(0, 1, 0)),
        (Ti.DefaultMatrixAutoUpdate = !0),
        (Ti.DefaultMatrixWorldAutoUpdate = !0);
      var Ei = new Sr(),
        Oi = new Sr(),
        ki = new Sr(),
        Ai = new Sr(),
        Ci = new Sr(),
        Pi = new Sr(),
        Ri = new Sr(),
        Li = new Sr(),
        ji = new Sr(),
        Ii = new Sr(),
        Ni = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Sr();
            Object(y.a)(this, e), (this.a = t), (this.b = n), (this.c = r);
          }
          return (
            Object(b.a)(
              e,
              [
                {
                  key: "set",
                  value: function (e, t, n) {
                    return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
                  },
                },
                {
                  key: "setFromPointsAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.copy(e[t]),
                      this.b.copy(e[n]),
                      this.c.copy(e[r]),
                      this
                    );
                  },
                },
                {
                  key: "setFromAttributeAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.fromBufferAttribute(e, t),
                      this.b.fromBufferAttribute(e, n),
                      this.c.fromBufferAttribute(e, r),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor().copy(this);
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                    );
                  },
                },
                {
                  key: "getArea",
                  value: function () {
                    return (
                      Ei.subVectors(this.c, this.b),
                      Oi.subVectors(this.a, this.b),
                      0.5 * Ei.cross(Oi).length()
                    );
                  },
                },
                {
                  key: "getMidpoint",
                  value: function (e) {
                    return e
                      .addVectors(this.a, this.b)
                      .add(this.c)
                      .multiplyScalar(1 / 3);
                  },
                },
                {
                  key: "getNormal",
                  value: function (t) {
                    return e.getNormal(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "getPlane",
                  value: function (e) {
                    return e.setFromCoplanarPoints(this.a, this.b, this.c);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (t, n) {
                    return e.getBarycoord(t, this.a, this.b, this.c, n);
                  },
                },
                {
                  key: "getUV",
                  value: function (t, n, r, i, a) {
                    return e.getUV(t, this.a, this.b, this.c, n, r, i, a);
                  },
                },
                {
                  key: "containsPoint",
                  value: function (t) {
                    return e.containsPoint(t, this.a, this.b, this.c);
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (t) {
                    return e.isFrontFacing(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "intersectsBox",
                  value: function (e) {
                    return e.intersectsTriangle(this);
                  },
                },
                {
                  key: "closestPointToPoint",
                  value: function (e, t) {
                    var n,
                      r,
                      i = this.a,
                      a = this.b,
                      o = this.c;
                    Ci.subVectors(a, i),
                      Pi.subVectors(o, i),
                      Li.subVectors(e, i);
                    var s = Ci.dot(Li),
                      u = Pi.dot(Li);
                    if (s <= 0 && u <= 0) return t.copy(i);
                    ji.subVectors(e, a);
                    var l = Ci.dot(ji),
                      c = Pi.dot(ji);
                    if (l >= 0 && c <= l) return t.copy(a);
                    var h = s * c - l * u;
                    if (h <= 0 && s >= 0 && l <= 0)
                      return (
                        (n = s / (s - l)), t.copy(i).addScaledVector(Ci, n)
                      );
                    Ii.subVectors(e, o);
                    var f = Ci.dot(Ii),
                      d = Pi.dot(Ii);
                    if (d >= 0 && f <= d) return t.copy(o);
                    var p = f * u - s * d;
                    if (p <= 0 && u >= 0 && d <= 0)
                      return (
                        (r = u / (u - d)), t.copy(i).addScaledVector(Pi, r)
                      );
                    var m = l * d - f * c;
                    if (m <= 0 && c - l >= 0 && f - d >= 0)
                      return (
                        Ri.subVectors(o, a),
                        (r = (c - l) / (c - l + (f - d))),
                        t.copy(a).addScaledVector(Ri, r)
                      );
                    var v = 1 / (m + p + h);
                    return (
                      (n = p * v),
                      (r = h * v),
                      t.copy(i).addScaledVector(Ci, n).addScaledVector(Pi, r)
                    );
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    return (
                      e.a.equals(this.a) &&
                      e.b.equals(this.b) &&
                      e.c.equals(this.c)
                    );
                  },
                },
              ],
              [
                {
                  key: "getNormal",
                  value: function (e, t, n, r) {
                    r.subVectors(n, t), Ei.subVectors(e, t), r.cross(Ei);
                    var i = r.lengthSq();
                    return i > 0
                      ? r.multiplyScalar(1 / Math.sqrt(i))
                      : r.set(0, 0, 0);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (e, t, n, r, i) {
                    Ei.subVectors(r, t),
                      Oi.subVectors(n, t),
                      ki.subVectors(e, t);
                    var a = Ei.dot(Ei),
                      o = Ei.dot(Oi),
                      s = Ei.dot(ki),
                      u = Oi.dot(Oi),
                      l = Oi.dot(ki),
                      c = a * u - o * o;
                    if (0 === c) return i.set(-2, -1, -1);
                    var h = 1 / c,
                      f = (u * s - o * l) * h,
                      d = (a * l - o * s) * h;
                    return i.set(1 - f - d, d, f);
                  },
                },
                {
                  key: "containsPoint",
                  value: function (e, t, n, r) {
                    return (
                      this.getBarycoord(e, t, n, r, Ai),
                      Ai.x >= 0 && Ai.y >= 0 && Ai.x + Ai.y <= 1
                    );
                  },
                },
                {
                  key: "getUV",
                  value: function (e, t, n, r, i, a, o, s) {
                    return (
                      this.getBarycoord(e, t, n, r, Ai),
                      s.set(0, 0),
                      s.addScaledVector(i, Ai.x),
                      s.addScaledVector(a, Ai.y),
                      s.addScaledVector(o, Ai.z),
                      s
                    );
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (e, t, n, r) {
                    return (
                      Ei.subVectors(n, t),
                      Oi.subVectors(e, t),
                      Ei.cross(Oi).dot(r) < 0
                    );
                  },
                },
              ]
            ),
            e
          );
        })(),
        Di = 0,
        zi = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isMaterial =
                !0),
              Object.defineProperty(Object(d.a)(e), "id", { value: Di++ }),
              (e.uuid = Nn()),
              (e.name = ""),
              (e.type = "Material"),
              (e.blending = I),
              (e.side = P),
              (e.vertexColors = !1),
              (e.opacity = 1),
              (e.transparent = !1),
              (e.blendSrc = J),
              (e.blendDst = Z),
              (e.blendEquation = B),
              (e.blendSrcAlpha = null),
              (e.blendDstAlpha = null),
              (e.blendEquationAlpha = null),
              (e.depthFunc = ae),
              (e.depthTest = !0),
              (e.depthWrite = !0),
              (e.stencilWriteMask = 255),
              (e.stencilFunc = yn),
              (e.stencilRef = 0),
              (e.stencilFuncMask = 255),
              (e.stencilFail = rn),
              (e.stencilZFail = rn),
              (e.stencilZPass = rn),
              (e.stencilWrite = !1),
              (e.clippingPlanes = null),
              (e.clipIntersection = !1),
              (e.clipShadows = !1),
              (e.shadowSide = null),
              (e.colorWrite = !0),
              (e.precision = null),
              (e.polygonOffset = !1),
              (e.polygonOffsetFactor = 0),
              (e.polygonOffsetUnits = 0),
              (e.dithering = !1),
              (e.alphaToCoverage = !1),
              (e.premultipliedAlpha = !1),
              (e.visible = !0),
              (e.toneMapped = !0),
              (e.userData = {}),
              (e.version = 0),
              (e._alphaTest = 0),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              { key: "onBuild", value: function () {} },
              { key: "onBeforeRender", value: function () {} },
              { key: "onBeforeCompile", value: function () {} },
              {
                key: "customProgramCacheKey",
                value: function () {
                  return this.onBeforeCompile.toString();
                },
              },
              {
                key: "setValues",
                value: function (e) {
                  if (void 0 !== e)
                    for (var t in e) {
                      var n = e[t];
                      if (void 0 !== n) {
                        var r = this[t];
                        void 0 !== r
                          ? r && r.isColor
                            ? r.set(n)
                            : r && r.isVector3 && n && n.isVector3
                            ? r.copy(n)
                            : (this[t] = n)
                          : console.warn(
                              "THREE." +
                                this.type +
                                ": '" +
                                t +
                                "' is not a property of this material."
                            );
                      } else
                        console.warn(
                          "THREE.Material: '" + t + "' parameter is undefined."
                        );
                    }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  t && (e = { textures: {}, images: {} });
                  var n = {
                    metadata: {
                      version: 4.5,
                      type: "Material",
                      generator: "Material.toJSON",
                    },
                  };
                  function r(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                  if (
                    ((n.uuid = this.uuid),
                    (n.type = this.type),
                    "" !== this.name && (n.name = this.name),
                    this.color &&
                      this.color.isColor &&
                      (n.color = this.color.getHex()),
                    void 0 !== this.roughness && (n.roughness = this.roughness),
                    void 0 !== this.metalness && (n.metalness = this.metalness),
                    void 0 !== this.sheen && (n.sheen = this.sheen),
                    this.sheenColor &&
                      this.sheenColor.isColor &&
                      (n.sheenColor = this.sheenColor.getHex()),
                    void 0 !== this.sheenRoughness &&
                      (n.sheenRoughness = this.sheenRoughness),
                    this.emissive &&
                      this.emissive.isColor &&
                      (n.emissive = this.emissive.getHex()),
                    this.emissiveIntensity &&
                      1 !== this.emissiveIntensity &&
                      (n.emissiveIntensity = this.emissiveIntensity),
                    this.specular &&
                      this.specular.isColor &&
                      (n.specular = this.specular.getHex()),
                    void 0 !== this.specularIntensity &&
                      (n.specularIntensity = this.specularIntensity),
                    this.specularColor &&
                      this.specularColor.isColor &&
                      (n.specularColor = this.specularColor.getHex()),
                    void 0 !== this.shininess && (n.shininess = this.shininess),
                    void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
                    void 0 !== this.clearcoatRoughness &&
                      (n.clearcoatRoughness = this.clearcoatRoughness),
                    this.clearcoatMap &&
                      this.clearcoatMap.isTexture &&
                      (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
                    this.clearcoatRoughnessMap &&
                      this.clearcoatRoughnessMap.isTexture &&
                      (n.clearcoatRoughnessMap =
                        this.clearcoatRoughnessMap.toJSON(e).uuid),
                    this.clearcoatNormalMap &&
                      this.clearcoatNormalMap.isTexture &&
                      ((n.clearcoatNormalMap =
                        this.clearcoatNormalMap.toJSON(e).uuid),
                      (n.clearcoatNormalScale =
                        this.clearcoatNormalScale.toArray())),
                    void 0 !== this.iridescence &&
                      (n.iridescence = this.iridescence),
                    void 0 !== this.iridescenceIOR &&
                      (n.iridescenceIOR = this.iridescenceIOR),
                    void 0 !== this.iridescenceThicknessRange &&
                      (n.iridescenceThicknessRange =
                        this.iridescenceThicknessRange),
                    this.iridescenceMap &&
                      this.iridescenceMap.isTexture &&
                      (n.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
                    this.iridescenceThicknessMap &&
                      this.iridescenceThicknessMap.isTexture &&
                      (n.iridescenceThicknessMap =
                        this.iridescenceThicknessMap.toJSON(e).uuid),
                    this.map &&
                      this.map.isTexture &&
                      (n.map = this.map.toJSON(e).uuid),
                    this.matcap &&
                      this.matcap.isTexture &&
                      (n.matcap = this.matcap.toJSON(e).uuid),
                    this.alphaMap &&
                      this.alphaMap.isTexture &&
                      (n.alphaMap = this.alphaMap.toJSON(e).uuid),
                    this.lightMap &&
                      this.lightMap.isTexture &&
                      ((n.lightMap = this.lightMap.toJSON(e).uuid),
                      (n.lightMapIntensity = this.lightMapIntensity)),
                    this.aoMap &&
                      this.aoMap.isTexture &&
                      ((n.aoMap = this.aoMap.toJSON(e).uuid),
                      (n.aoMapIntensity = this.aoMapIntensity)),
                    this.bumpMap &&
                      this.bumpMap.isTexture &&
                      ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
                      (n.bumpScale = this.bumpScale)),
                    this.normalMap &&
                      this.normalMap.isTexture &&
                      ((n.normalMap = this.normalMap.toJSON(e).uuid),
                      (n.normalMapType = this.normalMapType),
                      (n.normalScale = this.normalScale.toArray())),
                    this.displacementMap &&
                      this.displacementMap.isTexture &&
                      ((n.displacementMap =
                        this.displacementMap.toJSON(e).uuid),
                      (n.displacementScale = this.displacementScale),
                      (n.displacementBias = this.displacementBias)),
                    this.roughnessMap &&
                      this.roughnessMap.isTexture &&
                      (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
                    this.metalnessMap &&
                      this.metalnessMap.isTexture &&
                      (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
                    this.emissiveMap &&
                      this.emissiveMap.isTexture &&
                      (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
                    this.specularMap &&
                      this.specularMap.isTexture &&
                      (n.specularMap = this.specularMap.toJSON(e).uuid),
                    this.specularIntensityMap &&
                      this.specularIntensityMap.isTexture &&
                      (n.specularIntensityMap =
                        this.specularIntensityMap.toJSON(e).uuid),
                    this.specularColorMap &&
                      this.specularColorMap.isTexture &&
                      (n.specularColorMap =
                        this.specularColorMap.toJSON(e).uuid),
                    this.envMap &&
                      this.envMap.isTexture &&
                      ((n.envMap = this.envMap.toJSON(e).uuid),
                      void 0 !== this.combine && (n.combine = this.combine)),
                    void 0 !== this.envMapIntensity &&
                      (n.envMapIntensity = this.envMapIntensity),
                    void 0 !== this.reflectivity &&
                      (n.reflectivity = this.reflectivity),
                    void 0 !== this.refractionRatio &&
                      (n.refractionRatio = this.refractionRatio),
                    this.gradientMap &&
                      this.gradientMap.isTexture &&
                      (n.gradientMap = this.gradientMap.toJSON(e).uuid),
                    void 0 !== this.transmission &&
                      (n.transmission = this.transmission),
                    this.transmissionMap &&
                      this.transmissionMap.isTexture &&
                      (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
                    void 0 !== this.thickness && (n.thickness = this.thickness),
                    this.thicknessMap &&
                      this.thicknessMap.isTexture &&
                      (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
                    void 0 !== this.attenuationDistance &&
                      (n.attenuationDistance = this.attenuationDistance),
                    void 0 !== this.attenuationColor &&
                      (n.attenuationColor = this.attenuationColor.getHex()),
                    void 0 !== this.size && (n.size = this.size),
                    null !== this.shadowSide &&
                      (n.shadowSide = this.shadowSide),
                    void 0 !== this.sizeAttenuation &&
                      (n.sizeAttenuation = this.sizeAttenuation),
                    this.blending !== I && (n.blending = this.blending),
                    this.side !== P && (n.side = this.side),
                    this.vertexColors && (n.vertexColors = !0),
                    this.opacity < 1 && (n.opacity = this.opacity),
                    !0 === this.transparent &&
                      (n.transparent = this.transparent),
                    (n.depthFunc = this.depthFunc),
                    (n.depthTest = this.depthTest),
                    (n.depthWrite = this.depthWrite),
                    (n.colorWrite = this.colorWrite),
                    (n.stencilWrite = this.stencilWrite),
                    (n.stencilWriteMask = this.stencilWriteMask),
                    (n.stencilFunc = this.stencilFunc),
                    (n.stencilRef = this.stencilRef),
                    (n.stencilFuncMask = this.stencilFuncMask),
                    (n.stencilFail = this.stencilFail),
                    (n.stencilZFail = this.stencilZFail),
                    (n.stencilZPass = this.stencilZPass),
                    void 0 !== this.rotation &&
                      0 !== this.rotation &&
                      (n.rotation = this.rotation),
                    !0 === this.polygonOffset && (n.polygonOffset = !0),
                    0 !== this.polygonOffsetFactor &&
                      (n.polygonOffsetFactor = this.polygonOffsetFactor),
                    0 !== this.polygonOffsetUnits &&
                      (n.polygonOffsetUnits = this.polygonOffsetUnits),
                    void 0 !== this.linewidth &&
                      1 !== this.linewidth &&
                      (n.linewidth = this.linewidth),
                    void 0 !== this.dashSize && (n.dashSize = this.dashSize),
                    void 0 !== this.gapSize && (n.gapSize = this.gapSize),
                    void 0 !== this.scale && (n.scale = this.scale),
                    !0 === this.dithering && (n.dithering = !0),
                    this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                    !0 === this.alphaToCoverage &&
                      (n.alphaToCoverage = this.alphaToCoverage),
                    !0 === this.premultipliedAlpha &&
                      (n.premultipliedAlpha = this.premultipliedAlpha),
                    !0 === this.wireframe && (n.wireframe = this.wireframe),
                    this.wireframeLinewidth > 1 &&
                      (n.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap &&
                      (n.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin &&
                      (n.wireframeLinejoin = this.wireframeLinejoin),
                    !0 === this.flatShading &&
                      (n.flatShading = this.flatShading),
                    !1 === this.visible && (n.visible = !1),
                    !1 === this.toneMapped && (n.toneMapped = !1),
                    !1 === this.fog && (n.fog = !1),
                    "{}" !== JSON.stringify(this.userData) &&
                      (n.userData = this.userData),
                    t)
                  ) {
                    var i = r(e.textures),
                      a = r(e.images);
                    i.length > 0 && (n.textures = i),
                      a.length > 0 && (n.images = a);
                  }
                  return n;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.name = e.name),
                    (this.blending = e.blending),
                    (this.side = e.side),
                    (this.vertexColors = e.vertexColors),
                    (this.opacity = e.opacity),
                    (this.transparent = e.transparent),
                    (this.blendSrc = e.blendSrc),
                    (this.blendDst = e.blendDst),
                    (this.blendEquation = e.blendEquation),
                    (this.blendSrcAlpha = e.blendSrcAlpha),
                    (this.blendDstAlpha = e.blendDstAlpha),
                    (this.blendEquationAlpha = e.blendEquationAlpha),
                    (this.depthFunc = e.depthFunc),
                    (this.depthTest = e.depthTest),
                    (this.depthWrite = e.depthWrite),
                    (this.stencilWriteMask = e.stencilWriteMask),
                    (this.stencilFunc = e.stencilFunc),
                    (this.stencilRef = e.stencilRef),
                    (this.stencilFuncMask = e.stencilFuncMask),
                    (this.stencilFail = e.stencilFail),
                    (this.stencilZFail = e.stencilZFail),
                    (this.stencilZPass = e.stencilZPass),
                    (this.stencilWrite = e.stencilWrite);
                  var t = e.clippingPlanes,
                    n = null;
                  if (null !== t) {
                    var r = t.length;
                    n = new Array(r);
                    for (var i = 0; i !== r; ++i) n[i] = t[i].clone();
                  }
                  return (
                    (this.clippingPlanes = n),
                    (this.clipIntersection = e.clipIntersection),
                    (this.clipShadows = e.clipShadows),
                    (this.shadowSide = e.shadowSide),
                    (this.colorWrite = e.colorWrite),
                    (this.precision = e.precision),
                    (this.polygonOffset = e.polygonOffset),
                    (this.polygonOffsetFactor = e.polygonOffsetFactor),
                    (this.polygonOffsetUnits = e.polygonOffsetUnits),
                    (this.dithering = e.dithering),
                    (this.alphaTest = e.alphaTest),
                    (this.alphaToCoverage = e.alphaToCoverage),
                    (this.premultipliedAlpha = e.premultipliedAlpha),
                    (this.visible = e.visible),
                    (this.toneMapped = e.toneMapped),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "alphaTest",
                get: function () {
                  return this._alphaTest;
                },
                set: function (e) {
                  this._alphaTest > 0 !== e > 0 && this.version++,
                    (this._alphaTest = e);
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            t
          );
        })(Pn),
        Ui = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshBasicMaterial = !0),
              (n.type = "MeshBasicMaterial"),
              (n.color = new lr(16777215)),
              (n.map = null),
              (n.lightMap = null),
              (n.lightMapIntensity = 1),
              (n.aoMap = null),
              (n.aoMapIntensity = 1),
              (n.specularMap = null),
              (n.alphaMap = null),
              (n.envMap = null),
              (n.combine = ce),
              (n.reflectivity = 1),
              (n.refractionRatio = 0.98),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              (n.wireframeLinecap = "round"),
              (n.wireframeLinejoin = "round"),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    (this.specularMap = e.specularMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.combine = e.combine),
                    (this.reflectivity = e.reflectivity),
                    (this.refractionRatio = e.refractionRatio),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        Bi = new Sr(),
        Fi = new qn(),
        Gi = (function () {
          function e(t, n, r) {
            if ((Object(y.a)(this, e), Array.isArray(t)))
              throw new TypeError(
                "THREE.BufferAttribute: array should be a Typed Array."
              );
            (this.isBufferAttribute = !0),
              (this.name = ""),
              (this.array = t),
              (this.itemSize = n),
              (this.count = void 0 !== t ? t.length / n : 0),
              (this.normalized = !0 === r),
              (this.usage = bn),
              (this.updateRange = { offset: 0, count: -1 }),
              (this.version = 0);
          }
          return (
            Object(b.a)(e, [
              { key: "onUploadCallback", value: function () {} },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.array = new e.array.constructor(e.array)),
                    (this.itemSize = e.itemSize),
                    (this.count = e.count),
                    (this.normalized = e.normalized),
                    (this.usage = e.usage),
                    this
                  );
                },
              },
              {
                key: "copyAt",
                value: function (e, t, n) {
                  (e *= this.itemSize), (n *= t.itemSize);
                  for (var r = 0, i = this.itemSize; r < i; r++)
                    this.array[e + r] = t.array[n + r];
                  return this;
                },
              },
              {
                key: "copyArray",
                value: function (e) {
                  return this.array.set(e), this;
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  if (2 === this.itemSize)
                    for (var t = 0, n = this.count; t < n; t++)
                      Fi.fromBufferAttribute(this, t),
                        Fi.applyMatrix3(e),
                        this.setXY(t, Fi.x, Fi.y);
                  else if (3 === this.itemSize)
                    for (var r = 0, i = this.count; r < i; r++)
                      Bi.fromBufferAttribute(this, r),
                        Bi.applyMatrix3(e),
                        this.setXYZ(r, Bi.x, Bi.y, Bi.z);
                  return this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Bi.fromBufferAttribute(this, t),
                      Bi.applyMatrix4(e),
                      this.setXYZ(t, Bi.x, Bi.y, Bi.z);
                  return this;
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Bi.fromBufferAttribute(this, t),
                      Bi.applyNormalMatrix(e),
                      this.setXYZ(t, Bi.x, Bi.y, Bi.z);
                  return this;
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Bi.fromBufferAttribute(this, t),
                      Bi.transformDirection(e),
                      this.setXYZ(t, Bi.x, Bi.y, Bi.z);
                  return this;
                },
              },
              {
                key: "set",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return this.array.set(e, t), this;
                },
              },
              {
                key: "getX",
                value: function (e) {
                  var t = this.array[e * this.itemSize];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.array[e * this.itemSize] = t),
                    this
                  );
                },
              },
              {
                key: "getY",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 1];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.array[e * this.itemSize + 1] = t),
                    this
                  );
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 2];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.array[e * this.itemSize + 2] = t),
                    this
                  );
                },
              },
              {
                key: "getW",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 3];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.array[e * this.itemSize + 3] = t),
                    this
                  );
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = Vn(t, this.array)), (n = Vn(n, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = Vn(t, this.array)),
                      (n = Vn(n, this.array)),
                      (r = Vn(r, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, i) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = Vn(t, this.array)),
                      (n = Vn(n, this.array)),
                      (r = Vn(r, this.array)),
                      (i = Vn(i, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    (this.array[e + 3] = i),
                    this
                  );
                },
              },
              {
                key: "onUpload",
                value: function (e) {
                  return (this.onUploadCallback = e), this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.array, this.itemSize).copy(
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    itemSize: this.itemSize,
                    type: this.array.constructor.name,
                    array: Array.from(this.array),
                    normalized: this.normalized,
                  };
                  return (
                    "" !== this.name && (e.name = this.name),
                    this.usage !== bn && (e.usage = this.usage),
                    (0 === this.updateRange.offset &&
                      -1 === this.updateRange.count) ||
                      (e.updateRange = this.updateRange),
                    e
                  );
                },
              },
              {
                key: "copyColorsArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyColorsArray() was removed in r144."
                  );
                },
              },
              {
                key: "copyVector2sArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyVector2sArray() was removed in r144."
                  );
                },
              },
              {
                key: "copyVector3sArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyVector3sArray() was removed in r144."
                  );
                },
              },
              {
                key: "copyVector4sArray",
                value: function () {
                  console.error(
                    "THREE.BufferAttribute: copyVector4sArray() was removed in r144."
                  );
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            e
          );
        })(),
        Hi = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Int8Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Vi = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Uint8Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Wi = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Uint8ClampedArray(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        qi = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Int16Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Xi = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Uint16Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Yi = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Int32Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Ji = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Uint32Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Zi = (function (e) {
          function t(e, n, i) {
            var a;
            return (
              Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Uint16Array(e), n, i)
              )).isFloat16BufferAttribute = !0),
              a
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        $i = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Float32Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Ki = (function (e) {
          function t(e, n, i) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, new Float64Array(e), n, i)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(Gi),
        Qi = 0,
        ea = new ei(),
        ta = new Ti(),
        na = new Sr(),
        ra = new Er(),
        ia = new Er(),
        aa = new Sr(),
        oa = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isBufferGeometry = !0),
              Object.defineProperty(Object(d.a)(e), "id", { value: Qi++ }),
              (e.uuid = Nn()),
              (e.name = ""),
              (e.type = "BufferGeometry"),
              (e.index = null),
              (e.attributes = {}),
              (e.morphAttributes = {}),
              (e.morphTargetsRelative = !1),
              (e.groups = []),
              (e.boundingBox = null),
              (e.boundingSphere = null),
              (e.drawRange = { start: 0, count: 1 / 0 }),
              (e.userData = {}),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getIndex",
                value: function () {
                  return this.index;
                },
              },
              {
                key: "setIndex",
                value: function (e) {
                  return (
                    Array.isArray(e)
                      ? (this.index = new (Yn(e) ? Ji : Xi)(e, 1))
                      : (this.index = e),
                    this
                  );
                },
              },
              {
                key: "getAttribute",
                value: function (e) {
                  return this.attributes[e];
                },
              },
              {
                key: "setAttribute",
                value: function (e, t) {
                  return (this.attributes[e] = t), this;
                },
              },
              {
                key: "deleteAttribute",
                value: function (e) {
                  return delete this.attributes[e], this;
                },
              },
              {
                key: "hasAttribute",
                value: function (e) {
                  return void 0 !== this.attributes[e];
                },
              },
              {
                key: "addGroup",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0;
                  this.groups.push({ start: e, count: t, materialIndex: n });
                },
              },
              {
                key: "clearGroups",
                value: function () {
                  this.groups = [];
                },
              },
              {
                key: "setDrawRange",
                value: function (e, t) {
                  (this.drawRange.start = e), (this.drawRange.count = t);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.attributes.position;
                  void 0 !== t && (t.applyMatrix4(e), (t.needsUpdate = !0));
                  var n = this.attributes.normal;
                  if (void 0 !== n) {
                    var r = new Xn().getNormalMatrix(e);
                    n.applyNormalMatrix(r), (n.needsUpdate = !0);
                  }
                  var i = this.attributes.tangent;
                  return (
                    void 0 !== i &&
                      (i.transformDirection(e), (i.needsUpdate = !0)),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere &&
                      this.computeBoundingSphere(),
                    this
                  );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return (
                    ea.makeRotationFromQuaternion(e),
                    this.applyMatrix4(ea),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return ea.makeRotationX(e), this.applyMatrix4(ea), this;
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return ea.makeRotationY(e), this.applyMatrix4(ea), this;
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return ea.makeRotationZ(e), this.applyMatrix4(ea), this;
                },
              },
              {
                key: "translate",
                value: function (e, t, n) {
                  return (
                    ea.makeTranslation(e, t, n), this.applyMatrix4(ea), this
                  );
                },
              },
              {
                key: "scale",
                value: function (e, t, n) {
                  return ea.makeScale(e, t, n), this.applyMatrix4(ea), this;
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    ta.lookAt(e),
                    ta.updateMatrix(),
                    this.applyMatrix4(ta.matrix),
                    this
                  );
                },
              },
              {
                key: "center",
                value: function () {
                  return (
                    this.computeBoundingBox(),
                    this.boundingBox.getCenter(na).negate(),
                    this.translate(na.x, na.y, na.z),
                    this
                  );
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  for (var t = [], n = 0, r = e.length; n < r; n++) {
                    var i = e[n];
                    t.push(i.x, i.y, i.z || 0);
                  }
                  return this.setAttribute("position", new $i(t, 3)), this;
                },
              },
              {
                key: "computeBoundingBox",
                value: function () {
                  null === this.boundingBox && (this.boundingBox = new Er());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingBox.set(
                        new Sr(-1 / 0, -1 / 0, -1 / 0),
                        new Sr(1 / 0, 1 / 0, 1 / 0)
                      )
                    );
                  if (void 0 !== e) {
                    if ((this.boundingBox.setFromBufferAttribute(e), t))
                      for (var n = 0, r = t.length; n < r; n++) {
                        var i = t[n];
                        ra.setFromBufferAttribute(i),
                          this.morphTargetsRelative
                            ? (aa.addVectors(this.boundingBox.min, ra.min),
                              this.boundingBox.expandByPoint(aa),
                              aa.addVectors(this.boundingBox.max, ra.max),
                              this.boundingBox.expandByPoint(aa))
                            : (this.boundingBox.expandByPoint(ra.min),
                              this.boundingBox.expandByPoint(ra.max));
                      }
                  } else this.boundingBox.makeEmpty();
                  (isNaN(this.boundingBox.min.x) ||
                    isNaN(this.boundingBox.min.y) ||
                    isNaN(this.boundingBox.min.z)) &&
                    console.error(
                      'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                      this
                    );
                },
              },
              {
                key: "computeBoundingSphere",
                value: function () {
                  null === this.boundingSphere &&
                    (this.boundingSphere = new Wr());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingSphere.set(new Sr(), 1 / 0)
                    );
                  if (e) {
                    var n = this.boundingSphere.center;
                    if ((ra.setFromBufferAttribute(e), t))
                      for (var r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        ia.setFromBufferAttribute(a),
                          this.morphTargetsRelative
                            ? (aa.addVectors(ra.min, ia.min),
                              ra.expandByPoint(aa),
                              aa.addVectors(ra.max, ia.max),
                              ra.expandByPoint(aa))
                            : (ra.expandByPoint(ia.min),
                              ra.expandByPoint(ia.max));
                      }
                    ra.getCenter(n);
                    for (var o = 0, s = 0, u = e.count; s < u; s++)
                      aa.fromBufferAttribute(e, s),
                        (o = Math.max(o, n.distanceToSquared(aa)));
                    if (t)
                      for (var l = 0, c = t.length; l < c; l++)
                        for (
                          var h = t[l],
                            f = this.morphTargetsRelative,
                            d = 0,
                            p = h.count;
                          d < p;
                          d++
                        )
                          aa.fromBufferAttribute(h, d),
                            f && (na.fromBufferAttribute(e, d), aa.add(na)),
                            (o = Math.max(o, n.distanceToSquared(aa)));
                    (this.boundingSphere.radius = Math.sqrt(o)),
                      isNaN(this.boundingSphere.radius) &&
                        console.error(
                          'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                          this
                        );
                  }
                },
              },
              {
                key: "computeTangents",
                value: function () {
                  var e = this.index,
                    t = this.attributes;
                  if (
                    null !== e &&
                    void 0 !== t.position &&
                    void 0 !== t.normal &&
                    void 0 !== t.uv
                  ) {
                    var n = e.array,
                      r = t.position.array,
                      i = t.normal.array,
                      a = t.uv.array,
                      o = r.length / 3;
                    !1 === this.hasAttribute("tangent") &&
                      this.setAttribute(
                        "tangent",
                        new Gi(new Float32Array(4 * o), 4)
                      );
                    for (
                      var s = this.getAttribute("tangent").array,
                        u = [],
                        l = [],
                        c = 0;
                      c < o;
                      c++
                    )
                      (u[c] = new Sr()), (l[c] = new Sr());
                    var h = new Sr(),
                      f = new Sr(),
                      d = new Sr(),
                      p = new qn(),
                      m = new qn(),
                      v = new qn(),
                      g = new Sr(),
                      y = new Sr(),
                      b = this.groups;
                    0 === b.length && (b = [{ start: 0, count: n.length }]);
                    for (var x = 0, _ = b.length; x < _; ++x)
                      for (
                        var w = b[x], S = w.start, M = S, T = S + w.count;
                        M < T;
                        M += 3
                      )
                        N(n[M + 0], n[M + 1], n[M + 2]);
                    for (
                      var E = new Sr(),
                        O = new Sr(),
                        k = new Sr(),
                        A = new Sr(),
                        C = 0,
                        P = b.length;
                      C < P;
                      ++C
                    )
                      for (
                        var R = b[C], L = R.start, j = L, I = L + R.count;
                        j < I;
                        j += 3
                      )
                        D(n[j + 0]), D(n[j + 1]), D(n[j + 2]);
                  } else
                    console.error(
                      "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
                    );
                  function N(e, t, n) {
                    h.fromArray(r, 3 * e),
                      f.fromArray(r, 3 * t),
                      d.fromArray(r, 3 * n),
                      p.fromArray(a, 2 * e),
                      m.fromArray(a, 2 * t),
                      v.fromArray(a, 2 * n),
                      f.sub(h),
                      d.sub(h),
                      m.sub(p),
                      v.sub(p);
                    var i = 1 / (m.x * v.y - v.x * m.y);
                    isFinite(i) &&
                      (g
                        .copy(f)
                        .multiplyScalar(v.y)
                        .addScaledVector(d, -m.y)
                        .multiplyScalar(i),
                      y
                        .copy(d)
                        .multiplyScalar(m.x)
                        .addScaledVector(f, -v.x)
                        .multiplyScalar(i),
                      u[e].add(g),
                      u[t].add(g),
                      u[n].add(g),
                      l[e].add(y),
                      l[t].add(y),
                      l[n].add(y));
                  }
                  function D(e) {
                    k.fromArray(i, 3 * e), A.copy(k);
                    var t = u[e];
                    E.copy(t),
                      E.sub(k.multiplyScalar(k.dot(t))).normalize(),
                      O.crossVectors(A, t);
                    var n = O.dot(l[e]) < 0 ? -1 : 1;
                    (s[4 * e] = E.x),
                      (s[4 * e + 1] = E.y),
                      (s[4 * e + 2] = E.z),
                      (s[4 * e + 3] = n);
                  }
                },
              },
              {
                key: "computeVertexNormals",
                value: function () {
                  var e = this.index,
                    t = this.getAttribute("position");
                  if (void 0 !== t) {
                    var n = this.getAttribute("normal");
                    if (void 0 === n)
                      (n = new Gi(new Float32Array(3 * t.count), 3)),
                        this.setAttribute("normal", n);
                    else
                      for (var r = 0, i = n.count; r < i; r++)
                        n.setXYZ(r, 0, 0, 0);
                    var a = new Sr(),
                      o = new Sr(),
                      s = new Sr(),
                      u = new Sr(),
                      l = new Sr(),
                      c = new Sr(),
                      h = new Sr(),
                      f = new Sr();
                    if (e)
                      for (var d = 0, p = e.count; d < p; d += 3) {
                        var m = e.getX(d + 0),
                          v = e.getX(d + 1),
                          g = e.getX(d + 2);
                        a.fromBufferAttribute(t, m),
                          o.fromBufferAttribute(t, v),
                          s.fromBufferAttribute(t, g),
                          h.subVectors(s, o),
                          f.subVectors(a, o),
                          h.cross(f),
                          u.fromBufferAttribute(n, m),
                          l.fromBufferAttribute(n, v),
                          c.fromBufferAttribute(n, g),
                          u.add(h),
                          l.add(h),
                          c.add(h),
                          n.setXYZ(m, u.x, u.y, u.z),
                          n.setXYZ(v, l.x, l.y, l.z),
                          n.setXYZ(g, c.x, c.y, c.z);
                      }
                    else
                      for (var y = 0, b = t.count; y < b; y += 3)
                        a.fromBufferAttribute(t, y + 0),
                          o.fromBufferAttribute(t, y + 1),
                          s.fromBufferAttribute(t, y + 2),
                          h.subVectors(s, o),
                          f.subVectors(a, o),
                          h.cross(f),
                          n.setXYZ(y + 0, h.x, h.y, h.z),
                          n.setXYZ(y + 1, h.x, h.y, h.z),
                          n.setXYZ(y + 2, h.x, h.y, h.z);
                    this.normalizeNormals(), (n.needsUpdate = !0);
                  }
                },
              },
              {
                key: "merge",
                value: function () {
                  return (
                    console.error(
                      "THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."
                    ),
                    this
                  );
                },
              },
              {
                key: "normalizeNormals",
                value: function () {
                  for (
                    var e = this.attributes.normal, t = 0, n = e.count;
                    t < n;
                    t++
                  )
                    aa.fromBufferAttribute(e, t),
                      aa.normalize(),
                      e.setXYZ(t, aa.x, aa.y, aa.z);
                },
              },
              {
                key: "toNonIndexed",
                value: function () {
                  function e(e, t) {
                    for (
                      var n = e.array,
                        r = e.itemSize,
                        i = e.normalized,
                        a = new n.constructor(t.length * r),
                        o = 0,
                        s = 0,
                        u = 0,
                        l = t.length;
                      u < l;
                      u++
                    ) {
                      o = e.isInterleavedBufferAttribute
                        ? t[u] * e.data.stride + e.offset
                        : t[u] * r;
                      for (var c = 0; c < r; c++) a[s++] = n[o++];
                    }
                    return new Gi(a, r, i);
                  }
                  if (null === this.index)
                    return (
                      console.warn(
                        "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
                      ),
                      this
                    );
                  var n = new t(),
                    r = this.index.array,
                    i = this.attributes;
                  for (var a in i) {
                    var o = e(i[a], r);
                    n.setAttribute(a, o);
                  }
                  var s = this.morphAttributes;
                  for (var u in s) {
                    for (
                      var l = [], c = s[u], h = 0, f = c.length;
                      h < f;
                      h++
                    ) {
                      var d = e(c[h], r);
                      l.push(d);
                    }
                    n.morphAttributes[u] = l;
                  }
                  n.morphTargetsRelative = this.morphTargetsRelative;
                  for (var p = this.groups, m = 0, v = p.length; m < v; m++) {
                    var g = p[m];
                    n.addGroup(g.start, g.count, g.materialIndex);
                  }
                  return n;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "BufferGeometry",
                      generator: "BufferGeometry.toJSON",
                    },
                  };
                  if (
                    ((e.uuid = this.uuid),
                    (e.type = this.type),
                    "" !== this.name && (e.name = this.name),
                    Object.keys(this.userData).length > 0 &&
                      (e.userData = this.userData),
                    void 0 !== this.parameters)
                  ) {
                    var t = this.parameters;
                    for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                    return e;
                  }
                  e.data = { attributes: {} };
                  var r = this.index;
                  null !== r &&
                    (e.data.index = {
                      type: r.array.constructor.name,
                      array: Array.prototype.slice.call(r.array),
                    });
                  var i = this.attributes;
                  for (var a in i) {
                    var o = i[a];
                    e.data.attributes[a] = o.toJSON(e.data);
                  }
                  var s = {},
                    u = !1;
                  for (var l in this.morphAttributes) {
                    for (
                      var c = this.morphAttributes[l],
                        h = [],
                        f = 0,
                        d = c.length;
                      f < d;
                      f++
                    ) {
                      var p = c[f];
                      h.push(p.toJSON(e.data));
                    }
                    h.length > 0 && ((s[l] = h), (u = !0));
                  }
                  u &&
                    ((e.data.morphAttributes = s),
                    (e.data.morphTargetsRelative = this.morphTargetsRelative));
                  var m = this.groups;
                  m.length > 0 &&
                    (e.data.groups = JSON.parse(JSON.stringify(m)));
                  var v = this.boundingSphere;
                  return (
                    null !== v &&
                      (e.data.boundingSphere = {
                        center: v.center.toArray(),
                        radius: v.radius,
                      }),
                    e
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.index = null),
                    (this.attributes = {}),
                    (this.morphAttributes = {}),
                    (this.groups = []),
                    (this.boundingBox = null),
                    (this.boundingSphere = null);
                  var t = {};
                  this.name = e.name;
                  var n = e.index;
                  null !== n && this.setIndex(n.clone(t));
                  var r = e.attributes;
                  for (var i in r) {
                    var a = r[i];
                    this.setAttribute(i, a.clone(t));
                  }
                  var o = e.morphAttributes;
                  for (var s in o) {
                    for (var u = [], l = o[s], c = 0, h = l.length; c < h; c++)
                      u.push(l[c].clone(t));
                    this.morphAttributes[s] = u;
                  }
                  this.morphTargetsRelative = e.morphTargetsRelative;
                  for (var f = e.groups, d = 0, p = f.length; d < p; d++) {
                    var m = f[d];
                    this.addGroup(m.start, m.count, m.materialIndex);
                  }
                  var v = e.boundingBox;
                  null !== v && (this.boundingBox = v.clone());
                  var g = e.boundingSphere;
                  return (
                    null !== g && (this.boundingSphere = g.clone()),
                    (this.drawRange.start = e.drawRange.start),
                    (this.drawRange.count = e.drawRange.count),
                    (this.userData = e.userData),
                    void 0 !== e.parameters &&
                      (this.parameters = Object.assign({}, e.parameters)),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            t
          );
        })(Pn),
        sa = new ei(),
        ua = new Qr(),
        la = new Wr(),
        ca = new Sr(),
        ha = new Sr(),
        fa = new Sr(),
        da = new Sr(),
        pa = new Sr(),
        ma = new Sr(),
        va = new Sr(),
        ga = new Sr(),
        ya = new Sr(),
        ba = new qn(),
        xa = new qn(),
        _a = new qn(),
        wa = new Sr(),
        Sa = new Sr(),
        Ma = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new oa(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Ui();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isMesh = !0),
              (e.type = "Mesh"),
              (e.geometry = n),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    void 0 !== e.morphTargetInfluences &&
                      (this.morphTargetInfluences =
                        e.morphTargetInfluences.slice()),
                    void 0 !== e.morphTargetDictionary &&
                      (this.morphTargetDictionary = Object.assign(
                        {},
                        e.morphTargetDictionary
                      )),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, i = n.length; r < i; r++) {
                        var a = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[a] = r);
                      }
                    }
                  }
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.material,
                    i = this.matrixWorld;
                  if (
                    void 0 !== r &&
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    la.copy(n.boundingSphere),
                    la.applyMatrix4(i),
                    !1 !== e.ray.intersectsSphere(la) &&
                      (sa.copy(i).invert(),
                      ua.copy(e.ray).applyMatrix4(sa),
                      null === n.boundingBox ||
                        !1 !== ua.intersectsBox(n.boundingBox)))
                  ) {
                    var a,
                      o = n.index,
                      s = n.attributes.position,
                      u = n.morphAttributes.position,
                      l = n.morphTargetsRelative,
                      c = n.attributes.uv,
                      h = n.attributes.uv2,
                      f = n.groups,
                      d = n.drawRange;
                    if (null !== o)
                      if (Array.isArray(r))
                        for (var p = 0, m = f.length; p < m; p++)
                          for (
                            var v = f[p],
                              g = r[v.materialIndex],
                              y = Math.max(v.start, d.start),
                              b = Math.min(
                                o.count,
                                Math.min(v.start + v.count, d.start + d.count)
                              );
                            y < b;
                            y += 3
                          ) {
                            var x = o.getX(y),
                              _ = o.getX(y + 1),
                              w = o.getX(y + 2);
                            (a = Ta(this, g, e, ua, s, u, l, c, h, x, _, w)) &&
                              ((a.faceIndex = Math.floor(y / 3)),
                              (a.face.materialIndex = v.materialIndex),
                              t.push(a));
                          }
                      else
                        for (
                          var S = Math.max(0, d.start),
                            M = Math.min(o.count, d.start + d.count);
                          S < M;
                          S += 3
                        ) {
                          var T = o.getX(S),
                            E = o.getX(S + 1),
                            O = o.getX(S + 2);
                          (a = Ta(this, r, e, ua, s, u, l, c, h, T, E, O)) &&
                            ((a.faceIndex = Math.floor(S / 3)), t.push(a));
                        }
                    else if (void 0 !== s)
                      if (Array.isArray(r))
                        for (var k = 0, A = f.length; k < A; k++)
                          for (
                            var C = f[k],
                              P = r[C.materialIndex],
                              R = Math.max(C.start, d.start),
                              L = Math.min(
                                s.count,
                                Math.min(C.start + C.count, d.start + d.count)
                              );
                            R < L;
                            R += 3
                          ) {
                            (a = Ta(
                              this,
                              P,
                              e,
                              ua,
                              s,
                              u,
                              l,
                              c,
                              h,
                              R,
                              R + 1,
                              R + 2
                            )) &&
                              ((a.faceIndex = Math.floor(R / 3)),
                              (a.face.materialIndex = C.materialIndex),
                              t.push(a));
                          }
                      else
                        for (
                          var j = Math.max(0, d.start),
                            I = Math.min(s.count, d.start + d.count);
                          j < I;
                          j += 3
                        ) {
                          (a = Ta(
                            this,
                            r,
                            e,
                            ua,
                            s,
                            u,
                            l,
                            c,
                            h,
                            j,
                            j + 1,
                            j + 2
                          )) && ((a.faceIndex = Math.floor(j / 3)), t.push(a));
                        }
                  }
                },
              },
            ]),
            t
          );
        })(Ti);
      function Ta(e, t, n, r, i, a, o, s, u, l, c, h) {
        ca.fromBufferAttribute(i, l),
          ha.fromBufferAttribute(i, c),
          fa.fromBufferAttribute(i, h);
        var f = e.morphTargetInfluences;
        if (a && f) {
          va.set(0, 0, 0), ga.set(0, 0, 0), ya.set(0, 0, 0);
          for (var d = 0, p = a.length; d < p; d++) {
            var m = f[d],
              v = a[d];
            0 !== m &&
              (da.fromBufferAttribute(v, l),
              pa.fromBufferAttribute(v, c),
              ma.fromBufferAttribute(v, h),
              o
                ? (va.addScaledVector(da, m),
                  ga.addScaledVector(pa, m),
                  ya.addScaledVector(ma, m))
                : (va.addScaledVector(da.sub(ca), m),
                  ga.addScaledVector(pa.sub(ha), m),
                  ya.addScaledVector(ma.sub(fa), m)));
          }
          ca.add(va), ha.add(ga), fa.add(ya);
        }
        e.isSkinnedMesh &&
          (e.boneTransform(l, ca),
          e.boneTransform(c, ha),
          e.boneTransform(h, fa));
        var g = (function (e, t, n, r, i, a, o, s) {
          if (
            null ===
            (t.side === R
              ? r.intersectTriangle(o, a, i, !0, s)
              : r.intersectTriangle(i, a, o, t.side !== L, s))
          )
            return null;
          Sa.copy(s), Sa.applyMatrix4(e.matrixWorld);
          var u = n.ray.origin.distanceTo(Sa);
          return u < n.near || u > n.far
            ? null
            : { distance: u, point: Sa.clone(), object: e };
        })(e, t, n, r, ca, ha, fa, wa);
        if (g) {
          s &&
            (ba.fromBufferAttribute(s, l),
            xa.fromBufferAttribute(s, c),
            _a.fromBufferAttribute(s, h),
            (g.uv = Ni.getUV(wa, ca, ha, fa, ba, xa, _a, new qn()))),
            u &&
              (ba.fromBufferAttribute(u, l),
              xa.fromBufferAttribute(u, c),
              _a.fromBufferAttribute(u, h),
              (g.uv2 = Ni.getUV(wa, ca, ha, fa, ba, xa, _a, new qn())));
          var y = { a: l, b: c, c: h, normal: new Sr(), materialIndex: 0 };
          Ni.getNormal(ca, ha, fa, y.normal), (g.face = y);
        }
        return g;
      }
      var Ea = (function (e) {
        function t() {
          var e,
            n =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 1,
            i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1,
            s =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 1,
            u =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 1;
          Object(y.a)(this, t),
            ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
              "BoxGeometry"),
            (e.parameters = {
              width: n,
              height: i,
              depth: a,
              widthSegments: o,
              heightSegments: s,
              depthSegments: u,
            });
          var l = Object(d.a)(e);
          (o = Math.floor(o)), (s = Math.floor(s)), (u = Math.floor(u));
          var c = [],
            h = [],
            p = [],
            m = [],
            v = 0,
            g = 0;
          function b(e, t, n, r, i, a, o, s, u, f, d) {
            for (
              var y = a / u,
                b = o / f,
                x = a / 2,
                _ = o / 2,
                w = s / 2,
                S = u + 1,
                M = f + 1,
                T = 0,
                E = 0,
                O = new Sr(),
                k = 0;
              k < M;
              k++
            )
              for (var A = k * b - _, C = 0; C < S; C++) {
                var P = C * y - x;
                (O[e] = P * r),
                  (O[t] = A * i),
                  (O[n] = w),
                  h.push(O.x, O.y, O.z),
                  (O[e] = 0),
                  (O[t] = 0),
                  (O[n] = s > 0 ? 1 : -1),
                  p.push(O.x, O.y, O.z),
                  m.push(C / u),
                  m.push(1 - k / f),
                  (T += 1);
              }
            for (var R = 0; R < f; R++)
              for (var L = 0; L < u; L++) {
                var j = v + L + S * R,
                  I = v + L + S * (R + 1),
                  N = v + (L + 1) + S * (R + 1),
                  D = v + (L + 1) + S * R;
                c.push(j, I, D), c.push(I, N, D), (E += 6);
              }
            l.addGroup(g, E, d), (g += E), (v += T);
          }
          return (
            b("z", "y", "x", -1, -1, a, i, n, u, s, 0),
            b("z", "y", "x", 1, -1, a, i, -n, u, s, 1),
            b("x", "z", "y", 1, 1, n, a, i, o, u, 2),
            b("x", "z", "y", 1, -1, n, a, -i, o, u, 3),
            b("x", "y", "z", 1, -1, n, i, a, o, s, 4),
            b("x", "y", "z", -1, -1, n, i, -a, o, s, 5),
            e.setIndex(c),
            e.setAttribute("position", new $i(h, 3)),
            e.setAttribute("normal", new $i(p, 3)),
            e.setAttribute("uv", new $i(m, 2)),
            e
          );
        }
        return (
          Object(p.a)(t, e),
          Object(b.a)(t, null, [
            {
              key: "fromJSON",
              value: function (e) {
                return new t(
                  e.width,
                  e.height,
                  e.depth,
                  e.widthSegments,
                  e.heightSegments,
                  e.depthSegments
                );
              },
            },
          ]),
          t
        );
      })(oa);
      function Oa(e) {
        var t = {};
        for (var n in e)
          for (var r in ((t[n] = {}), e[n])) {
            var i = e[n][r];
            i &&
            (i.isColor ||
              i.isMatrix3 ||
              i.isMatrix4 ||
              i.isVector2 ||
              i.isVector3 ||
              i.isVector4 ||
              i.isTexture ||
              i.isQuaternion)
              ? (t[n][r] = i.clone())
              : Array.isArray(i)
              ? (t[n][r] = i.slice())
              : (t[n][r] = i);
          }
        return t;
      }
      function ka(e) {
        for (var t = {}, n = 0; n < e.length; n++) {
          var r = Oa(e[n]);
          for (var i in r) t[i] = r[i];
        }
        return t;
      }
      var Aa = { clone: Oa, merge: ka },
        Ca =
          "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
        Pa = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
        Ra = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isShaderMaterial = !0),
              (n.type = "ShaderMaterial"),
              (n.defines = {}),
              (n.uniforms = {}),
              (n.uniformsGroups = []),
              (n.vertexShader = Ca),
              (n.fragmentShader = Pa),
              (n.linewidth = 1),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              (n.fog = !1),
              (n.lights = !1),
              (n.clipping = !1),
              (n.extensions = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1,
              }),
              (n.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv2: [0, 0],
              }),
              (n.index0AttributeName = void 0),
              (n.uniformsNeedUpdate = !1),
              (n.glslVersion = null),
              void 0 !== e && n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.fragmentShader = e.fragmentShader),
                    (this.vertexShader = e.vertexShader),
                    (this.uniforms = Oa(e.uniforms)),
                    (this.uniformsGroups = (function (e) {
                      for (var t = [], n = 0; n < e.length; n++)
                        t.push(e[n].clone());
                      return t;
                    })(e.uniformsGroups)),
                    (this.defines = Object.assign({}, e.defines)),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.fog = e.fog),
                    (this.lights = e.lights),
                    (this.clipping = e.clipping),
                    (this.extensions = Object.assign({}, e.extensions)),
                    (this.glslVersion = e.glslVersion),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  for (var i in ((n.glslVersion = this.glslVersion),
                  (n.uniforms = {}),
                  this.uniforms)) {
                    var a = this.uniforms[i].value;
                    a && a.isTexture
                      ? (n.uniforms[i] = { type: "t", value: a.toJSON(e).uuid })
                      : a && a.isColor
                      ? (n.uniforms[i] = { type: "c", value: a.getHex() })
                      : a && a.isVector2
                      ? (n.uniforms[i] = { type: "v2", value: a.toArray() })
                      : a && a.isVector3
                      ? (n.uniforms[i] = { type: "v3", value: a.toArray() })
                      : a && a.isVector4
                      ? (n.uniforms[i] = { type: "v4", value: a.toArray() })
                      : a && a.isMatrix3
                      ? (n.uniforms[i] = { type: "m3", value: a.toArray() })
                      : a && a.isMatrix4
                      ? (n.uniforms[i] = { type: "m4", value: a.toArray() })
                      : (n.uniforms[i] = { value: a });
                  }
                  Object.keys(this.defines).length > 0 &&
                    (n.defines = this.defines),
                    (n.vertexShader = this.vertexShader),
                    (n.fragmentShader = this.fragmentShader);
                  var o = {};
                  for (var s in this.extensions)
                    !0 === this.extensions[s] && (o[s] = !0);
                  return Object.keys(o).length > 0 && (n.extensions = o), n;
                },
              },
            ]),
            t
          );
        })(zi),
        La = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isCamera =
                !0),
              (e.type = "Camera"),
              (e.matrixWorldInverse = new ei()),
              (e.projectionMatrix = new ei()),
              (e.projectionMatrixInverse = new ei()),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    this.matrixWorldInverse.copy(e.matrixWorldInverse),
                    this.projectionMatrix.copy(e.projectionMatrix),
                    this.projectionMatrixInverse.copy(
                      e.projectionMatrixInverse
                    ),
                    this
                  );
                },
              },
              {
                key: "getWorldDirection",
                value: function (e) {
                  this.updateWorldMatrix(!0, !1);
                  var t = this.matrixWorld.elements;
                  return e.set(-t[8], -t[9], -t[10]).normalize();
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "updateMatrixWorld", this).call(
                    this,
                    e
                  ),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert();
                },
              },
              {
                key: "updateWorldMatrix",
                value: function (e, n) {
                  c(Object(r.a)(t.prototype), "updateWorldMatrix", this).call(
                    this,
                    e,
                    n
                  ),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert();
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            t
          );
        })(Ti),
        ja = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 50,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0.1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2e3;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isPerspectiveCamera = !0),
              (e.type = "PerspectiveCamera"),
              (e.fov = n),
              (e.zoom = 1),
              (e.near = a),
              (e.far = o),
              (e.focus = 10),
              (e.aspect = i),
              (e.view = null),
              (e.filmGauge = 35),
              (e.filmOffset = 0),
              e.updateProjectionMatrix(),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.fov = e.fov),
                    (this.zoom = e.zoom),
                    (this.near = e.near),
                    (this.far = e.far),
                    (this.focus = e.focus),
                    (this.aspect = e.aspect),
                    (this.view =
                      null === e.view ? null : Object.assign({}, e.view)),
                    (this.filmGauge = e.filmGauge),
                    (this.filmOffset = e.filmOffset),
                    this
                  );
                },
              },
              {
                key: "setFocalLength",
                value: function (e) {
                  var t = (0.5 * this.getFilmHeight()) / e;
                  (this.fov = 2 * In * Math.atan(t)),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "getFocalLength",
                value: function () {
                  var e = Math.tan(0.5 * jn * this.fov);
                  return (0.5 * this.getFilmHeight()) / e;
                },
              },
              {
                key: "getEffectiveFOV",
                value: function () {
                  return (
                    2 *
                    In *
                    Math.atan(Math.tan(0.5 * jn * this.fov) / this.zoom)
                  );
                },
              },
              {
                key: "getFilmWidth",
                value: function () {
                  return this.filmGauge * Math.min(this.aspect, 1);
                },
              },
              {
                key: "getFilmHeight",
                value: function () {
                  return this.filmGauge / Math.max(this.aspect, 1);
                },
              },
              {
                key: "setViewOffset",
                value: function (e, t, n, r, i, a) {
                  (this.aspect = e / t),
                    null === this.view &&
                      (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1,
                      }),
                    (this.view.enabled = !0),
                    (this.view.fullWidth = e),
                    (this.view.fullHeight = t),
                    (this.view.offsetX = n),
                    (this.view.offsetY = r),
                    (this.view.width = i),
                    (this.view.height = a),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "clearViewOffset",
                value: function () {
                  null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "updateProjectionMatrix",
                value: function () {
                  var e = this.near,
                    t = (e * Math.tan(0.5 * jn * this.fov)) / this.zoom,
                    n = 2 * t,
                    r = this.aspect * n,
                    i = -0.5 * r,
                    a = this.view;
                  if (null !== this.view && this.view.enabled) {
                    var o = a.fullWidth,
                      s = a.fullHeight;
                    (i += (a.offsetX * r) / o),
                      (t -= (a.offsetY * n) / s),
                      (r *= a.width / o),
                      (n *= a.height / s);
                  }
                  var u = this.filmOffset;
                  0 !== u && (i += (e * u) / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(
                      i,
                      i + r,
                      t,
                      t - n,
                      e,
                      this.far
                    ),
                    this.projectionMatrixInverse
                      .copy(this.projectionMatrix)
                      .invert();
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  return (
                    (n.object.fov = this.fov),
                    (n.object.zoom = this.zoom),
                    (n.object.near = this.near),
                    (n.object.far = this.far),
                    (n.object.focus = this.focus),
                    (n.object.aspect = this.aspect),
                    null !== this.view &&
                      (n.object.view = Object.assign({}, this.view)),
                    (n.object.filmGauge = this.filmGauge),
                    (n.object.filmOffset = this.filmOffset),
                    n
                  );
                },
              },
            ]),
            t
          );
        })(La),
        Ia = 90,
        Na = 1,
        Da = (function (e) {
          function t(e, n, i) {
            var a;
            Object(y.a)(this, t),
              ((a = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "CubeCamera"),
              (a.renderTarget = i);
            var o = new ja(Ia, Na, e, n);
            (o.layers = a.layers),
              o.up.set(0, -1, 0),
              o.lookAt(new Sr(1, 0, 0)),
              a.add(o);
            var s = new ja(Ia, Na, e, n);
            (s.layers = a.layers),
              s.up.set(0, -1, 0),
              s.lookAt(new Sr(-1, 0, 0)),
              a.add(s);
            var u = new ja(Ia, Na, e, n);
            (u.layers = a.layers),
              u.up.set(0, 0, 1),
              u.lookAt(new Sr(0, 1, 0)),
              a.add(u);
            var l = new ja(Ia, Na, e, n);
            (l.layers = a.layers),
              l.up.set(0, 0, -1),
              l.lookAt(new Sr(0, -1, 0)),
              a.add(l);
            var c = new ja(Ia, Na, e, n);
            (c.layers = a.layers),
              c.up.set(0, -1, 0),
              c.lookAt(new Sr(0, 0, 1)),
              a.add(c);
            var h = new ja(Ia, Na, e, n);
            return (
              (h.layers = a.layers),
              h.up.set(0, -1, 0),
              h.lookAt(new Sr(0, 0, -1)),
              a.add(h),
              a
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "update",
                value: function (e, t) {
                  null === this.parent && this.updateMatrixWorld();
                  var n = this.renderTarget,
                    r = Object(l.a)(this.children, 6),
                    i = r[0],
                    a = r[1],
                    o = r[2],
                    s = r[3],
                    u = r[4],
                    c = r[5],
                    h = e.getRenderTarget(),
                    f = e.toneMapping,
                    d = e.xr.enabled;
                  (e.toneMapping = de), (e.xr.enabled = !1);
                  var p = n.texture.generateMipmaps;
                  (n.texture.generateMipmaps = !1),
                    e.setRenderTarget(n, 0),
                    e.render(t, i),
                    e.setRenderTarget(n, 1),
                    e.render(t, a),
                    e.setRenderTarget(n, 2),
                    e.render(t, o),
                    e.setRenderTarget(n, 3),
                    e.render(t, s),
                    e.setRenderTarget(n, 4),
                    e.render(t, u),
                    (n.texture.generateMipmaps = p),
                    e.setRenderTarget(n, 5),
                    e.render(t, c),
                    e.setRenderTarget(h),
                    (e.toneMapping = f),
                    (e.xr.enabled = d),
                    (n.texture.needsPMREMUpdate = !0);
                },
              },
            ]),
            t
          );
        })(Ti),
        za = (function (e) {
          function t(e, n, i, a, o, s, u, l, c, h) {
            var d;
            return (
              Object(y.a)(this, t),
              (e = void 0 !== e ? e : []),
              (n = void 0 !== n ? n : xe),
              ((d = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i, a, o, s, u, l, c, h)
              )).isCubeTexture = !0),
              (d.flipY = !1),
              d
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "images",
                get: function () {
                  return this.image;
                },
                set: function (e) {
                  this.image = e;
                },
              },
            ]),
            t
          );
        })(pr),
        Ua = (function (e) {
          function t(e) {
            var n,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, e, i)
              )).isWebGLCubeRenderTarget = !0);
            var a = { width: e, height: e, depth: 1 },
              o = [a, a, a, a, a, a];
            return (
              (n.texture = new za(
                o,
                i.mapping,
                i.wrapS,
                i.wrapT,
                i.magFilter,
                i.minFilter,
                i.format,
                i.type,
                i.anisotropy,
                i.encoding
              )),
              (n.texture.isRenderTargetTexture = !0),
              (n.texture.generateMipmaps =
                void 0 !== i.generateMipmaps && i.generateMipmaps),
              (n.texture.minFilter = void 0 !== i.minFilter ? i.minFilter : Le),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "fromEquirectangularTexture",
                value: function (e, t) {
                  (this.texture.type = t.type),
                    (this.texture.encoding = t.encoding),
                    (this.texture.generateMipmaps = t.generateMipmaps),
                    (this.texture.minFilter = t.minFilter),
                    (this.texture.magFilter = t.magFilter);
                  var n = { tEquirect: { value: null } },
                    r =
                      "\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",
                    i =
                      "\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",
                    a = new Ea(5, 5, 5),
                    o = new Ra({
                      name: "CubemapFromEquirect",
                      uniforms: Oa(n),
                      vertexShader: r,
                      fragmentShader: i,
                      side: R,
                      blending: j,
                    });
                  o.uniforms.tEquirect.value = t;
                  var s = new Ma(a, o),
                    u = t.minFilter;
                  return (
                    t.minFilter === Ne && (t.minFilter = Le),
                    new Da(1, 10, this).update(e, s),
                    (t.minFilter = u),
                    s.geometry.dispose(),
                    s.material.dispose(),
                    this
                  );
                },
              },
              {
                key: "clear",
                value: function (e, t, n, r) {
                  for (var i = e.getRenderTarget(), a = 0; a < 6; a++)
                    e.setRenderTarget(this, a), e.clear(t, n, r);
                  e.setRenderTarget(i);
                },
              },
            ]),
            t
          );
        })(vr),
        Ba = new Sr(),
        Fa = new Sr(),
        Ga = new Xn(),
        Ha = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(1, 0, 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Object(y.a)(this, e),
              (this.isPlane = !0),
              (this.normal = t),
              (this.constant = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.normal.copy(e), (this.constant = t), this;
                },
              },
              {
                key: "setComponents",
                value: function (e, t, n, r) {
                  return this.normal.set(e, t, n), (this.constant = r), this;
                },
              },
              {
                key: "setFromNormalAndCoplanarPoint",
                value: function (e, t) {
                  return (
                    this.normal.copy(e),
                    (this.constant = -t.dot(this.normal)),
                    this
                  );
                },
              },
              {
                key: "setFromCoplanarPoints",
                value: function (e, t, n) {
                  var r = Ba.subVectors(n, t)
                    .cross(Fa.subVectors(e, t))
                    .normalize();
                  return this.setFromNormalAndCoplanarPoint(r, e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.normal.copy(e.normal),
                    (this.constant = e.constant),
                    this
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  var e = 1 / this.normal.length();
                  return (
                    this.normal.multiplyScalar(e), (this.constant *= e), this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.constant *= -1), this.normal.negate(), this;
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return this.normal.dot(e) + this.constant;
                },
              },
              {
                key: "distanceToSphere",
                value: function (e) {
                  return this.distanceToPoint(e.center) - e.radius;
                },
              },
              {
                key: "projectPoint",
                value: function (e, t) {
                  return t
                    .copy(this.normal)
                    .multiplyScalar(-this.distanceToPoint(e))
                    .add(e);
                },
              },
              {
                key: "intersectLine",
                value: function (e, t) {
                  var n = e.delta(Ba),
                    r = this.normal.dot(n);
                  if (0 === r)
                    return 0 === this.distanceToPoint(e.start)
                      ? t.copy(e.start)
                      : null;
                  var i = -(e.start.dot(this.normal) + this.constant) / r;
                  return i < 0 || i > 1
                    ? null
                    : t.copy(n).multiplyScalar(i).add(e.start);
                },
              },
              {
                key: "intersectsLine",
                value: function (e) {
                  var t = this.distanceToPoint(e.start),
                    n = this.distanceToPoint(e.end);
                  return (t < 0 && n > 0) || (n < 0 && t > 0);
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "coplanarPoint",
                value: function (e) {
                  return e.copy(this.normal).multiplyScalar(-this.constant);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e, t) {
                  var n = t || Ga.getNormalMatrix(e),
                    r = this.coplanarPoint(Ba).applyMatrix4(e),
                    i = this.normal.applyMatrix3(n).normalize();
                  return (this.constant = -r.dot(i)), this;
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return (this.constant -= e.dot(this.normal)), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.normal.equals(this.normal) && e.constant === this.constant
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        Va = new Wr(),
        Wa = new Sr(),
        qa = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Ha(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Ha(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Ha(),
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new Ha(),
              a =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : new Ha(),
              o =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : new Ha();
            Object(y.a)(this, e), (this.planes = [t, n, r, i, a, o]);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t, n, r, i, a) {
                  var o = this.planes;
                  return (
                    o[0].copy(e),
                    o[1].copy(t),
                    o[2].copy(n),
                    o[3].copy(r),
                    o[4].copy(i),
                    o[5].copy(a),
                    this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    t[n].copy(e.planes[n]);
                  return this;
                },
              },
              {
                key: "setFromProjectionMatrix",
                value: function (e) {
                  var t = this.planes,
                    n = e.elements,
                    r = n[0],
                    i = n[1],
                    a = n[2],
                    o = n[3],
                    s = n[4],
                    u = n[5],
                    l = n[6],
                    c = n[7],
                    h = n[8],
                    f = n[9],
                    d = n[10],
                    p = n[11],
                    m = n[12],
                    v = n[13],
                    g = n[14],
                    y = n[15];
                  return (
                    t[0].setComponents(o - r, c - s, p - h, y - m).normalize(),
                    t[1].setComponents(o + r, c + s, p + h, y + m).normalize(),
                    t[2].setComponents(o + i, c + u, p + f, y + v).normalize(),
                    t[3].setComponents(o - i, c - u, p - f, y - v).normalize(),
                    t[4].setComponents(o - a, c - l, p - d, y - g).normalize(),
                    t[5].setComponents(o + a, c + l, p + d, y + g).normalize(),
                    this
                  );
                },
              },
              {
                key: "intersectsObject",
                value: function (e) {
                  var t = e.geometry;
                  return (
                    null === t.boundingSphere && t.computeBoundingSphere(),
                    Va.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(Va)
                  );
                },
              },
              {
                key: "intersectsSprite",
                value: function (e) {
                  return (
                    Va.center.set(0, 0, 0),
                    (Va.radius = 0.7071067811865476),
                    Va.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(Va)
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  for (
                    var t = this.planes, n = e.center, r = -e.radius, i = 0;
                    i < 6;
                    i++
                  ) {
                    if (t[i].distanceToPoint(n) < r) return !1;
                  }
                  return !0;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++) {
                    var r = t[n];
                    if (
                      ((Wa.x = r.normal.x > 0 ? e.max.x : e.min.x),
                      (Wa.y = r.normal.y > 0 ? e.max.y : e.min.y),
                      (Wa.z = r.normal.z > 0 ? e.max.z : e.min.z),
                      r.distanceToPoint(Wa) < 0)
                    )
                      return !1;
                  }
                  return !0;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    if (t[n].distanceToPoint(e) < 0) return !1;
                  return !0;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })();
      function Xa() {
        var e = null,
          t = !1,
          n = null,
          r = null;
        function i(t, a) {
          n(t, a), (r = e.requestAnimationFrame(i));
        }
        return {
          start: function () {
            !0 !== t &&
              null !== n &&
              ((r = e.requestAnimationFrame(i)), (t = !0));
          },
          stop: function () {
            e.cancelAnimationFrame(r), (t = !1);
          },
          setAnimationLoop: function (e) {
            n = e;
          },
          setContext: function (t) {
            e = t;
          },
        };
      }
      function Ya(e, t) {
        var n = t.isWebGL2,
          r = new WeakMap();
        return {
          get: function (e) {
            return e.isInterleavedBufferAttribute && (e = e.data), r.get(e);
          },
          remove: function (t) {
            t.isInterleavedBufferAttribute && (t = t.data);
            var n = r.get(t);
            n && (e.deleteBuffer(n.buffer), r.delete(t));
          },
          update: function (t, i) {
            if (t.isGLBufferAttribute) {
              var a = r.get(t);
              (!a || a.version < t.version) &&
                r.set(t, {
                  buffer: t.buffer,
                  type: t.type,
                  bytesPerElement: t.elementSize,
                  version: t.version,
                });
            } else {
              t.isInterleavedBufferAttribute && (t = t.data);
              var o = r.get(t);
              void 0 === o
                ? r.set(
                    t,
                    (function (t, r) {
                      var i,
                        a = t.array,
                        o = t.usage,
                        s = e.createBuffer();
                      if (
                        (e.bindBuffer(r, s),
                        e.bufferData(r, a, o),
                        t.onUploadCallback(),
                        a instanceof Float32Array)
                      )
                        i = 5126;
                      else if (a instanceof Uint16Array)
                        if (t.isFloat16BufferAttribute) {
                          if (!n)
                            throw new Error(
                              "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
                            );
                          i = 5131;
                        } else i = 5123;
                      else if (a instanceof Int16Array) i = 5122;
                      else if (a instanceof Uint32Array) i = 5125;
                      else if (a instanceof Int32Array) i = 5124;
                      else if (a instanceof Int8Array) i = 5120;
                      else if (a instanceof Uint8Array) i = 5121;
                      else {
                        if (!(a instanceof Uint8ClampedArray))
                          throw new Error(
                            "THREE.WebGLAttributes: Unsupported buffer data format: " +
                              a
                          );
                        i = 5121;
                      }
                      return {
                        buffer: s,
                        type: i,
                        bytesPerElement: a.BYTES_PER_ELEMENT,
                        version: t.version,
                      };
                    })(t, i)
                  )
                : o.version < t.version &&
                  (!(function (t, r, i) {
                    var a = r.array,
                      o = r.updateRange;
                    e.bindBuffer(i, t),
                      -1 === o.count
                        ? e.bufferSubData(i, 0, a)
                        : (n
                            ? e.bufferSubData(
                                i,
                                o.offset * a.BYTES_PER_ELEMENT,
                                a,
                                o.offset,
                                o.count
                              )
                            : e.bufferSubData(
                                i,
                                o.offset * a.BYTES_PER_ELEMENT,
                                a.subarray(o.offset, o.offset + o.count)
                              ),
                          (o.count = -1));
                  })(o.buffer, t, i),
                  (o.version = t.version));
            }
          },
        };
      }
      var Ja = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "PlaneGeometry"),
              (e.parameters = {
                width: n,
                height: i,
                widthSegments: a,
                heightSegments: o,
              });
            for (
              var s = n / 2,
                u = i / 2,
                l = Math.floor(a),
                c = Math.floor(o),
                h = l + 1,
                d = c + 1,
                p = n / l,
                m = i / c,
                v = [],
                g = [],
                b = [],
                x = [],
                _ = 0;
              _ < d;
              _++
            )
              for (var w = _ * m - u, S = 0; S < h; S++) {
                var M = S * p - s;
                g.push(M, -w, 0),
                  b.push(0, 0, 1),
                  x.push(S / l),
                  x.push(1 - _ / c);
              }
            for (var T = 0; T < c; T++)
              for (var E = 0; E < l; E++) {
                var O = E + h * T,
                  k = E + h * (T + 1),
                  A = E + 1 + h * (T + 1),
                  C = E + 1 + h * T;
                v.push(O, k, C), v.push(k, A, C);
              }
            return (
              e.setIndex(v),
              e.setAttribute("position", new $i(g, 3)),
              e.setAttribute("normal", new $i(b, 3)),
              e.setAttribute("uv", new $i(x, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.width,
                    e.height,
                    e.widthSegments,
                    e.heightSegments
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        Za = {
          alphamap_fragment:
            "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
          alphamap_pars_fragment:
            "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          alphatest_fragment:
            "#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",
          alphatest_pars_fragment:
            "#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",
          aomap_fragment:
            "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",
          aomap_pars_fragment:
            "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
          begin_vertex: "vec3 transformed = vec3( position );",
          beginnormal_vertex:
            "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
          bsdfs:
            "vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",
          iridescence_fragment:
            "#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",
          bumpmap_pars_fragment:
            "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
          clipping_planes_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
          clipping_planes_pars_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
          clipping_planes_pars_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
          clipping_planes_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
          color_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",
          color_pars_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_pars_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
          common:
            "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
          cube_uv_reflection_fragment:
            "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
          defaultnormal_vertex:
            "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
          displacementmap_pars_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
          displacementmap_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
          emissivemap_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
          emissivemap_pars_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
          encodings_fragment:
            "gl_FragColor = linearToOutputTexel( gl_FragColor );",
          encodings_pars_fragment:
            "vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",
          envmap_fragment:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
          envmap_common_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
          envmap_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
          envmap_pars_vertex:
            "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
          envmap_physical_pars_fragment:
            "#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",
          envmap_vertex:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
          fog_vertex: "#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",
          fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",
          fog_fragment:
            "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
          fog_pars_fragment:
            "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
          gradientmap_pars_fragment:
            "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",
          lightmap_fragment:
            "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",
          lightmap_pars_fragment:
            "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
          lights_lambert_fragment:
            "LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",
          lights_lambert_pars_fragment:
            "varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )\t(0)",
          lights_pars_begin:
            "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",
          lights_toon_fragment:
            "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
          lights_toon_pars_fragment:
            "varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
          lights_phong_fragment:
            "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
          lights_phong_pars_fragment:
            "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
          lights_physical_fragment:
            "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",
          lights_physical_pars_fragment:
            "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
          lights_fragment_begin:
            "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
          lights_fragment_maps:
            "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",
          lights_fragment_end:
            "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
          logdepthbuf_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
          logdepthbuf_pars_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
          logdepthbuf_pars_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
          logdepthbuf_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
          map_fragment:
            "#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",
          map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
          map_particle_fragment:
            "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
          map_particle_pars_fragment:
            "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          metalnessmap_fragment:
            "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
          metalnessmap_pars_fragment:
            "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
          morphcolor_vertex:
            "#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",
          morphnormal_vertex:
            "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",
          morphtarget_pars_vertex:
            "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",
          morphtarget_vertex:
            "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",
          normal_fragment_begin:
            "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
          normal_fragment_maps:
            "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
          normal_pars_fragment:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_pars_vertex:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_vertex:
            "#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",
          normalmap_pars_fragment:
            "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",
          clearcoat_normal_fragment_begin:
            "#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
          clearcoat_normal_fragment_maps:
            "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",
          clearcoat_pars_fragment:
            "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
          iridescence_pars_fragment:
            "#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",
          output_fragment:
            "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",
          packing:
            "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
          premultiplied_alpha_fragment:
            "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
          project_vertex:
            "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
          dithering_fragment:
            "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
          dithering_pars_fragment:
            "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
          roughnessmap_fragment:
            "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
          roughnessmap_pars_fragment:
            "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
          shadowmap_pars_fragment:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
          shadowmap_pars_vertex:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
          shadowmap_vertex:
            "#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
          shadowmask_pars_fragment:
            "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
          skinbase_vertex:
            "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
          skinning_pars_vertex:
            "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",
          skinning_vertex:
            "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
          skinnormal_vertex:
            "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
          specularmap_fragment:
            "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
          specularmap_pars_fragment:
            "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
          tonemapping_fragment:
            "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
          tonemapping_pars_fragment:
            "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
          transmission_fragment:
            "#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",
          transmission_pars_fragment:
            "#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",
          uv_pars_fragment:
            "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
          uv_pars_vertex:
            "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
          uv_vertex:
            "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
          uv2_pars_fragment:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
          uv2_pars_vertex:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
          uv2_vertex:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
          worldpos_vertex:
            "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
          background_vert:
            "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
          background_frag:
            "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          cube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
          cube_frag:
            "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          depth_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
          depth_frag:
            "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
          distanceRGBA_vert:
            "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
          distanceRGBA_frag:
            "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
          equirect_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
          equirect_frag:
            "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
          linedashed_vert:
            "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          linedashed_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          meshbasic_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
          meshbasic_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshlambert_vert:
            "#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshlambert_frag:
            "#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshmatcap_vert:
            "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
          meshmatcap_frag:
            "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshnormal_vert:
            "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
          meshnormal_frag:
            "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",
          meshphong_vert:
            "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshphong_frag:
            "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshphysical_vert:
            "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",
          meshphysical_frag:
            "#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshtoon_vert:
            "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshtoon_frag:
            "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          points_vert:
            "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
          points_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          shadow_vert:
            "#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          shadow_frag:
            "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
          sprite_vert:
            "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          sprite_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        },
        $a = {
          common: {
            diffuse: { value: new lr(16777215) },
            opacity: { value: 1 },
            map: { value: null },
            uvTransform: { value: new Xn() },
            uv2Transform: { value: new Xn() },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
          },
          specularmap: { specularMap: { value: null } },
          envmap: {
            envMap: { value: null },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            ior: { value: 1.5 },
            refractionRatio: { value: 0.98 },
          },
          aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
          lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 },
          },
          emissivemap: { emissiveMap: { value: null } },
          bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
          normalmap: {
            normalMap: { value: null },
            normalScale: { value: new qn(1, 1) },
          },
          displacementmap: {
            displacementMap: { value: null },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 },
          },
          roughnessmap: { roughnessMap: { value: null } },
          metalnessmap: { metalnessMap: { value: null } },
          gradientmap: { gradientMap: { value: null } },
          fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new lr(16777215) },
          },
          lights: {
            ambientLightColor: { value: [] },
            lightProbe: { value: [] },
            directionalLights: {
              value: [],
              properties: { direction: {}, color: {} },
            },
            directionalLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
              },
            },
            spotLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            spotLightMap: { value: [] },
            spotShadowMap: { value: [] },
            spotLightMatrix: { value: [] },
            pointLights: {
              value: [],
              properties: { color: {}, position: {}, decay: {}, distance: {} },
            },
            pointLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {},
              },
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
              value: [],
              properties: { direction: {}, skyColor: {}, groundColor: {} },
            },
            rectAreaLights: {
              value: [],
              properties: { color: {}, position: {}, width: {}, height: {} },
            },
            ltc_1: { value: null },
            ltc_2: { value: null },
          },
          points: {
            diffuse: { value: new lr(16777215) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
            uvTransform: { value: new Xn() },
          },
          sprite: {
            diffuse: { value: new lr(16777215) },
            opacity: { value: 1 },
            center: { value: new qn(0.5, 0.5) },
            rotation: { value: 0 },
            map: { value: null },
            alphaMap: { value: null },
            alphaTest: { value: 0 },
            uvTransform: { value: new Xn() },
          },
        },
        Ka = {
          basic: {
            uniforms: ka([
              $a.common,
              $a.specularmap,
              $a.envmap,
              $a.aomap,
              $a.lightmap,
              $a.fog,
            ]),
            vertexShader: Za.meshbasic_vert,
            fragmentShader: Za.meshbasic_frag,
          },
          lambert: {
            uniforms: ka([
              $a.common,
              $a.specularmap,
              $a.envmap,
              $a.aomap,
              $a.lightmap,
              $a.emissivemap,
              $a.bumpmap,
              $a.normalmap,
              $a.displacementmap,
              $a.fog,
              $a.lights,
              { emissive: { value: new lr(0) } },
            ]),
            vertexShader: Za.meshlambert_vert,
            fragmentShader: Za.meshlambert_frag,
          },
          phong: {
            uniforms: ka([
              $a.common,
              $a.specularmap,
              $a.envmap,
              $a.aomap,
              $a.lightmap,
              $a.emissivemap,
              $a.bumpmap,
              $a.normalmap,
              $a.displacementmap,
              $a.fog,
              $a.lights,
              {
                emissive: { value: new lr(0) },
                specular: { value: new lr(1118481) },
                shininess: { value: 30 },
              },
            ]),
            vertexShader: Za.meshphong_vert,
            fragmentShader: Za.meshphong_frag,
          },
          standard: {
            uniforms: ka([
              $a.common,
              $a.envmap,
              $a.aomap,
              $a.lightmap,
              $a.emissivemap,
              $a.bumpmap,
              $a.normalmap,
              $a.displacementmap,
              $a.roughnessmap,
              $a.metalnessmap,
              $a.fog,
              $a.lights,
              {
                emissive: { value: new lr(0) },
                roughness: { value: 1 },
                metalness: { value: 0 },
                envMapIntensity: { value: 1 },
              },
            ]),
            vertexShader: Za.meshphysical_vert,
            fragmentShader: Za.meshphysical_frag,
          },
          toon: {
            uniforms: ka([
              $a.common,
              $a.aomap,
              $a.lightmap,
              $a.emissivemap,
              $a.bumpmap,
              $a.normalmap,
              $a.displacementmap,
              $a.gradientmap,
              $a.fog,
              $a.lights,
              { emissive: { value: new lr(0) } },
            ]),
            vertexShader: Za.meshtoon_vert,
            fragmentShader: Za.meshtoon_frag,
          },
          matcap: {
            uniforms: ka([
              $a.common,
              $a.bumpmap,
              $a.normalmap,
              $a.displacementmap,
              $a.fog,
              { matcap: { value: null } },
            ]),
            vertexShader: Za.meshmatcap_vert,
            fragmentShader: Za.meshmatcap_frag,
          },
          points: {
            uniforms: ka([$a.points, $a.fog]),
            vertexShader: Za.points_vert,
            fragmentShader: Za.points_frag,
          },
          dashed: {
            uniforms: ka([
              $a.common,
              $a.fog,
              {
                scale: { value: 1 },
                dashSize: { value: 1 },
                totalSize: { value: 2 },
              },
            ]),
            vertexShader: Za.linedashed_vert,
            fragmentShader: Za.linedashed_frag,
          },
          depth: {
            uniforms: ka([$a.common, $a.displacementmap]),
            vertexShader: Za.depth_vert,
            fragmentShader: Za.depth_frag,
          },
          normal: {
            uniforms: ka([
              $a.common,
              $a.bumpmap,
              $a.normalmap,
              $a.displacementmap,
              { opacity: { value: 1 } },
            ]),
            vertexShader: Za.meshnormal_vert,
            fragmentShader: Za.meshnormal_frag,
          },
          sprite: {
            uniforms: ka([$a.sprite, $a.fog]),
            vertexShader: Za.sprite_vert,
            fragmentShader: Za.sprite_frag,
          },
          background: {
            uniforms: {
              uvTransform: { value: new Xn() },
              t2D: { value: null },
            },
            vertexShader: Za.background_vert,
            fragmentShader: Za.background_frag,
          },
          cube: {
            uniforms: ka([$a.envmap, { opacity: { value: 1 } }]),
            vertexShader: Za.cube_vert,
            fragmentShader: Za.cube_frag,
          },
          equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: Za.equirect_vert,
            fragmentShader: Za.equirect_frag,
          },
          distanceRGBA: {
            uniforms: ka([
              $a.common,
              $a.displacementmap,
              {
                referencePosition: { value: new Sr() },
                nearDistance: { value: 1 },
                farDistance: { value: 1e3 },
              },
            ]),
            vertexShader: Za.distanceRGBA_vert,
            fragmentShader: Za.distanceRGBA_frag,
          },
          shadow: {
            uniforms: ka([
              $a.lights,
              $a.fog,
              { color: { value: new lr(0) }, opacity: { value: 1 } },
            ]),
            vertexShader: Za.shadow_vert,
            fragmentShader: Za.shadow_frag,
          },
        };
      function Qa(e, t, n, r, i, a) {
        var o,
          s,
          u = new lr(0),
          l = !0 === i ? 0 : 1,
          c = null,
          h = 0,
          f = null;
        function d(e, t) {
          n.buffers.color.setClear(e.r, e.g, e.b, t, a);
        }
        return {
          getClearColor: function () {
            return u;
          },
          setClearColor: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            u.set(e), d(u, (l = t));
          },
          getClearAlpha: function () {
            return l;
          },
          setClearAlpha: function (e) {
            d(u, (l = e));
          },
          render: function (n, i) {
            var a = !1,
              p = !0 === i.isScene ? i.background : null;
            p && p.isTexture && (p = t.get(p));
            var m = e.xr,
              v = m.getSession && m.getSession();
            v && "additive" === v.environmentBlendMode && (p = null),
              null === p ? d(u, l) : p && p.isColor && (d(p, 1), (a = !0)),
              (e.autoClear || a) &&
                e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
              p && (p.isCubeTexture || p.mapping === Me)
                ? (void 0 === s &&
                    ((s = new Ma(
                      new Ea(1, 1, 1),
                      new Ra({
                        name: "BackgroundCubeMaterial",
                        uniforms: Oa(Ka.cube.uniforms),
                        vertexShader: Ka.cube.vertexShader,
                        fragmentShader: Ka.cube.fragmentShader,
                        side: R,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    s.geometry.deleteAttribute("uv"),
                    (s.onBeforeRender = function (e, t, n) {
                      this.matrixWorld.copyPosition(n.matrixWorld);
                    }),
                    Object.defineProperty(s.material, "envMap", {
                      get: function () {
                        return this.uniforms.envMap.value;
                      },
                    }),
                    r.update(s)),
                  (s.material.uniforms.envMap.value = p),
                  (s.material.uniforms.flipEnvMap.value =
                    p.isCubeTexture && !1 === p.isRenderTargetTexture ? -1 : 1),
                  (c === p && h === p.version && f === e.toneMapping) ||
                    ((s.material.needsUpdate = !0),
                    (c = p),
                    (h = p.version),
                    (f = e.toneMapping)),
                  s.layers.enableAll(),
                  n.unshift(s, s.geometry, s.material, 0, 0, null))
                : p &&
                  p.isTexture &&
                  (void 0 === o &&
                    ((o = new Ma(
                      new Ja(2, 2),
                      new Ra({
                        name: "BackgroundMaterial",
                        uniforms: Oa(Ka.background.uniforms),
                        vertexShader: Ka.background.vertexShader,
                        fragmentShader: Ka.background.fragmentShader,
                        side: P,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    Object.defineProperty(o.material, "map", {
                      get: function () {
                        return this.uniforms.t2D.value;
                      },
                    }),
                    r.update(o)),
                  (o.material.uniforms.t2D.value = p),
                  !0 === p.matrixAutoUpdate && p.updateMatrix(),
                  o.material.uniforms.uvTransform.value.copy(p.matrix),
                  (c === p && h === p.version && f === e.toneMapping) ||
                    ((o.material.needsUpdate = !0),
                    (c = p),
                    (h = p.version),
                    (f = e.toneMapping)),
                  o.layers.enableAll(),
                  n.unshift(o, o.geometry, o.material, 0, 0, null));
          },
        };
      }
      function eo(e, t, n, r) {
        var i = e.getParameter(34921),
          a = r.isWebGL2 ? null : t.get("OES_vertex_array_object"),
          o = r.isWebGL2 || null !== a,
          s = {},
          u = d(null),
          l = u,
          c = !1;
        function h(t) {
          return r.isWebGL2 ? e.bindVertexArray(t) : a.bindVertexArrayOES(t);
        }
        function f(t) {
          return r.isWebGL2
            ? e.deleteVertexArray(t)
            : a.deleteVertexArrayOES(t);
        }
        function d(e) {
          for (var t = [], n = [], r = [], a = 0; a < i; a++)
            (t[a] = 0), (n[a] = 0), (r[a] = 0);
          return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: t,
            enabledAttributes: n,
            attributeDivisors: r,
            object: e,
            attributes: {},
            index: null,
          };
        }
        function p() {
          for (var e = l.newAttributes, t = 0, n = e.length; t < n; t++)
            e[t] = 0;
        }
        function m(e) {
          v(e, 0);
        }
        function v(n, i) {
          var a = l.newAttributes,
            o = l.enabledAttributes,
            s = l.attributeDivisors;
          ((a[n] = 1),
          0 === o[n] && (e.enableVertexAttribArray(n), (o[n] = 1)),
          s[n] !== i) &&
            ((r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[
              r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
            ](n, i),
            (s[n] = i));
        }
        function g() {
          for (
            var t = l.newAttributes,
              n = l.enabledAttributes,
              r = 0,
              i = n.length;
            r < i;
            r++
          )
            n[r] !== t[r] && (e.disableVertexAttribArray(r), (n[r] = 0));
        }
        function y(t, n, i, a, o, s) {
          !0 !== r.isWebGL2 || (5124 !== i && 5125 !== i)
            ? e.vertexAttribPointer(t, n, i, a, o, s)
            : e.vertexAttribIPointer(t, n, i, o, s);
        }
        function b() {
          x(), (c = !0), l !== u && h((l = u).object);
        }
        function x() {
          (u.geometry = null), (u.program = null), (u.wireframe = !1);
        }
        return {
          setup: function (i, u, f, b, x) {
            var _ = !1;
            if (o) {
              var w = (function (t, n, i) {
                var o = !0 === i.wireframe,
                  u = s[t.id];
                void 0 === u && ((u = {}), (s[t.id] = u));
                var l = u[n.id];
                void 0 === l && ((l = {}), (u[n.id] = l));
                var c = l[o];
                void 0 === c &&
                  ((c = d(
                    r.isWebGL2
                      ? e.createVertexArray()
                      : a.createVertexArrayOES()
                  )),
                  (l[o] = c));
                return c;
              })(b, f, u);
              l !== w && h((l = w).object),
                (_ = (function (e, t, n, r) {
                  var i = l.attributes,
                    a = t.attributes,
                    o = 0,
                    s = n.getAttributes();
                  for (var u in s) {
                    if (s[u].location >= 0) {
                      var c = i[u],
                        h = a[u];
                      if (
                        (void 0 === h &&
                          ("instanceMatrix" === u &&
                            e.instanceMatrix &&
                            (h = e.instanceMatrix),
                          "instanceColor" === u &&
                            e.instanceColor &&
                            (h = e.instanceColor)),
                        void 0 === c)
                      )
                        return !0;
                      if (c.attribute !== h) return !0;
                      if (h && c.data !== h.data) return !0;
                      o++;
                    }
                  }
                  return l.attributesNum !== o || l.index !== r;
                })(i, b, f, x)) &&
                  (function (e, t, n, r) {
                    var i = {},
                      a = t.attributes,
                      o = 0,
                      s = n.getAttributes();
                    for (var u in s) {
                      if (s[u].location >= 0) {
                        var c = a[u];
                        void 0 === c &&
                          ("instanceMatrix" === u &&
                            e.instanceMatrix &&
                            (c = e.instanceMatrix),
                          "instanceColor" === u &&
                            e.instanceColor &&
                            (c = e.instanceColor));
                        var h = {};
                        (h.attribute = c),
                          c && c.data && (h.data = c.data),
                          (i[u] = h),
                          o++;
                      }
                    }
                    (l.attributes = i), (l.attributesNum = o), (l.index = r);
                  })(i, b, f, x);
            } else {
              var S = !0 === u.wireframe;
              (l.geometry === b.id &&
                l.program === f.id &&
                l.wireframe === S) ||
                ((l.geometry = b.id),
                (l.program = f.id),
                (l.wireframe = S),
                (_ = !0));
            }
            null !== x && n.update(x, 34963),
              (_ || c) &&
                ((c = !1),
                (function (i, a, o, s) {
                  if (
                    !1 === r.isWebGL2 &&
                    (i.isInstancedMesh || s.isInstancedBufferGeometry) &&
                    null === t.get("ANGLE_instanced_arrays")
                  )
                    return;
                  p();
                  var u = s.attributes,
                    l = o.getAttributes(),
                    c = a.defaultAttributeValues;
                  for (var h in l) {
                    var f = l[h];
                    if (f.location >= 0) {
                      var d = u[h];
                      if (
                        (void 0 === d &&
                          ("instanceMatrix" === h &&
                            i.instanceMatrix &&
                            (d = i.instanceMatrix),
                          "instanceColor" === h &&
                            i.instanceColor &&
                            (d = i.instanceColor)),
                        void 0 !== d)
                      ) {
                        var b = d.normalized,
                          x = d.itemSize,
                          _ = n.get(d);
                        if (void 0 === _) continue;
                        var w = _.buffer,
                          S = _.type,
                          M = _.bytesPerElement;
                        if (d.isInterleavedBufferAttribute) {
                          var T = d.data,
                            E = T.stride,
                            O = d.offset;
                          if (T.isInstancedInterleavedBuffer) {
                            for (var k = 0; k < f.locationSize; k++)
                              v(f.location + k, T.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                T.meshPerAttribute * T.count);
                          } else
                            for (var A = 0; A < f.locationSize; A++)
                              m(f.location + A);
                          e.bindBuffer(34962, w);
                          for (var C = 0; C < f.locationSize; C++)
                            y(
                              f.location + C,
                              x / f.locationSize,
                              S,
                              b,
                              E * M,
                              (O + (x / f.locationSize) * C) * M
                            );
                        } else {
                          if (d.isInstancedBufferAttribute) {
                            for (var P = 0; P < f.locationSize; P++)
                              v(f.location + P, d.meshPerAttribute);
                            !0 !== i.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                d.meshPerAttribute * d.count);
                          } else
                            for (var R = 0; R < f.locationSize; R++)
                              m(f.location + R);
                          e.bindBuffer(34962, w);
                          for (var L = 0; L < f.locationSize; L++)
                            y(
                              f.location + L,
                              x / f.locationSize,
                              S,
                              b,
                              x * M,
                              (x / f.locationSize) * L * M
                            );
                        }
                      } else if (void 0 !== c) {
                        var j = c[h];
                        if (void 0 !== j)
                          switch (j.length) {
                            case 2:
                              e.vertexAttrib2fv(f.location, j);
                              break;
                            case 3:
                              e.vertexAttrib3fv(f.location, j);
                              break;
                            case 4:
                              e.vertexAttrib4fv(f.location, j);
                              break;
                            default:
                              e.vertexAttrib1fv(f.location, j);
                          }
                      }
                    }
                  }
                  g();
                })(i, u, f, b),
                null !== x && e.bindBuffer(34963, n.get(x).buffer));
          },
          reset: b,
          resetDefaultState: x,
          dispose: function () {
            for (var e in (b(), s)) {
              var t = s[e];
              for (var n in t) {
                var r = t[n];
                for (var i in r) f(r[i].object), delete r[i];
                delete t[n];
              }
              delete s[e];
            }
          },
          releaseStatesOfGeometry: function (e) {
            if (void 0 !== s[e.id]) {
              var t = s[e.id];
              for (var n in t) {
                var r = t[n];
                for (var i in r) f(r[i].object), delete r[i];
                delete t[n];
              }
              delete s[e.id];
            }
          },
          releaseStatesOfProgram: function (e) {
            for (var t in s) {
              var n = s[t];
              if (void 0 !== n[e.id]) {
                var r = n[e.id];
                for (var i in r) f(r[i].object), delete r[i];
                delete n[e.id];
              }
            }
          },
          initAttributes: p,
          enableAttribute: m,
          disableUnusedAttributes: g,
        };
      }
      function to(e, t, n, r) {
        var i,
          a = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.render = function (t, r) {
            e.drawArrays(i, t, r), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, o, s) {
            if (0 !== s) {
              var u, l;
              if (a) (u = e), (l = "drawArraysInstanced");
              else if (
                ((l = "drawArraysInstancedANGLE"),
                null === (u = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              u[l](i, r, o, s), n.update(o, i, s);
            }
          });
      }
      function no(e, t, n) {
        var r;
        function i(t) {
          if ("highp" === t) {
            if (
              e.getShaderPrecisionFormat(35633, 36338).precision > 0 &&
              e.getShaderPrecisionFormat(35632, 36338).precision > 0
            )
              return "highp";
            t = "mediump";
          }
          return "mediump" === t &&
            e.getShaderPrecisionFormat(35633, 36337).precision > 0 &&
            e.getShaderPrecisionFormat(35632, 36337).precision > 0
            ? "mediump"
            : "lowp";
        }
        var a =
            ("undefined" !== typeof WebGL2RenderingContext &&
              e instanceof WebGL2RenderingContext) ||
            ("undefined" !== typeof WebGL2ComputeRenderingContext &&
              e instanceof WebGL2ComputeRenderingContext),
          o = void 0 !== n.precision ? n.precision : "highp",
          s = i(o);
        s !== o &&
          (console.warn(
            "THREE.WebGLRenderer:",
            o,
            "not supported, using",
            s,
            "instead."
          ),
          (o = s));
        var u = a || t.has("WEBGL_draw_buffers"),
          l = !0 === n.logarithmicDepthBuffer,
          c = e.getParameter(34930),
          h = e.getParameter(35660),
          f = e.getParameter(3379),
          d = e.getParameter(34076),
          p = e.getParameter(34921),
          m = e.getParameter(36347),
          v = e.getParameter(36348),
          g = e.getParameter(36349),
          y = h > 0,
          b = a || t.has("OES_texture_float");
        return {
          isWebGL2: a,
          drawBuffers: u,
          getMaxAnisotropy: function () {
            if (void 0 !== r) return r;
            if (!0 === t.has("EXT_texture_filter_anisotropic")) {
              var n = t.get("EXT_texture_filter_anisotropic");
              r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
            } else r = 0;
            return r;
          },
          getMaxPrecision: i,
          precision: o,
          logarithmicDepthBuffer: l,
          maxTextures: c,
          maxVertexTextures: h,
          maxTextureSize: f,
          maxCubemapSize: d,
          maxAttributes: p,
          maxVertexUniforms: m,
          maxVaryings: v,
          maxFragmentUniforms: g,
          vertexTextures: y,
          floatFragmentTextures: b,
          floatVertexTextures: y && b,
          maxSamples: a ? e.getParameter(36183) : 0,
        };
      }
      function ro(e) {
        var t = this,
          n = null,
          r = 0,
          i = !1,
          a = !1,
          o = new Ha(),
          s = new Xn(),
          u = { value: null, needsUpdate: !1 };
        function l() {
          u.value !== n && ((u.value = n), (u.needsUpdate = r > 0)),
            (t.numPlanes = r),
            (t.numIntersection = 0);
        }
        function c(e, n, r, i) {
          var a = null !== e ? e.length : 0,
            l = null;
          if (0 !== a) {
            if (((l = u.value), !0 !== i || null === l)) {
              var c = r + 4 * a,
                h = n.matrixWorldInverse;
              s.getNormalMatrix(h),
                (null === l || l.length < c) && (l = new Float32Array(c));
              for (var f = 0, d = r; f !== a; ++f, d += 4)
                o.copy(e[f]).applyMatrix4(h, s),
                  o.normal.toArray(l, d),
                  (l[d + 3] = o.constant);
            }
            (u.value = l), (u.needsUpdate = !0);
          }
          return (t.numPlanes = a), (t.numIntersection = 0), l;
        }
        (this.uniform = u),
          (this.numPlanes = 0),
          (this.numIntersection = 0),
          (this.init = function (e, t, a) {
            var o = 0 !== e.length || t || 0 !== r || i;
            return (i = t), (n = c(e, a, 0)), (r = e.length), o;
          }),
          (this.beginShadows = function () {
            (a = !0), c(null);
          }),
          (this.endShadows = function () {
            (a = !1), l();
          }),
          (this.setState = function (t, o, s) {
            var h = t.clippingPlanes,
              f = t.clipIntersection,
              d = t.clipShadows,
              p = e.get(t);
            if (!i || null === h || 0 === h.length || (a && !d))
              a ? c(null) : l();
            else {
              var m = a ? 0 : r,
                v = 4 * m,
                g = p.clippingState || null;
              (u.value = g), (g = c(h, o, v, s));
              for (var y = 0; y !== v; ++y) g[y] = n[y];
              (p.clippingState = g),
                (this.numIntersection = f ? this.numPlanes : 0),
                (this.numPlanes += m);
            }
          });
      }
      function io(e) {
        var t = new WeakMap();
        function n(e, t) {
          return t === we ? (e.mapping = xe) : t === Se && (e.mapping = _e), e;
        }
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
              var a = i.mapping;
              if (a === we || a === Se) {
                if (t.has(i)) return n(t.get(i).texture, i.mapping);
                var o = i.image;
                if (o && o.height > 0) {
                  var s = new Ua(o.height / 2);
                  return (
                    s.fromEquirectangularTexture(e, i),
                    t.set(i, s),
                    i.addEventListener("dispose", r),
                    n(s.texture, i.mapping)
                  );
                }
                return null;
              }
            }
            return i;
          },
          dispose: function () {
            t = new WeakMap();
          },
        };
      }
      Ka.physical = {
        uniforms: ka([
          Ka.standard.uniforms,
          {
            clearcoat: { value: 0 },
            clearcoatMap: { value: null },
            clearcoatRoughness: { value: 0 },
            clearcoatRoughnessMap: { value: null },
            clearcoatNormalScale: { value: new qn(1, 1) },
            clearcoatNormalMap: { value: null },
            iridescence: { value: 0 },
            iridescenceMap: { value: null },
            iridescenceIOR: { value: 1.3 },
            iridescenceThicknessMinimum: { value: 100 },
            iridescenceThicknessMaximum: { value: 400 },
            iridescenceThicknessMap: { value: null },
            sheen: { value: 0 },
            sheenColor: { value: new lr(0) },
            sheenColorMap: { value: null },
            sheenRoughness: { value: 1 },
            sheenRoughnessMap: { value: null },
            transmission: { value: 0 },
            transmissionMap: { value: null },
            transmissionSamplerSize: { value: new qn() },
            transmissionSamplerMap: { value: null },
            thickness: { value: 0 },
            thicknessMap: { value: null },
            attenuationDistance: { value: 0 },
            attenuationColor: { value: new lr(0) },
            specularIntensity: { value: 1 },
            specularIntensityMap: { value: null },
            specularColor: { value: new lr(1, 1, 1) },
            specularColorMap: { value: null },
          },
        ]),
        vertexShader: Za.meshphysical_vert,
        fragmentShader: Za.meshphysical_frag,
      };
      var ao = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : -1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : -1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0.1,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2e3;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isOrthographicCamera = !0),
              (e.type = "OrthographicCamera"),
              (e.zoom = 1),
              (e.view = null),
              (e.left = n),
              (e.right = i),
              (e.top = a),
              (e.bottom = o),
              (e.near = s),
              (e.far = u),
              e.updateProjectionMatrix(),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.left = e.left),
                    (this.right = e.right),
                    (this.top = e.top),
                    (this.bottom = e.bottom),
                    (this.near = e.near),
                    (this.far = e.far),
                    (this.zoom = e.zoom),
                    (this.view =
                      null === e.view ? null : Object.assign({}, e.view)),
                    this
                  );
                },
              },
              {
                key: "setViewOffset",
                value: function (e, t, n, r, i, a) {
                  null === this.view &&
                    (this.view = {
                      enabled: !0,
                      fullWidth: 1,
                      fullHeight: 1,
                      offsetX: 0,
                      offsetY: 0,
                      width: 1,
                      height: 1,
                    }),
                    (this.view.enabled = !0),
                    (this.view.fullWidth = e),
                    (this.view.fullHeight = t),
                    (this.view.offsetX = n),
                    (this.view.offsetY = r),
                    (this.view.width = i),
                    (this.view.height = a),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "clearViewOffset",
                value: function () {
                  null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "updateProjectionMatrix",
                value: function () {
                  var e = (this.right - this.left) / (2 * this.zoom),
                    t = (this.top - this.bottom) / (2 * this.zoom),
                    n = (this.right + this.left) / 2,
                    r = (this.top + this.bottom) / 2,
                    i = n - e,
                    a = n + e,
                    o = r + t,
                    s = r - t;
                  if (null !== this.view && this.view.enabled) {
                    var u =
                        (this.right - this.left) /
                        this.view.fullWidth /
                        this.zoom,
                      l =
                        (this.top - this.bottom) /
                        this.view.fullHeight /
                        this.zoom;
                    (a = (i += u * this.view.offsetX) + u * this.view.width),
                      (s = (o -= l * this.view.offsetY) - l * this.view.height);
                  }
                  this.projectionMatrix.makeOrthographic(
                    i,
                    a,
                    o,
                    s,
                    this.near,
                    this.far
                  ),
                    this.projectionMatrixInverse
                      .copy(this.projectionMatrix)
                      .invert();
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  return (
                    (n.object.zoom = this.zoom),
                    (n.object.left = this.left),
                    (n.object.right = this.right),
                    (n.object.top = this.top),
                    (n.object.bottom = this.bottom),
                    (n.object.near = this.near),
                    (n.object.far = this.far),
                    null !== this.view &&
                      (n.object.view = Object.assign({}, this.view)),
                    n
                  );
                },
              },
            ]),
            t
          );
        })(La),
        oo = 4,
        so = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
        uo = 20,
        lo = new ao(),
        co = new lr(),
        ho = null,
        fo = (1 + Math.sqrt(5)) / 2,
        po = 1 / fo,
        mo = [
          new Sr(1, 1, 1),
          new Sr(-1, 1, 1),
          new Sr(1, 1, -1),
          new Sr(-1, 1, -1),
          new Sr(0, fo, po),
          new Sr(0, fo, -po),
          new Sr(po, 0, fo),
          new Sr(-po, 0, fo),
          new Sr(fo, po, 0),
          new Sr(-fo, po, 0),
        ],
        vo = (function () {
          function e(t) {
            Object(y.a)(this, e),
              (this._renderer = t),
              (this._pingPongRenderTarget = null),
              (this._lodMax = 0),
              (this._cubeSize = 0),
              (this._lodPlanes = []),
              (this._sizeLods = []),
              (this._sigmas = []),
              (this._blurMaterial = null),
              (this._cubemapMaterial = null),
              (this._equirectMaterial = null),
              this._compileMaterial(this._blurMaterial);
          }
          return (
            Object(b.a)(e, [
              {
                key: "fromScene",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0.1,
                    r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : 100;
                  (ho = this._renderer.getRenderTarget()), this._setSize(256);
                  var i = this._allocateTargets();
                  return (
                    (i.depthBuffer = !0),
                    this._sceneToCubeUV(e, n, r, i),
                    t > 0 && this._blur(i, 0, 0, t),
                    this._applyPMREM(i),
                    this._cleanup(i),
                    i
                  );
                },
              },
              {
                key: "fromEquirectangular",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "fromCubemap",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "compileCubemapShader",
                value: function () {
                  null === this._cubemapMaterial &&
                    ((this._cubemapMaterial = xo()),
                    this._compileMaterial(this._cubemapMaterial));
                },
              },
              {
                key: "compileEquirectangularShader",
                value: function () {
                  null === this._equirectMaterial &&
                    ((this._equirectMaterial = bo()),
                    this._compileMaterial(this._equirectMaterial));
                },
              },
              {
                key: "dispose",
                value: function () {
                  this._dispose(),
                    null !== this._cubemapMaterial &&
                      this._cubemapMaterial.dispose(),
                    null !== this._equirectMaterial &&
                      this._equirectMaterial.dispose();
                },
              },
              {
                key: "_setSize",
                value: function (e) {
                  (this._lodMax = Math.floor(Math.log2(e))),
                    (this._cubeSize = Math.pow(2, this._lodMax));
                },
              },
              {
                key: "_dispose",
                value: function () {
                  null !== this._blurMaterial && this._blurMaterial.dispose(),
                    null !== this._pingPongRenderTarget &&
                      this._pingPongRenderTarget.dispose();
                  for (var e = 0; e < this._lodPlanes.length; e++)
                    this._lodPlanes[e].dispose();
                },
              },
              {
                key: "_cleanup",
                value: function (e) {
                  this._renderer.setRenderTarget(ho),
                    (e.scissorTest = !1),
                    yo(e, 0, 0, e.width, e.height);
                },
              },
              {
                key: "_fromTexture",
                value: function (e, t) {
                  e.mapping === xe || e.mapping === _e
                    ? this._setSize(
                        0 === e.image.length
                          ? 16
                          : e.image[0].width || e.image[0].image.width
                      )
                    : this._setSize(e.image.width / 4),
                    (ho = this._renderer.getRenderTarget());
                  var n = t || this._allocateTargets();
                  return (
                    this._textureToCubeUV(e, n),
                    this._applyPMREM(n),
                    this._cleanup(n),
                    n
                  );
                },
              },
              {
                key: "_allocateTargets",
                value: function () {
                  var e = 3 * Math.max(this._cubeSize, 112),
                    t = 4 * this._cubeSize,
                    n = {
                      magFilter: Le,
                      minFilter: Le,
                      generateMipmaps: !1,
                      type: We,
                      format: $e,
                      encoding: Xt,
                      depthBuffer: !1,
                    },
                    r = go(e, t, n);
                  if (
                    null === this._pingPongRenderTarget ||
                    this._pingPongRenderTarget.width !== e
                  ) {
                    null !== this._pingPongRenderTarget && this._dispose(),
                      (this._pingPongRenderTarget = go(e, t, n));
                    var i = this._lodMax,
                      a = (function (e) {
                        for (
                          var t = [],
                            n = [],
                            r = [],
                            i = e,
                            a = e - oo + 1 + so.length,
                            o = 0;
                          o < a;
                          o++
                        ) {
                          var s = Math.pow(2, i);
                          n.push(s);
                          var u = 1 / s;
                          o > e - oo
                            ? (u = so[o - e + oo - 1])
                            : 0 === o && (u = 0),
                            r.push(u);
                          for (
                            var l = 1 / (s - 2),
                              c = -l,
                              h = 1 + l,
                              f = [c, c, h, c, h, h, c, c, h, h, c, h],
                              d = new Float32Array(108),
                              p = new Float32Array(72),
                              m = new Float32Array(36),
                              v = 0;
                            v < 6;
                            v++
                          ) {
                            var g = ((v % 3) * 2) / 3 - 1,
                              y = v > 2 ? 0 : -1,
                              b = [
                                g,
                                y,
                                0,
                                g + 2 / 3,
                                y,
                                0,
                                g + 2 / 3,
                                y + 1,
                                0,
                                g,
                                y,
                                0,
                                g + 2 / 3,
                                y + 1,
                                0,
                                g,
                                y + 1,
                                0,
                              ];
                            d.set(b, 18 * v), p.set(f, 12 * v);
                            var x = [v, v, v, v, v, v];
                            m.set(x, 6 * v);
                          }
                          var _ = new oa();
                          _.setAttribute("position", new Gi(d, 3)),
                            _.setAttribute("uv", new Gi(p, 2)),
                            _.setAttribute("faceIndex", new Gi(m, 1)),
                            t.push(_),
                            i > oo && i--;
                        }
                        return { lodPlanes: t, sizeLods: n, sigmas: r };
                      })(i);
                    (this._sizeLods = a.sizeLods),
                      (this._lodPlanes = a.lodPlanes),
                      (this._sigmas = a.sigmas),
                      (this._blurMaterial = (function (e, t, n) {
                        var r = new Float32Array(uo),
                          i = new Sr(0, 1, 0);
                        return new Ra({
                          name: "SphericalGaussianBlur",
                          defines: {
                            n: uo,
                            CUBEUV_TEXEL_WIDTH: 1 / t,
                            CUBEUV_TEXEL_HEIGHT: 1 / n,
                            CUBEUV_MAX_MIP: "".concat(e, ".0"),
                          },
                          uniforms: {
                            envMap: { value: null },
                            samples: { value: 1 },
                            weights: { value: r },
                            latitudinal: { value: !1 },
                            dTheta: { value: 0 },
                            mipInt: { value: 0 },
                            poleAxis: { value: i },
                          },
                          vertexShader:
                            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                          fragmentShader:
                            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",
                          blending: j,
                          depthTest: !1,
                          depthWrite: !1,
                        });
                      })(i, e, t));
                  }
                  return r;
                },
              },
              {
                key: "_compileMaterial",
                value: function (e) {
                  var t = new Ma(this._lodPlanes[0], e);
                  this._renderer.compile(t, lo);
                },
              },
              {
                key: "_sceneToCubeUV",
                value: function (e, t, n, r) {
                  var i = new ja(90, 1, t, n),
                    a = [1, -1, 1, 1, 1, 1],
                    o = [1, 1, 1, -1, -1, -1],
                    s = this._renderer,
                    u = s.autoClear,
                    l = s.toneMapping;
                  s.getClearColor(co), (s.toneMapping = de), (s.autoClear = !1);
                  var c = new Ui({
                      name: "PMREM.Background",
                      side: R,
                      depthWrite: !1,
                      depthTest: !1,
                    }),
                    h = new Ma(new Ea(), c),
                    f = !1,
                    d = e.background;
                  d
                    ? d.isColor &&
                      (c.color.copy(d), (e.background = null), (f = !0))
                    : (c.color.copy(co), (f = !0));
                  for (var p = 0; p < 6; p++) {
                    var m = p % 3;
                    0 === m
                      ? (i.up.set(0, a[p], 0), i.lookAt(o[p], 0, 0))
                      : 1 === m
                      ? (i.up.set(0, 0, a[p]), i.lookAt(0, o[p], 0))
                      : (i.up.set(0, a[p], 0), i.lookAt(0, 0, o[p]));
                    var v = this._cubeSize;
                    yo(r, m * v, p > 2 ? v : 0, v, v),
                      s.setRenderTarget(r),
                      f && s.render(h, i),
                      s.render(e, i);
                  }
                  h.geometry.dispose(),
                    h.material.dispose(),
                    (s.toneMapping = l),
                    (s.autoClear = u),
                    (e.background = d);
                },
              },
              {
                key: "_textureToCubeUV",
                value: function (e, t) {
                  var n = this._renderer,
                    r = e.mapping === xe || e.mapping === _e;
                  r
                    ? (null === this._cubemapMaterial &&
                        (this._cubemapMaterial = xo()),
                      (this._cubemapMaterial.uniforms.flipEnvMap.value =
                        !1 === e.isRenderTargetTexture ? -1 : 1))
                    : null === this._equirectMaterial &&
                      (this._equirectMaterial = bo());
                  var i = r ? this._cubemapMaterial : this._equirectMaterial,
                    a = new Ma(this._lodPlanes[0], i);
                  i.uniforms.envMap.value = e;
                  var o = this._cubeSize;
                  yo(t, 0, 0, 3 * o, 2 * o),
                    n.setRenderTarget(t),
                    n.render(a, lo);
                },
              },
              {
                key: "_applyPMREM",
                value: function (e) {
                  var t = this._renderer,
                    n = t.autoClear;
                  t.autoClear = !1;
                  for (var r = 1; r < this._lodPlanes.length; r++) {
                    var i = Math.sqrt(
                        this._sigmas[r] * this._sigmas[r] -
                          this._sigmas[r - 1] * this._sigmas[r - 1]
                      ),
                      a = mo[(r - 1) % mo.length];
                    this._blur(e, r - 1, r, i, a);
                  }
                  t.autoClear = n;
                },
              },
              {
                key: "_blur",
                value: function (e, t, n, r, i) {
                  var a = this._pingPongRenderTarget;
                  this._halfBlur(e, a, t, n, r, "latitudinal", i),
                    this._halfBlur(a, e, n, n, r, "longitudinal", i);
                },
              },
              {
                key: "_halfBlur",
                value: function (e, t, n, r, i, a, o) {
                  var s = this._renderer,
                    u = this._blurMaterial;
                  "latitudinal" !== a &&
                    "longitudinal" !== a &&
                    console.error(
                      "blur direction must be either latitudinal or longitudinal!"
                    );
                  var l = new Ma(this._lodPlanes[r], u),
                    c = u.uniforms,
                    h = this._sizeLods[n] - 1,
                    f = isFinite(i)
                      ? Math.PI / (2 * h)
                      : (2 * Math.PI) / (2 * uo - 1),
                    d = i / f,
                    p = isFinite(i) ? 1 + Math.floor(3 * d) : uo;
                  p > uo &&
                    console.warn(
                      "sigmaRadians, "
                        .concat(
                          i,
                          ", is too large and will clip, as it requested "
                        )
                        .concat(p, " samples when the maximum is set to ")
                        .concat(uo)
                    );
                  for (var m = [], v = 0, g = 0; g < uo; ++g) {
                    var y = g / d,
                      b = Math.exp((-y * y) / 2);
                    m.push(b), 0 === g ? (v += b) : g < p && (v += 2 * b);
                  }
                  for (var x = 0; x < m.length; x++) m[x] = m[x] / v;
                  (c.envMap.value = e.texture),
                    (c.samples.value = p),
                    (c.weights.value = m),
                    (c.latitudinal.value = "latitudinal" === a),
                    o && (c.poleAxis.value = o);
                  var _ = this._lodMax;
                  (c.dTheta.value = f), (c.mipInt.value = _ - n);
                  var w = this._sizeLods[r];
                  yo(
                    t,
                    3 * w * (r > _ - oo ? r - _ + oo : 0),
                    4 * (this._cubeSize - w),
                    3 * w,
                    2 * w
                  ),
                    s.setRenderTarget(t),
                    s.render(l, lo);
                },
              },
            ]),
            e
          );
        })();
      function go(e, t, n) {
        var r = new vr(e, t, n);
        return (
          (r.texture.mapping = Me),
          (r.texture.name = "PMREM.cubeUv"),
          (r.scissorTest = !0),
          r
        );
      }
      function yo(e, t, n, r, i) {
        e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i);
      }
      function bo() {
        return new Ra({
          name: "EquirectangularToCubeUV",
          uniforms: { envMap: { value: null } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",
          blending: j,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function xo() {
        return new Ra({
          name: "CubemapToCubeUV",
          uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",
          blending: j,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function _o(e) {
        var t = new WeakMap(),
          n = null;
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var i = t.get(n);
          void 0 !== i && (t.delete(n), i.dispose());
        }
        return {
          get: function (i) {
            if (i && i.isTexture) {
              var a = i.mapping,
                o = a === we || a === Se,
                s = a === xe || a === _e;
              if (o || s) {
                if (i.isRenderTargetTexture && !0 === i.needsPMREMUpdate) {
                  i.needsPMREMUpdate = !1;
                  var u = t.get(i);
                  return (
                    null === n && (n = new vo(e)),
                    (u = o ? n.fromEquirectangular(i, u) : n.fromCubemap(i, u)),
                    t.set(i, u),
                    u.texture
                  );
                }
                if (t.has(i)) return t.get(i).texture;
                var l = i.image;
                if (
                  (o && l && l.height > 0) ||
                  (s &&
                    l &&
                    (function (e) {
                      for (var t = 0, n = 0; n < 6; n++) void 0 !== e[n] && t++;
                      return 6 === t;
                    })(l))
                ) {
                  null === n && (n = new vo(e));
                  var c = o ? n.fromEquirectangular(i) : n.fromCubemap(i);
                  return (
                    t.set(i, c), i.addEventListener("dispose", r), c.texture
                  );
                }
                return null;
              }
            }
            return i;
          },
          dispose: function () {
            (t = new WeakMap()), null !== n && (n.dispose(), (n = null));
          },
        };
      }
      function wo(e) {
        var t = {};
        function n(n) {
          if (void 0 !== t[n]) return t[n];
          var r;
          switch (n) {
            case "WEBGL_depth_texture":
              r =
                e.getExtension("WEBGL_depth_texture") ||
                e.getExtension("MOZ_WEBGL_depth_texture") ||
                e.getExtension("WEBKIT_WEBGL_depth_texture");
              break;
            case "EXT_texture_filter_anisotropic":
              r =
                e.getExtension("EXT_texture_filter_anisotropic") ||
                e.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
              break;
            case "WEBGL_compressed_texture_s3tc":
              r =
                e.getExtension("WEBGL_compressed_texture_s3tc") ||
                e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
              break;
            case "WEBGL_compressed_texture_pvrtc":
              r =
                e.getExtension("WEBGL_compressed_texture_pvrtc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
              break;
            default:
              r = e.getExtension(n);
          }
          return (t[n] = r), r;
        }
        return {
          has: function (e) {
            return null !== n(e);
          },
          init: function (e) {
            e.isWebGL2
              ? n("EXT_color_buffer_float")
              : (n("WEBGL_depth_texture"),
                n("OES_texture_float"),
                n("OES_texture_half_float"),
                n("OES_texture_half_float_linear"),
                n("OES_standard_derivatives"),
                n("OES_element_index_uint"),
                n("OES_vertex_array_object"),
                n("ANGLE_instanced_arrays")),
              n("OES_texture_float_linear"),
              n("EXT_color_buffer_half_float"),
              n("WEBGL_multisampled_render_to_texture");
          },
          get: function (e) {
            var t = n(e);
            return (
              null === t &&
                console.warn(
                  "THREE.WebGLRenderer: " + e + " extension not supported."
                ),
              t
            );
          },
        };
      }
      function So(e, t, n, r) {
        var i = {},
          a = new WeakMap();
        function o(e) {
          var s = e.target;
          for (var u in (null !== s.index && t.remove(s.index), s.attributes))
            t.remove(s.attributes[u]);
          s.removeEventListener("dispose", o), delete i[s.id];
          var l = a.get(s);
          l && (t.remove(l), a.delete(s)),
            r.releaseStatesOfGeometry(s),
            !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
            n.memory.geometries--;
        }
        function s(e) {
          var n = [],
            r = e.index,
            i = e.attributes.position,
            o = 0;
          if (null !== r) {
            var s = r.array;
            o = r.version;
            for (var u = 0, l = s.length; u < l; u += 3) {
              var c = s[u + 0],
                h = s[u + 1],
                f = s[u + 2];
              n.push(c, h, h, f, f, c);
            }
          } else {
            var d = i.array;
            o = i.version;
            for (var p = 0, m = d.length / 3 - 1; p < m; p += 3) {
              var v = p + 0,
                g = p + 1,
                y = p + 2;
              n.push(v, g, g, y, y, v);
            }
          }
          var b = new (Yn(n) ? Ji : Xi)(n, 1);
          b.version = o;
          var x = a.get(e);
          x && t.remove(x), a.set(e, b);
        }
        return {
          get: function (e, t) {
            return !0 === i[t.id]
              ? t
              : (t.addEventListener("dispose", o),
                (i[t.id] = !0),
                n.memory.geometries++,
                t);
          },
          update: function (e) {
            var n = e.attributes;
            for (var r in n) t.update(n[r], 34962);
            var i = e.morphAttributes;
            for (var a in i)
              for (var o = i[a], s = 0, u = o.length; s < u; s++)
                t.update(o[s], 34962);
          },
          getWireframeAttribute: function (e) {
            var t = a.get(e);
            if (t) {
              var n = e.index;
              null !== n && t.version < n.version && s(e);
            } else s(e);
            return a.get(e);
          },
        };
      }
      function Mo(e, t, n, r) {
        var i,
          a,
          o,
          s = r.isWebGL2;
        (this.setMode = function (e) {
          i = e;
        }),
          (this.setIndex = function (e) {
            (a = e.type), (o = e.bytesPerElement);
          }),
          (this.render = function (t, r) {
            e.drawElements(i, r, a, t * o), n.update(r, i, 1);
          }),
          (this.renderInstances = function (r, u, l) {
            if (0 !== l) {
              var c, h;
              if (s) (c = e), (h = "drawElementsInstanced");
              else if (
                ((h = "drawElementsInstancedANGLE"),
                null === (c = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              c[h](i, u, a, r * o, l), n.update(u, i, l);
            }
          });
      }
      function To(e) {
        var t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
        return {
          memory: { geometries: 0, textures: 0 },
          render: t,
          programs: null,
          autoReset: !0,
          reset: function () {
            t.frame++,
              (t.calls = 0),
              (t.triangles = 0),
              (t.points = 0),
              (t.lines = 0);
          },
          update: function (e, n, r) {
            switch ((t.calls++, n)) {
              case 4:
                t.triangles += r * (e / 3);
                break;
              case 1:
                t.lines += r * (e / 2);
                break;
              case 3:
                t.lines += r * (e - 1);
                break;
              case 2:
                t.lines += r * e;
                break;
              case 0:
                t.points += r * e;
                break;
              default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", n);
            }
          },
        };
      }
      function Eo(e, t) {
        return e[0] - t[0];
      }
      function Oo(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1]);
      }
      function ko(e, t, n) {
        for (
          var r = {},
            i = new Float32Array(8),
            a = new WeakMap(),
            o = new mr(),
            s = [],
            u = 0;
          u < 8;
          u++
        )
          s[u] = [u, 0];
        return {
          update: function (u, l, c, h) {
            var f = u.morphTargetInfluences;
            if (!0 === t.isWebGL2) {
              var d =
                  l.morphAttributes.position ||
                  l.morphAttributes.normal ||
                  l.morphAttributes.color,
                p = void 0 !== d ? d.length : 0,
                m = a.get(l);
              if (void 0 === m || m.count !== p) {
                void 0 !== m && m.texture.dispose();
                var v = void 0 !== l.morphAttributes.position,
                  g = void 0 !== l.morphAttributes.normal,
                  y = void 0 !== l.morphAttributes.color,
                  b = l.morphAttributes.position || [],
                  x = l.morphAttributes.normal || [],
                  _ = l.morphAttributes.color || [],
                  w = 0;
                !0 === v && (w = 1), !0 === g && (w = 2), !0 === y && (w = 3);
                var S = l.attributes.position.count * w,
                  M = 1;
                S > t.maxTextureSize &&
                  ((M = Math.ceil(S / t.maxTextureSize)),
                  (S = t.maxTextureSize));
                var T = new Float32Array(S * M * 4 * p),
                  E = new gr(T, S, M, p);
                (E.type = Ve), (E.needsUpdate = !0);
                for (var O = 4 * w, k = 0; k < p; k++)
                  for (
                    var A = b[k], C = x[k], P = _[k], R = S * M * 4 * k, L = 0;
                    L < A.count;
                    L++
                  ) {
                    var j = L * O;
                    !0 === v &&
                      (o.fromBufferAttribute(A, L),
                      (T[R + j + 0] = o.x),
                      (T[R + j + 1] = o.y),
                      (T[R + j + 2] = o.z),
                      (T[R + j + 3] = 0)),
                      !0 === g &&
                        (o.fromBufferAttribute(C, L),
                        (T[R + j + 4] = o.x),
                        (T[R + j + 5] = o.y),
                        (T[R + j + 6] = o.z),
                        (T[R + j + 7] = 0)),
                      !0 === y &&
                        (o.fromBufferAttribute(P, L),
                        (T[R + j + 8] = o.x),
                        (T[R + j + 9] = o.y),
                        (T[R + j + 10] = o.z),
                        (T[R + j + 11] = 4 === P.itemSize ? o.w : 1));
                  }
                (m = { count: p, texture: E, size: new qn(S, M) }),
                  a.set(l, m),
                  l.addEventListener("dispose", function e() {
                    E.dispose(),
                      a.delete(l),
                      l.removeEventListener("dispose", e);
                  });
              }
              for (var I = 0, N = 0; N < f.length; N++) I += f[N];
              var D = l.morphTargetsRelative ? 1 : 1 - I;
              h.getUniforms().setValue(e, "morphTargetBaseInfluence", D),
                h.getUniforms().setValue(e, "morphTargetInfluences", f),
                h
                  .getUniforms()
                  .setValue(e, "morphTargetsTexture", m.texture, n),
                h.getUniforms().setValue(e, "morphTargetsTextureSize", m.size);
            } else {
              var z = void 0 === f ? 0 : f.length,
                U = r[l.id];
              if (void 0 === U || U.length !== z) {
                U = [];
                for (var B = 0; B < z; B++) U[B] = [B, 0];
                r[l.id] = U;
              }
              for (var F = 0; F < z; F++) {
                var G = U[F];
                (G[0] = F), (G[1] = f[F]);
              }
              U.sort(Oo);
              for (var H = 0; H < 8; H++)
                H < z && U[H][1]
                  ? ((s[H][0] = U[H][0]), (s[H][1] = U[H][1]))
                  : ((s[H][0] = Number.MAX_SAFE_INTEGER), (s[H][1] = 0));
              s.sort(Eo);
              for (
                var V = l.morphAttributes.position,
                  W = l.morphAttributes.normal,
                  q = 0,
                  X = 0;
                X < 8;
                X++
              ) {
                var Y = s[X],
                  J = Y[0],
                  Z = Y[1];
                J !== Number.MAX_SAFE_INTEGER && Z
                  ? (V &&
                      l.getAttribute("morphTarget" + X) !== V[J] &&
                      l.setAttribute("morphTarget" + X, V[J]),
                    W &&
                      l.getAttribute("morphNormal" + X) !== W[J] &&
                      l.setAttribute("morphNormal" + X, W[J]),
                    (i[X] = Z),
                    (q += Z))
                  : (V &&
                      !0 === l.hasAttribute("morphTarget" + X) &&
                      l.deleteAttribute("morphTarget" + X),
                    W &&
                      !0 === l.hasAttribute("morphNormal" + X) &&
                      l.deleteAttribute("morphNormal" + X),
                    (i[X] = 0));
              }
              var $ = l.morphTargetsRelative ? 1 : 1 - q;
              h.getUniforms().setValue(e, "morphTargetBaseInfluence", $),
                h.getUniforms().setValue(e, "morphTargetInfluences", i);
            }
          },
        };
      }
      function Ao(e, t, n, r) {
        var i = new WeakMap();
        function a(e) {
          var t = e.target;
          t.removeEventListener("dispose", a),
            n.remove(t.instanceMatrix),
            null !== t.instanceColor && n.remove(t.instanceColor);
        }
        return {
          update: function (e) {
            var o = r.render.frame,
              s = e.geometry,
              u = t.get(e, s);
            return (
              i.get(u) !== o && (t.update(u), i.set(u, o)),
              e.isInstancedMesh &&
                (!1 === e.hasEventListener("dispose", a) &&
                  e.addEventListener("dispose", a),
                n.update(e.instanceMatrix, 34962),
                null !== e.instanceColor && n.update(e.instanceColor, 34962)),
              u
            );
          },
          dispose: function () {
            i = new WeakMap();
          },
        };
      }
      var Co = new pr(),
        Po = new gr(),
        Ro = new br(),
        Lo = new za(),
        jo = [],
        Io = [],
        No = new Float32Array(16),
        Do = new Float32Array(9),
        zo = new Float32Array(4);
      function Uo(e, t, n) {
        var r = e[0];
        if (r <= 0 || r > 0) return e;
        var i = t * n,
          a = jo[i];
        if (
          (void 0 === a && ((a = new Float32Array(i)), (jo[i] = a)), 0 !== t)
        ) {
          r.toArray(a, 0);
          for (var o = 1, s = 0; o !== t; ++o) (s += n), e[o].toArray(a, s);
        }
        return a;
      }
      function Bo(e, t) {
        if (e.length !== t.length) return !1;
        for (var n = 0, r = e.length; n < r; n++) if (e[n] !== t[n]) return !1;
        return !0;
      }
      function Fo(e, t) {
        for (var n = 0, r = t.length; n < r; n++) e[n] = t[n];
      }
      function Go(e, t) {
        var n = Io[t];
        void 0 === n && ((n = new Int32Array(t)), (Io[t] = n));
        for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
        return n;
      }
      function Ho(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1f(this.addr, t), (n[0] = t));
      }
      function Vo(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2f(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (Bo(n, t)) return;
          e.uniform2fv(this.addr, t), Fo(n, t);
        }
      }
      function Wo(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3f(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else if (void 0 !== t.r)
          (n[0] === t.r && n[1] === t.g && n[2] === t.b) ||
            (e.uniform3f(this.addr, t.r, t.g, t.b),
            (n[0] = t.r),
            (n[1] = t.g),
            (n[2] = t.b));
        else {
          if (Bo(n, t)) return;
          e.uniform3fv(this.addr, t), Fo(n, t);
        }
      }
      function qo(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (Bo(n, t)) return;
          e.uniform4fv(this.addr, t), Fo(n, t);
        }
      }
      function Xo(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Bo(n, t)) return;
          e.uniformMatrix2fv(this.addr, !1, t), Fo(n, t);
        } else {
          if (Bo(n, r)) return;
          zo.set(r), e.uniformMatrix2fv(this.addr, !1, zo), Fo(n, r);
        }
      }
      function Yo(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Bo(n, t)) return;
          e.uniformMatrix3fv(this.addr, !1, t), Fo(n, t);
        } else {
          if (Bo(n, r)) return;
          Do.set(r), e.uniformMatrix3fv(this.addr, !1, Do), Fo(n, r);
        }
      }
      function Jo(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Bo(n, t)) return;
          e.uniformMatrix4fv(this.addr, !1, t), Fo(n, t);
        } else {
          if (Bo(n, r)) return;
          No.set(r), e.uniformMatrix4fv(this.addr, !1, No), Fo(n, r);
        }
      }
      function Zo(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1i(this.addr, t), (n[0] = t));
      }
      function $o(e, t) {
        var n = this.cache;
        Bo(n, t) || (e.uniform2iv(this.addr, t), Fo(n, t));
      }
      function Ko(e, t) {
        var n = this.cache;
        Bo(n, t) || (e.uniform3iv(this.addr, t), Fo(n, t));
      }
      function Qo(e, t) {
        var n = this.cache;
        Bo(n, t) || (e.uniform4iv(this.addr, t), Fo(n, t));
      }
      function es(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1ui(this.addr, t), (n[0] = t));
      }
      function ts(e, t) {
        var n = this.cache;
        Bo(n, t) || (e.uniform2uiv(this.addr, t), Fo(n, t));
      }
      function ns(e, t) {
        var n = this.cache;
        Bo(n, t) || (e.uniform3uiv(this.addr, t), Fo(n, t));
      }
      function rs(e, t) {
        var n = this.cache;
        Bo(n, t) || (e.uniform4uiv(this.addr, t), Fo(n, t));
      }
      function is(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2D(t || Co, i);
      }
      function as(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture3D(t || Ro, i);
      }
      function os(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTextureCube(t || Lo, i);
      }
      function ss(e, t, n) {
        var r = this.cache,
          i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
          n.setTexture2DArray(t || Po, i);
      }
      function us(e, t) {
        e.uniform1fv(this.addr, t);
      }
      function ls(e, t) {
        var n = Uo(t, this.size, 2);
        e.uniform2fv(this.addr, n);
      }
      function cs(e, t) {
        var n = Uo(t, this.size, 3);
        e.uniform3fv(this.addr, n);
      }
      function hs(e, t) {
        var n = Uo(t, this.size, 4);
        e.uniform4fv(this.addr, n);
      }
      function fs(e, t) {
        var n = Uo(t, this.size, 4);
        e.uniformMatrix2fv(this.addr, !1, n);
      }
      function ds(e, t) {
        var n = Uo(t, this.size, 9);
        e.uniformMatrix3fv(this.addr, !1, n);
      }
      function ps(e, t) {
        var n = Uo(t, this.size, 16);
        e.uniformMatrix4fv(this.addr, !1, n);
      }
      function ms(e, t) {
        e.uniform1iv(this.addr, t);
      }
      function vs(e, t) {
        e.uniform2iv(this.addr, t);
      }
      function gs(e, t) {
        e.uniform3iv(this.addr, t);
      }
      function ys(e, t) {
        e.uniform4iv(this.addr, t);
      }
      function bs(e, t) {
        e.uniform1uiv(this.addr, t);
      }
      function xs(e, t) {
        e.uniform2uiv(this.addr, t);
      }
      function _s(e, t) {
        e.uniform3uiv(this.addr, t);
      }
      function ws(e, t) {
        e.uniform4uiv(this.addr, t);
      }
      function Ss(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = Go(n, i);
        Bo(r, a) || (e.uniform1iv(this.addr, a), Fo(r, a));
        for (var o = 0; o !== i; ++o) n.setTexture2D(t[o] || Co, a[o]);
      }
      function Ms(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = Go(n, i);
        Bo(r, a) || (e.uniform1iv(this.addr, a), Fo(r, a));
        for (var o = 0; o !== i; ++o) n.setTexture3D(t[o] || Ro, a[o]);
      }
      function Ts(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = Go(n, i);
        Bo(r, a) || (e.uniform1iv(this.addr, a), Fo(r, a));
        for (var o = 0; o !== i; ++o) n.setTextureCube(t[o] || Lo, a[o]);
      }
      function Es(e, t, n) {
        var r = this.cache,
          i = t.length,
          a = Go(n, i);
        Bo(r, a) || (e.uniform1iv(this.addr, a), Fo(r, a));
        for (var o = 0; o !== i; ++o) n.setTexture2DArray(t[o] || Po, a[o]);
      }
      var Os = function e(t, n, r) {
          Object(y.a)(this, e),
            (this.id = t),
            (this.addr = r),
            (this.cache = []),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return Ho;
                case 35664:
                  return Vo;
                case 35665:
                  return Wo;
                case 35666:
                  return qo;
                case 35674:
                  return Xo;
                case 35675:
                  return Yo;
                case 35676:
                  return Jo;
                case 5124:
                case 35670:
                  return Zo;
                case 35667:
                case 35671:
                  return $o;
                case 35668:
                case 35672:
                  return Ko;
                case 35669:
                case 35673:
                  return Qo;
                case 5125:
                  return es;
                case 36294:
                  return ts;
                case 36295:
                  return ns;
                case 36296:
                  return rs;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return is;
                case 35679:
                case 36299:
                case 36307:
                  return as;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return os;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return ss;
              }
            })(n.type));
        },
        ks = function e(t, n, r) {
          Object(y.a)(this, e),
            (this.id = t),
            (this.addr = r),
            (this.cache = []),
            (this.size = n.size),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return us;
                case 35664:
                  return ls;
                case 35665:
                  return cs;
                case 35666:
                  return hs;
                case 35674:
                  return fs;
                case 35675:
                  return ds;
                case 35676:
                  return ps;
                case 5124:
                case 35670:
                  return ms;
                case 35667:
                case 35671:
                  return vs;
                case 35668:
                case 35672:
                  return gs;
                case 35669:
                case 35673:
                  return ys;
                case 5125:
                  return bs;
                case 36294:
                  return xs;
                case 36295:
                  return _s;
                case 36296:
                  return ws;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return Ss;
                case 35679:
                case 36299:
                case 36307:
                  return Ms;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return Ts;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return Es;
              }
            })(n.type));
        },
        As = (function () {
          function e(t) {
            Object(y.a)(this, e),
              (this.id = t),
              (this.seq = []),
              (this.map = {});
          }
          return (
            Object(b.a)(e, [
              {
                key: "setValue",
                value: function (e, t, n) {
                  for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
                    var o = r[i];
                    o.setValue(e, t[o.id], n);
                  }
                },
              },
            ]),
            e
          );
        })(),
        Cs = /(\w+)(\])?(\[|\.)?/g;
      function Ps(e, t) {
        e.seq.push(t), (e.map[t.id] = t);
      }
      function Rs(e, t, n) {
        var r = e.name,
          i = r.length;
        for (Cs.lastIndex = 0; ; ) {
          var a = Cs.exec(r),
            o = Cs.lastIndex,
            s = a[1],
            u = "]" === a[2],
            l = a[3];
          if ((u && (s |= 0), void 0 === l || ("[" === l && o + 2 === i))) {
            Ps(n, void 0 === l ? new Os(s, e, t) : new ks(s, e, t));
            break;
          }
          var c = n.map[s];
          void 0 === c && Ps(n, (c = new As(s))), (n = c);
        }
      }
      var Ls = (function () {
        function e(t, n) {
          Object(y.a)(this, e), (this.seq = []), (this.map = {});
          for (var r = t.getProgramParameter(n, 35718), i = 0; i < r; ++i) {
            var a = t.getActiveUniform(n, i);
            Rs(a, t.getUniformLocation(n, a.name), this);
          }
        }
        return (
          Object(b.a)(
            e,
            [
              {
                key: "setValue",
                value: function (e, t, n, r) {
                  var i = this.map[t];
                  void 0 !== i && i.setValue(e, n, r);
                },
              },
              {
                key: "setOptional",
                value: function (e, t, n) {
                  var r = t[n];
                  void 0 !== r && this.setValue(e, n, r);
                },
              },
            ],
            [
              {
                key: "upload",
                value: function (e, t, n, r) {
                  for (var i = 0, a = t.length; i !== a; ++i) {
                    var o = t[i],
                      s = n[o.id];
                    !1 !== s.needsUpdate && o.setValue(e, s.value, r);
                  }
                },
              },
              {
                key: "seqWithValue",
                value: function (e, t) {
                  for (var n = [], r = 0, i = e.length; r !== i; ++r) {
                    var a = e[r];
                    a.id in t && n.push(a);
                  }
                  return n;
                },
              },
            ]
          ),
          e
        );
      })();
      function js(e, t, n) {
        var r = e.createShader(t);
        return e.shaderSource(r, n), e.compileShader(r), r;
      }
      var Is = 0;
      function Ns(e, t, n) {
        var r = e.getShaderParameter(t, 35713),
          i = e.getShaderInfoLog(t).trim();
        if (r && "" === i) return "";
        var a = /ERROR: 0:(\d+)/.exec(i);
        if (a) {
          var o = parseInt(a[1]);
          return (
            n.toUpperCase() +
            "\n\n" +
            i +
            "\n\n" +
            (function (e, t) {
              for (
                var n = e.split("\n"),
                  r = [],
                  i = Math.max(t - 6, 0),
                  a = Math.min(t + 6, n.length),
                  o = i;
                o < a;
                o++
              ) {
                var s = o + 1;
                r.push(
                  ""
                    .concat(s === t ? ">" : " ", " ")
                    .concat(s, ": ")
                    .concat(n[o])
                );
              }
              return r.join("\n");
            })(e.getShaderSource(t), o)
          );
        }
        return i;
      }
      function Ds(e, t) {
        var n = (function (e) {
          switch (e) {
            case Xt:
              return ["Linear", "( value )"];
            case Yt:
              return ["sRGB", "( value )"];
            default:
              return (
                console.warn("THREE.WebGLProgram: Unsupported encoding:", e),
                ["Linear", "( value )"]
              );
          }
        })(t);
        return (
          "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
        );
      }
      function zs(e, t) {
        var n;
        switch (t) {
          case pe:
            n = "Linear";
            break;
          case me:
            n = "Reinhard";
            break;
          case ve:
            n = "OptimizedCineon";
            break;
          case ge:
            n = "ACESFilmic";
            break;
          case ye:
            n = "Custom";
            break;
          default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t),
              (n = "Linear");
        }
        return (
          "vec3 " +
          e +
          "( vec3 color ) { return " +
          n +
          "ToneMapping( color ); }"
        );
      }
      function Us(e) {
        return "" !== e;
      }
      function Bs(e, t) {
        var n =
          t.numSpotLightShadows +
          t.numSpotLightMaps -
          t.numSpotLightShadowsWithMaps;
        return e
          .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
          .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
          .replace(/NUM_SPOT_LIGHT_MAPS/g, t.numSpotLightMaps)
          .replace(/NUM_SPOT_LIGHT_COORDS/g, n)
          .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
          .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
          .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
          .replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows)
          .replace(
            /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,
            t.numSpotLightShadowsWithMaps
          )
          .replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows)
          .replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
      }
      function Fs(e, t) {
        return e
          .replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes)
          .replace(
            /UNION_CLIPPING_PLANES/g,
            t.numClippingPlanes - t.numClipIntersection
          );
      }
      var Gs = /^[ \t]*#include +<([\w\d./]+)>/gm;
      function Hs(e) {
        return e.replace(Gs, Vs);
      }
      function Vs(e, t) {
        var n = Za[t];
        if (void 0 === n)
          throw new Error("Can not resolve #include <" + t + ">");
        return Hs(n);
      }
      var Ws =
        /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
      function qs(e) {
        return e.replace(Ws, Xs);
      }
      function Xs(e, t, n, r) {
        for (var i = "", a = parseInt(t); a < parseInt(n); a++)
          i += r
            .replace(/\[\s*i\s*\]/g, "[ " + a + " ]")
            .replace(/UNROLLED_LOOP_INDEX/g, a);
        return i;
      }
      function Ys(e) {
        var t =
          "precision " +
          e.precision +
          " float;\nprecision " +
          e.precision +
          " int;";
        return (
          "highp" === e.precision
            ? (t += "\n#define HIGH_PRECISION")
            : "mediump" === e.precision
            ? (t += "\n#define MEDIUM_PRECISION")
            : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
          t
        );
      }
      function Js(e, t, n, r) {
        var i,
          a,
          o = e.getContext(),
          s = n.defines,
          u = n.vertexShader,
          l = n.fragmentShader,
          c = (function (e) {
            var t = "SHADOWMAP_TYPE_BASIC";
            return (
              e.shadowMapType === k
                ? (t = "SHADOWMAP_TYPE_PCF")
                : e.shadowMapType === A
                ? (t = "SHADOWMAP_TYPE_PCF_SOFT")
                : e.shadowMapType === C && (t = "SHADOWMAP_TYPE_VSM"),
              t
            );
          })(n),
          h = (function (e) {
            var t = "ENVMAP_TYPE_CUBE";
            if (e.envMap)
              switch (e.envMapMode) {
                case xe:
                case _e:
                  t = "ENVMAP_TYPE_CUBE";
                  break;
                case Me:
                  t = "ENVMAP_TYPE_CUBE_UV";
              }
            return t;
          })(n),
          f = (function (e) {
            var t = "ENVMAP_MODE_REFLECTION";
            if (e.envMap)
              switch (e.envMapMode) {
                case _e:
                  t = "ENVMAP_MODE_REFRACTION";
              }
            return t;
          })(n),
          d = (function (e) {
            var t = "ENVMAP_BLENDING_NONE";
            if (e.envMap)
              switch (e.combine) {
                case ce:
                  t = "ENVMAP_BLENDING_MULTIPLY";
                  break;
                case he:
                  t = "ENVMAP_BLENDING_MIX";
                  break;
                case fe:
                  t = "ENVMAP_BLENDING_ADD";
              }
            return t;
          })(n),
          p = (function (e) {
            var t = e.envMapCubeUVHeight;
            if (null === t) return null;
            var n = Math.log2(t) - 2,
              r = 1 / t;
            return {
              texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 112)),
              texelHeight: r,
              maxMip: n,
            };
          })(n),
          m = n.isWebGL2
            ? ""
            : (function (e) {
                return [
                  e.extensionDerivatives ||
                  e.envMapCubeUVHeight ||
                  e.bumpMap ||
                  e.tangentSpaceNormalMap ||
                  e.clearcoatNormalMap ||
                  e.flatShading ||
                  "physical" === e.shaderID
                    ? "#extension GL_OES_standard_derivatives : enable"
                    : "",
                  (e.extensionFragDepth || e.logarithmicDepthBuffer) &&
                  e.rendererExtensionFragDepth
                    ? "#extension GL_EXT_frag_depth : enable"
                    : "",
                  e.extensionDrawBuffers && e.rendererExtensionDrawBuffers
                    ? "#extension GL_EXT_draw_buffers : require"
                    : "",
                  (e.extensionShaderTextureLOD || e.envMap || e.transmission) &&
                  e.rendererExtensionShaderTextureLod
                    ? "#extension GL_EXT_shader_texture_lod : enable"
                    : "",
                ]
                  .filter(Us)
                  .join("\n");
              })(n),
          v = (function (e) {
            var t = [];
            for (var n in e) {
              var r = e[n];
              !1 !== r && t.push("#define " + n + " " + r);
            }
            return t.join("\n");
          })(s),
          g = o.createProgram(),
          y = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
        n.isRawShaderMaterial
          ? ((i = [v].filter(Us).join("\n")).length > 0 && (i += "\n"),
            (a = [m, v].filter(Us).join("\n")).length > 0 && (a += "\n"))
          : ((i = [
              Ys(n),
              "#define SHADER_NAME " + n.shaderName,
              v,
              n.instancing ? "#define USE_INSTANCING" : "",
              n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
              n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + f : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMap && n.objectSpaceNormalMap
                ? "#define OBJECTSPACE_NORMALMAP"
                : "",
              n.normalMap && n.tangentSpaceNormalMap
                ? "#define TANGENTSPACE_NORMALMAP"
                : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.displacementMap && n.supportsVertexTextures
                ? "#define USE_DISPLACEMENTMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
              n.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
              n.vertexTangents ? "#define USE_TANGENT" : "",
              n.vertexColors ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUvs ? "#define USE_UV" : "",
              n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.skinning ? "#define USE_SKINNING" : "",
              n.morphTargets ? "#define USE_MORPHTARGETS" : "",
              n.morphNormals && !1 === n.flatShading
                ? "#define USE_MORPHNORMALS"
                : "",
              n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE"
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount
                : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 modelMatrix;",
              "uniform mat4 modelViewMatrix;",
              "uniform mat4 projectionMatrix;",
              "uniform mat4 viewMatrix;",
              "uniform mat3 normalMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              "#ifdef USE_INSTANCING",
              "\tattribute mat4 instanceMatrix;",
              "#endif",
              "#ifdef USE_INSTANCING_COLOR",
              "\tattribute vec3 instanceColor;",
              "#endif",
              "attribute vec3 position;",
              "attribute vec3 normal;",
              "attribute vec2 uv;",
              "#ifdef USE_TANGENT",
              "\tattribute vec4 tangent;",
              "#endif",
              "#if defined( USE_COLOR_ALPHA )",
              "\tattribute vec4 color;",
              "#elif defined( USE_COLOR )",
              "\tattribute vec3 color;",
              "#endif",
              "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
              "\tattribute vec3 morphTarget0;",
              "\tattribute vec3 morphTarget1;",
              "\tattribute vec3 morphTarget2;",
              "\tattribute vec3 morphTarget3;",
              "\t#ifdef USE_MORPHNORMALS",
              "\t\tattribute vec3 morphNormal0;",
              "\t\tattribute vec3 morphNormal1;",
              "\t\tattribute vec3 morphNormal2;",
              "\t\tattribute vec3 morphNormal3;",
              "\t#else",
              "\t\tattribute vec3 morphTarget4;",
              "\t\tattribute vec3 morphTarget5;",
              "\t\tattribute vec3 morphTarget6;",
              "\t\tattribute vec3 morphTarget7;",
              "\t#endif",
              "#endif",
              "#ifdef USE_SKINNING",
              "\tattribute vec4 skinIndex;",
              "\tattribute vec4 skinWeight;",
              "#endif",
              "\n",
            ]
              .filter(Us)
              .join("\n")),
            (a = [
              m,
              Ys(n),
              "#define SHADER_NAME " + n.shaderName,
              v,
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.matcap ? "#define USE_MATCAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + h : "",
              n.envMap ? "#define " + f : "",
              n.envMap ? "#define " + d : "",
              p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "",
              p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "",
              p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMap && n.objectSpaceNormalMap
                ? "#define OBJECTSPACE_NORMALMAP"
                : "",
              n.normalMap && n.tangentSpaceNormalMap
                ? "#define TANGENTSPACE_NORMALMAP"
                : "",
              n.clearcoat ? "#define USE_CLEARCOAT" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescence ? "#define USE_IRIDESCENCE" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
              n.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.alphaTest ? "#define USE_ALPHATEST" : "",
              n.sheen ? "#define USE_SHEEN" : "",
              n.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
              n.vertexTangents ? "#define USE_TANGENT" : "",
              n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUvs ? "#define USE_UV" : "",
              n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
              n.gradientMap ? "#define USE_GRADIENTMAP" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
              n.physicallyCorrectLights
                ? "#define PHYSICALLY_CORRECT_LIGHTS"
                : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 viewMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              n.toneMapping !== de ? "#define TONE_MAPPING" : "",
              n.toneMapping !== de ? Za.tonemapping_pars_fragment : "",
              n.toneMapping !== de ? zs("toneMapping", n.toneMapping) : "",
              n.dithering ? "#define DITHERING" : "",
              n.opaque ? "#define OPAQUE" : "",
              Za.encodings_pars_fragment,
              Ds("linearToOutputTexel", n.outputEncoding),
              n.useDepthPacking
                ? "#define DEPTH_PACKING " + n.depthPacking
                : "",
              "\n",
            ]
              .filter(Us)
              .join("\n"))),
          (u = Fs((u = Bs((u = Hs(u)), n)), n)),
          (l = Fs((l = Bs((l = Hs(l)), n)), n)),
          (u = qs(u)),
          (l = qs(l)),
          n.isWebGL2 &&
            !0 !== n.isRawShaderMaterial &&
            ((y = "#version 300 es\n"),
            (i =
              [
                "precision mediump sampler2DArray;",
                "#define attribute in",
                "#define varying out",
                "#define texture2D texture",
              ].join("\n") +
              "\n" +
              i),
            (a =
              [
                "#define varying in",
                n.glslVersion === An
                  ? ""
                  : "layout(location = 0) out highp vec4 pc_fragColor;",
                n.glslVersion === An ? "" : "#define gl_FragColor pc_fragColor",
                "#define gl_FragDepthEXT gl_FragDepth",
                "#define texture2D texture",
                "#define textureCube texture",
                "#define texture2DProj textureProj",
                "#define texture2DLodEXT textureLod",
                "#define texture2DProjLodEXT textureProjLod",
                "#define textureCubeLodEXT textureLod",
                "#define texture2DGradEXT textureGrad",
                "#define texture2DProjGradEXT textureProjGrad",
                "#define textureCubeGradEXT textureGrad",
              ].join("\n") +
              "\n" +
              a));
        var b,
          x,
          _ = y + a + l,
          w = js(o, 35633, y + i + u),
          S = js(o, 35632, _);
        if (
          (o.attachShader(g, w),
          o.attachShader(g, S),
          void 0 !== n.index0AttributeName
            ? o.bindAttribLocation(g, 0, n.index0AttributeName)
            : !0 === n.morphTargets && o.bindAttribLocation(g, 0, "position"),
          o.linkProgram(g),
          e.debug.checkShaderErrors)
        ) {
          var M = o.getProgramInfoLog(g).trim(),
            T = o.getShaderInfoLog(w).trim(),
            E = o.getShaderInfoLog(S).trim(),
            O = !0,
            P = !0;
          if (!1 === o.getProgramParameter(g, 35714)) {
            O = !1;
            var R = Ns(o, w, "vertex"),
              L = Ns(o, S, "fragment");
            console.error(
              "THREE.WebGLProgram: Shader Error " +
                o.getError() +
                " - VALIDATE_STATUS " +
                o.getProgramParameter(g, 35715) +
                "\n\nProgram Info Log: " +
                M +
                "\n" +
                R +
                "\n" +
                L
            );
          } else
            "" !== M
              ? console.warn("THREE.WebGLProgram: Program Info Log:", M)
              : ("" !== T && "" !== E) || (P = !1);
          P &&
            (this.diagnostics = {
              runnable: O,
              programLog: M,
              vertexShader: { log: T, prefix: i },
              fragmentShader: { log: E, prefix: a },
            });
        }
        return (
          o.deleteShader(w),
          o.deleteShader(S),
          (this.getUniforms = function () {
            return void 0 === b && (b = new Ls(o, g)), b;
          }),
          (this.getAttributes = function () {
            return (
              void 0 === x &&
                (x = (function (e, t) {
                  for (
                    var n = {}, r = e.getProgramParameter(t, 35721), i = 0;
                    i < r;
                    i++
                  ) {
                    var a = e.getActiveAttrib(t, i),
                      o = a.name,
                      s = 1;
                    35674 === a.type && (s = 2),
                      35675 === a.type && (s = 3),
                      35676 === a.type && (s = 4),
                      (n[o] = {
                        type: a.type,
                        location: e.getAttribLocation(t, o),
                        locationSize: s,
                      });
                  }
                  return n;
                })(o, g)),
              x
            );
          }),
          (this.destroy = function () {
            r.releaseStatesOfProgram(this),
              o.deleteProgram(g),
              (this.program = void 0);
          }),
          (this.name = n.shaderName),
          (this.id = Is++),
          (this.cacheKey = t),
          (this.usedTimes = 1),
          (this.program = g),
          (this.vertexShader = w),
          (this.fragmentShader = S),
          this
        );
      }
      var Zs = 0,
        $s = (function () {
          function e() {
            Object(y.a)(this, e),
              (this.shaderCache = new Map()),
              (this.materialCache = new Map());
          }
          return (
            Object(b.a)(e, [
              {
                key: "update",
                value: function (e) {
                  var t = e.vertexShader,
                    n = e.fragmentShader,
                    r = this._getShaderStage(t),
                    i = this._getShaderStage(n),
                    a = this._getShaderCacheForMaterial(e);
                  return (
                    !1 === a.has(r) && (a.add(r), r.usedTimes++),
                    !1 === a.has(i) && (a.add(i), i.usedTimes++),
                    this
                  );
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t = this.materialCache.get(e),
                    n = !0,
                    r = !1,
                    i = void 0;
                  try {
                    for (
                      var a, o = t[Symbol.iterator]();
                      !(n = (a = o.next()).done);
                      n = !0
                    ) {
                      var s = a.value;
                      s.usedTimes--,
                        0 === s.usedTimes && this.shaderCache.delete(s.code);
                    }
                  } catch (u) {
                    (r = !0), (i = u);
                  } finally {
                    try {
                      n || null == o.return || o.return();
                    } finally {
                      if (r) throw i;
                    }
                  }
                  return this.materialCache.delete(e), this;
                },
              },
              {
                key: "getVertexShaderID",
                value: function (e) {
                  return this._getShaderStage(e.vertexShader).id;
                },
              },
              {
                key: "getFragmentShaderID",
                value: function (e) {
                  return this._getShaderStage(e.fragmentShader).id;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.shaderCache.clear(), this.materialCache.clear();
                },
              },
              {
                key: "_getShaderCacheForMaterial",
                value: function (e) {
                  var t = this.materialCache,
                    n = t.get(e);
                  return void 0 === n && ((n = new Set()), t.set(e, n)), n;
                },
              },
              {
                key: "_getShaderStage",
                value: function (e) {
                  var t = this.shaderCache,
                    n = t.get(e);
                  return void 0 === n && ((n = new Ks(e)), t.set(e, n)), n;
                },
              },
            ]),
            e
          );
        })(),
        Ks = function e(t) {
          Object(y.a)(this, e),
            (this.id = Zs++),
            (this.code = t),
            (this.usedTimes = 0);
        };
      function Qs(e, t, n, r, i, a, o) {
        var s = new hi(),
          u = new $s(),
          l = [],
          c = i.isWebGL2,
          h = i.logarithmicDepthBuffer,
          f = i.vertexTextures,
          d = i.precision,
          p = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite",
          };
        return {
          getParameters: function (a, s, l, m, v) {
            var g = m.fog,
              y = v.geometry,
              b = a.isMeshStandardMaterial ? m.environment : null,
              x = (a.isMeshStandardMaterial ? n : t).get(a.envMap || b),
              _ = x && x.mapping === Me ? x.image.height : null,
              w = p[a.type];
            null !== a.precision &&
              (d = i.getMaxPrecision(a.precision)) !== a.precision &&
              console.warn(
                "THREE.WebGLProgram.getParameters:",
                a.precision,
                "not supported, using",
                d,
                "instead."
              );
            var S,
              M,
              T,
              E,
              O =
                y.morphAttributes.position ||
                y.morphAttributes.normal ||
                y.morphAttributes.color,
              k = void 0 !== O ? O.length : 0,
              A = 0;
            if (
              (void 0 !== y.morphAttributes.position && (A = 1),
              void 0 !== y.morphAttributes.normal && (A = 2),
              void 0 !== y.morphAttributes.color && (A = 3),
              w)
            ) {
              var C = Ka[w];
              (S = C.vertexShader), (M = C.fragmentShader);
            } else
              (S = a.vertexShader),
                (M = a.fragmentShader),
                u.update(a),
                (T = u.getVertexShaderID(a)),
                (E = u.getFragmentShaderID(a));
            var P = e.getRenderTarget(),
              j = a.alphaTest > 0,
              N = a.clearcoat > 0,
              D = a.iridescence > 0;
            return {
              isWebGL2: c,
              shaderID: w,
              shaderName: a.type,
              vertexShader: S,
              fragmentShader: M,
              defines: a.defines,
              customVertexShaderID: T,
              customFragmentShaderID: E,
              isRawShaderMaterial: !0 === a.isRawShaderMaterial,
              glslVersion: a.glslVersion,
              precision: d,
              instancing: !0 === v.isInstancedMesh,
              instancingColor:
                !0 === v.isInstancedMesh && null !== v.instanceColor,
              supportsVertexTextures: f,
              outputEncoding:
                null === P
                  ? e.outputEncoding
                  : !0 === P.isXRRenderTarget
                  ? P.texture.encoding
                  : Xt,
              map: !!a.map,
              matcap: !!a.matcap,
              envMap: !!x,
              envMapMode: x && x.mapping,
              envMapCubeUVHeight: _,
              lightMap: !!a.lightMap,
              aoMap: !!a.aoMap,
              emissiveMap: !!a.emissiveMap,
              bumpMap: !!a.bumpMap,
              normalMap: !!a.normalMap,
              objectSpaceNormalMap: a.normalMapType === Kt,
              tangentSpaceNormalMap: a.normalMapType === $t,
              decodeVideoTexture:
                !!a.map && !0 === a.map.isVideoTexture && a.map.encoding === Yt,
              clearcoat: N,
              clearcoatMap: N && !!a.clearcoatMap,
              clearcoatRoughnessMap: N && !!a.clearcoatRoughnessMap,
              clearcoatNormalMap: N && !!a.clearcoatNormalMap,
              iridescence: D,
              iridescenceMap: D && !!a.iridescenceMap,
              iridescenceThicknessMap: D && !!a.iridescenceThicknessMap,
              displacementMap: !!a.displacementMap,
              roughnessMap: !!a.roughnessMap,
              metalnessMap: !!a.metalnessMap,
              specularMap: !!a.specularMap,
              specularIntensityMap: !!a.specularIntensityMap,
              specularColorMap: !!a.specularColorMap,
              opaque: !1 === a.transparent && a.blending === I,
              alphaMap: !!a.alphaMap,
              alphaTest: j,
              gradientMap: !!a.gradientMap,
              sheen: a.sheen > 0,
              sheenColorMap: !!a.sheenColorMap,
              sheenRoughnessMap: !!a.sheenRoughnessMap,
              transmission: a.transmission > 0,
              transmissionMap: !!a.transmissionMap,
              thicknessMap: !!a.thicknessMap,
              combine: a.combine,
              vertexTangents: !!a.normalMap && !!y.attributes.tangent,
              vertexColors: a.vertexColors,
              vertexAlphas:
                !0 === a.vertexColors &&
                !!y.attributes.color &&
                4 === y.attributes.color.itemSize,
              vertexUvs:
                !!a.map ||
                !!a.bumpMap ||
                !!a.normalMap ||
                !!a.specularMap ||
                !!a.alphaMap ||
                !!a.emissiveMap ||
                !!a.roughnessMap ||
                !!a.metalnessMap ||
                !!a.clearcoatMap ||
                !!a.clearcoatRoughnessMap ||
                !!a.clearcoatNormalMap ||
                !!a.iridescenceMap ||
                !!a.iridescenceThicknessMap ||
                !!a.displacementMap ||
                !!a.transmissionMap ||
                !!a.thicknessMap ||
                !!a.specularIntensityMap ||
                !!a.specularColorMap ||
                !!a.sheenColorMap ||
                !!a.sheenRoughnessMap,
              uvsVertexOnly:
                !(
                  a.map ||
                  a.bumpMap ||
                  a.normalMap ||
                  a.specularMap ||
                  a.alphaMap ||
                  a.emissiveMap ||
                  a.roughnessMap ||
                  a.metalnessMap ||
                  a.clearcoatNormalMap ||
                  a.iridescenceMap ||
                  a.iridescenceThicknessMap ||
                  a.transmission > 0 ||
                  a.transmissionMap ||
                  a.thicknessMap ||
                  a.specularIntensityMap ||
                  a.specularColorMap ||
                  a.sheen > 0 ||
                  a.sheenColorMap ||
                  a.sheenRoughnessMap
                ) && !!a.displacementMap,
              fog: !!g,
              useFog: !0 === a.fog,
              fogExp2: g && g.isFogExp2,
              flatShading: !!a.flatShading,
              sizeAttenuation: a.sizeAttenuation,
              logarithmicDepthBuffer: h,
              skinning: !0 === v.isSkinnedMesh,
              morphTargets: void 0 !== y.morphAttributes.position,
              morphNormals: void 0 !== y.morphAttributes.normal,
              morphColors: void 0 !== y.morphAttributes.color,
              morphTargetsCount: k,
              morphTextureStride: A,
              numDirLights: s.directional.length,
              numPointLights: s.point.length,
              numSpotLights: s.spot.length,
              numSpotLightMaps: s.spotLightMap.length,
              numRectAreaLights: s.rectArea.length,
              numHemiLights: s.hemi.length,
              numDirLightShadows: s.directionalShadowMap.length,
              numPointLightShadows: s.pointShadowMap.length,
              numSpotLightShadows: s.spotShadowMap.length,
              numSpotLightShadowsWithMaps: s.numSpotLightShadowsWithMaps,
              numClippingPlanes: o.numPlanes,
              numClipIntersection: o.numIntersection,
              dithering: a.dithering,
              shadowMapEnabled: e.shadowMap.enabled && l.length > 0,
              shadowMapType: e.shadowMap.type,
              toneMapping: a.toneMapped ? e.toneMapping : de,
              physicallyCorrectLights: e.physicallyCorrectLights,
              premultipliedAlpha: a.premultipliedAlpha,
              doubleSided: a.side === L,
              flipSided: a.side === R,
              useDepthPacking: !!a.depthPacking,
              depthPacking: a.depthPacking || 0,
              index0AttributeName: a.index0AttributeName,
              extensionDerivatives: a.extensions && a.extensions.derivatives,
              extensionFragDepth: a.extensions && a.extensions.fragDepth,
              extensionDrawBuffers: a.extensions && a.extensions.drawBuffers,
              extensionShaderTextureLOD:
                a.extensions && a.extensions.shaderTextureLOD,
              rendererExtensionFragDepth: c || r.has("EXT_frag_depth"),
              rendererExtensionDrawBuffers: c || r.has("WEBGL_draw_buffers"),
              rendererExtensionShaderTextureLod:
                c || r.has("EXT_shader_texture_lod"),
              customProgramCacheKey: a.customProgramCacheKey(),
            };
          },
          getProgramCacheKey: function (t) {
            var n = [];
            if (
              (t.shaderID
                ? n.push(t.shaderID)
                : (n.push(t.customVertexShaderID),
                  n.push(t.customFragmentShaderID)),
              void 0 !== t.defines)
            )
              for (var r in t.defines) n.push(r), n.push(t.defines[r]);
            return (
              !1 === t.isRawShaderMaterial &&
                (!(function (e, t) {
                  e.push(t.precision),
                    e.push(t.outputEncoding),
                    e.push(t.envMapMode),
                    e.push(t.envMapCubeUVHeight),
                    e.push(t.combine),
                    e.push(t.vertexUvs),
                    e.push(t.fogExp2),
                    e.push(t.sizeAttenuation),
                    e.push(t.morphTargetsCount),
                    e.push(t.morphAttributeCount),
                    e.push(t.numDirLights),
                    e.push(t.numPointLights),
                    e.push(t.numSpotLights),
                    e.push(t.numSpotLightMaps),
                    e.push(t.numHemiLights),
                    e.push(t.numRectAreaLights),
                    e.push(t.numDirLightShadows),
                    e.push(t.numPointLightShadows),
                    e.push(t.numSpotLightShadows),
                    e.push(t.numSpotLightShadowsWithMaps),
                    e.push(t.shadowMapType),
                    e.push(t.toneMapping),
                    e.push(t.numClippingPlanes),
                    e.push(t.numClipIntersection),
                    e.push(t.depthPacking);
                })(n, t),
                (function (e, t) {
                  s.disableAll(), t.isWebGL2 && s.enable(0);
                  t.supportsVertexTextures && s.enable(1);
                  t.instancing && s.enable(2);
                  t.instancingColor && s.enable(3);
                  t.map && s.enable(4);
                  t.matcap && s.enable(5);
                  t.envMap && s.enable(6);
                  t.lightMap && s.enable(7);
                  t.aoMap && s.enable(8);
                  t.emissiveMap && s.enable(9);
                  t.bumpMap && s.enable(10);
                  t.normalMap && s.enable(11);
                  t.objectSpaceNormalMap && s.enable(12);
                  t.tangentSpaceNormalMap && s.enable(13);
                  t.clearcoat && s.enable(14);
                  t.clearcoatMap && s.enable(15);
                  t.clearcoatRoughnessMap && s.enable(16);
                  t.clearcoatNormalMap && s.enable(17);
                  t.iridescence && s.enable(18);
                  t.iridescenceMap && s.enable(19);
                  t.iridescenceThicknessMap && s.enable(20);
                  t.displacementMap && s.enable(21);
                  t.specularMap && s.enable(22);
                  t.roughnessMap && s.enable(23);
                  t.metalnessMap && s.enable(24);
                  t.gradientMap && s.enable(25);
                  t.alphaMap && s.enable(26);
                  t.alphaTest && s.enable(27);
                  t.vertexColors && s.enable(28);
                  t.vertexAlphas && s.enable(29);
                  t.vertexUvs && s.enable(30);
                  t.vertexTangents && s.enable(31);
                  t.uvsVertexOnly && s.enable(32);
                  e.push(s.mask), s.disableAll(), t.fog && s.enable(0);
                  t.useFog && s.enable(1);
                  t.flatShading && s.enable(2);
                  t.logarithmicDepthBuffer && s.enable(3);
                  t.skinning && s.enable(4);
                  t.morphTargets && s.enable(5);
                  t.morphNormals && s.enable(6);
                  t.morphColors && s.enable(7);
                  t.premultipliedAlpha && s.enable(8);
                  t.shadowMapEnabled && s.enable(9);
                  t.physicallyCorrectLights && s.enable(10);
                  t.doubleSided && s.enable(11);
                  t.flipSided && s.enable(12);
                  t.useDepthPacking && s.enable(13);
                  t.dithering && s.enable(14);
                  t.specularIntensityMap && s.enable(15);
                  t.specularColorMap && s.enable(16);
                  t.transmission && s.enable(17);
                  t.transmissionMap && s.enable(18);
                  t.thicknessMap && s.enable(19);
                  t.sheen && s.enable(20);
                  t.sheenColorMap && s.enable(21);
                  t.sheenRoughnessMap && s.enable(22);
                  t.decodeVideoTexture && s.enable(23);
                  t.opaque && s.enable(24);
                  e.push(s.mask);
                })(n, t),
                n.push(e.outputEncoding)),
              n.push(t.customProgramCacheKey),
              n.join()
            );
          },
          getUniforms: function (e) {
            var t,
              n = p[e.type];
            if (n) {
              var r = Ka[n];
              t = Aa.clone(r.uniforms);
            } else t = e.uniforms;
            return t;
          },
          acquireProgram: function (t, n) {
            for (var r, i = 0, o = l.length; i < o; i++) {
              var s = l[i];
              if (s.cacheKey === n) {
                ++(r = s).usedTimes;
                break;
              }
            }
            return void 0 === r && ((r = new Js(e, n, t, a)), l.push(r)), r;
          },
          releaseProgram: function (e) {
            if (0 === --e.usedTimes) {
              var t = l.indexOf(e);
              (l[t] = l[l.length - 1]), l.pop(), e.destroy();
            }
          },
          releaseShaderCache: function (e) {
            u.remove(e);
          },
          programs: l,
          dispose: function () {
            u.dispose();
          },
        };
      }
      function eu() {
        var e = new WeakMap();
        return {
          get: function (t) {
            var n = e.get(t);
            return void 0 === n && ((n = {}), e.set(t, n)), n;
          },
          remove: function (t) {
            e.delete(t);
          },
          update: function (t, n, r) {
            e.get(t)[n] = r;
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function tu(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.material.id !== t.material.id
          ? e.material.id - t.material.id
          : e.z !== t.z
          ? e.z - t.z
          : e.id - t.id;
      }
      function nu(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.z !== t.z
          ? t.z - e.z
          : e.id - t.id;
      }
      function ru() {
        var e = [],
          t = 0,
          n = [],
          r = [],
          i = [];
        function a(n, r, i, a, o, s) {
          var u = e[t];
          return (
            void 0 === u
              ? ((u = {
                  id: n.id,
                  object: n,
                  geometry: r,
                  material: i,
                  groupOrder: a,
                  renderOrder: n.renderOrder,
                  z: o,
                  group: s,
                }),
                (e[t] = u))
              : ((u.id = n.id),
                (u.object = n),
                (u.geometry = r),
                (u.material = i),
                (u.groupOrder = a),
                (u.renderOrder = n.renderOrder),
                (u.z = o),
                (u.group = s)),
            t++,
            u
          );
        }
        return {
          opaque: n,
          transmissive: r,
          transparent: i,
          init: function () {
            (t = 0), (n.length = 0), (r.length = 0), (i.length = 0);
          },
          push: function (e, t, o, s, u, l) {
            var c = a(e, t, o, s, u, l);
            o.transmission > 0
              ? r.push(c)
              : !0 === o.transparent
              ? i.push(c)
              : n.push(c);
          },
          unshift: function (e, t, o, s, u, l) {
            var c = a(e, t, o, s, u, l);
            o.transmission > 0
              ? r.unshift(c)
              : !0 === o.transparent
              ? i.unshift(c)
              : n.unshift(c);
          },
          finish: function () {
            for (var n = t, r = e.length; n < r; n++) {
              var i = e[n];
              if (null === i.id) break;
              (i.id = null),
                (i.object = null),
                (i.geometry = null),
                (i.material = null),
                (i.group = null);
            }
          },
          sort: function (e, t) {
            n.length > 1 && n.sort(e || tu),
              r.length > 1 && r.sort(t || nu),
              i.length > 1 && i.sort(t || nu);
          },
        };
      }
      function iu() {
        var e = new WeakMap();
        return {
          get: function (t, n) {
            var r,
              i = e.get(t);
            return (
              void 0 === i
                ? ((r = new ru()), e.set(t, [r]))
                : n >= i.length
                ? ((r = new ru()), i.push(r))
                : (r = i[n]),
              r
            );
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function au() {
        var e = {};
        return {
          get: function (t) {
            if (void 0 !== e[t.id]) return e[t.id];
            var n;
            switch (t.type) {
              case "DirectionalLight":
                n = { direction: new Sr(), color: new lr() };
                break;
              case "SpotLight":
                n = {
                  position: new Sr(),
                  direction: new Sr(),
                  color: new lr(),
                  distance: 0,
                  coneCos: 0,
                  penumbraCos: 0,
                  decay: 0,
                };
                break;
              case "PointLight":
                n = {
                  position: new Sr(),
                  color: new lr(),
                  distance: 0,
                  decay: 0,
                };
                break;
              case "HemisphereLight":
                n = {
                  direction: new Sr(),
                  skyColor: new lr(),
                  groundColor: new lr(),
                };
                break;
              case "RectAreaLight":
                n = {
                  color: new lr(),
                  position: new Sr(),
                  halfWidth: new Sr(),
                  halfHeight: new Sr(),
                };
            }
            return (e[t.id] = n), n;
          },
        };
      }
      var ou = 0;
      function su(e, t) {
        return (
          (t.castShadow ? 2 : 0) -
          (e.castShadow ? 2 : 0) +
          (t.map ? 1 : 0) -
          (e.map ? 1 : 0)
        );
      }
      function uu(e, t) {
        for (
          var n = new au(),
            r = (function () {
              var e = {};
              return {
                get: function (t) {
                  if (void 0 !== e[t.id]) return e[t.id];
                  var n;
                  switch (t.type) {
                    case "DirectionalLight":
                    case "SpotLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new qn(),
                      };
                      break;
                    case "PointLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new qn(),
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3,
                      };
                  }
                  return (e[t.id] = n), n;
                },
              };
            })(),
            i = {
              version: 0,
              hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1,
                numSpotMaps: -1,
              },
              ambient: [0, 0, 0],
              probe: [],
              directional: [],
              directionalShadow: [],
              directionalShadowMap: [],
              directionalShadowMatrix: [],
              spot: [],
              spotLightMap: [],
              spotShadow: [],
              spotShadowMap: [],
              spotLightMatrix: [],
              rectArea: [],
              rectAreaLTC1: null,
              rectAreaLTC2: null,
              point: [],
              pointShadow: [],
              pointShadowMap: [],
              pointShadowMatrix: [],
              hemi: [],
              numSpotLightShadowsWithMaps: 0,
            },
            a = 0;
          a < 9;
          a++
        )
          i.probe.push(new Sr());
        var o = new Sr(),
          s = new ei(),
          u = new ei();
        return {
          setup: function (a, o) {
            for (var s = 0, u = 0, l = 0, c = 0; c < 9; c++)
              i.probe[c].set(0, 0, 0);
            var h = 0,
              f = 0,
              d = 0,
              p = 0,
              m = 0,
              v = 0,
              g = 0,
              y = 0,
              b = 0,
              x = 0;
            a.sort(su);
            for (
              var _ = !0 !== o ? Math.PI : 1, w = 0, S = a.length;
              w < S;
              w++
            ) {
              var M = a[w],
                T = M.color,
                E = M.intensity,
                O = M.distance,
                k = M.shadow && M.shadow.map ? M.shadow.map.texture : null;
              if (M.isAmbientLight)
                (s += T.r * E * _), (u += T.g * E * _), (l += T.b * E * _);
              else if (M.isLightProbe)
                for (var A = 0; A < 9; A++)
                  i.probe[A].addScaledVector(M.sh.coefficients[A], E);
              else if (M.isDirectionalLight) {
                var C = n.get(M);
                if (
                  (C.color.copy(M.color).multiplyScalar(M.intensity * _),
                  M.castShadow)
                ) {
                  var P = M.shadow,
                    R = r.get(M);
                  (R.shadowBias = P.bias),
                    (R.shadowNormalBias = P.normalBias),
                    (R.shadowRadius = P.radius),
                    (R.shadowMapSize = P.mapSize),
                    (i.directionalShadow[h] = R),
                    (i.directionalShadowMap[h] = k),
                    (i.directionalShadowMatrix[h] = M.shadow.matrix),
                    v++;
                }
                (i.directional[h] = C), h++;
              } else if (M.isSpotLight) {
                var L = n.get(M);
                L.position.setFromMatrixPosition(M.matrixWorld),
                  L.color.copy(T).multiplyScalar(E * _),
                  (L.distance = O),
                  (L.coneCos = Math.cos(M.angle)),
                  (L.penumbraCos = Math.cos(M.angle * (1 - M.penumbra))),
                  (L.decay = M.decay),
                  (i.spot[d] = L);
                var j = M.shadow;
                if (
                  (M.map &&
                    ((i.spotLightMap[b] = M.map),
                    b++,
                    j.updateMatrices(M),
                    M.castShadow && x++),
                  (i.spotLightMatrix[d] = j.matrix),
                  M.castShadow)
                ) {
                  var I = r.get(M);
                  (I.shadowBias = j.bias),
                    (I.shadowNormalBias = j.normalBias),
                    (I.shadowRadius = j.radius),
                    (I.shadowMapSize = j.mapSize),
                    (i.spotShadow[d] = I),
                    (i.spotShadowMap[d] = k),
                    y++;
                }
                d++;
              } else if (M.isRectAreaLight) {
                var N = n.get(M);
                N.color.copy(T).multiplyScalar(E),
                  N.halfWidth.set(0.5 * M.width, 0, 0),
                  N.halfHeight.set(0, 0.5 * M.height, 0),
                  (i.rectArea[p] = N),
                  p++;
              } else if (M.isPointLight) {
                var D = n.get(M);
                if (
                  (D.color.copy(M.color).multiplyScalar(M.intensity * _),
                  (D.distance = M.distance),
                  (D.decay = M.decay),
                  M.castShadow)
                ) {
                  var z = M.shadow,
                    U = r.get(M);
                  (U.shadowBias = z.bias),
                    (U.shadowNormalBias = z.normalBias),
                    (U.shadowRadius = z.radius),
                    (U.shadowMapSize = z.mapSize),
                    (U.shadowCameraNear = z.camera.near),
                    (U.shadowCameraFar = z.camera.far),
                    (i.pointShadow[f] = U),
                    (i.pointShadowMap[f] = k),
                    (i.pointShadowMatrix[f] = M.shadow.matrix),
                    g++;
                }
                (i.point[f] = D), f++;
              } else if (M.isHemisphereLight) {
                var B = n.get(M);
                B.skyColor.copy(M.color).multiplyScalar(E * _),
                  B.groundColor.copy(M.groundColor).multiplyScalar(E * _),
                  (i.hemi[m] = B),
                  m++;
              }
            }
            p > 0 &&
              (t.isWebGL2
                ? ((i.rectAreaLTC1 = $a.LTC_FLOAT_1),
                  (i.rectAreaLTC2 = $a.LTC_FLOAT_2))
                : !0 === e.has("OES_texture_float_linear")
                ? ((i.rectAreaLTC1 = $a.LTC_FLOAT_1),
                  (i.rectAreaLTC2 = $a.LTC_FLOAT_2))
                : !0 === e.has("OES_texture_half_float_linear")
                ? ((i.rectAreaLTC1 = $a.LTC_HALF_1),
                  (i.rectAreaLTC2 = $a.LTC_HALF_2))
                : console.error(
                    "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
                  )),
              (i.ambient[0] = s),
              (i.ambient[1] = u),
              (i.ambient[2] = l);
            var F = i.hash;
            (F.directionalLength === h &&
              F.pointLength === f &&
              F.spotLength === d &&
              F.rectAreaLength === p &&
              F.hemiLength === m &&
              F.numDirectionalShadows === v &&
              F.numPointShadows === g &&
              F.numSpotShadows === y &&
              F.numSpotMaps === b) ||
              ((i.directional.length = h),
              (i.spot.length = d),
              (i.rectArea.length = p),
              (i.point.length = f),
              (i.hemi.length = m),
              (i.directionalShadow.length = v),
              (i.directionalShadowMap.length = v),
              (i.pointShadow.length = g),
              (i.pointShadowMap.length = g),
              (i.spotShadow.length = y),
              (i.spotShadowMap.length = y),
              (i.directionalShadowMatrix.length = v),
              (i.pointShadowMatrix.length = g),
              (i.spotLightMatrix.length = y + b - x),
              (i.spotLightMap.length = b),
              (i.numSpotLightShadowsWithMaps = x),
              (F.directionalLength = h),
              (F.pointLength = f),
              (F.spotLength = d),
              (F.rectAreaLength = p),
              (F.hemiLength = m),
              (F.numDirectionalShadows = v),
              (F.numPointShadows = g),
              (F.numSpotShadows = y),
              (F.numSpotMaps = b),
              (i.version = ou++));
          },
          setupView: function (e, t) {
            for (
              var n = 0,
                r = 0,
                a = 0,
                l = 0,
                c = 0,
                h = t.matrixWorldInverse,
                f = 0,
                d = e.length;
              f < d;
              f++
            ) {
              var p = e[f];
              if (p.isDirectionalLight) {
                var m = i.directional[n];
                m.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  m.direction.sub(o),
                  m.direction.transformDirection(h),
                  n++;
              } else if (p.isSpotLight) {
                var v = i.spot[a];
                v.position.setFromMatrixPosition(p.matrixWorld),
                  v.position.applyMatrix4(h),
                  v.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  v.direction.sub(o),
                  v.direction.transformDirection(h),
                  a++;
              } else if (p.isRectAreaLight) {
                var g = i.rectArea[l];
                g.position.setFromMatrixPosition(p.matrixWorld),
                  g.position.applyMatrix4(h),
                  u.identity(),
                  s.copy(p.matrixWorld),
                  s.premultiply(h),
                  u.extractRotation(s),
                  g.halfWidth.set(0.5 * p.width, 0, 0),
                  g.halfHeight.set(0, 0.5 * p.height, 0),
                  g.halfWidth.applyMatrix4(u),
                  g.halfHeight.applyMatrix4(u),
                  l++;
              } else if (p.isPointLight) {
                var y = i.point[r];
                y.position.setFromMatrixPosition(p.matrixWorld),
                  y.position.applyMatrix4(h),
                  r++;
              } else if (p.isHemisphereLight) {
                var b = i.hemi[c];
                b.direction.setFromMatrixPosition(p.matrixWorld),
                  b.direction.transformDirection(h),
                  c++;
              }
            }
          },
          state: i,
        };
      }
      function lu(e, t) {
        var n = new uu(e, t),
          r = [],
          i = [];
        return {
          init: function () {
            (r.length = 0), (i.length = 0);
          },
          state: { lightsArray: r, shadowsArray: i, lights: n },
          setupLights: function (e) {
            n.setup(r, e);
          },
          setupLightsView: function (e) {
            n.setupView(r, e);
          },
          pushLight: function (e) {
            r.push(e);
          },
          pushShadow: function (e) {
            i.push(e);
          },
        };
      }
      function cu(e, t) {
        var n = new WeakMap();
        return {
          get: function (r) {
            var i,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              o = n.get(r);
            return (
              void 0 === o
                ? ((i = new lu(e, t)), n.set(r, [i]))
                : a >= o.length
                ? ((i = new lu(e, t)), o.push(i))
                : (i = o[a]),
              i
            );
          },
          dispose: function () {
            n = new WeakMap();
          },
        };
      }
      var hu = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshDepthMaterial = !0),
              (n.type = "MeshDepthMaterial"),
              (n.depthPacking = Jt),
              (n.map = null),
              (n.alphaMap = null),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.depthPacking = e.depthPacking),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        fu = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshDistanceMaterial = !0),
              (n.type = "MeshDistanceMaterial"),
              (n.referencePosition = new Sr()),
              (n.nearDistance = 1),
              (n.farDistance = 1e3),
              (n.map = null),
              (n.alphaMap = null),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.referencePosition.copy(e.referencePosition),
                    (this.nearDistance = e.nearDistance),
                    (this.farDistance = e.farDistance),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        du = "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
        pu =
          "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";
      function mu(e, t, n) {
        var r = new qa(),
          i = new qn(),
          a = new qn(),
          o = new mr(),
          s = new hu({ depthPacking: Zt }),
          u = new fu(),
          l = {},
          c = n.maxTextureSize,
          h = { 0: R, 1: P, 2: L },
          f = new Ra({
            defines: { VSM_SAMPLES: 8 },
            uniforms: {
              shadow_pass: { value: null },
              resolution: { value: new qn() },
              radius: { value: 4 },
            },
            vertexShader: du,
            fragmentShader: pu,
          }),
          d = f.clone();
        d.defines.HORIZONTAL_PASS = 1;
        var p = new oa();
        p.setAttribute(
          "position",
          new Gi(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
        );
        var m = new Ma(p, f),
          v = this;
        function g(n, r) {
          var a = t.update(m);
          f.defines.VSM_SAMPLES !== n.blurSamples &&
            ((f.defines.VSM_SAMPLES = n.blurSamples),
            (d.defines.VSM_SAMPLES = n.blurSamples),
            (f.needsUpdate = !0),
            (d.needsUpdate = !0)),
            null === n.mapPass && (n.mapPass = new vr(i.x, i.y)),
            (f.uniforms.shadow_pass.value = n.map.texture),
            (f.uniforms.resolution.value = n.mapSize),
            (f.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.mapPass),
            e.clear(),
            e.renderBufferDirect(r, null, a, f, m, null),
            (d.uniforms.shadow_pass.value = n.mapPass.texture),
            (d.uniforms.resolution.value = n.mapSize),
            (d.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.map),
            e.clear(),
            e.renderBufferDirect(r, null, a, d, m, null);
        }
        function y(t, n, r, i, a, o) {
          var c = null,
            f =
              !0 === r.isPointLight
                ? t.customDistanceMaterial
                : t.customDepthMaterial;
          if (
            ((c = void 0 !== f ? f : !0 === r.isPointLight ? u : s),
            (e.localClippingEnabled &&
              !0 === n.clipShadows &&
              Array.isArray(n.clippingPlanes) &&
              0 !== n.clippingPlanes.length) ||
              (n.displacementMap && 0 !== n.displacementScale) ||
              (n.alphaMap && n.alphaTest > 0))
          ) {
            var d = c.uuid,
              p = n.uuid,
              m = l[d];
            void 0 === m && ((m = {}), (l[d] = m));
            var v = m[p];
            void 0 === v && ((v = c.clone()), (m[p] = v)), (c = v);
          }
          return (
            (c.visible = n.visible),
            (c.wireframe = n.wireframe),
            (c.side =
              o === C
                ? null !== n.shadowSide
                  ? n.shadowSide
                  : n.side
                : null !== n.shadowSide
                ? n.shadowSide
                : h[n.side]),
            (c.alphaMap = n.alphaMap),
            (c.alphaTest = n.alphaTest),
            (c.clipShadows = n.clipShadows),
            (c.clippingPlanes = n.clippingPlanes),
            (c.clipIntersection = n.clipIntersection),
            (c.displacementMap = n.displacementMap),
            (c.displacementScale = n.displacementScale),
            (c.displacementBias = n.displacementBias),
            (c.wireframeLinewidth = n.wireframeLinewidth),
            (c.linewidth = n.linewidth),
            !0 === r.isPointLight &&
              !0 === c.isMeshDistanceMaterial &&
              (c.referencePosition.setFromMatrixPosition(r.matrixWorld),
              (c.nearDistance = i),
              (c.farDistance = a)),
            c
          );
        }
        function b(n, i, a, o, s) {
          if (!1 !== n.visible) {
            if (
              n.layers.test(i.layers) &&
              (n.isMesh || n.isLine || n.isPoints) &&
              (n.castShadow || (n.receiveShadow && s === C)) &&
              (!n.frustumCulled || r.intersectsObject(n))
            ) {
              n.modelViewMatrix.multiplyMatrices(
                a.matrixWorldInverse,
                n.matrixWorld
              );
              var u = t.update(n),
                l = n.material;
              if (Array.isArray(l))
                for (var c = u.groups, h = 0, f = c.length; h < f; h++) {
                  var d = c[h],
                    p = l[d.materialIndex];
                  if (p && p.visible) {
                    var m = y(n, p, o, a.near, a.far, s);
                    e.renderBufferDirect(a, null, u, m, n, d);
                  }
                }
              else if (l.visible) {
                var v = y(n, l, o, a.near, a.far, s);
                e.renderBufferDirect(a, null, u, v, n, null);
              }
            }
            for (var g = n.children, x = 0, _ = g.length; x < _; x++)
              b(g[x], i, a, o, s);
          }
        }
        (this.enabled = !1),
          (this.autoUpdate = !0),
          (this.needsUpdate = !1),
          (this.type = k),
          (this.render = function (t, n, s) {
            if (
              !1 !== v.enabled &&
              (!1 !== v.autoUpdate || !1 !== v.needsUpdate) &&
              0 !== t.length
            ) {
              var u = e.getRenderTarget(),
                l = e.getActiveCubeFace(),
                h = e.getActiveMipmapLevel(),
                f = e.state;
              f.setBlending(j),
                f.buffers.color.setClear(1, 1, 1, 1),
                f.buffers.depth.setTest(!0),
                f.setScissorTest(!1);
              for (var d = 0, p = t.length; d < p; d++) {
                var m = t[d],
                  y = m.shadow;
                if (void 0 !== y) {
                  if (!1 !== y.autoUpdate || !1 !== y.needsUpdate) {
                    i.copy(y.mapSize);
                    var x = y.getFrameExtents();
                    if (
                      (i.multiply(x),
                      a.copy(y.mapSize),
                      (i.x > c || i.y > c) &&
                        (i.x > c &&
                          ((a.x = Math.floor(c / x.x)),
                          (i.x = a.x * x.x),
                          (y.mapSize.x = a.x)),
                        i.y > c &&
                          ((a.y = Math.floor(c / x.y)),
                          (i.y = a.y * x.y),
                          (y.mapSize.y = a.y))),
                      null === y.map)
                    ) {
                      var _ =
                        this.type !== C ? { minFilter: ke, magFilter: ke } : {};
                      (y.map = new vr(i.x, i.y, _)),
                        (y.map.texture.name = m.name + ".shadowMap"),
                        y.camera.updateProjectionMatrix();
                    }
                    e.setRenderTarget(y.map), e.clear();
                    for (var w = y.getViewportCount(), S = 0; S < w; S++) {
                      var M = y.getViewport(S);
                      o.set(a.x * M.x, a.y * M.y, a.x * M.z, a.y * M.w),
                        f.viewport(o),
                        y.updateMatrices(m, S),
                        (r = y.getFrustum()),
                        b(n, s, y.camera, m, this.type);
                    }
                    !0 !== y.isPointLightShadow && this.type === C && g(y, s),
                      (y.needsUpdate = !1);
                  }
                } else
                  console.warn("THREE.WebGLShadowMap:", m, "has no shadow.");
              }
              (v.needsUpdate = !1), e.setRenderTarget(u, l, h);
            }
          });
      }
      function vu(e, t, n) {
        var r,
          i,
          a = n.isWebGL2;
        var o = new (function () {
            var t = !1,
              n = new mr(),
              r = null,
              i = new mr(0, 0, 0, 0);
            return {
              setMask: function (n) {
                r === n || t || (e.colorMask(n, n, n, n), (r = n));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t, r, a, o, s) {
                !0 === s && ((t *= o), (r *= o), (a *= o)),
                  n.set(t, r, a, o),
                  !1 === i.equals(n) && (e.clearColor(t, r, a, o), i.copy(n));
              },
              reset: function () {
                (t = !1), (r = null), i.set(-1, 0, 0, 0);
              },
            };
          })(),
          s = new (function () {
            var t = !1,
              n = null,
              r = null,
              i = null;
            return {
              setTest: function (e) {
                e ? Me(2929) : Te(2929);
              },
              setMask: function (r) {
                n === r || t || (e.depthMask(r), (n = r));
              },
              setFunc: function (t) {
                if (r !== t) {
                  switch (t) {
                    case ne:
                      e.depthFunc(512);
                      break;
                    case re:
                      e.depthFunc(519);
                      break;
                    case ie:
                      e.depthFunc(513);
                      break;
                    case ae:
                      e.depthFunc(515);
                      break;
                    case oe:
                      e.depthFunc(514);
                      break;
                    case se:
                      e.depthFunc(518);
                      break;
                    case ue:
                      e.depthFunc(516);
                      break;
                    case le:
                      e.depthFunc(517);
                      break;
                    default:
                      e.depthFunc(515);
                  }
                  r = t;
                }
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                i !== t && (e.clearDepth(t), (i = t));
              },
              reset: function () {
                (t = !1), (n = null), (r = null), (i = null);
              },
            };
          })(),
          u = new (function () {
            var t = !1,
              n = null,
              r = null,
              i = null,
              a = null,
              o = null,
              s = null,
              u = null,
              l = null;
            return {
              setTest: function (e) {
                t || (e ? Me(2960) : Te(2960));
              },
              setMask: function (r) {
                n === r || t || (e.stencilMask(r), (n = r));
              },
              setFunc: function (t, n, o) {
                (r === t && i === n && a === o) ||
                  (e.stencilFunc(t, n, o), (r = t), (i = n), (a = o));
              },
              setOp: function (t, n, r) {
                (o === t && s === n && u === r) ||
                  (e.stencilOp(t, n, r), (o = t), (s = n), (u = r));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                l !== t && (e.clearStencil(t), (l = t));
              },
              reset: function () {
                (t = !1),
                  (n = null),
                  (r = null),
                  (i = null),
                  (a = null),
                  (o = null),
                  (s = null),
                  (u = null),
                  (l = null);
              },
            };
          })(),
          l = new WeakMap(),
          c = new WeakMap(),
          h = {},
          f = {},
          d = new WeakMap(),
          p = [],
          v = null,
          g = !1,
          y = null,
          b = null,
          x = null,
          _ = null,
          w = null,
          E = null,
          O = null,
          k = !1,
          A = null,
          C = null,
          P = null,
          ce = null,
          he = null,
          fe = e.getParameter(35661),
          de = !1,
          pe = 0,
          me = e.getParameter(7938);
        -1 !== me.indexOf("WebGL")
          ? ((pe = parseFloat(/^WebGL (\d)/.exec(me)[1])), (de = pe >= 1))
          : -1 !== me.indexOf("OpenGL ES") &&
            ((pe = parseFloat(/^OpenGL ES (\d)/.exec(me)[1])), (de = pe >= 2));
        var ve = null,
          ge = {},
          ye = e.getParameter(3088),
          be = e.getParameter(2978),
          xe = new mr().fromArray(ye),
          _e = new mr().fromArray(be);
        function we(t, n, r) {
          var i = new Uint8Array(4),
            a = e.createTexture();
          e.bindTexture(t, a),
            e.texParameteri(t, 10241, 9728),
            e.texParameteri(t, 10240, 9728);
          for (var o = 0; o < r; o++)
            e.texImage2D(n + o, 0, 6408, 1, 1, 0, 6408, 5121, i);
          return a;
        }
        var Se = {};
        function Me(t) {
          !0 !== h[t] && (e.enable(t), (h[t] = !0));
        }
        function Te(t) {
          !1 !== h[t] && (e.disable(t), (h[t] = !1));
        }
        (Se[3553] = we(3553, 3553, 1)),
          (Se[34067] = we(34067, 34069, 6)),
          o.setClear(0, 0, 0, 1),
          s.setClear(1),
          u.setClear(0),
          Me(2929),
          s.setFunc(ae),
          Ce(!1),
          Pe(M),
          Me(2884),
          Ae(j);
        var Ee =
          ((r = {}),
          Object(m.a)(r, B, 32774),
          Object(m.a)(r, F, 32778),
          Object(m.a)(r, G, 32779),
          r);
        if (a) (Ee[H] = 32775), (Ee[V] = 32776);
        else {
          var Oe = t.get("EXT_blend_minmax");
          null !== Oe && ((Ee[H] = Oe.MIN_EXT), (Ee[V] = Oe.MAX_EXT));
        }
        var ke =
          ((i = {}),
          Object(m.a)(i, W, 0),
          Object(m.a)(i, q, 1),
          Object(m.a)(i, X, 768),
          Object(m.a)(i, J, 770),
          Object(m.a)(i, te, 776),
          Object(m.a)(i, Q, 774),
          Object(m.a)(i, $, 772),
          Object(m.a)(i, Y, 769),
          Object(m.a)(i, Z, 771),
          Object(m.a)(i, ee, 775),
          Object(m.a)(i, K, 773),
          i);
        function Ae(t, n, r, i, a, o, s, u) {
          if (t !== j) {
            if ((!1 === g && (Me(3042), (g = !0)), t === U))
              (a = a || n),
                (o = o || r),
                (s = s || i),
                (n === b && a === w) ||
                  (e.blendEquationSeparate(Ee[n], Ee[a]), (b = n), (w = a)),
                (r === x && i === _ && o === E && s === O) ||
                  (e.blendFuncSeparate(ke[r], ke[i], ke[o], ke[s]),
                  (x = r),
                  (_ = i),
                  (E = o),
                  (O = s)),
                (y = t),
                (k = null);
            else if (t !== y || u !== k) {
              if (
                ((b === B && w === B) ||
                  (e.blendEquation(32774), (b = B), (w = B)),
                u)
              )
                switch (t) {
                  case I:
                    e.blendFuncSeparate(1, 771, 1, 771);
                    break;
                  case N:
                    e.blendFunc(1, 1);
                    break;
                  case D:
                    e.blendFuncSeparate(0, 769, 0, 1);
                    break;
                  case z:
                    e.blendFuncSeparate(0, 768, 0, 770);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              else
                switch (t) {
                  case I:
                    e.blendFuncSeparate(770, 771, 1, 771);
                    break;
                  case N:
                    e.blendFunc(770, 1);
                    break;
                  case D:
                    e.blendFuncSeparate(0, 769, 0, 1);
                    break;
                  case z:
                    e.blendFunc(0, 768);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              (x = null), (_ = null), (E = null), (O = null), (y = t), (k = u);
            }
          } else !0 === g && (Te(3042), (g = !1));
        }
        function Ce(t) {
          A !== t && (t ? e.frontFace(2304) : e.frontFace(2305), (A = t));
        }
        function Pe(t) {
          t !== S
            ? (Me(2884),
              t !== C &&
                (t === M
                  ? e.cullFace(1029)
                  : t === T
                  ? e.cullFace(1028)
                  : e.cullFace(1032)))
            : Te(2884),
            (C = t);
        }
        function Re(t, n, r) {
          t
            ? (Me(32823),
              (ce === n && he === r) ||
                (e.polygonOffset(n, r), (ce = n), (he = r)))
            : Te(32823);
        }
        return {
          buffers: { color: o, depth: s, stencil: u },
          enable: Me,
          disable: Te,
          bindFramebuffer: function (t, n) {
            return (
              f[t] !== n &&
              (e.bindFramebuffer(t, n),
              (f[t] = n),
              a &&
                (36009 === t && (f[36160] = n), 36160 === t && (f[36009] = n)),
              !0)
            );
          },
          drawBuffers: function (r, i) {
            var a = p,
              o = !1;
            if (r)
              if (
                (void 0 === (a = d.get(i)) && ((a = []), d.set(i, a)),
                r.isWebGLMultipleRenderTargets)
              ) {
                var s = r.texture;
                if (a.length !== s.length || 36064 !== a[0]) {
                  for (var u = 0, l = s.length; u < l; u++) a[u] = 36064 + u;
                  (a.length = s.length), (o = !0);
                }
              } else 36064 !== a[0] && ((a[0] = 36064), (o = !0));
            else 1029 !== a[0] && ((a[0] = 1029), (o = !0));
            o &&
              (n.isWebGL2
                ? e.drawBuffers(a)
                : t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a));
          },
          useProgram: function (t) {
            return v !== t && (e.useProgram(t), (v = t), !0);
          },
          setBlending: Ae,
          setMaterial: function (e, t) {
            e.side === L ? Te(2884) : Me(2884);
            var n = e.side === R;
            t && (n = !n),
              Ce(n),
              e.blending === I && !1 === e.transparent
                ? Ae(j)
                : Ae(
                    e.blending,
                    e.blendEquation,
                    e.blendSrc,
                    e.blendDst,
                    e.blendEquationAlpha,
                    e.blendSrcAlpha,
                    e.blendDstAlpha,
                    e.premultipliedAlpha
                  ),
              s.setFunc(e.depthFunc),
              s.setTest(e.depthTest),
              s.setMask(e.depthWrite),
              o.setMask(e.colorWrite);
            var r = e.stencilWrite;
            u.setTest(r),
              r &&
                (u.setMask(e.stencilWriteMask),
                u.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask),
                u.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)),
              Re(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits),
              !0 === e.alphaToCoverage ? Me(32926) : Te(32926);
          },
          setFlipSided: Ce,
          setCullFace: Pe,
          setLineWidth: function (t) {
            t !== P && (de && e.lineWidth(t), (P = t));
          },
          setPolygonOffset: Re,
          setScissorTest: function (e) {
            e ? Me(3089) : Te(3089);
          },
          activeTexture: function (t) {
            void 0 === t && (t = 33984 + fe - 1),
              ve !== t && (e.activeTexture(t), (ve = t));
          },
          bindTexture: function (t, n, r) {
            void 0 === r && (r = null === ve ? 33984 + fe - 1 : ve);
            var i = ge[r];
            void 0 === i &&
              ((i = { type: void 0, texture: void 0 }), (ge[r] = i)),
              (i.type === t && i.texture === n) ||
                (ve !== r && (e.activeTexture(r), (ve = r)),
                e.bindTexture(t, n || Se[t]),
                (i.type = t),
                (i.texture = n));
          },
          unbindTexture: function () {
            var t = ge[ve];
            void 0 !== t &&
              void 0 !== t.type &&
              (e.bindTexture(t.type, null),
              (t.type = void 0),
              (t.texture = void 0));
          },
          compressedTexImage2D: function () {
            try {
              e.compressedTexImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage2D: function () {
            try {
              e.texImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage3D: function () {
            try {
              e.texImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          updateUBOMapping: function (t, n) {
            var r = c.get(n);
            void 0 === r && ((r = new WeakMap()), c.set(n, r));
            var i = r.get(t);
            void 0 === i &&
              ((i = e.getUniformBlockIndex(n, t.name)), r.set(t, i));
          },
          uniformBlockBinding: function (t, n) {
            var r = c.get(n).get(t);
            l.get(t) !== r &&
              (e.uniformBlockBinding(n, r, t.__bindingPointIndex), l.set(t, r));
          },
          texStorage2D: function () {
            try {
              e.texStorage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texStorage3D: function () {
            try {
              e.texStorage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage2D: function () {
            try {
              e.texSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage3D: function () {
            try {
              e.texSubImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexSubImage2D: function () {
            try {
              e.compressedTexSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          scissor: function (t) {
            !1 === xe.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), xe.copy(t));
          },
          viewport: function (t) {
            !1 === _e.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), _e.copy(t));
          },
          reset: function () {
            e.disable(3042),
              e.disable(2884),
              e.disable(2929),
              e.disable(32823),
              e.disable(3089),
              e.disable(2960),
              e.disable(32926),
              e.blendEquation(32774),
              e.blendFunc(1, 0),
              e.blendFuncSeparate(1, 0, 1, 0),
              e.colorMask(!0, !0, !0, !0),
              e.clearColor(0, 0, 0, 0),
              e.depthMask(!0),
              e.depthFunc(513),
              e.clearDepth(1),
              e.stencilMask(4294967295),
              e.stencilFunc(519, 0, 4294967295),
              e.stencilOp(7680, 7680, 7680),
              e.clearStencil(0),
              e.cullFace(1029),
              e.frontFace(2305),
              e.polygonOffset(0, 0),
              e.activeTexture(33984),
              e.bindFramebuffer(36160, null),
              !0 === a &&
                (e.bindFramebuffer(36009, null),
                e.bindFramebuffer(36008, null)),
              e.useProgram(null),
              e.lineWidth(1),
              e.scissor(0, 0, e.canvas.width, e.canvas.height),
              e.viewport(0, 0, e.canvas.width, e.canvas.height),
              (h = {}),
              (ve = null),
              (ge = {}),
              (f = {}),
              (d = new WeakMap()),
              (p = []),
              (v = null),
              (g = !1),
              (y = null),
              (b = null),
              (x = null),
              (_ = null),
              (w = null),
              (E = null),
              (O = null),
              (k = !1),
              (A = null),
              (C = null),
              (P = null),
              (ce = null),
              (he = null),
              xe.set(0, 0, e.canvas.width, e.canvas.height),
              _e.set(0, 0, e.canvas.width, e.canvas.height),
              o.reset(),
              s.reset(),
              u.reset();
          },
        };
      }
      function gu(e, t, n, r, i, a, o) {
        var s,
          u,
          l,
          c = i.isWebGL2,
          h = i.maxTextures,
          f = i.maxCubemapSize,
          d = i.maxTextureSize,
          p = i.maxSamples,
          v = t.has("WEBGL_multisampled_render_to_texture")
            ? t.get("WEBGL_multisampled_render_to_texture")
            : null,
          g = /OculusBrowser/g.test(navigator.userAgent),
          y = new WeakMap(),
          b = new WeakMap(),
          x = !1;
        try {
          x =
            "undefined" !== typeof OffscreenCanvas &&
            null !== new OffscreenCanvas(1, 1).getContext("2d");
        } catch (W) {}
        function _(e, t) {
          return x ? new OffscreenCanvas(e, t) : $n("canvas");
        }
        function w(e, t, n, r) {
          var i = 1;
          if (
            ((e.width > r || e.height > r) &&
              (i = r / Math.max(e.width, e.height)),
            i < 1 || !0 === t)
          ) {
            if (
              ("undefined" !== typeof HTMLImageElement &&
                e instanceof HTMLImageElement) ||
              ("undefined" !== typeof HTMLCanvasElement &&
                e instanceof HTMLCanvasElement) ||
              ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
            ) {
              var a = t ? Gn : Math.floor,
                o = a(i * e.width),
                s = a(i * e.height);
              void 0 === l && (l = _(o, s));
              var u = n ? _(o, s) : l;
              return (
                (u.width = o),
                (u.height = s),
                u.getContext("2d").drawImage(e, 0, 0, o, s),
                console.warn(
                  "THREE.WebGLRenderer: Texture has been resized from (" +
                    e.width +
                    "x" +
                    e.height +
                    ") to (" +
                    o +
                    "x" +
                    s +
                    ")."
                ),
                u
              );
            }
            return (
              "data" in e &&
                console.warn(
                  "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                    e.width +
                    "x" +
                    e.height +
                    ")."
                ),
              e
            );
          }
          return e;
        }
        function S(e) {
          return Bn(e.width) && Bn(e.height);
        }
        function M(e, t) {
          return (
            e.generateMipmaps && t && e.minFilter !== ke && e.minFilter !== Le
          );
        }
        function T(t) {
          e.generateMipmap(t);
        }
        function E(n, r, i, a) {
          var o =
            arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
          if (!1 === c) return r;
          if (null !== n) {
            if (void 0 !== e[n]) return e[n];
            console.warn(
              "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
                n +
                "'"
            );
          }
          var s = r;
          return (
            6403 === r &&
              (5126 === i && (s = 33326),
              5131 === i && (s = 33325),
              5121 === i && (s = 33321)),
            33319 === r &&
              (5126 === i && (s = 33328),
              5131 === i && (s = 33327),
              5121 === i && (s = 33323)),
            6408 === r &&
              (5126 === i && (s = 34836),
              5131 === i && (s = 34842),
              5121 === i && (s = a === Yt && !1 === o ? 35907 : 32856),
              32819 === i && (s = 32854),
              32820 === i && (s = 32855)),
            (33325 !== s &&
              33326 !== s &&
              33327 !== s &&
              33328 !== s &&
              34842 !== s &&
              34836 !== s) ||
              t.get("EXT_color_buffer_float"),
            s
          );
        }
        function O(e, t, n) {
          return !0 === M(e, n) ||
            (e.isFramebufferTexture && e.minFilter !== ke && e.minFilter !== Le)
            ? Math.log2(Math.max(t.width, t.height)) + 1
            : void 0 !== e.mipmaps && e.mipmaps.length > 0
            ? e.mipmaps.length
            : e.isCompressedTexture && Array.isArray(e.image)
            ? t.mipmaps.length
            : 1;
        }
        function k(e) {
          return e === ke || e === Ae || e === Pe ? 9728 : 9729;
        }
        function A(e) {
          var t = e.target;
          t.removeEventListener("dispose", A),
            (function (e) {
              var t = r.get(e);
              if (void 0 === t.__webglInit) return;
              var n = e.source,
                i = b.get(n);
              if (i) {
                var a = i[t.__cacheKey];
                a.usedTimes--,
                  0 === a.usedTimes && P(e),
                  0 === Object.keys(i).length && b.delete(n);
              }
              r.remove(e);
            })(t),
            t.isVideoTexture && y.delete(t);
        }
        function C(t) {
          var n = t.target;
          n.removeEventListener("dispose", C),
            (function (t) {
              var n = t.texture,
                i = r.get(t),
                a = r.get(n);
              void 0 !== a.__webglTexture &&
                (e.deleteTexture(a.__webglTexture), o.memory.textures--);
              t.depthTexture && t.depthTexture.dispose();
              if (t.isWebGLCubeRenderTarget)
                for (var s = 0; s < 6; s++)
                  e.deleteFramebuffer(i.__webglFramebuffer[s]),
                    i.__webglDepthbuffer &&
                      e.deleteRenderbuffer(i.__webglDepthbuffer[s]);
              else {
                if (
                  (e.deleteFramebuffer(i.__webglFramebuffer),
                  i.__webglDepthbuffer &&
                    e.deleteRenderbuffer(i.__webglDepthbuffer),
                  i.__webglMultisampledFramebuffer &&
                    e.deleteFramebuffer(i.__webglMultisampledFramebuffer),
                  i.__webglColorRenderbuffer)
                )
                  for (var u = 0; u < i.__webglColorRenderbuffer.length; u++)
                    i.__webglColorRenderbuffer[u] &&
                      e.deleteRenderbuffer(i.__webglColorRenderbuffer[u]);
                i.__webglDepthRenderbuffer &&
                  e.deleteRenderbuffer(i.__webglDepthRenderbuffer);
              }
              if (t.isWebGLMultipleRenderTargets)
                for (var l = 0, c = n.length; l < c; l++) {
                  var h = r.get(n[l]);
                  h.__webglTexture &&
                    (e.deleteTexture(h.__webglTexture), o.memory.textures--),
                    r.remove(n[l]);
                }
              r.remove(n), r.remove(t);
            })(n);
        }
        function P(t) {
          var n = r.get(t);
          e.deleteTexture(n.__webglTexture);
          var i = t.source;
          delete b.get(i)[n.__cacheKey], o.memory.textures--;
        }
        var R = 0;
        function L(e, t) {
          var i = r.get(e);
          if (
            (e.isVideoTexture &&
              (function (e) {
                var t = o.render.frame;
                y.get(e) !== t && (y.set(e, t), e.update());
              })(e),
            !1 === e.isRenderTargetTexture &&
              e.version > 0 &&
              i.__version !== e.version)
          ) {
            var a = e.image;
            if (null === a)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but no image data found."
              );
            else {
              if (!1 !== a.complete) return void z(i, e, t);
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
              );
            }
          }
          n.bindTexture(3553, i.__webglTexture, 33984 + t);
        }
        var j =
            ((s = {}),
            Object(m.a)(s, Te, 10497),
            Object(m.a)(s, Ee, 33071),
            Object(m.a)(s, Oe, 33648),
            s),
          I =
            ((u = {}),
            Object(m.a)(u, ke, 9728),
            Object(m.a)(u, Ae, 9984),
            Object(m.a)(u, Pe, 9986),
            Object(m.a)(u, Le, 9729),
            Object(m.a)(u, je, 9985),
            Object(m.a)(u, Ne, 9987),
            u);
        function N(n, a, o) {
          if (
            (o
              ? (e.texParameteri(n, 10242, j[a.wrapS]),
                e.texParameteri(n, 10243, j[a.wrapT]),
                (32879 !== n && 35866 !== n) ||
                  e.texParameteri(n, 32882, j[a.wrapR]),
                e.texParameteri(n, 10240, I[a.magFilter]),
                e.texParameteri(n, 10241, I[a.minFilter]))
              : (e.texParameteri(n, 10242, 33071),
                e.texParameteri(n, 10243, 33071),
                (32879 !== n && 35866 !== n) ||
                  e.texParameteri(n, 32882, 33071),
                (a.wrapS === Ee && a.wrapT === Ee) ||
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
                  ),
                e.texParameteri(n, 10240, k(a.magFilter)),
                e.texParameteri(n, 10241, k(a.minFilter)),
                a.minFilter !== ke &&
                  a.minFilter !== Le &&
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
                  )),
            !0 === t.has("EXT_texture_filter_anisotropic"))
          ) {
            var s = t.get("EXT_texture_filter_anisotropic");
            if (a.type === Ve && !1 === t.has("OES_texture_float_linear"))
              return;
            if (
              !1 === c &&
              a.type === We &&
              !1 === t.has("OES_texture_half_float_linear")
            )
              return;
            (a.anisotropy > 1 || r.get(a).__currentAnisotropy) &&
              (e.texParameterf(
                n,
                s.TEXTURE_MAX_ANISOTROPY_EXT,
                Math.min(a.anisotropy, i.getMaxAnisotropy())
              ),
              (r.get(a).__currentAnisotropy = a.anisotropy));
          }
        }
        function D(t, n) {
          var r = !1;
          void 0 === t.__webglInit &&
            ((t.__webglInit = !0), n.addEventListener("dispose", A));
          var i = n.source,
            a = b.get(i);
          void 0 === a && ((a = {}), b.set(i, a));
          var s = (function (e) {
            var t = [];
            return (
              t.push(e.wrapS),
              t.push(e.wrapT),
              t.push(e.magFilter),
              t.push(e.minFilter),
              t.push(e.anisotropy),
              t.push(e.internalFormat),
              t.push(e.format),
              t.push(e.type),
              t.push(e.generateMipmaps),
              t.push(e.premultiplyAlpha),
              t.push(e.flipY),
              t.push(e.unpackAlignment),
              t.push(e.encoding),
              t.join()
            );
          })(n);
          if (s !== t.__cacheKey) {
            void 0 === a[s] &&
              ((a[s] = { texture: e.createTexture(), usedTimes: 0 }),
              o.memory.textures++,
              (r = !0)),
              a[s].usedTimes++;
            var u = a[t.__cacheKey];
            void 0 !== u &&
              (a[t.__cacheKey].usedTimes--, 0 === u.usedTimes && P(n)),
              (t.__cacheKey = s),
              (t.__webglTexture = a[s].texture);
          }
          return r;
        }
        function z(t, i, o) {
          var s = 3553;
          i.isDataArrayTexture && (s = 35866), i.isData3DTexture && (s = 32879);
          var u = D(t, i),
            l = i.source;
          n.bindTexture(s, t.__webglTexture, 33984 + o);
          var h = r.get(l);
          if (l.version !== h.__version || !0 === u) {
            n.activeTexture(33984 + o),
              e.pixelStorei(37440, i.flipY),
              e.pixelStorei(37441, i.premultiplyAlpha),
              e.pixelStorei(3317, i.unpackAlignment),
              e.pixelStorei(37443, 0);
            var f,
              p =
                (function (e) {
                  return (
                    !c &&
                    (e.wrapS !== Ee ||
                      e.wrapT !== Ee ||
                      (e.minFilter !== ke && e.minFilter !== Le))
                  );
                })(i) && !1 === S(i.image),
              m = w(i.image, p, !1, d),
              v = S((m = V(i, m))) || c,
              g = a.convert(i.format, i.encoding),
              y = a.convert(i.type),
              b = E(i.internalFormat, g, y, i.encoding, i.isVideoTexture);
            N(s, i, v);
            var x = i.mipmaps,
              _ = c && !0 !== i.isVideoTexture,
              k = void 0 === h.__version || !0 === u,
              A = O(i, m, v);
            if (i.isDepthTexture)
              (b = 6402),
                c
                  ? (b =
                      i.type === Ve
                        ? 36012
                        : i.type === He
                        ? 33190
                        : i.type === Ye
                        ? 35056
                        : 33189)
                  : i.type === Ve &&
                    console.error(
                      "WebGLRenderer: Floating point depth texture requires WebGL2."
                    ),
                i.format === et &&
                  6402 === b &&
                  i.type !== Fe &&
                  i.type !== He &&
                  (console.warn(
                    "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
                  ),
                  (i.type = He),
                  (y = a.convert(i.type))),
                i.format === tt &&
                  6402 === b &&
                  ((b = 34041),
                  i.type !== Ye &&
                    (console.warn(
                      "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                    ),
                    (i.type = Ye),
                    (y = a.convert(i.type)))),
                k &&
                  (_
                    ? n.texStorage2D(3553, 1, b, m.width, m.height)
                    : n.texImage2D(
                        3553,
                        0,
                        b,
                        m.width,
                        m.height,
                        0,
                        g,
                        y,
                        null
                      ));
            else if (i.isDataTexture)
              if (x.length > 0 && v) {
                _ && k && n.texStorage2D(3553, A, b, x[0].width, x[0].height);
                for (var C = 0, P = x.length; C < P; C++)
                  (f = x[C]),
                    _
                      ? n.texSubImage2D(
                          3553,
                          C,
                          0,
                          0,
                          f.width,
                          f.height,
                          g,
                          y,
                          f.data
                        )
                      : n.texImage2D(
                          3553,
                          C,
                          b,
                          f.width,
                          f.height,
                          0,
                          g,
                          y,
                          f.data
                        );
                i.generateMipmaps = !1;
              } else
                _
                  ? (k && n.texStorage2D(3553, A, b, m.width, m.height),
                    n.texSubImage2D(
                      3553,
                      0,
                      0,
                      0,
                      m.width,
                      m.height,
                      g,
                      y,
                      m.data
                    ))
                  : n.texImage2D(
                      3553,
                      0,
                      b,
                      m.width,
                      m.height,
                      0,
                      g,
                      y,
                      m.data
                    );
            else if (i.isCompressedTexture) {
              _ && k && n.texStorage2D(3553, A, b, x[0].width, x[0].height);
              for (var R = 0, L = x.length; R < L; R++)
                (f = x[R]),
                  i.format !== $e
                    ? null !== g
                      ? _
                        ? n.compressedTexSubImage2D(
                            3553,
                            R,
                            0,
                            0,
                            f.width,
                            f.height,
                            g,
                            f.data
                          )
                        : n.compressedTexImage2D(
                            3553,
                            R,
                            b,
                            f.width,
                            f.height,
                            0,
                            f.data
                          )
                      : console.warn(
                          "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                        )
                    : _
                    ? n.texSubImage2D(
                        3553,
                        R,
                        0,
                        0,
                        f.width,
                        f.height,
                        g,
                        y,
                        f.data
                      )
                    : n.texImage2D(
                        3553,
                        R,
                        b,
                        f.width,
                        f.height,
                        0,
                        g,
                        y,
                        f.data
                      );
            } else if (i.isDataArrayTexture)
              _
                ? (k && n.texStorage3D(35866, A, b, m.width, m.height, m.depth),
                  n.texSubImage3D(
                    35866,
                    0,
                    0,
                    0,
                    0,
                    m.width,
                    m.height,
                    m.depth,
                    g,
                    y,
                    m.data
                  ))
                : n.texImage3D(
                    35866,
                    0,
                    b,
                    m.width,
                    m.height,
                    m.depth,
                    0,
                    g,
                    y,
                    m.data
                  );
            else if (i.isData3DTexture)
              _
                ? (k && n.texStorage3D(32879, A, b, m.width, m.height, m.depth),
                  n.texSubImage3D(
                    32879,
                    0,
                    0,
                    0,
                    0,
                    m.width,
                    m.height,
                    m.depth,
                    g,
                    y,
                    m.data
                  ))
                : n.texImage3D(
                    32879,
                    0,
                    b,
                    m.width,
                    m.height,
                    m.depth,
                    0,
                    g,
                    y,
                    m.data
                  );
            else if (i.isFramebufferTexture) {
              if (k)
                if (_) n.texStorage2D(3553, A, b, m.width, m.height);
                else
                  for (var j = m.width, I = m.height, z = 0; z < A; z++)
                    n.texImage2D(3553, z, b, j, I, 0, g, y, null),
                      (j >>= 1),
                      (I >>= 1);
            } else if (x.length > 0 && v) {
              _ && k && n.texStorage2D(3553, A, b, x[0].width, x[0].height);
              for (var U = 0, B = x.length; U < B; U++)
                (f = x[U]),
                  _
                    ? n.texSubImage2D(3553, U, 0, 0, g, y, f)
                    : n.texImage2D(3553, U, b, g, y, f);
              i.generateMipmaps = !1;
            } else
              _
                ? (k && n.texStorage2D(3553, A, b, m.width, m.height),
                  n.texSubImage2D(3553, 0, 0, 0, g, y, m))
                : n.texImage2D(3553, 0, b, g, y, m);
            M(i, v) && T(s),
              (h.__version = l.version),
              i.onUpdate && i.onUpdate(i);
          }
          t.__version = i.version;
        }
        function U(t, i, o, s, u) {
          var l = a.convert(o.format, o.encoding),
            c = a.convert(o.type),
            h = E(o.internalFormat, l, c, o.encoding);
          r.get(i).__hasExternalTextures ||
            (32879 === u || 35866 === u
              ? n.texImage3D(u, 0, h, i.width, i.height, i.depth, 0, l, c, null)
              : n.texImage2D(u, 0, h, i.width, i.height, 0, l, c, null)),
            n.bindFramebuffer(36160, t),
            H(i)
              ? v.framebufferTexture2DMultisampleEXT(
                  36160,
                  s,
                  u,
                  r.get(o).__webglTexture,
                  0,
                  G(i)
                )
              : e.framebufferTexture2D(36160, s, u, r.get(o).__webglTexture, 0),
            n.bindFramebuffer(36160, null);
        }
        function B(t, n, r) {
          if (
            (e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer)
          ) {
            var i = 33189;
            if (r || H(n)) {
              var o = n.depthTexture;
              o &&
                o.isDepthTexture &&
                (o.type === Ve ? (i = 36012) : o.type === He && (i = 33190));
              var s = G(n);
              H(n)
                ? v.renderbufferStorageMultisampleEXT(
                    36161,
                    s,
                    i,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorageMultisample(
                    36161,
                    s,
                    i,
                    n.width,
                    n.height
                  );
            } else e.renderbufferStorage(36161, i, n.width, n.height);
            e.framebufferRenderbuffer(36160, 36096, 36161, t);
          } else if (n.depthBuffer && n.stencilBuffer) {
            var u = G(n);
            r && !1 === H(n)
              ? e.renderbufferStorageMultisample(
                  36161,
                  u,
                  35056,
                  n.width,
                  n.height
                )
              : H(n)
              ? v.renderbufferStorageMultisampleEXT(
                  36161,
                  u,
                  35056,
                  n.width,
                  n.height
                )
              : e.renderbufferStorage(36161, 34041, n.width, n.height),
              e.framebufferRenderbuffer(36160, 33306, 36161, t);
          } else
            for (
              var l =
                  !0 === n.isWebGLMultipleRenderTargets
                    ? n.texture
                    : [n.texture],
                c = 0;
              c < l.length;
              c++
            ) {
              var h = l[c],
                f = a.convert(h.format, h.encoding),
                d = a.convert(h.type),
                p = E(h.internalFormat, f, d, h.encoding),
                m = G(n);
              r && !1 === H(n)
                ? e.renderbufferStorageMultisample(
                    36161,
                    m,
                    p,
                    n.width,
                    n.height
                  )
                : H(n)
                ? v.renderbufferStorageMultisampleEXT(
                    36161,
                    m,
                    p,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorage(36161, p, n.width, n.height);
            }
          e.bindRenderbuffer(36161, null);
        }
        function F(t) {
          var i = r.get(t),
            a = !0 === t.isWebGLCubeRenderTarget;
          if (t.depthTexture && !i.__autoAllocateDepthBuffer) {
            if (a)
              throw new Error(
                "target.depthTexture not supported in Cube render targets"
              );
            !(function (t, i) {
              if (i && i.isWebGLCubeRenderTarget)
                throw new Error(
                  "Depth Texture with cube render targets is not supported"
                );
              if (
                (n.bindFramebuffer(36160, t),
                !i.depthTexture || !i.depthTexture.isDepthTexture)
              )
                throw new Error(
                  "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
                );
              (r.get(i.depthTexture).__webglTexture &&
                i.depthTexture.image.width === i.width &&
                i.depthTexture.image.height === i.height) ||
                ((i.depthTexture.image.width = i.width),
                (i.depthTexture.image.height = i.height),
                (i.depthTexture.needsUpdate = !0)),
                L(i.depthTexture, 0);
              var a = r.get(i.depthTexture).__webglTexture,
                o = G(i);
              if (i.depthTexture.format === et)
                H(i)
                  ? v.framebufferTexture2DMultisampleEXT(
                      36160,
                      36096,
                      3553,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(36160, 36096, 3553, a, 0);
              else {
                if (i.depthTexture.format !== tt)
                  throw new Error("Unknown depthTexture format");
                H(i)
                  ? v.framebufferTexture2DMultisampleEXT(
                      36160,
                      33306,
                      3553,
                      a,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(36160, 33306, 3553, a, 0);
              }
            })(i.__webglFramebuffer, t);
          } else if (a) {
            i.__webglDepthbuffer = [];
            for (var o = 0; o < 6; o++)
              n.bindFramebuffer(36160, i.__webglFramebuffer[o]),
                (i.__webglDepthbuffer[o] = e.createRenderbuffer()),
                B(i.__webglDepthbuffer[o], t, !1);
          } else
            n.bindFramebuffer(36160, i.__webglFramebuffer),
              (i.__webglDepthbuffer = e.createRenderbuffer()),
              B(i.__webglDepthbuffer, t, !1);
          n.bindFramebuffer(36160, null);
        }
        function G(e) {
          return Math.min(p, e.samples);
        }
        function H(e) {
          var n = r.get(e);
          return (
            c &&
            e.samples > 0 &&
            !0 === t.has("WEBGL_multisampled_render_to_texture") &&
            !1 !== n.__useRenderToTexture
          );
        }
        function V(e, n) {
          var r = e.encoding,
            i = e.format,
            a = e.type;
          return !0 === e.isCompressedTexture ||
            !0 === e.isVideoTexture ||
            e.format === Cn
            ? n
            : (r !== Xt &&
                (r === Yt
                  ? !1 === c
                    ? !0 === t.has("EXT_sRGB") && i === $e
                      ? ((e.format = Cn),
                        (e.minFilter = Le),
                        (e.generateMipmaps = !1))
                      : (n = cr.sRGBToLinear(n))
                    : (i === $e && a === ze) ||
                      console.warn(
                        "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                      )
                  : console.error(
                      "THREE.WebGLTextures: Unsupported texture encoding:",
                      r
                    )),
              n);
        }
        (this.allocateTextureUnit = function () {
          var e = R;
          return (
            e >= h &&
              console.warn(
                "THREE.WebGLTextures: Trying to use " +
                  e +
                  " texture units while this GPU supports only " +
                  h
              ),
            (R += 1),
            e
          );
        }),
          (this.resetTextureUnits = function () {
            R = 0;
          }),
          (this.setTexture2D = L),
          (this.setTexture2DArray = function (e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version
              ? z(i, e, t)
              : n.bindTexture(35866, i.__webglTexture, 33984 + t);
          }),
          (this.setTexture3D = function (e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version
              ? z(i, e, t)
              : n.bindTexture(32879, i.__webglTexture, 33984 + t);
          }),
          (this.setTextureCube = function (t, i) {
            var o = r.get(t);
            t.version > 0 && o.__version !== t.version
              ? (function (t, i, o) {
                  if (6 !== i.image.length) return;
                  var s = D(t, i),
                    u = i.source;
                  n.bindTexture(34067, t.__webglTexture, 33984 + o);
                  var l = r.get(u);
                  if (u.version !== l.__version || !0 === s) {
                    n.activeTexture(33984 + o),
                      e.pixelStorei(37440, i.flipY),
                      e.pixelStorei(37441, i.premultiplyAlpha),
                      e.pixelStorei(3317, i.unpackAlignment),
                      e.pixelStorei(37443, 0);
                    for (
                      var h =
                          i.isCompressedTexture ||
                          i.image[0].isCompressedTexture,
                        d = i.image[0] && i.image[0].isDataTexture,
                        p = [],
                        m = 0;
                      m < 6;
                      m++
                    )
                      (p[m] =
                        h || d
                          ? d
                            ? i.image[m].image
                            : i.image[m]
                          : w(i.image[m], !1, !0, f)),
                        (p[m] = V(i, p[m]));
                    var v,
                      g = p[0],
                      y = S(g) || c,
                      b = a.convert(i.format, i.encoding),
                      x = a.convert(i.type),
                      _ = E(i.internalFormat, b, x, i.encoding),
                      k = c && !0 !== i.isVideoTexture,
                      A = void 0 === l.__version || !0 === s,
                      C = O(i, g, y);
                    if ((N(34067, i, y), h)) {
                      k && A && n.texStorage2D(34067, C, _, g.width, g.height);
                      for (var P = 0; P < 6; P++) {
                        v = p[P].mipmaps;
                        for (var R = 0; R < v.length; R++) {
                          var L = v[R];
                          i.format !== $e
                            ? null !== b
                              ? k
                                ? n.compressedTexSubImage2D(
                                    34069 + P,
                                    R,
                                    0,
                                    0,
                                    L.width,
                                    L.height,
                                    b,
                                    L.data
                                  )
                                : n.compressedTexImage2D(
                                    34069 + P,
                                    R,
                                    _,
                                    L.width,
                                    L.height,
                                    0,
                                    L.data
                                  )
                              : console.warn(
                                  "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                                )
                            : k
                            ? n.texSubImage2D(
                                34069 + P,
                                R,
                                0,
                                0,
                                L.width,
                                L.height,
                                b,
                                x,
                                L.data
                              )
                            : n.texImage2D(
                                34069 + P,
                                R,
                                _,
                                L.width,
                                L.height,
                                0,
                                b,
                                x,
                                L.data
                              );
                        }
                      }
                    } else {
                      (v = i.mipmaps),
                        k &&
                          A &&
                          (v.length > 0 && C++,
                          n.texStorage2D(34067, C, _, p[0].width, p[0].height));
                      for (var j = 0; j < 6; j++)
                        if (d) {
                          k
                            ? n.texSubImage2D(
                                34069 + j,
                                0,
                                0,
                                0,
                                p[j].width,
                                p[j].height,
                                b,
                                x,
                                p[j].data
                              )
                            : n.texImage2D(
                                34069 + j,
                                0,
                                _,
                                p[j].width,
                                p[j].height,
                                0,
                                b,
                                x,
                                p[j].data
                              );
                          for (var I = 0; I < v.length; I++) {
                            var z = v[I].image[j].image;
                            k
                              ? n.texSubImage2D(
                                  34069 + j,
                                  I + 1,
                                  0,
                                  0,
                                  z.width,
                                  z.height,
                                  b,
                                  x,
                                  z.data
                                )
                              : n.texImage2D(
                                  34069 + j,
                                  I + 1,
                                  _,
                                  z.width,
                                  z.height,
                                  0,
                                  b,
                                  x,
                                  z.data
                                );
                          }
                        } else {
                          k
                            ? n.texSubImage2D(34069 + j, 0, 0, 0, b, x, p[j])
                            : n.texImage2D(34069 + j, 0, _, b, x, p[j]);
                          for (var U = 0; U < v.length; U++) {
                            var B = v[U];
                            k
                              ? n.texSubImage2D(
                                  34069 + j,
                                  U + 1,
                                  0,
                                  0,
                                  b,
                                  x,
                                  B.image[j]
                                )
                              : n.texImage2D(
                                  34069 + j,
                                  U + 1,
                                  _,
                                  b,
                                  x,
                                  B.image[j]
                                );
                          }
                        }
                    }
                    M(i, y) && T(34067),
                      (l.__version = u.version),
                      i.onUpdate && i.onUpdate(i);
                  }
                  t.__version = i.version;
                })(o, t, i)
              : n.bindTexture(34067, o.__webglTexture, 33984 + i);
          }),
          (this.rebindTextures = function (e, t, n) {
            var i = r.get(e);
            void 0 !== t && U(i.__webglFramebuffer, e, e.texture, 36064, 3553),
              void 0 !== n && F(e);
          }),
          (this.setupRenderTarget = function (t) {
            var s = t.texture,
              u = r.get(t),
              l = r.get(s);
            t.addEventListener("dispose", C),
              !0 !== t.isWebGLMultipleRenderTargets &&
                (void 0 === l.__webglTexture &&
                  (l.__webglTexture = e.createTexture()),
                (l.__version = s.version),
                o.memory.textures++);
            var h = !0 === t.isWebGLCubeRenderTarget,
              f = !0 === t.isWebGLMultipleRenderTargets,
              d = S(t) || c;
            if (h) {
              u.__webglFramebuffer = [];
              for (var p = 0; p < 6; p++)
                u.__webglFramebuffer[p] = e.createFramebuffer();
            } else {
              if (((u.__webglFramebuffer = e.createFramebuffer()), f))
                if (i.drawBuffers)
                  for (var m = t.texture, v = 0, g = m.length; v < g; v++) {
                    var y = r.get(m[v]);
                    void 0 === y.__webglTexture &&
                      ((y.__webglTexture = e.createTexture()),
                      o.memory.textures++);
                  }
                else
                  console.warn(
                    "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
                  );
              if (c && t.samples > 0 && !1 === H(t)) {
                var b = f ? s : [s];
                (u.__webglMultisampledFramebuffer = e.createFramebuffer()),
                  (u.__webglColorRenderbuffer = []),
                  n.bindFramebuffer(36160, u.__webglMultisampledFramebuffer);
                for (var x = 0; x < b.length; x++) {
                  var _ = b[x];
                  (u.__webglColorRenderbuffer[x] = e.createRenderbuffer()),
                    e.bindRenderbuffer(36161, u.__webglColorRenderbuffer[x]);
                  var w = a.convert(_.format, _.encoding),
                    O = a.convert(_.type),
                    k = E(
                      _.internalFormat,
                      w,
                      O,
                      _.encoding,
                      !0 === t.isXRRenderTarget
                    ),
                    A = G(t);
                  e.renderbufferStorageMultisample(
                    36161,
                    A,
                    k,
                    t.width,
                    t.height
                  ),
                    e.framebufferRenderbuffer(
                      36160,
                      36064 + x,
                      36161,
                      u.__webglColorRenderbuffer[x]
                    );
                }
                e.bindRenderbuffer(36161, null),
                  t.depthBuffer &&
                    ((u.__webglDepthRenderbuffer = e.createRenderbuffer()),
                    B(u.__webglDepthRenderbuffer, t, !0)),
                  n.bindFramebuffer(36160, null);
              }
            }
            if (h) {
              n.bindTexture(34067, l.__webglTexture), N(34067, s, d);
              for (var P = 0; P < 6; P++)
                U(u.__webglFramebuffer[P], t, s, 36064, 34069 + P);
              M(s, d) && T(34067), n.unbindTexture();
            } else if (f) {
              for (var R = t.texture, L = 0, j = R.length; L < j; L++) {
                var I = R[L],
                  D = r.get(I);
                n.bindTexture(3553, D.__webglTexture),
                  N(3553, I, d),
                  U(u.__webglFramebuffer, t, I, 36064 + L, 3553),
                  M(I, d) && T(3553);
              }
              n.unbindTexture();
            } else {
              var z = 3553;
              (t.isWebGL3DRenderTarget || t.isWebGLArrayRenderTarget) &&
                (c
                  ? (z = t.isWebGL3DRenderTarget ? 32879 : 35866)
                  : console.error(
                      "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
                    )),
                n.bindTexture(z, l.__webglTexture),
                N(z, s, d),
                U(u.__webglFramebuffer, t, s, 36064, z),
                M(s, d) && T(z),
                n.unbindTexture();
            }
            t.depthBuffer && F(t);
          }),
          (this.updateRenderTargetMipmap = function (e) {
            for (
              var t = S(e) || c,
                i =
                  !0 === e.isWebGLMultipleRenderTargets
                    ? e.texture
                    : [e.texture],
                a = 0,
                o = i.length;
              a < o;
              a++
            ) {
              var s = i[a];
              if (M(s, t)) {
                var u = e.isWebGLCubeRenderTarget ? 34067 : 3553,
                  l = r.get(s).__webglTexture;
                n.bindTexture(u, l), T(u), n.unbindTexture();
              }
            }
          }),
          (this.updateMultisampleRenderTarget = function (t) {
            if (c && t.samples > 0 && !1 === H(t)) {
              var i = t.isWebGLMultipleRenderTargets ? t.texture : [t.texture],
                a = t.width,
                o = t.height,
                s = 16384,
                u = [],
                l = t.stencilBuffer ? 33306 : 36096,
                h = r.get(t),
                f = !0 === t.isWebGLMultipleRenderTargets;
              if (f)
                for (var d = 0; d < i.length; d++)
                  n.bindFramebuffer(36160, h.__webglMultisampledFramebuffer),
                    e.framebufferRenderbuffer(36160, 36064 + d, 36161, null),
                    n.bindFramebuffer(36160, h.__webglFramebuffer),
                    e.framebufferTexture2D(36009, 36064 + d, 3553, null, 0);
              n.bindFramebuffer(36008, h.__webglMultisampledFramebuffer),
                n.bindFramebuffer(36009, h.__webglFramebuffer);
              for (var p = 0; p < i.length; p++) {
                u.push(36064 + p), t.depthBuffer && u.push(l);
                var m =
                  void 0 !== h.__ignoreDepthValues && h.__ignoreDepthValues;
                if (
                  (!1 === m &&
                    (t.depthBuffer && (s |= 256),
                    t.stencilBuffer && (s |= 1024)),
                  f &&
                    e.framebufferRenderbuffer(
                      36008,
                      36064,
                      36161,
                      h.__webglColorRenderbuffer[p]
                    ),
                  !0 === m &&
                    (e.invalidateFramebuffer(36008, [l]),
                    e.invalidateFramebuffer(36009, [l])),
                  f)
                ) {
                  var v = r.get(i[p]).__webglTexture;
                  e.framebufferTexture2D(36009, 36064, 3553, v, 0);
                }
                e.blitFramebuffer(0, 0, a, o, 0, 0, a, o, s, 9728),
                  g && e.invalidateFramebuffer(36008, u);
              }
              if (
                (n.bindFramebuffer(36008, null),
                n.bindFramebuffer(36009, null),
                f)
              )
                for (var y = 0; y < i.length; y++) {
                  n.bindFramebuffer(36160, h.__webglMultisampledFramebuffer),
                    e.framebufferRenderbuffer(
                      36160,
                      36064 + y,
                      36161,
                      h.__webglColorRenderbuffer[y]
                    );
                  var b = r.get(i[y]).__webglTexture;
                  n.bindFramebuffer(36160, h.__webglFramebuffer),
                    e.framebufferTexture2D(36009, 36064 + y, 3553, b, 0);
                }
              n.bindFramebuffer(36009, h.__webglMultisampledFramebuffer);
            }
          }),
          (this.setupDepthRenderbuffer = F),
          (this.setupFrameBufferTexture = U),
          (this.useMultisampledRTT = H);
      }
      function yu(e, t, n) {
        var r = n.isWebGL2;
        return {
          convert: function (n) {
            var i,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null;
            if (n === ze) return 5121;
            if (n === qe) return 32819;
            if (n === Xe) return 32820;
            if (n === Ue) return 5120;
            if (n === Be) return 5122;
            if (n === Fe) return 5123;
            if (n === Ge) return 5124;
            if (n === He) return 5125;
            if (n === Ve) return 5126;
            if (n === We)
              return r
                ? 5131
                : null !== (i = t.get("OES_texture_half_float"))
                ? i.HALF_FLOAT_OES
                : null;
            if (n === Je) return 6406;
            if (n === $e) return 6408;
            if (n === Ke) return 6409;
            if (n === Qe) return 6410;
            if (n === et) return 6402;
            if (n === tt) return 34041;
            if (n === nt) return 6403;
            if (n === Ze)
              return (
                console.warn(
                  "THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"
                ),
                6408
              );
            if (n === Cn)
              return null !== (i = t.get("EXT_sRGB")) ? i.SRGB_ALPHA_EXT : null;
            if (n === rt) return 36244;
            if (n === it) return 33319;
            if (n === at) return 33320;
            if (n === ot) return 36249;
            if (n === st || n === ut || n === lt || n === ct)
              if (a === Yt) {
                if (null === (i = t.get("WEBGL_compressed_texture_s3tc_srgb")))
                  return null;
                if (n === st) return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                if (n === ut) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                if (n === lt) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                if (n === ct) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
              } else {
                if (null === (i = t.get("WEBGL_compressed_texture_s3tc")))
                  return null;
                if (n === st) return i.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (n === ut) return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (n === lt) return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (n === ct) return i.COMPRESSED_RGBA_S3TC_DXT5_EXT;
              }
            if (n === ht || n === ft || n === dt || n === pt) {
              if (null === (i = t.get("WEBGL_compressed_texture_pvrtc")))
                return null;
              if (n === ht) return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
              if (n === ft) return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
              if (n === dt) return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
              if (n === pt) return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            }
            if (n === mt)
              return null !== (i = t.get("WEBGL_compressed_texture_etc1"))
                ? i.COMPRESSED_RGB_ETC1_WEBGL
                : null;
            if (n === vt || n === gt) {
              if (null === (i = t.get("WEBGL_compressed_texture_etc")))
                return null;
              if (n === vt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ETC2
                  : i.COMPRESSED_RGB8_ETC2;
              if (n === gt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
                  : i.COMPRESSED_RGBA8_ETC2_EAC;
            }
            if (
              n === yt ||
              n === bt ||
              n === xt ||
              n === _t ||
              n === wt ||
              n === St ||
              n === Mt ||
              n === Tt ||
              n === Et ||
              n === Ot ||
              n === kt ||
              n === At ||
              n === Ct ||
              n === Pt
            ) {
              if (null === (i = t.get("WEBGL_compressed_texture_astc")))
                return null;
              if (n === yt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
                  : i.COMPRESSED_RGBA_ASTC_4x4_KHR;
              if (n === bt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
                  : i.COMPRESSED_RGBA_ASTC_5x4_KHR;
              if (n === xt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_5x5_KHR;
              if (n === _t)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_6x5_KHR;
              if (n === wt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
                  : i.COMPRESSED_RGBA_ASTC_6x6_KHR;
              if (n === St)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_8x5_KHR;
              if (n === Mt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
                  : i.COMPRESSED_RGBA_ASTC_8x6_KHR;
              if (n === Tt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
                  : i.COMPRESSED_RGBA_ASTC_8x8_KHR;
              if (n === Et)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x5_KHR;
              if (n === Ot)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x6_KHR;
              if (n === kt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x8_KHR;
              if (n === At)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
                  : i.COMPRESSED_RGBA_ASTC_10x10_KHR;
              if (n === Ct)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
                  : i.COMPRESSED_RGBA_ASTC_12x10_KHR;
              if (n === Pt)
                return a === Yt
                  ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
                  : i.COMPRESSED_RGBA_ASTC_12x12_KHR;
            }
            if (n === Rt) {
              if (null === (i = t.get("EXT_texture_compression_bptc")))
                return null;
              if (n === Rt)
                return a === Yt
                  ? i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
                  : i.COMPRESSED_RGBA_BPTC_UNORM_EXT;
            }
            return n === Ye
              ? r
                ? 34042
                : null !== (i = t.get("WEBGL_depth_texture"))
                ? i.UNSIGNED_INT_24_8_WEBGL
                : null
              : void 0 !== e[n]
              ? e[n]
              : null;
          },
        };
      }
      var bu = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [];
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isArrayCamera = !0),
              (e.cameras = n),
              e
            );
          }
          return Object(p.a)(t, e), t;
        })(ja),
        xu = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isGroup = !0),
              (e.type = "Group"),
              e
            );
          }
          return Object(p.a)(t, e), t;
        })(Ti),
        _u = { type: "move" },
        wu = (function () {
          function e() {
            Object(y.a)(this, e),
              (this._targetRay = null),
              (this._grip = null),
              (this._hand = null);
          }
          return (
            Object(b.a)(e, [
              {
                key: "getHandSpace",
                value: function () {
                  return (
                    null === this._hand &&
                      ((this._hand = new xu()),
                      (this._hand.matrixAutoUpdate = !1),
                      (this._hand.visible = !1),
                      (this._hand.joints = {}),
                      (this._hand.inputState = { pinching: !1 })),
                    this._hand
                  );
                },
              },
              {
                key: "getTargetRaySpace",
                value: function () {
                  return (
                    null === this._targetRay &&
                      ((this._targetRay = new xu()),
                      (this._targetRay.matrixAutoUpdate = !1),
                      (this._targetRay.visible = !1),
                      (this._targetRay.hasLinearVelocity = !1),
                      (this._targetRay.linearVelocity = new Sr()),
                      (this._targetRay.hasAngularVelocity = !1),
                      (this._targetRay.angularVelocity = new Sr())),
                    this._targetRay
                  );
                },
              },
              {
                key: "getGripSpace",
                value: function () {
                  return (
                    null === this._grip &&
                      ((this._grip = new xu()),
                      (this._grip.matrixAutoUpdate = !1),
                      (this._grip.visible = !1),
                      (this._grip.hasLinearVelocity = !1),
                      (this._grip.linearVelocity = new Sr()),
                      (this._grip.hasAngularVelocity = !1),
                      (this._grip.angularVelocity = new Sr())),
                    this._grip
                  );
                },
              },
              {
                key: "dispatchEvent",
                value: function (e) {
                  return (
                    null !== this._targetRay &&
                      this._targetRay.dispatchEvent(e),
                    null !== this._grip && this._grip.dispatchEvent(e),
                    null !== this._hand && this._hand.dispatchEvent(e),
                    this
                  );
                },
              },
              {
                key: "disconnect",
                value: function (e) {
                  return (
                    this.dispatchEvent({ type: "disconnected", data: e }),
                    null !== this._targetRay && (this._targetRay.visible = !1),
                    null !== this._grip && (this._grip.visible = !1),
                    null !== this._hand && (this._hand.visible = !1),
                    this
                  );
                },
              },
              {
                key: "update",
                value: function (e, t, n) {
                  var r = null,
                    i = null,
                    a = null,
                    o = this._targetRay,
                    s = this._grip,
                    u = this._hand;
                  if (e && "visible-blurred" !== t.session.visibilityState) {
                    if (u && e.hand) {
                      a = !0;
                      var l = !0,
                        c = !1,
                        h = void 0;
                      try {
                        for (
                          var f, d = e.hand.values()[Symbol.iterator]();
                          !(l = (f = d.next()).done);
                          l = !0
                        ) {
                          var p = f.value,
                            m = t.getJointPose(p, n);
                          if (void 0 === u.joints[p.jointName]) {
                            var v = new xu();
                            (v.matrixAutoUpdate = !1),
                              (v.visible = !1),
                              (u.joints[p.jointName] = v),
                              u.add(v);
                          }
                          var g = u.joints[p.jointName];
                          null !== m &&
                            (g.matrix.fromArray(m.transform.matrix),
                            g.matrix.decompose(g.position, g.rotation, g.scale),
                            (g.jointRadius = m.radius)),
                            (g.visible = null !== m);
                        }
                      } catch (_) {
                        (c = !0), (h = _);
                      } finally {
                        try {
                          l || null == d.return || d.return();
                        } finally {
                          if (c) throw h;
                        }
                      }
                      var y = u.joints["index-finger-tip"],
                        b = u.joints["thumb-tip"],
                        x = y.position.distanceTo(b.position);
                      u.inputState.pinching && x > 0.025
                        ? ((u.inputState.pinching = !1),
                          this.dispatchEvent({
                            type: "pinchend",
                            handedness: e.handedness,
                            target: this,
                          }))
                        : !u.inputState.pinching &&
                          x <= 0.015 &&
                          ((u.inputState.pinching = !0),
                          this.dispatchEvent({
                            type: "pinchstart",
                            handedness: e.handedness,
                            target: this,
                          }));
                    } else
                      null !== s &&
                        e.gripSpace &&
                        null !== (i = t.getPose(e.gripSpace, n)) &&
                        (s.matrix.fromArray(i.transform.matrix),
                        s.matrix.decompose(s.position, s.rotation, s.scale),
                        i.linearVelocity
                          ? ((s.hasLinearVelocity = !0),
                            s.linearVelocity.copy(i.linearVelocity))
                          : (s.hasLinearVelocity = !1),
                        i.angularVelocity
                          ? ((s.hasAngularVelocity = !0),
                            s.angularVelocity.copy(i.angularVelocity))
                          : (s.hasAngularVelocity = !1));
                    null !== o &&
                      (null === (r = t.getPose(e.targetRaySpace, n)) &&
                        null !== i &&
                        (r = i),
                      null !== r &&
                        (o.matrix.fromArray(r.transform.matrix),
                        o.matrix.decompose(o.position, o.rotation, o.scale),
                        r.linearVelocity
                          ? ((o.hasLinearVelocity = !0),
                            o.linearVelocity.copy(r.linearVelocity))
                          : (o.hasLinearVelocity = !1),
                        r.angularVelocity
                          ? ((o.hasAngularVelocity = !0),
                            o.angularVelocity.copy(r.angularVelocity))
                          : (o.hasAngularVelocity = !1),
                        this.dispatchEvent(_u)));
                  }
                  return (
                    null !== o && (o.visible = null !== r),
                    null !== s && (s.visible = null !== i),
                    null !== u && (u.visible = null !== a),
                    this
                  );
                },
              },
            ]),
            e
          );
        })(),
        Su = (function (e) {
          function t(e, n, i, a, o, s, u, l, c, h) {
            var d;
            if (
              (Object(y.a)(this, t),
              (h = void 0 !== h ? h : et) !== et && h !== tt)
            )
              throw new Error(
                "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
              );
            return (
              void 0 === i && h === et && (i = He),
              void 0 === i && h === tt && (i = Ye),
              ((d = Object(f.a)(
                this,
                Object(r.a)(t).call(this, null, a, o, s, u, l, h, i, c)
              )).isDepthTexture = !0),
              (d.image = { width: e, height: n }),
              (d.magFilter = void 0 !== u ? u : ke),
              (d.minFilter = void 0 !== l ? l : ke),
              (d.flipY = !1),
              (d.generateMipmaps = !1),
              d
            );
          }
          return Object(p.a)(t, e), t;
        })(pr),
        Mu = (function (e) {
          function t(e, n) {
            var i;
            Object(y.a)(this, t),
              (i = Object(f.a)(this, Object(r.a)(t).call(this)));
            var a = Object(d.a)(i),
              o = null,
              s = 1,
              l = null,
              c = "local-floor",
              h = null,
              p = null,
              m = null,
              v = null,
              b = null,
              x = null,
              _ = n.getContextAttributes(),
              w = null,
              S = null,
              M = [],
              T = [],
              E = new ja();
            E.layers.enable(1), (E.viewport = new mr());
            var O = new ja();
            O.layers.enable(2), (O.viewport = new mr());
            var k = [E, O],
              A = new bu();
            A.layers.enable(1), A.layers.enable(2);
            var C = null,
              P = null;
            function R(e) {
              var t = T.indexOf(e.inputSource);
              if (-1 !== t) {
                var n = M[t];
                void 0 !== n &&
                  n.dispatchEvent({ type: e.type, data: e.inputSource });
              }
            }
            function L() {
              o.removeEventListener("select", R),
                o.removeEventListener("selectstart", R),
                o.removeEventListener("selectend", R),
                o.removeEventListener("squeeze", R),
                o.removeEventListener("squeezestart", R),
                o.removeEventListener("squeezeend", R),
                o.removeEventListener("end", L),
                o.removeEventListener("inputsourceschange", j);
              for (var t = 0; t < M.length; t++) {
                var n = T[t];
                null !== n && ((T[t] = null), M[t].disconnect(n));
              }
              (C = null),
                (P = null),
                e.setRenderTarget(w),
                (b = null),
                (v = null),
                (m = null),
                (o = null),
                (S = null),
                U.stop(),
                (a.isPresenting = !1),
                a.dispatchEvent({ type: "sessionend" });
            }
            function j(e) {
              for (var t = 0; t < e.removed.length; t++) {
                var n = e.removed[t],
                  r = T.indexOf(n);
                r >= 0 &&
                  ((T[r] = null),
                  M[r].dispatchEvent({ type: "disconnected", data: n }));
              }
              for (var i = 0; i < e.added.length; i++) {
                var a = e.added[i],
                  o = T.indexOf(a);
                if (-1 === o) {
                  for (var s = 0; s < M.length; s++) {
                    if (s >= T.length) {
                      T.push(a), (o = s);
                      break;
                    }
                    if (null === T[s]) {
                      (T[s] = a), (o = s);
                      break;
                    }
                  }
                  if (-1 === o) break;
                }
                var u = M[o];
                u && u.dispatchEvent({ type: "connected", data: a });
              }
            }
            (i.cameraAutoUpdate = !0),
              (i.enabled = !1),
              (i.isPresenting = !1),
              (i.getController = function (e) {
                var t = M[e];
                return (
                  void 0 === t && ((t = new wu()), (M[e] = t)),
                  t.getTargetRaySpace()
                );
              }),
              (i.getControllerGrip = function (e) {
                var t = M[e];
                return (
                  void 0 === t && ((t = new wu()), (M[e] = t)), t.getGripSpace()
                );
              }),
              (i.getHand = function (e) {
                var t = M[e];
                return (
                  void 0 === t && ((t = new wu()), (M[e] = t)), t.getHandSpace()
                );
              }),
              (i.setFramebufferScaleFactor = function (e) {
                (s = e),
                  !0 === a.isPresenting &&
                    console.warn(
                      "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
                    );
              }),
              (i.setReferenceSpaceType = function (e) {
                (c = e),
                  !0 === a.isPresenting &&
                    console.warn(
                      "THREE.WebXRManager: Cannot change reference space type while presenting."
                    );
              }),
              (i.getReferenceSpace = function () {
                return h || l;
              }),
              (i.setReferenceSpace = function (e) {
                h = e;
              }),
              (i.getBaseLayer = function () {
                return null !== v ? v : b;
              }),
              (i.getBinding = function () {
                return m;
              }),
              (i.getFrame = function () {
                return x;
              }),
              (i.getSession = function () {
                return o;
              }),
              (i.setSession = (function () {
                var t = Object(u.a)(
                  g.a.mark(function t(r) {
                    var i, u, f, d, p;
                    return g.a.wrap(
                      function (t) {
                        for (;;)
                          switch ((t.prev = t.next)) {
                            case 0:
                              if (null === (o = r)) {
                                t.next = 25;
                                break;
                              }
                              if (
                                ((w = e.getRenderTarget()),
                                o.addEventListener("select", R),
                                o.addEventListener("selectstart", R),
                                o.addEventListener("selectend", R),
                                o.addEventListener("squeeze", R),
                                o.addEventListener("squeezestart", R),
                                o.addEventListener("squeezeend", R),
                                o.addEventListener("end", L),
                                o.addEventListener("inputsourceschange", j),
                                !0 === _.xrCompatible)
                              ) {
                                t.next = 14;
                                break;
                              }
                              return (t.next = 14), n.makeXRCompatible();
                            case 14:
                              return (
                                void 0 === o.renderState.layers ||
                                !1 === e.capabilities.isWebGL2
                                  ? ((i = {
                                      antialias:
                                        void 0 !== o.renderState.layers ||
                                        _.antialias,
                                      alpha: _.alpha,
                                      depth: _.depth,
                                      stencil: _.stencil,
                                      framebufferScaleFactor: s,
                                    }),
                                    (b = new XRWebGLLayer(o, n, i)),
                                    o.updateRenderState({ baseLayer: b }),
                                    (S = new vr(
                                      b.framebufferWidth,
                                      b.framebufferHeight,
                                      {
                                        format: $e,
                                        type: ze,
                                        encoding: e.outputEncoding,
                                        stencilBuffer: _.stencil,
                                      }
                                    )))
                                  : ((u = null),
                                    (f = null),
                                    (d = null),
                                    _.depth &&
                                      ((d = _.stencil ? 35056 : 33190),
                                      (u = _.stencil ? tt : et),
                                      (f = _.stencil ? Ye : He)),
                                    (p = {
                                      colorFormat: 32856,
                                      depthFormat: d,
                                      scaleFactor: s,
                                    }),
                                    (m = new XRWebGLBinding(o, n)),
                                    (v = m.createProjectionLayer(p)),
                                    o.updateRenderState({ layers: [v] }),
                                    (S = new vr(
                                      v.textureWidth,
                                      v.textureHeight,
                                      {
                                        format: $e,
                                        type: ze,
                                        depthTexture: new Su(
                                          v.textureWidth,
                                          v.textureHeight,
                                          f,
                                          void 0,
                                          void 0,
                                          void 0,
                                          void 0,
                                          void 0,
                                          void 0,
                                          u
                                        ),
                                        stencilBuffer: _.stencil,
                                        encoding: e.outputEncoding,
                                        samples: _.antialias ? 4 : 0,
                                      }
                                    )),
                                    (e.properties.get(S).__ignoreDepthValues =
                                      v.ignoreDepthValues)),
                                (S.isXRRenderTarget = !0),
                                this.setFoveation(1),
                                (h = null),
                                (t.next = 20),
                                o.requestReferenceSpace(c)
                              );
                            case 20:
                              (l = t.sent),
                                U.setContext(o),
                                U.start(),
                                (a.isPresenting = !0),
                                a.dispatchEvent({ type: "sessionstart" });
                            case 25:
                            case "end":
                              return t.stop();
                          }
                      },
                      t,
                      this
                    );
                  })
                );
                return function (e) {
                  return t.apply(this, arguments);
                };
              })());
            var I = new Sr(),
              N = new Sr();
            function D(e, t) {
              null === t
                ? e.matrixWorld.copy(e.matrix)
                : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
                e.matrixWorldInverse.copy(e.matrixWorld).invert();
            }
            (i.updateCamera = function (e) {
              if (null !== o) {
                (A.near = O.near = E.near = e.near),
                  (A.far = O.far = E.far = e.far),
                  (C === A.near && P === A.far) ||
                    (o.updateRenderState({
                      depthNear: A.near,
                      depthFar: A.far,
                    }),
                    (C = A.near),
                    (P = A.far));
                var t = e.parent,
                  n = A.cameras;
                D(A, t);
                for (var r = 0; r < n.length; r++) D(n[r], t);
                A.matrixWorld.decompose(A.position, A.quaternion, A.scale),
                  e.matrix.copy(A.matrix),
                  e.matrix.decompose(e.position, e.quaternion, e.scale);
                for (var i = e.children, a = 0, s = i.length; a < s; a++)
                  i[a].updateMatrixWorld(!0);
                2 === n.length
                  ? (function (e, t, n) {
                      I.setFromMatrixPosition(t.matrixWorld),
                        N.setFromMatrixPosition(n.matrixWorld);
                      var r = I.distanceTo(N),
                        i = t.projectionMatrix.elements,
                        a = n.projectionMatrix.elements,
                        o = i[14] / (i[10] - 1),
                        s = i[14] / (i[10] + 1),
                        u = (i[9] + 1) / i[5],
                        l = (i[9] - 1) / i[5],
                        c = (i[8] - 1) / i[0],
                        h = (a[8] + 1) / a[0],
                        f = o * c,
                        d = o * h,
                        p = r / (-c + h),
                        m = p * -c;
                      t.matrixWorld.decompose(
                        e.position,
                        e.quaternion,
                        e.scale
                      ),
                        e.translateX(m),
                        e.translateZ(p),
                        e.matrixWorld.compose(
                          e.position,
                          e.quaternion,
                          e.scale
                        ),
                        e.matrixWorldInverse.copy(e.matrixWorld).invert();
                      var v = o + p,
                        g = s + p,
                        y = f - m,
                        b = d + (r - m),
                        x = ((u * s) / g) * v,
                        _ = ((l * s) / g) * v;
                      e.projectionMatrix.makePerspective(y, b, x, _, v, g);
                    })(A, E, O)
                  : A.projectionMatrix.copy(E.projectionMatrix);
              }
            }),
              (i.getCamera = function () {
                return A;
              }),
              (i.getFoveation = function () {
                return null !== v
                  ? v.fixedFoveation
                  : null !== b
                  ? b.fixedFoveation
                  : void 0;
              }),
              (i.setFoveation = function (e) {
                null !== v && (v.fixedFoveation = e),
                  null !== b &&
                    void 0 !== b.fixedFoveation &&
                    (b.fixedFoveation = e);
              });
            var z = null;
            var U = new Xa();
            return (
              U.setAnimationLoop(function (t, n) {
                if (((p = n.getViewerPose(h || l)), (x = n), null !== p)) {
                  var r = p.views;
                  null !== b &&
                    (e.setRenderTargetFramebuffer(S, b.framebuffer),
                    e.setRenderTarget(S));
                  var i = !1;
                  r.length !== A.cameras.length &&
                    ((A.cameras.length = 0), (i = !0));
                  for (var a = 0; a < r.length; a++) {
                    var o = r[a],
                      s = null;
                    if (null !== b) s = b.getViewport(o);
                    else {
                      var u = m.getViewSubImage(v, o);
                      (s = u.viewport),
                        0 === a &&
                          (e.setRenderTargetTextures(
                            S,
                            u.colorTexture,
                            v.ignoreDepthValues ? void 0 : u.depthStencilTexture
                          ),
                          e.setRenderTarget(S));
                    }
                    var c = k[a];
                    void 0 === c &&
                      ((c = new ja()).layers.enable(a),
                      (c.viewport = new mr()),
                      (k[a] = c)),
                      c.matrix.fromArray(o.transform.matrix),
                      c.projectionMatrix.fromArray(o.projectionMatrix),
                      c.viewport.set(s.x, s.y, s.width, s.height),
                      0 === a && A.matrix.copy(c.matrix),
                      !0 === i && A.cameras.push(c);
                  }
                }
                for (var f = 0; f < M.length; f++) {
                  var d = T[f],
                    g = M[f];
                  null !== d && void 0 !== g && g.update(d, n, h || l);
                }
                z && z(t, n), (x = null);
              }),
              (i.setAnimationLoop = function (e) {
                z = e;
              }),
              (i.dispose = function () {}),
              i
            );
          }
          return Object(p.a)(t, e), t;
        })(Pn);
      function Tu(e, t) {
        function n(n, r) {
          (n.opacity.value = r.opacity),
            r.color && n.diffuse.value.copy(r.color),
            r.emissive &&
              n.emissive.value
                .copy(r.emissive)
                .multiplyScalar(r.emissiveIntensity),
            r.map && (n.map.value = r.map),
            r.alphaMap && (n.alphaMap.value = r.alphaMap),
            r.bumpMap &&
              ((n.bumpMap.value = r.bumpMap),
              (n.bumpScale.value = r.bumpScale),
              r.side === R && (n.bumpScale.value *= -1)),
            r.displacementMap &&
              ((n.displacementMap.value = r.displacementMap),
              (n.displacementScale.value = r.displacementScale),
              (n.displacementBias.value = r.displacementBias)),
            r.emissiveMap && (n.emissiveMap.value = r.emissiveMap),
            r.normalMap &&
              ((n.normalMap.value = r.normalMap),
              n.normalScale.value.copy(r.normalScale),
              r.side === R && n.normalScale.value.negate()),
            r.specularMap && (n.specularMap.value = r.specularMap),
            r.alphaTest > 0 && (n.alphaTest.value = r.alphaTest);
          var i,
            a,
            o = t.get(r).envMap;
          if (
            (o &&
              ((n.envMap.value = o),
              (n.flipEnvMap.value =
                o.isCubeTexture && !1 === o.isRenderTargetTexture ? -1 : 1),
              (n.reflectivity.value = r.reflectivity),
              (n.ior.value = r.ior),
              (n.refractionRatio.value = r.refractionRatio)),
            r.lightMap)
          ) {
            n.lightMap.value = r.lightMap;
            var s = !0 !== e.physicallyCorrectLights ? Math.PI : 1;
            n.lightMapIntensity.value = r.lightMapIntensity * s;
          }
          r.aoMap &&
            ((n.aoMap.value = r.aoMap),
            (n.aoMapIntensity.value = r.aoMapIntensity)),
            r.map
              ? (i = r.map)
              : r.specularMap
              ? (i = r.specularMap)
              : r.displacementMap
              ? (i = r.displacementMap)
              : r.normalMap
              ? (i = r.normalMap)
              : r.bumpMap
              ? (i = r.bumpMap)
              : r.roughnessMap
              ? (i = r.roughnessMap)
              : r.metalnessMap
              ? (i = r.metalnessMap)
              : r.alphaMap
              ? (i = r.alphaMap)
              : r.emissiveMap
              ? (i = r.emissiveMap)
              : r.clearcoatMap
              ? (i = r.clearcoatMap)
              : r.clearcoatNormalMap
              ? (i = r.clearcoatNormalMap)
              : r.clearcoatRoughnessMap
              ? (i = r.clearcoatRoughnessMap)
              : r.iridescenceMap
              ? (i = r.iridescenceMap)
              : r.iridescenceThicknessMap
              ? (i = r.iridescenceThicknessMap)
              : r.specularIntensityMap
              ? (i = r.specularIntensityMap)
              : r.specularColorMap
              ? (i = r.specularColorMap)
              : r.transmissionMap
              ? (i = r.transmissionMap)
              : r.thicknessMap
              ? (i = r.thicknessMap)
              : r.sheenColorMap
              ? (i = r.sheenColorMap)
              : r.sheenRoughnessMap && (i = r.sheenRoughnessMap),
            void 0 !== i &&
              (i.isWebGLRenderTarget && (i = i.texture),
              !0 === i.matrixAutoUpdate && i.updateMatrix(),
              n.uvTransform.value.copy(i.matrix)),
            r.aoMap ? (a = r.aoMap) : r.lightMap && (a = r.lightMap),
            void 0 !== a &&
              (a.isWebGLRenderTarget && (a = a.texture),
              !0 === a.matrixAutoUpdate && a.updateMatrix(),
              n.uv2Transform.value.copy(a.matrix));
        }
        return {
          refreshFogUniforms: function (e, t) {
            e.fogColor.value.copy(t.color),
              t.isFog
                ? ((e.fogNear.value = t.near), (e.fogFar.value = t.far))
                : t.isFogExp2 && (e.fogDensity.value = t.density);
          },
          refreshMaterialUniforms: function (e, r, i, a, o) {
            r.isMeshBasicMaterial
              ? n(e, r)
              : r.isMeshLambertMaterial
              ? n(e, r)
              : r.isMeshToonMaterial
              ? (n(e, r),
                (function (e, t) {
                  t.gradientMap && (e.gradientMap.value = t.gradientMap);
                })(e, r))
              : r.isMeshPhongMaterial
              ? (n(e, r),
                (function (e, t) {
                  e.specular.value.copy(t.specular),
                    (e.shininess.value = Math.max(t.shininess, 1e-4));
                })(e, r))
              : r.isMeshStandardMaterial
              ? (n(e, r),
                (function (e, n) {
                  (e.roughness.value = n.roughness),
                    (e.metalness.value = n.metalness),
                    n.roughnessMap && (e.roughnessMap.value = n.roughnessMap);
                  n.metalnessMap && (e.metalnessMap.value = n.metalnessMap);
                  t.get(n).envMap &&
                    (e.envMapIntensity.value = n.envMapIntensity);
                })(e, r),
                r.isMeshPhysicalMaterial &&
                  (function (e, t, n) {
                    (e.ior.value = t.ior),
                      t.sheen > 0 &&
                        (e.sheenColor.value
                          .copy(t.sheenColor)
                          .multiplyScalar(t.sheen),
                        (e.sheenRoughness.value = t.sheenRoughness),
                        t.sheenColorMap &&
                          (e.sheenColorMap.value = t.sheenColorMap),
                        t.sheenRoughnessMap &&
                          (e.sheenRoughnessMap.value = t.sheenRoughnessMap));
                    t.clearcoat > 0 &&
                      ((e.clearcoat.value = t.clearcoat),
                      (e.clearcoatRoughness.value = t.clearcoatRoughness),
                      t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap),
                      t.clearcoatRoughnessMap &&
                        (e.clearcoatRoughnessMap.value =
                          t.clearcoatRoughnessMap),
                      t.clearcoatNormalMap &&
                        (e.clearcoatNormalScale.value.copy(
                          t.clearcoatNormalScale
                        ),
                        (e.clearcoatNormalMap.value = t.clearcoatNormalMap),
                        t.side === R && e.clearcoatNormalScale.value.negate()));
                    t.iridescence > 0 &&
                      ((e.iridescence.value = t.iridescence),
                      (e.iridescenceIOR.value = t.iridescenceIOR),
                      (e.iridescenceThicknessMinimum.value =
                        t.iridescenceThicknessRange[0]),
                      (e.iridescenceThicknessMaximum.value =
                        t.iridescenceThicknessRange[1]),
                      t.iridescenceMap &&
                        (e.iridescenceMap.value = t.iridescenceMap),
                      t.iridescenceThicknessMap &&
                        (e.iridescenceThicknessMap.value =
                          t.iridescenceThicknessMap));
                    t.transmission > 0 &&
                      ((e.transmission.value = t.transmission),
                      (e.transmissionSamplerMap.value = n.texture),
                      e.transmissionSamplerSize.value.set(n.width, n.height),
                      t.transmissionMap &&
                        (e.transmissionMap.value = t.transmissionMap),
                      (e.thickness.value = t.thickness),
                      t.thicknessMap && (e.thicknessMap.value = t.thicknessMap),
                      (e.attenuationDistance.value = t.attenuationDistance),
                      e.attenuationColor.value.copy(t.attenuationColor));
                    (e.specularIntensity.value = t.specularIntensity),
                      e.specularColor.value.copy(t.specularColor),
                      t.specularIntensityMap &&
                        (e.specularIntensityMap.value = t.specularIntensityMap);
                    t.specularColorMap &&
                      (e.specularColorMap.value = t.specularColorMap);
                  })(e, r, o))
              : r.isMeshMatcapMaterial
              ? (n(e, r),
                (function (e, t) {
                  t.matcap && (e.matcap.value = t.matcap);
                })(e, r))
              : r.isMeshDepthMaterial
              ? n(e, r)
              : r.isMeshDistanceMaterial
              ? (n(e, r),
                (function (e, t) {
                  e.referencePosition.value.copy(t.referencePosition),
                    (e.nearDistance.value = t.nearDistance),
                    (e.farDistance.value = t.farDistance);
                })(e, r))
              : r.isMeshNormalMaterial
              ? n(e, r)
              : r.isLineBasicMaterial
              ? ((function (e, t) {
                  e.diffuse.value.copy(t.color), (e.opacity.value = t.opacity);
                })(e, r),
                r.isLineDashedMaterial &&
                  (function (e, t) {
                    (e.dashSize.value = t.dashSize),
                      (e.totalSize.value = t.dashSize + t.gapSize),
                      (e.scale.value = t.scale);
                  })(e, r))
              : r.isPointsMaterial
              ? (function (e, t, n, r) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.size.value = t.size * n),
                    (e.scale.value = 0.5 * r),
                    t.map && (e.map.value = t.map);
                  t.alphaMap && (e.alphaMap.value = t.alphaMap);
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                  var i;
                  t.map ? (i = t.map) : t.alphaMap && (i = t.alphaMap);
                  void 0 !== i &&
                    (!0 === i.matrixAutoUpdate && i.updateMatrix(),
                    e.uvTransform.value.copy(i.matrix));
                })(e, r, i, a)
              : r.isSpriteMaterial
              ? (function (e, t) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.rotation.value = t.rotation),
                    t.map && (e.map.value = t.map);
                  t.alphaMap && (e.alphaMap.value = t.alphaMap);
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                  var n;
                  t.map ? (n = t.map) : t.alphaMap && (n = t.alphaMap);
                  void 0 !== n &&
                    (!0 === n.matrixAutoUpdate && n.updateMatrix(),
                    e.uvTransform.value.copy(n.matrix));
                })(e, r)
              : r.isShadowMaterial
              ? (e.color.value.copy(r.color), (e.opacity.value = r.opacity))
              : r.isShaderMaterial && (r.uniformsNeedUpdate = !1);
          },
        };
      }
      function Eu(e, t, n, r) {
        var i = {},
          a = {},
          o = [],
          s = n.isWebGL2 ? e.getParameter(35375) : 0;
        function u(e, t, n) {
          var r = e.value;
          if (void 0 === n[t])
            return (n[t] = "number" === typeof r ? r : r.clone()), !0;
          if ("number" === typeof r) {
            if (n[t] !== r) return (n[t] = r), !0;
          } else {
            var i = n[t];
            if (!1 === i.equals(r)) return i.copy(r), !0;
          }
          return !1;
        }
        function l(e) {
          var t = e.value,
            n = { boundary: 0, storage: 0 };
          return (
            "number" === typeof t
              ? ((n.boundary = 4), (n.storage = 4))
              : t.isVector2
              ? ((n.boundary = 8), (n.storage = 8))
              : t.isVector3 || t.isColor
              ? ((n.boundary = 16), (n.storage = 12))
              : t.isVector4
              ? ((n.boundary = 16), (n.storage = 16))
              : t.isMatrix3
              ? ((n.boundary = 48), (n.storage = 48))
              : t.isMatrix4
              ? ((n.boundary = 64), (n.storage = 64))
              : t.isTexture
              ? console.warn(
                  "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."
                )
              : console.warn(
                  "THREE.WebGLRenderer: Unsupported uniform value type.",
                  t
                ),
            n
          );
        }
        function c(t) {
          var n = t.target;
          n.removeEventListener("dispose", c);
          var r = o.indexOf(n.__bindingPointIndex);
          o.splice(r, 1),
            e.deleteBuffer(i[n.id]),
            delete i[n.id],
            delete a[n.id];
        }
        return {
          bind: function (e, t) {
            var n = t.program;
            r.uniformBlockBinding(e, n);
          },
          update: function (n, h) {
            var f = i[n.id];
            void 0 === f &&
              (!(function (e) {
                for (
                  var t = e.uniforms, n = 0, r = 0, i = 0, a = t.length;
                  i < a;
                  i++
                ) {
                  var o = t[i],
                    s = l(o);
                  if (
                    ((o.__data = new Float32Array(
                      s.storage / Float32Array.BYTES_PER_ELEMENT
                    )),
                    (o.__offset = n),
                    i > 0)
                  ) {
                    var u = 16 - (r = n % 16);
                    0 !== r &&
                      u - s.boundary < 0 &&
                      ((n += 16 - r), (o.__offset = n));
                  }
                  n += s.storage;
                }
                (r = n % 16) > 0 && (n += 16 - r);
                (e.__size = n), (e.__cache = {});
              })(n),
              (f = (function (t) {
                var n = (function () {
                  for (var e = 0; e < s; e++)
                    if (-1 === o.indexOf(e)) return o.push(e), e;
                  return (
                    console.error(
                      "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."
                    ),
                    0
                  );
                })();
                t.__bindingPointIndex = n;
                var r = e.createBuffer(),
                  i = t.__size,
                  a = t.usage;
                return (
                  e.bindBuffer(35345, r),
                  e.bufferData(35345, i, a),
                  e.bindBuffer(35345, null),
                  e.bindBufferBase(35345, n, r),
                  r
                );
              })(n)),
              (i[n.id] = f),
              n.addEventListener("dispose", c));
            var d = h.program;
            r.updateUBOMapping(n, d);
            var p = t.render.frame;
            a[n.id] !== p &&
              (!(function (t) {
                var n = i[t.id],
                  r = t.uniforms,
                  a = t.__cache;
                e.bindBuffer(35345, n);
                for (var o = 0, s = r.length; o < s; o++) {
                  var l = r[o];
                  if (!0 === u(l, o, a)) {
                    var c = l.value,
                      h = l.__offset;
                    "number" === typeof c
                      ? ((l.__data[0] = c), e.bufferSubData(35345, h, l.__data))
                      : (l.value.isMatrix3
                          ? ((l.__data[0] = l.value.elements[0]),
                            (l.__data[1] = l.value.elements[1]),
                            (l.__data[2] = l.value.elements[2]),
                            (l.__data[3] = l.value.elements[0]),
                            (l.__data[4] = l.value.elements[3]),
                            (l.__data[5] = l.value.elements[4]),
                            (l.__data[6] = l.value.elements[5]),
                            (l.__data[7] = l.value.elements[0]),
                            (l.__data[8] = l.value.elements[6]),
                            (l.__data[9] = l.value.elements[7]),
                            (l.__data[10] = l.value.elements[8]),
                            (l.__data[11] = l.value.elements[0]))
                          : c.toArray(l.__data),
                        e.bufferSubData(35345, h, l.__data));
                  }
                }
                e.bindBuffer(35345, null);
              })(n),
              (a[n.id] = p));
          },
          dispose: function () {
            for (var t in i) e.deleteBuffer(i[t]);
            (o = []), (i = {}), (a = {});
          },
        };
      }
      function Ou() {
        var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        this.isWebGLRenderer = !0;
        var t,
          n =
            void 0 !== e.canvas
              ? e.canvas
              : (function () {
                  var e = $n("canvas");
                  return (e.style.display = "block"), e;
                })(),
          r = void 0 !== e.context ? e.context : null,
          i = void 0 === e.depth || e.depth,
          a = void 0 === e.stencil || e.stencil,
          o = void 0 !== e.antialias && e.antialias,
          s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
          u = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
          l = void 0 !== e.powerPreference ? e.powerPreference : "default",
          c =
            void 0 !== e.failIfMajorPerformanceCaveat &&
            e.failIfMajorPerformanceCaveat;
        t =
          null !== r
            ? r.getContextAttributes().alpha
            : void 0 !== e.alpha && e.alpha;
        var h = null,
          f = null,
          d = [],
          p = [];
        (this.domElement = n),
          (this.debug = { checkShaderErrors: !0 }),
          (this.autoClear = !0),
          (this.autoClearColor = !0),
          (this.autoClearDepth = !0),
          (this.autoClearStencil = !0),
          (this.sortObjects = !0),
          (this.clippingPlanes = []),
          (this.localClippingEnabled = !1),
          (this.outputEncoding = Xt),
          (this.physicallyCorrectLights = !1),
          (this.toneMapping = de),
          (this.toneMappingExposure = 1),
          Object.defineProperties(this, {
            gammaFactor: {
              get: function () {
                return (
                  console.warn(
                    "THREE.WebGLRenderer: .gammaFactor has been removed."
                  ),
                  2
                );
              },
              set: function () {
                console.warn(
                  "THREE.WebGLRenderer: .gammaFactor has been removed."
                );
              },
            },
          });
        var m = this,
          v = !1,
          g = 0,
          y = 0,
          b = null,
          _ = -1,
          w = null,
          S = new mr(),
          M = new mr(),
          T = null,
          E = n.width,
          O = n.height,
          k = 1,
          A = null,
          C = null,
          j = new mr(0, 0, E, O),
          I = new mr(0, 0, E, O),
          N = !1,
          D = new qa(),
          z = !1,
          U = !1,
          B = null,
          F = new ei(),
          G = new qn(),
          H = new Sr(),
          V = {
            background: null,
            fog: null,
            environment: null,
            overrideMaterial: null,
            isScene: !0,
          };
        function W() {
          return null === b ? k : 1;
        }
        var q,
          X,
          Y,
          J,
          Z,
          $,
          K,
          Q,
          ee,
          te,
          ne,
          re,
          ie,
          ae,
          oe,
          se,
          ue,
          le,
          ce,
          he,
          fe,
          pe,
          me,
          ve,
          ge = r;
        function ye(e, t) {
          for (var r = 0; r < e.length; r++) {
            var i = e[r],
              a = n.getContext(i, t);
            if (null !== a) return a;
          }
          return null;
        }
        try {
          var be = {
            alpha: !0,
            depth: i,
            stencil: a,
            antialias: o,
            premultipliedAlpha: s,
            preserveDrawingBuffer: u,
            powerPreference: l,
            failIfMajorPerformanceCaveat: c,
          };
          if (
            ("setAttribute" in n &&
              n.setAttribute("data-engine", "three.js r".concat(x)),
            n.addEventListener("webglcontextlost", Se, !1),
            n.addEventListener("webglcontextrestored", Me, !1),
            n.addEventListener("webglcontextcreationerror", Te, !1),
            null === ge)
          ) {
            var xe = ["webgl2", "webgl", "experimental-webgl"];
            if (
              (!0 === m.isWebGL1Renderer && xe.shift(),
              null === (ge = ye(xe, be)))
            )
              throw ye(xe)
                ? new Error(
                    "Error creating WebGL context with your selected attributes."
                  )
                : new Error("Error creating WebGL context.");
          }
          void 0 === ge.getShaderPrecisionFormat &&
            (ge.getShaderPrecisionFormat = function () {
              return { rangeMin: 1, rangeMax: 1, precision: 1 };
            });
        } catch (De) {
          throw (console.error("THREE.WebGLRenderer: " + De.message), De);
        }
        function _e() {
          (q = new wo(ge)),
            (X = new no(ge, q, e)),
            q.init(X),
            (pe = new yu(ge, q, X)),
            (Y = new vu(ge, q, X)),
            (J = new To()),
            (Z = new eu()),
            ($ = new gu(ge, q, Y, Z, X, pe, J)),
            (K = new io(m)),
            (Q = new _o(m)),
            (ee = new Ya(ge, X)),
            (me = new eo(ge, q, ee, X)),
            (te = new So(ge, ee, J, me)),
            (ne = new Ao(ge, te, ee, J)),
            (ce = new ko(ge, X, $)),
            (se = new ro(Z)),
            (re = new Qs(m, K, Q, q, X, me, se)),
            (ie = new Tu(m, Z)),
            (ae = new iu()),
            (oe = new cu(q, X)),
            (le = new Qa(m, K, Y, ne, t, s)),
            (ue = new mu(m, ne, X)),
            (ve = new Eu(ge, J, X, Y)),
            (he = new to(ge, q, J, X)),
            (fe = new Mo(ge, q, J, X)),
            (J.programs = re.programs),
            (m.capabilities = X),
            (m.extensions = q),
            (m.properties = Z),
            (m.renderLists = ae),
            (m.shadowMap = ue),
            (m.state = Y),
            (m.info = J);
        }
        _e();
        var we = new Mu(m, ge);
        function Se(e) {
          e.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            (v = !0);
        }
        function Me() {
          console.log("THREE.WebGLRenderer: Context Restored."), (v = !1);
          var e = J.autoReset,
            t = ue.enabled,
            n = ue.autoUpdate,
            r = ue.needsUpdate,
            i = ue.type;
          _e(),
            (J.autoReset = e),
            (ue.enabled = t),
            (ue.autoUpdate = n),
            (ue.needsUpdate = r),
            (ue.type = i);
        }
        function Te(e) {
          console.error(
            "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
            e.statusMessage
          );
        }
        function Ee(e) {
          var t = e.target;
          t.removeEventListener("dispose", Ee),
            (function (e) {
              (function (e) {
                var t = Z.get(e).programs;
                void 0 !== t &&
                  (t.forEach(function (e) {
                    re.releaseProgram(e);
                  }),
                  e.isShaderMaterial && re.releaseShaderCache(e));
              })(e),
                Z.remove(e);
            })(t);
        }
        (this.xr = we),
          (this.getContext = function () {
            return ge;
          }),
          (this.getContextAttributes = function () {
            return ge.getContextAttributes();
          }),
          (this.forceContextLoss = function () {
            var e = q.get("WEBGL_lose_context");
            e && e.loseContext();
          }),
          (this.forceContextRestore = function () {
            var e = q.get("WEBGL_lose_context");
            e && e.restoreContext();
          }),
          (this.getPixelRatio = function () {
            return k;
          }),
          (this.setPixelRatio = function (e) {
            void 0 !== e && ((k = e), this.setSize(E, O, !1));
          }),
          (this.getSize = function (e) {
            return e.set(E, O);
          }),
          (this.setSize = function (e, t, r) {
            we.isPresenting
              ? console.warn(
                  "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                )
              : ((E = e),
                (O = t),
                (n.width = Math.floor(e * k)),
                (n.height = Math.floor(t * k)),
                !1 !== r &&
                  ((n.style.width = e + "px"), (n.style.height = t + "px")),
                this.setViewport(0, 0, e, t));
          }),
          (this.getDrawingBufferSize = function (e) {
            return e.set(E * k, O * k).floor();
          }),
          (this.setDrawingBufferSize = function (e, t, r) {
            (E = e),
              (O = t),
              (k = r),
              (n.width = Math.floor(e * r)),
              (n.height = Math.floor(t * r)),
              this.setViewport(0, 0, e, t);
          }),
          (this.getCurrentViewport = function (e) {
            return e.copy(S);
          }),
          (this.getViewport = function (e) {
            return e.copy(j);
          }),
          (this.setViewport = function (e, t, n, r) {
            e.isVector4 ? j.set(e.x, e.y, e.z, e.w) : j.set(e, t, n, r),
              Y.viewport(S.copy(j).multiplyScalar(k).floor());
          }),
          (this.getScissor = function (e) {
            return e.copy(I);
          }),
          (this.setScissor = function (e, t, n, r) {
            e.isVector4 ? I.set(e.x, e.y, e.z, e.w) : I.set(e, t, n, r),
              Y.scissor(M.copy(I).multiplyScalar(k).floor());
          }),
          (this.getScissorTest = function () {
            return N;
          }),
          (this.setScissorTest = function (e) {
            Y.setScissorTest((N = e));
          }),
          (this.setOpaqueSort = function (e) {
            A = e;
          }),
          (this.setTransparentSort = function (e) {
            C = e;
          }),
          (this.getClearColor = function (e) {
            return e.copy(le.getClearColor());
          }),
          (this.setClearColor = function () {
            le.setClearColor.apply(le, arguments);
          }),
          (this.getClearAlpha = function () {
            return le.getClearAlpha();
          }),
          (this.setClearAlpha = function () {
            le.setClearAlpha.apply(le, arguments);
          }),
          (this.clear = function () {
            var e =
                !(arguments.length > 0 && void 0 !== arguments[0]) ||
                arguments[0],
              t =
                !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1],
              n =
                !(arguments.length > 2 && void 0 !== arguments[2]) ||
                arguments[2],
              r = 0;
            e && (r |= 16384), t && (r |= 256), n && (r |= 1024), ge.clear(r);
          }),
          (this.clearColor = function () {
            this.clear(!0, !1, !1);
          }),
          (this.clearDepth = function () {
            this.clear(!1, !0, !1);
          }),
          (this.clearStencil = function () {
            this.clear(!1, !1, !0);
          }),
          (this.dispose = function () {
            n.removeEventListener("webglcontextlost", Se, !1),
              n.removeEventListener("webglcontextrestored", Me, !1),
              n.removeEventListener("webglcontextcreationerror", Te, !1),
              ae.dispose(),
              oe.dispose(),
              Z.dispose(),
              K.dispose(),
              Q.dispose(),
              ne.dispose(),
              me.dispose(),
              ve.dispose(),
              re.dispose(),
              we.dispose(),
              we.removeEventListener("sessionstart", ke),
              we.removeEventListener("sessionend", Ae),
              B && (B.dispose(), (B = null)),
              Ce.stop();
          }),
          (this.renderBufferDirect = function (e, t, n, r, i, a) {
            null === t && (t = V);
            var o = i.isMesh && i.matrixWorld.determinant() < 0,
              s = (function (e, t, n, r, i) {
                !0 !== t.isScene && (t = V);
                $.resetTextureUnits();
                var a = t.fog,
                  o = r.isMeshStandardMaterial ? t.environment : null,
                  s =
                    null === b
                      ? m.outputEncoding
                      : !0 === b.isXRRenderTarget
                      ? b.texture.encoding
                      : Xt,
                  u = (r.isMeshStandardMaterial ? Q : K).get(r.envMap || o),
                  l =
                    !0 === r.vertexColors &&
                    !!n.attributes.color &&
                    4 === n.attributes.color.itemSize,
                  c = !!r.normalMap && !!n.attributes.tangent,
                  h = !!n.morphAttributes.position,
                  d = !!n.morphAttributes.normal,
                  p = !!n.morphAttributes.color,
                  v = r.toneMapped ? m.toneMapping : de,
                  g =
                    n.morphAttributes.position ||
                    n.morphAttributes.normal ||
                    n.morphAttributes.color,
                  y = void 0 !== g ? g.length : 0,
                  x = Z.get(r),
                  S = f.state.lights;
                if (!0 === z && (!0 === U || e !== w)) {
                  var M = e === w && r.id === _;
                  se.setState(r, e, M);
                }
                var T = !1;
                r.version === x.__version
                  ? x.needsLights && x.lightsStateVersion !== S.state.version
                    ? (T = !0)
                    : x.outputEncoding !== s
                    ? (T = !0)
                    : i.isInstancedMesh && !1 === x.instancing
                    ? (T = !0)
                    : i.isInstancedMesh || !0 !== x.instancing
                    ? i.isSkinnedMesh && !1 === x.skinning
                      ? (T = !0)
                      : i.isSkinnedMesh || !0 !== x.skinning
                      ? x.envMap !== u
                        ? (T = !0)
                        : !0 === r.fog && x.fog !== a
                        ? (T = !0)
                        : void 0 === x.numClippingPlanes ||
                          (x.numClippingPlanes === se.numPlanes &&
                            x.numIntersection === se.numIntersection)
                        ? x.vertexAlphas !== l
                          ? (T = !0)
                          : x.vertexTangents !== c
                          ? (T = !0)
                          : x.morphTargets !== h
                          ? (T = !0)
                          : x.morphNormals !== d
                          ? (T = !0)
                          : x.morphColors !== p
                          ? (T = !0)
                          : x.toneMapping !== v
                          ? (T = !0)
                          : !0 === X.isWebGL2 &&
                            x.morphTargetsCount !== y &&
                            (T = !0)
                        : (T = !0)
                      : (T = !0)
                    : (T = !0)
                  : ((T = !0), (x.__version = r.version));
                var E = x.currentProgram;
                !0 === T && (E = je(r, t, i));
                var A = !1,
                  C = !1,
                  P = !1,
                  R = E.getUniforms(),
                  L = x.uniforms;
                Y.useProgram(E.program) && ((A = !0), (C = !0), (P = !0));
                r.id !== _ && ((_ = r.id), (C = !0));
                if (A || w !== e) {
                  if (
                    (R.setValue(ge, "projectionMatrix", e.projectionMatrix),
                    X.logarithmicDepthBuffer &&
                      R.setValue(
                        ge,
                        "logDepthBufFC",
                        2 / (Math.log(e.far + 1) / Math.LN2)
                      ),
                    w !== e && ((w = e), (C = !0), (P = !0)),
                    r.isShaderMaterial ||
                      r.isMeshPhongMaterial ||
                      r.isMeshToonMaterial ||
                      r.isMeshStandardMaterial ||
                      r.envMap)
                  ) {
                    var j = R.map.cameraPosition;
                    void 0 !== j &&
                      j.setValue(ge, H.setFromMatrixPosition(e.matrixWorld));
                  }
                  (r.isMeshPhongMaterial ||
                    r.isMeshToonMaterial ||
                    r.isMeshLambertMaterial ||
                    r.isMeshBasicMaterial ||
                    r.isMeshStandardMaterial ||
                    r.isShaderMaterial) &&
                    R.setValue(
                      ge,
                      "isOrthographic",
                      !0 === e.isOrthographicCamera
                    ),
                    (r.isMeshPhongMaterial ||
                      r.isMeshToonMaterial ||
                      r.isMeshLambertMaterial ||
                      r.isMeshBasicMaterial ||
                      r.isMeshStandardMaterial ||
                      r.isShaderMaterial ||
                      r.isShadowMaterial ||
                      i.isSkinnedMesh) &&
                      R.setValue(ge, "viewMatrix", e.matrixWorldInverse);
                }
                if (i.isSkinnedMesh) {
                  R.setOptional(ge, i, "bindMatrix"),
                    R.setOptional(ge, i, "bindMatrixInverse");
                  var I = i.skeleton;
                  I &&
                    (X.floatVertexTextures
                      ? (null === I.boneTexture && I.computeBoneTexture(),
                        R.setValue(ge, "boneTexture", I.boneTexture, $),
                        R.setValue(ge, "boneTextureSize", I.boneTextureSize))
                      : console.warn(
                          "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."
                        ));
                }
                var N = n.morphAttributes;
                (void 0 !== N.position ||
                  void 0 !== N.normal ||
                  (void 0 !== N.color && !0 === X.isWebGL2)) &&
                  ce.update(i, n, r, E);
                (C || x.receiveShadow !== i.receiveShadow) &&
                  ((x.receiveShadow = i.receiveShadow),
                  R.setValue(ge, "receiveShadow", i.receiveShadow));
                r.isMeshGouraudMaterial &&
                  null !== r.envMap &&
                  ((L.envMap.value = u),
                  (L.flipEnvMap.value =
                    u.isCubeTexture && !1 === u.isRenderTargetTexture
                      ? -1
                      : 1));
                C &&
                  (R.setValue(ge, "toneMappingExposure", m.toneMappingExposure),
                  x.needsLights &&
                    ((F = P),
                    ((D = L).ambientLightColor.needsUpdate = F),
                    (D.lightProbe.needsUpdate = F),
                    (D.directionalLights.needsUpdate = F),
                    (D.directionalLightShadows.needsUpdate = F),
                    (D.pointLights.needsUpdate = F),
                    (D.pointLightShadows.needsUpdate = F),
                    (D.spotLights.needsUpdate = F),
                    (D.spotLightShadows.needsUpdate = F),
                    (D.rectAreaLights.needsUpdate = F),
                    (D.hemisphereLights.needsUpdate = F)),
                  a && !0 === r.fog && ie.refreshFogUniforms(L, a),
                  ie.refreshMaterialUniforms(L, r, k, O, B),
                  Ls.upload(ge, x.uniformsList, L, $));
                var D, F;
                r.isShaderMaterial &&
                  !0 === r.uniformsNeedUpdate &&
                  (Ls.upload(ge, x.uniformsList, L, $),
                  (r.uniformsNeedUpdate = !1));
                r.isSpriteMaterial && R.setValue(ge, "center", i.center);
                if (
                  (R.setValue(ge, "modelViewMatrix", i.modelViewMatrix),
                  R.setValue(ge, "normalMatrix", i.normalMatrix),
                  R.setValue(ge, "modelMatrix", i.matrixWorld),
                  r.isShaderMaterial || r.isRawShaderMaterial)
                )
                  for (
                    var G = r.uniformsGroups, W = 0, q = G.length;
                    W < q;
                    W++
                  )
                    if (X.isWebGL2) {
                      var J = G[W];
                      ve.update(J, E), ve.bind(J, E);
                    } else
                      console.warn(
                        "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2."
                      );
                return E;
              })(e, t, n, r, i);
            Y.setMaterial(r, o);
            var u = n.index,
              l = n.attributes.position;
            if (null === u) {
              if (void 0 === l || 0 === l.count) return;
            } else if (0 === u.count) return;
            var c,
              h = 1;
            !0 === r.wireframe && ((u = te.getWireframeAttribute(n)), (h = 2)),
              me.setup(i, r, s, n, u);
            var d = he;
            null !== u && ((c = ee.get(u)), (d = fe).setIndex(c));
            var p = null !== u ? u.count : l.count,
              v = n.drawRange.start * h,
              g = n.drawRange.count * h,
              y = null !== a ? a.start * h : 0,
              x = null !== a ? a.count * h : 1 / 0,
              S = Math.max(v, y),
              M = Math.min(p, v + g, y + x) - 1,
              T = Math.max(0, M - S + 1);
            if (0 !== T) {
              if (i.isMesh)
                !0 === r.wireframe
                  ? (Y.setLineWidth(r.wireframeLinewidth * W()), d.setMode(1))
                  : d.setMode(4);
              else if (i.isLine) {
                var E = r.linewidth;
                void 0 === E && (E = 1),
                  Y.setLineWidth(E * W()),
                  i.isLineSegments
                    ? d.setMode(1)
                    : i.isLineLoop
                    ? d.setMode(2)
                    : d.setMode(3);
              } else i.isPoints ? d.setMode(0) : i.isSprite && d.setMode(4);
              if (i.isInstancedMesh) d.renderInstances(S, T, i.count);
              else if (n.isInstancedBufferGeometry) {
                var A = Math.min(n.instanceCount, n._maxInstanceCount);
                d.renderInstances(S, T, A);
              } else d.render(S, T);
            }
          }),
          (this.compile = function (e, t) {
            function n(e, t, n) {
              !0 === e.transparent && e.side === L
                ? ((e.side = R),
                  (e.needsUpdate = !0),
                  je(e, t, n),
                  (e.side = P),
                  (e.needsUpdate = !0),
                  je(e, t, n),
                  (e.side = L))
                : je(e, t, n);
            }
            (f = oe.get(e)).init(),
              p.push(f),
              e.traverseVisible(function (e) {
                e.isLight &&
                  e.layers.test(t.layers) &&
                  (f.pushLight(e), e.castShadow && f.pushShadow(e));
              }),
              f.setupLights(m.physicallyCorrectLights),
              e.traverse(function (t) {
                var r = t.material;
                if (r)
                  if (Array.isArray(r))
                    for (var i = 0; i < r.length; i++) {
                      n(r[i], e, t);
                    }
                  else n(r, e, t);
              }),
              p.pop(),
              (f = null);
          });
        var Oe = null;
        function ke() {
          Ce.stop();
        }
        function Ae() {
          Ce.start();
        }
        var Ce = new Xa();
        function Pe(e, t, n, r) {
          var i = e.opaque,
            a = e.transmissive,
            s = e.transparent;
          f.setupLightsView(n),
            a.length > 0 &&
              (function (e, t, n) {
                var r = X.isWebGL2;
                null === B &&
                  (B = new vr(1, 1, {
                    generateMipmaps: !0,
                    type: q.has("EXT_color_buffer_half_float") ? We : ze,
                    minFilter: Ne,
                    samples: r && !0 === o ? 4 : 0,
                  }));
                m.getDrawingBufferSize(G),
                  r ? B.setSize(G.x, G.y) : B.setSize(Gn(G.x), Gn(G.y));
                var i = m.getRenderTarget();
                m.setRenderTarget(B), m.clear();
                var a = m.toneMapping;
                (m.toneMapping = de),
                  Re(e, t, n),
                  (m.toneMapping = a),
                  $.updateMultisampleRenderTarget(B),
                  $.updateRenderTargetMipmap(B),
                  m.setRenderTarget(i);
              })(i, t, n),
            r && Y.viewport(S.copy(r)),
            i.length > 0 && Re(i, t, n),
            a.length > 0 && Re(a, t, n),
            s.length > 0 && Re(s, t, n),
            Y.buffers.depth.setTest(!0),
            Y.buffers.depth.setMask(!0),
            Y.buffers.color.setMask(!0),
            Y.setPolygonOffset(!1);
        }
        function Re(e, t, n) {
          for (
            var r = !0 === t.isScene ? t.overrideMaterial : null,
              i = 0,
              a = e.length;
            i < a;
            i++
          ) {
            var o = e[i],
              s = o.object,
              u = o.geometry,
              l = null === r ? o.material : r,
              c = o.group;
            s.layers.test(n.layers) && Le(s, t, n, u, l, c);
          }
        }
        function Le(e, t, n, r, i, a) {
          e.onBeforeRender(m, t, n, r, i, a),
            e.modelViewMatrix.multiplyMatrices(
              n.matrixWorldInverse,
              e.matrixWorld
            ),
            e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
            i.onBeforeRender(m, t, n, r, e, a),
            !0 === i.transparent && i.side === L
              ? ((i.side = R),
                (i.needsUpdate = !0),
                m.renderBufferDirect(n, t, r, i, e, a),
                (i.side = P),
                (i.needsUpdate = !0),
                m.renderBufferDirect(n, t, r, i, e, a),
                (i.side = L))
              : m.renderBufferDirect(n, t, r, i, e, a),
            e.onAfterRender(m, t, n, r, i, a);
        }
        function je(e, t, n) {
          !0 !== t.isScene && (t = V);
          var r = Z.get(e),
            i = f.state.lights,
            a = f.state.shadowsArray,
            o = i.state.version,
            s = re.getParameters(e, i.state, a, t, n),
            u = re.getProgramCacheKey(s),
            l = r.programs;
          (r.environment = e.isMeshStandardMaterial ? t.environment : null),
            (r.fog = t.fog),
            (r.envMap = (e.isMeshStandardMaterial ? Q : K).get(
              e.envMap || r.environment
            )),
            void 0 === l &&
              (e.addEventListener("dispose", Ee),
              (l = new Map()),
              (r.programs = l));
          var c = l.get(u);
          if (void 0 !== c) {
            if (r.currentProgram === c && r.lightsStateVersion === o)
              return Ie(e, s), c;
          } else
            (s.uniforms = re.getUniforms(e)),
              e.onBuild(n, s, m),
              e.onBeforeCompile(s, m),
              (c = re.acquireProgram(s, u)),
              l.set(u, c),
              (r.uniforms = s.uniforms);
          var h = r.uniforms;
          ((e.isShaderMaterial || e.isRawShaderMaterial) &&
            !0 !== e.clipping) ||
            (h.clippingPlanes = se.uniform),
            Ie(e, s),
            (r.needsLights = (function (e) {
              return (
                e.isMeshLambertMaterial ||
                e.isMeshToonMaterial ||
                e.isMeshPhongMaterial ||
                e.isMeshStandardMaterial ||
                e.isShadowMaterial ||
                (e.isShaderMaterial && !0 === e.lights)
              );
            })(e)),
            (r.lightsStateVersion = o),
            r.needsLights &&
              ((h.ambientLightColor.value = i.state.ambient),
              (h.lightProbe.value = i.state.probe),
              (h.directionalLights.value = i.state.directional),
              (h.directionalLightShadows.value = i.state.directionalShadow),
              (h.spotLights.value = i.state.spot),
              (h.spotLightShadows.value = i.state.spotShadow),
              (h.rectAreaLights.value = i.state.rectArea),
              (h.ltc_1.value = i.state.rectAreaLTC1),
              (h.ltc_2.value = i.state.rectAreaLTC2),
              (h.pointLights.value = i.state.point),
              (h.pointLightShadows.value = i.state.pointShadow),
              (h.hemisphereLights.value = i.state.hemi),
              (h.directionalShadowMap.value = i.state.directionalShadowMap),
              (h.directionalShadowMatrix.value =
                i.state.directionalShadowMatrix),
              (h.spotShadowMap.value = i.state.spotShadowMap),
              (h.spotLightMatrix.value = i.state.spotLightMatrix),
              (h.spotLightMap.value = i.state.spotLightMap),
              (h.pointShadowMap.value = i.state.pointShadowMap),
              (h.pointShadowMatrix.value = i.state.pointShadowMatrix));
          var d = c.getUniforms(),
            p = Ls.seqWithValue(d.seq, h);
          return (r.currentProgram = c), (r.uniformsList = p), c;
        }
        function Ie(e, t) {
          var n = Z.get(e);
          (n.outputEncoding = t.outputEncoding),
            (n.instancing = t.instancing),
            (n.skinning = t.skinning),
            (n.morphTargets = t.morphTargets),
            (n.morphNormals = t.morphNormals),
            (n.morphColors = t.morphColors),
            (n.morphTargetsCount = t.morphTargetsCount),
            (n.numClippingPlanes = t.numClippingPlanes),
            (n.numIntersection = t.numClipIntersection),
            (n.vertexAlphas = t.vertexAlphas),
            (n.vertexTangents = t.vertexTangents),
            (n.toneMapping = t.toneMapping);
        }
        Ce.setAnimationLoop(function (e) {
          Oe && Oe(e);
        }),
          "undefined" !== typeof self && Ce.setContext(self),
          (this.setAnimationLoop = function (e) {
            (Oe = e),
              we.setAnimationLoop(e),
              null === e ? Ce.stop() : Ce.start();
          }),
          we.addEventListener("sessionstart", ke),
          we.addEventListener("sessionend", Ae),
          (this.render = function (e, t) {
            if (void 0 === t || !0 === t.isCamera) {
              if (!0 !== v) {
                !0 === e.matrixWorldAutoUpdate && e.updateMatrixWorld(),
                  null === t.parent &&
                    !0 === t.matrixWorldAutoUpdate &&
                    t.updateMatrixWorld(),
                  !0 === we.enabled &&
                    !0 === we.isPresenting &&
                    (!0 === we.cameraAutoUpdate && we.updateCamera(t),
                    (t = we.getCamera())),
                  !0 === e.isScene && e.onBeforeRender(m, e, t, b),
                  (f = oe.get(e, p.length)).init(),
                  p.push(f),
                  F.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                  D.setFromProjectionMatrix(F),
                  (U = this.localClippingEnabled),
                  (z = se.init(this.clippingPlanes, U, t)),
                  (h = ae.get(e, d.length)).init(),
                  d.push(h),
                  (function e(t, n, r, i) {
                    if (!1 === t.visible) return;
                    var a = t.layers.test(n.layers);
                    if (a)
                      if (t.isGroup) r = t.renderOrder;
                      else if (t.isLOD) !0 === t.autoUpdate && t.update(n);
                      else if (t.isLight)
                        f.pushLight(t), t.castShadow && f.pushShadow(t);
                      else if (t.isSprite) {
                        if (!t.frustumCulled || D.intersectsSprite(t)) {
                          i &&
                            H.setFromMatrixPosition(t.matrixWorld).applyMatrix4(
                              F
                            );
                          var o = ne.update(t),
                            s = t.material;
                          s.visible && h.push(t, o, s, r, H.z, null);
                        }
                      } else if (
                        (t.isMesh || t.isLine || t.isPoints) &&
                        (t.isSkinnedMesh &&
                          t.skeleton.frame !== J.render.frame &&
                          (t.skeleton.update(),
                          (t.skeleton.frame = J.render.frame)),
                        !t.frustumCulled || D.intersectsObject(t))
                      ) {
                        i &&
                          H.setFromMatrixPosition(t.matrixWorld).applyMatrix4(
                            F
                          );
                        var u = ne.update(t),
                          l = t.material;
                        if (Array.isArray(l))
                          for (
                            var c = u.groups, d = 0, p = c.length;
                            d < p;
                            d++
                          ) {
                            var m = c[d],
                              v = l[m.materialIndex];
                            v && v.visible && h.push(t, u, v, r, H.z, m);
                          }
                        else l.visible && h.push(t, u, l, r, H.z, null);
                      }
                    var g = t.children;
                    for (var y = 0, b = g.length; y < b; y++) e(g[y], n, r, i);
                  })(e, t, 0, m.sortObjects),
                  h.finish(),
                  !0 === m.sortObjects && h.sort(A, C),
                  !0 === z && se.beginShadows();
                var n = f.state.shadowsArray;
                if (
                  (ue.render(n, e, t),
                  !0 === z && se.endShadows(),
                  !0 === this.info.autoReset && this.info.reset(),
                  le.render(h, e),
                  f.setupLights(m.physicallyCorrectLights),
                  t.isArrayCamera)
                )
                  for (var r = t.cameras, i = 0, a = r.length; i < a; i++) {
                    var o = r[i];
                    Pe(h, e, o, o.viewport);
                  }
                else Pe(h, e, t);
                null !== b &&
                  ($.updateMultisampleRenderTarget(b),
                  $.updateRenderTargetMipmap(b)),
                  !0 === e.isScene && e.onAfterRender(m, e, t),
                  me.resetDefaultState(),
                  (_ = -1),
                  (w = null),
                  p.pop(),
                  (f = p.length > 0 ? p[p.length - 1] : null),
                  d.pop(),
                  (h = d.length > 0 ? d[d.length - 1] : null);
              }
            } else
              console.error(
                "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
              );
          }),
          (this.getActiveCubeFace = function () {
            return g;
          }),
          (this.getActiveMipmapLevel = function () {
            return y;
          }),
          (this.getRenderTarget = function () {
            return b;
          }),
          (this.setRenderTargetTextures = function (e, t, n) {
            (Z.get(e.texture).__webglTexture = t),
              (Z.get(e.depthTexture).__webglTexture = n);
            var r = Z.get(e);
            (r.__hasExternalTextures = !0),
              r.__hasExternalTextures &&
                ((r.__autoAllocateDepthBuffer = void 0 === n),
                r.__autoAllocateDepthBuffer ||
                  (!0 === q.has("WEBGL_multisampled_render_to_texture") &&
                    (console.warn(
                      "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                    ),
                    (r.__useRenderToTexture = !1))));
          }),
          (this.setRenderTargetFramebuffer = function (e, t) {
            var n = Z.get(e);
            (n.__webglFramebuffer = t),
              (n.__useDefaultFramebuffer = void 0 === t);
          }),
          (this.setRenderTarget = function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            (b = e), (g = t), (y = n);
            var r = !0;
            if (e) {
              var i = Z.get(e);
              void 0 !== i.__useDefaultFramebuffer
                ? (Y.bindFramebuffer(36160, null), (r = !1))
                : void 0 === i.__webglFramebuffer
                ? $.setupRenderTarget(e)
                : i.__hasExternalTextures &&
                  $.rebindTextures(
                    e,
                    Z.get(e.texture).__webglTexture,
                    Z.get(e.depthTexture).__webglTexture
                  );
            }
            var a = null,
              o = !1,
              s = !1;
            if (e) {
              var u = e.texture;
              (u.isData3DTexture || u.isDataArrayTexture) && (s = !0);
              var l = Z.get(e).__webglFramebuffer;
              e.isWebGLCubeRenderTarget
                ? ((a = l[t]), (o = !0))
                : (a =
                    X.isWebGL2 &&
                    e.samples > 0 &&
                    !1 === $.useMultisampledRTT(e)
                      ? Z.get(e).__webglMultisampledFramebuffer
                      : l),
                S.copy(e.viewport),
                M.copy(e.scissor),
                (T = e.scissorTest);
            } else
              S.copy(j).multiplyScalar(k).floor(),
                M.copy(I).multiplyScalar(k).floor(),
                (T = N);
            var c = Y.bindFramebuffer(36160, a);
            if (
              (c && X.drawBuffers && r && Y.drawBuffers(e, a),
              Y.viewport(S),
              Y.scissor(M),
              Y.setScissorTest(T),
              o)
            ) {
              var h = Z.get(e.texture);
              ge.framebufferTexture2D(
                36160,
                36064,
                34069 + t,
                h.__webglTexture,
                n
              );
            } else if (s) {
              var f = Z.get(e.texture),
                d = t || 0;
              ge.framebufferTextureLayer(
                36160,
                36064,
                f.__webglTexture,
                n || 0,
                d
              );
            }
            _ = -1;
          }),
          (this.readRenderTargetPixels = function (e, t, n, r, i, a, o) {
            if (e && e.isWebGLRenderTarget) {
              var s = Z.get(e).__webglFramebuffer;
              if (
                (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s)
              ) {
                Y.bindFramebuffer(36160, s);
                try {
                  var u = e.texture,
                    l = u.format,
                    c = u.type;
                  if (l !== $e && pe.convert(l) !== ge.getParameter(35739))
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                    );
                  var h =
                    c === We &&
                    (q.has("EXT_color_buffer_half_float") ||
                      (X.isWebGL2 && q.has("EXT_color_buffer_float")));
                  if (
                    c !== ze &&
                    pe.convert(c) !== ge.getParameter(35738) &&
                    (c !== Ve ||
                      !(
                        X.isWebGL2 ||
                        q.has("OES_texture_float") ||
                        q.has("WEBGL_color_buffer_float")
                      )) &&
                    !h
                  )
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                    );
                  t >= 0 &&
                    t <= e.width - r &&
                    n >= 0 &&
                    n <= e.height - i &&
                    ge.readPixels(t, n, r, i, pe.convert(l), pe.convert(c), a);
                } finally {
                  var f = null !== b ? Z.get(b).__webglFramebuffer : null;
                  Y.bindFramebuffer(36160, f);
                }
              }
            } else
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
              );
          }),
          (this.copyFramebufferToTexture = function (e, t) {
            var n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              r = Math.pow(2, -n),
              i = Math.floor(t.image.width * r),
              a = Math.floor(t.image.height * r);
            $.setTexture2D(t, 0),
              ge.copyTexSubImage2D(3553, n, 0, 0, e.x, e.y, i, a),
              Y.unbindTexture();
          }),
          (this.copyTextureToTexture = function (e, t, n) {
            var r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0,
              i = t.image.width,
              a = t.image.height,
              o = pe.convert(n.format),
              s = pe.convert(n.type);
            $.setTexture2D(n, 0),
              ge.pixelStorei(37440, n.flipY),
              ge.pixelStorei(37441, n.premultiplyAlpha),
              ge.pixelStorei(3317, n.unpackAlignment),
              t.isDataTexture
                ? ge.texSubImage2D(3553, r, e.x, e.y, i, a, o, s, t.image.data)
                : t.isCompressedTexture
                ? ge.compressedTexSubImage2D(
                    3553,
                    r,
                    e.x,
                    e.y,
                    t.mipmaps[0].width,
                    t.mipmaps[0].height,
                    o,
                    t.mipmaps[0].data
                  )
                : ge.texSubImage2D(3553, r, e.x, e.y, o, s, t.image),
              0 === r && n.generateMipmaps && ge.generateMipmap(3553),
              Y.unbindTexture();
          }),
          (this.copyTextureToTexture3D = function (e, t, n, r) {
            var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 0;
            if (m.isWebGL1Renderer)
              console.warn(
                "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
              );
            else {
              var a,
                o = e.max.x - e.min.x + 1,
                s = e.max.y - e.min.y + 1,
                u = e.max.z - e.min.z + 1,
                l = pe.convert(r.format),
                c = pe.convert(r.type);
              if (r.isData3DTexture) $.setTexture3D(r, 0), (a = 32879);
              else {
                if (!r.isDataArrayTexture)
                  return void console.warn(
                    "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
                  );
                $.setTexture2DArray(r, 0), (a = 35866);
              }
              ge.pixelStorei(37440, r.flipY),
                ge.pixelStorei(37441, r.premultiplyAlpha),
                ge.pixelStorei(3317, r.unpackAlignment);
              var h = ge.getParameter(3314),
                f = ge.getParameter(32878),
                d = ge.getParameter(3316),
                p = ge.getParameter(3315),
                v = ge.getParameter(32877),
                g = n.isCompressedTexture ? n.mipmaps[0] : n.image;
              ge.pixelStorei(3314, g.width),
                ge.pixelStorei(32878, g.height),
                ge.pixelStorei(3316, e.min.x),
                ge.pixelStorei(3315, e.min.y),
                ge.pixelStorei(32877, e.min.z),
                n.isDataTexture || n.isData3DTexture
                  ? ge.texSubImage3D(a, i, t.x, t.y, t.z, o, s, u, l, c, g.data)
                  : n.isCompressedTexture
                  ? (console.warn(
                      "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
                    ),
                    ge.compressedTexSubImage3D(
                      a,
                      i,
                      t.x,
                      t.y,
                      t.z,
                      o,
                      s,
                      u,
                      l,
                      g.data
                    ))
                  : ge.texSubImage3D(a, i, t.x, t.y, t.z, o, s, u, l, c, g),
                ge.pixelStorei(3314, h),
                ge.pixelStorei(32878, f),
                ge.pixelStorei(3316, d),
                ge.pixelStorei(3315, p),
                ge.pixelStorei(32877, v),
                0 === i && r.generateMipmaps && ge.generateMipmap(a),
                Y.unbindTexture();
            }
          }),
          (this.initTexture = function (e) {
            e.isCubeTexture
              ? $.setTextureCube(e, 0)
              : e.isData3DTexture
              ? $.setTexture3D(e, 0)
              : e.isDataArrayTexture
              ? $.setTexture2DArray(e, 0)
              : $.setTexture2D(e, 0),
              Y.unbindTexture();
          }),
          (this.resetState = function () {
            (g = 0), (y = 0), (b = null), Y.reset(), me.reset();
          }),
          "undefined" !== typeof __THREE_DEVTOOLS__ &&
            __THREE_DEVTOOLS__.dispatchEvent(
              new CustomEvent("observe", { detail: this })
            );
      }
      var ku = (function (e) {
        function t() {
          return (
            Object(y.a)(this, t),
            Object(f.a)(this, Object(r.a)(t).apply(this, arguments))
          );
        }
        return Object(p.a)(t, e), t;
      })(Ou);
      ku.prototype.isWebGL1Renderer = !0;
      var Au,
        Cu = (function () {
          function e(t) {
            var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 25e-5;
            Object(y.a)(this, e),
              (this.isFogExp2 = !0),
              (this.name = ""),
              (this.color = new lr(t)),
              (this.density = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "clone",
                value: function () {
                  return new e(this.color, this.density);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return {
                    type: "FogExp2",
                    color: this.color.getHex(),
                    density: this.density,
                  };
                },
              },
            ]),
            e
          );
        })(),
        Pu = (function () {
          function e(t) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1e3;
            Object(y.a)(this, e),
              (this.isFog = !0),
              (this.name = ""),
              (this.color = new lr(t)),
              (this.near = n),
              (this.far = r);
          }
          return (
            Object(b.a)(e, [
              {
                key: "clone",
                value: function () {
                  return new e(this.color, this.near, this.far);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return {
                    type: "Fog",
                    color: this.color.getHex(),
                    near: this.near,
                    far: this.far,
                  };
                },
              },
            ]),
            e
          );
        })(),
        Ru = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isScene = !0),
              (e.type = "Scene"),
              (e.background = null),
              (e.environment = null),
              (e.fog = null),
              (e.overrideMaterial = null),
              "undefined" !== typeof __THREE_DEVTOOLS__ &&
                __THREE_DEVTOOLS__.dispatchEvent(
                  new CustomEvent("observe", { detail: Object(d.a)(e) })
                ),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    null !== e.background &&
                      (this.background = e.background.clone()),
                    null !== e.environment &&
                      (this.environment = e.environment.clone()),
                    null !== e.fog && (this.fog = e.fog.clone()),
                    null !== e.overrideMaterial &&
                      (this.overrideMaterial = e.overrideMaterial.clone()),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  return (
                    null !== this.fog && (n.object.fog = this.fog.toJSON()), n
                  );
                },
              },
              {
                key: "autoUpdate",
                get: function () {
                  return (
                    console.warn(
                      "THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."
                    ),
                    this.matrixWorldAutoUpdate
                  );
                },
                set: function (e) {
                  console.warn(
                    "THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."
                  ),
                    (this.matrixWorldAutoUpdate = e);
                },
              },
            ]),
            t
          );
        })(Ti),
        Lu = (function () {
          function e(t, n) {
            Object(y.a)(this, e),
              (this.isInterleavedBuffer = !0),
              (this.array = t),
              (this.stride = n),
              (this.count = void 0 !== t ? t.length / n : 0),
              (this.usage = bn),
              (this.updateRange = { offset: 0, count: -1 }),
              (this.version = 0),
              (this.uuid = Nn());
          }
          return (
            Object(b.a)(e, [
              { key: "onUploadCallback", value: function () {} },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.array = new e.array.constructor(e.array)),
                    (this.count = e.count),
                    (this.stride = e.stride),
                    (this.usage = e.usage),
                    this
                  );
                },
              },
              {
                key: "copyAt",
                value: function (e, t, n) {
                  (e *= this.stride), (n *= t.stride);
                  for (var r = 0, i = this.stride; r < i; r++)
                    this.array[e + r] = t.array[n + r];
                  return this;
                },
              },
              {
                key: "set",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return this.array.set(e, t), this;
                },
              },
              {
                key: "clone",
                value: function (e) {
                  void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid &&
                      (this.array.buffer._uuid = Nn()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
                      (e.arrayBuffers[this.array.buffer._uuid] =
                        this.array.slice(0).buffer);
                  var t = new this.array.constructor(
                      e.arrayBuffers[this.array.buffer._uuid]
                    ),
                    n = new this.constructor(t, this.stride);
                  return n.setUsage(this.usage), n;
                },
              },
              {
                key: "onUpload",
                value: function (e) {
                  return (this.onUploadCallback = e), this;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  return (
                    void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid &&
                      (this.array.buffer._uuid = Nn()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] &&
                      (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
                        new Uint32Array(this.array.buffer)
                      )),
                    {
                      uuid: this.uuid,
                      buffer: this.array.buffer._uuid,
                      type: this.array.constructor.name,
                      stride: this.stride,
                    }
                  );
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            e
          );
        })(),
        ju = new Sr(),
        Iu = (function () {
          function e(t, n, r) {
            var i =
              arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            Object(y.a)(this, e),
              (this.isInterleavedBufferAttribute = !0),
              (this.name = ""),
              (this.data = t),
              (this.itemSize = n),
              (this.offset = r),
              (this.normalized = !0 === i);
          }
          return (
            Object(b.a)(e, [
              {
                key: "applyMatrix4",
                value: function (e) {
                  for (var t = 0, n = this.data.count; t < n; t++)
                    ju.fromBufferAttribute(this, t),
                      ju.applyMatrix4(e),
                      this.setXYZ(t, ju.x, ju.y, ju.z);
                  return this;
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    ju.fromBufferAttribute(this, t),
                      ju.applyNormalMatrix(e),
                      this.setXYZ(t, ju.x, ju.y, ju.z);
                  return this;
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    ju.fromBufferAttribute(this, t),
                      ju.transformDirection(e),
                      this.setXYZ(t, ju.x, ju.y, ju.z);
                  return this;
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset] = t),
                    this
                  );
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset + 1] =
                      t),
                    this
                  );
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset + 2] =
                      t),
                    this
                  );
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Vn(t, this.array)),
                    (this.data.array[e * this.data.stride + this.offset + 3] =
                      t),
                    this
                  );
                },
              },
              {
                key: "getX",
                value: function (e) {
                  var t = this.data.array[e * this.data.stride + this.offset];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "getY",
                value: function (e) {
                  var t =
                    this.data.array[e * this.data.stride + this.offset + 1];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  var t =
                    this.data.array[e * this.data.stride + this.offset + 2];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "getW",
                value: function (e) {
                  var t =
                    this.data.array[e * this.data.stride + this.offset + 3];
                  return this.normalized && (t = Hn(t, this.array)), t;
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    this.normalized &&
                      ((t = Vn(t, this.array)), (n = Vn(n, this.array))),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    this.normalized &&
                      ((t = Vn(t, this.array)),
                      (n = Vn(n, this.array)),
                      (r = Vn(r, this.array))),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    (this.data.array[e + 2] = r),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, i) {
                  return (
                    (e = e * this.data.stride + this.offset),
                    this.normalized &&
                      ((t = Vn(t, this.array)),
                      (n = Vn(n, this.array)),
                      (r = Vn(r, this.array)),
                      (i = Vn(i, this.array))),
                    (this.data.array[e + 0] = t),
                    (this.data.array[e + 1] = n),
                    (this.data.array[e + 2] = r),
                    (this.data.array[e + 3] = i),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function (t) {
                  if (void 0 === t) {
                    console.log(
                      "THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data."
                    );
                    for (var n = [], r = 0; r < this.count; r++)
                      for (
                        var i = r * this.data.stride + this.offset, a = 0;
                        a < this.itemSize;
                        a++
                      )
                        n.push(this.data.array[i + a]);
                    return new Gi(
                      new this.array.constructor(n),
                      this.itemSize,
                      this.normalized
                    );
                  }
                  return (
                    void 0 === t.interleavedBuffers &&
                      (t.interleavedBuffers = {}),
                    void 0 === t.interleavedBuffers[this.data.uuid] &&
                      (t.interleavedBuffers[this.data.uuid] =
                        this.data.clone(t)),
                    new e(
                      t.interleavedBuffers[this.data.uuid],
                      this.itemSize,
                      this.offset,
                      this.normalized
                    )
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  if (void 0 === e) {
                    console.log(
                      "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data."
                    );
                    for (var t = [], n = 0; n < this.count; n++)
                      for (
                        var r = n * this.data.stride + this.offset, i = 0;
                        i < this.itemSize;
                        i++
                      )
                        t.push(this.data.array[r + i]);
                    return {
                      itemSize: this.itemSize,
                      type: this.array.constructor.name,
                      array: t,
                      normalized: this.normalized,
                    };
                  }
                  return (
                    void 0 === e.interleavedBuffers &&
                      (e.interleavedBuffers = {}),
                    void 0 === e.interleavedBuffers[this.data.uuid] &&
                      (e.interleavedBuffers[this.data.uuid] =
                        this.data.toJSON(e)),
                    {
                      isInterleavedBufferAttribute: !0,
                      itemSize: this.itemSize,
                      data: this.data.uuid,
                      offset: this.offset,
                      normalized: this.normalized,
                    }
                  );
                },
              },
              {
                key: "count",
                get: function () {
                  return this.data.count;
                },
              },
              {
                key: "array",
                get: function () {
                  return this.data.array;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  this.data.needsUpdate = e;
                },
              },
            ]),
            e
          );
        })(),
        Nu = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isSpriteMaterial = !0),
              (n.type = "SpriteMaterial"),
              (n.color = new lr(16777215)),
              (n.map = null),
              (n.alphaMap = null),
              (n.rotation = 0),
              (n.sizeAttenuation = !0),
              (n.transparent = !0),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.rotation = e.rotation),
                    (this.sizeAttenuation = e.sizeAttenuation),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        Du = new Sr(),
        zu = new Sr(),
        Uu = new Sr(),
        Bu = new qn(),
        Fu = new qn(),
        Gu = new ei(),
        Hu = new Sr(),
        Vu = new Sr(),
        Wu = new Sr(),
        qu = new qn(),
        Xu = new qn(),
        Yu = new qn(),
        Ju = (function (e) {
          function t(e) {
            var n;
            if (
              (Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this))).isSprite =
                !0),
              (n.type = "Sprite"),
              void 0 === Au)
            ) {
              Au = new oa();
              var i = new Float32Array([
                  -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1,
                  -0.5, 0.5, 0, 0, 1,
                ]),
                a = new Lu(i, 5);
              Au.setIndex([0, 1, 2, 0, 2, 3]),
                Au.setAttribute("position", new Iu(a, 3, 0, !1)),
                Au.setAttribute("uv", new Iu(a, 2, 3, !1));
            }
            return (
              (n.geometry = Au),
              (n.material = void 0 !== e ? e : new Nu()),
              (n.center = new qn(0.5, 0.5)),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "raycast",
                value: function (e, t) {
                  null === e.camera &&
                    console.error(
                      'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'
                    ),
                    zu.setFromMatrixScale(this.matrixWorld),
                    Gu.copy(e.camera.matrixWorld),
                    this.modelViewMatrix.multiplyMatrices(
                      e.camera.matrixWorldInverse,
                      this.matrixWorld
                    ),
                    Uu.setFromMatrixPosition(this.modelViewMatrix),
                    e.camera.isPerspectiveCamera &&
                      !1 === this.material.sizeAttenuation &&
                      zu.multiplyScalar(-Uu.z);
                  var n,
                    r,
                    i = this.material.rotation;
                  0 !== i && ((r = Math.cos(i)), (n = Math.sin(i)));
                  var a = this.center;
                  Zu(Hu.set(-0.5, -0.5, 0), Uu, a, zu, n, r),
                    Zu(Vu.set(0.5, -0.5, 0), Uu, a, zu, n, r),
                    Zu(Wu.set(0.5, 0.5, 0), Uu, a, zu, n, r),
                    qu.set(0, 0),
                    Xu.set(1, 0),
                    Yu.set(1, 1);
                  var o = e.ray.intersectTriangle(Hu, Vu, Wu, !1, Du);
                  if (
                    null !== o ||
                    (Zu(Vu.set(-0.5, 0.5, 0), Uu, a, zu, n, r),
                    Xu.set(0, 1),
                    null !== (o = e.ray.intersectTriangle(Hu, Wu, Vu, !1, Du)))
                  ) {
                    var s = e.ray.origin.distanceTo(Du);
                    s < e.near ||
                      s > e.far ||
                      t.push({
                        distance: s,
                        point: Du.clone(),
                        uv: Ni.getUV(Du, Hu, Vu, Wu, qu, Xu, Yu, new qn()),
                        face: null,
                        object: this,
                      });
                  }
                },
              },
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    void 0 !== e.center && this.center.copy(e.center),
                    (this.material = e.material),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ti);
      function Zu(e, t, n, r, i, a) {
        Bu.subVectors(e, n).addScalar(0.5).multiply(r),
          void 0 !== i
            ? ((Fu.x = a * Bu.x - i * Bu.y), (Fu.y = i * Bu.x + a * Bu.y))
            : Fu.copy(Bu),
          e.copy(t),
          (e.x += Fu.x),
          (e.y += Fu.y),
          e.applyMatrix4(Gu);
      }
      var $u = new Sr(),
        Ku = new Sr(),
        Qu = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              ))._currentLevel = 0),
              (e.type = "LOD"),
              Object.defineProperties(Object(d.a)(e), {
                levels: { enumerable: !0, value: [] },
                isLOD: { value: !0 },
              }),
              (e.autoUpdate = !0),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "copy", this).call(this, e, !1);
                  for (var n = e.levels, i = 0, a = n.length; i < a; i++) {
                    var o = n[i];
                    this.addLevel(o.object.clone(), o.distance);
                  }
                  return (this.autoUpdate = e.autoUpdate), this;
                },
              },
              {
                key: "addLevel",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  t = Math.abs(t);
                  var n,
                    r = this.levels;
                  for (n = 0; n < r.length && !(t < r[n].distance); n++);
                  return (
                    r.splice(n, 0, { distance: t, object: e }),
                    this.add(e),
                    this
                  );
                },
              },
              {
                key: "getCurrentLevel",
                value: function () {
                  return this._currentLevel;
                },
              },
              {
                key: "getObjectForDistance",
                value: function (e) {
                  var t = this.levels;
                  if (t.length > 0) {
                    var n, r;
                    for (
                      n = 1, r = t.length;
                      n < r && !(e < t[n].distance);
                      n++
                    );
                    return t[n - 1].object;
                  }
                  return null;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  if (this.levels.length > 0) {
                    $u.setFromMatrixPosition(this.matrixWorld);
                    var n = e.ray.origin.distanceTo($u);
                    this.getObjectForDistance(n).raycast(e, t);
                  }
                },
              },
              {
                key: "update",
                value: function (e) {
                  var t = this.levels;
                  if (t.length > 1) {
                    $u.setFromMatrixPosition(e.matrixWorld),
                      Ku.setFromMatrixPosition(this.matrixWorld);
                    var n,
                      r,
                      i = $u.distanceTo(Ku) / e.zoom;
                    for (
                      t[0].object.visible = !0, n = 1, r = t.length;
                      n < r && i >= t[n].distance;
                      n++
                    )
                      (t[n - 1].object.visible = !1),
                        (t[n].object.visible = !0);
                    for (this._currentLevel = n - 1; n < r; n++)
                      t[n].object.visible = !1;
                  }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  !1 === this.autoUpdate && (n.object.autoUpdate = !1),
                    (n.object.levels = []);
                  for (var i = this.levels, a = 0, o = i.length; a < o; a++) {
                    var s = i[a];
                    n.object.levels.push({
                      object: s.object.uuid,
                      distance: s.distance,
                    });
                  }
                  return n;
                },
              },
            ]),
            t
          );
        })(Ti),
        el = new Sr(),
        tl = new mr(),
        nl = new mr(),
        rl = new Sr(),
        il = new ei(),
        al = (function (e) {
          function t(e, n) {
            var i;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isSkinnedMesh = !0),
              (i.type = "SkinnedMesh"),
              (i.bindMode = "attached"),
              (i.bindMatrix = new ei()),
              (i.bindMatrixInverse = new ei()),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.bindMode = e.bindMode),
                    this.bindMatrix.copy(e.bindMatrix),
                    this.bindMatrixInverse.copy(e.bindMatrixInverse),
                    (this.skeleton = e.skeleton),
                    this
                  );
                },
              },
              {
                key: "bind",
                value: function (e, t) {
                  (this.skeleton = e),
                    void 0 === t &&
                      (this.updateMatrixWorld(!0),
                      this.skeleton.calculateInverses(),
                      (t = this.matrixWorld)),
                    this.bindMatrix.copy(t),
                    this.bindMatrixInverse.copy(t).invert();
                },
              },
              {
                key: "pose",
                value: function () {
                  this.skeleton.pose();
                },
              },
              {
                key: "normalizeSkinWeights",
                value: function () {
                  for (
                    var e = new mr(),
                      t = this.geometry.attributes.skinWeight,
                      n = 0,
                      r = t.count;
                    n < r;
                    n++
                  ) {
                    e.fromBufferAttribute(t, n);
                    var i = 1 / e.manhattanLength();
                    i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0),
                      t.setXYZW(n, e.x, e.y, e.z, e.w);
                  }
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "updateMatrixWorld", this).call(
                    this,
                    e
                  ),
                    "attached" === this.bindMode
                      ? this.bindMatrixInverse.copy(this.matrixWorld).invert()
                      : "detached" === this.bindMode
                      ? this.bindMatrixInverse.copy(this.bindMatrix).invert()
                      : console.warn(
                          "THREE.SkinnedMesh: Unrecognized bindMode: " +
                            this.bindMode
                        );
                },
              },
              {
                key: "boneTransform",
                value: function (e, t) {
                  var n = this.skeleton,
                    r = this.geometry;
                  tl.fromBufferAttribute(r.attributes.skinIndex, e),
                    nl.fromBufferAttribute(r.attributes.skinWeight, e),
                    el.copy(t).applyMatrix4(this.bindMatrix),
                    t.set(0, 0, 0);
                  for (var i = 0; i < 4; i++) {
                    var a = nl.getComponent(i);
                    if (0 !== a) {
                      var o = tl.getComponent(i);
                      il.multiplyMatrices(
                        n.bones[o].matrixWorld,
                        n.boneInverses[o]
                      ),
                        t.addScaledVector(rl.copy(el).applyMatrix4(il), a);
                    }
                  }
                  return t.applyMatrix4(this.bindMatrixInverse);
                },
              },
            ]),
            t
          );
        })(Ma),
        ol = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isBone = !0),
              (e.type = "Bone"),
              e
            );
          }
          return Object(p.a)(t, e), t;
        })(Ti),
        sl = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o = arguments.length > 3 ? arguments[3] : void 0,
              s = arguments.length > 4 ? arguments[4] : void 0,
              u = arguments.length > 5 ? arguments[5] : void 0,
              l = arguments.length > 6 ? arguments[6] : void 0,
              c = arguments.length > 7 ? arguments[7] : void 0,
              h =
                arguments.length > 8 && void 0 !== arguments[8]
                  ? arguments[8]
                  : ke,
              d =
                arguments.length > 9 && void 0 !== arguments[9]
                  ? arguments[9]
                  : ke,
              p = arguments.length > 10 ? arguments[10] : void 0,
              m = arguments.length > 11 ? arguments[11] : void 0;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, null, u, l, c, h, d, o, s, p, m)
              )).isDataTexture = !0),
              (e.image = { data: n, width: i, height: a }),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return Object(p.a)(t, e), t;
        })(pr),
        ul = new ei(),
        ll = new ei(),
        cl = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [];
            Object(y.a)(this, e),
              (this.uuid = Nn()),
              (this.bones = t.slice(0)),
              (this.boneInverses = n),
              (this.boneMatrices = null),
              (this.boneTexture = null),
              (this.boneTextureSize = 0),
              (this.frame = -1),
              this.init();
          }
          return (
            Object(b.a)(e, [
              {
                key: "init",
                value: function () {
                  var e = this.bones,
                    t = this.boneInverses;
                  if (
                    ((this.boneMatrices = new Float32Array(16 * e.length)),
                    0 === t.length)
                  )
                    this.calculateInverses();
                  else if (e.length !== t.length) {
                    console.warn(
                      "THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."
                    ),
                      (this.boneInverses = []);
                    for (var n = 0, r = this.bones.length; n < r; n++)
                      this.boneInverses.push(new ei());
                  }
                },
              },
              {
                key: "calculateInverses",
                value: function () {
                  this.boneInverses.length = 0;
                  for (var e = 0, t = this.bones.length; e < t; e++) {
                    var n = new ei();
                    this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(),
                      this.boneInverses.push(n);
                  }
                },
              },
              {
                key: "pose",
                value: function () {
                  for (var e = 0, t = this.bones.length; e < t; e++) {
                    var n = this.bones[e];
                    n && n.matrixWorld.copy(this.boneInverses[e]).invert();
                  }
                  for (var r = 0, i = this.bones.length; r < i; r++) {
                    var a = this.bones[r];
                    a &&
                      (a.parent && a.parent.isBone
                        ? (a.matrix.copy(a.parent.matrixWorld).invert(),
                          a.matrix.multiply(a.matrixWorld))
                        : a.matrix.copy(a.matrixWorld),
                      a.matrix.decompose(a.position, a.quaternion, a.scale));
                  }
                },
              },
              {
                key: "update",
                value: function () {
                  for (
                    var e = this.bones,
                      t = this.boneInverses,
                      n = this.boneMatrices,
                      r = this.boneTexture,
                      i = 0,
                      a = e.length;
                    i < a;
                    i++
                  ) {
                    var o = e[i] ? e[i].matrixWorld : ll;
                    ul.multiplyMatrices(o, t[i]), ul.toArray(n, 16 * i);
                  }
                  null !== r && (r.needsUpdate = !0);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new e(this.bones, this.boneInverses);
                },
              },
              {
                key: "computeBoneTexture",
                value: function () {
                  var e = Math.sqrt(4 * this.bones.length);
                  (e = Fn(e)), (e = Math.max(e, 4));
                  var t = new Float32Array(e * e * 4);
                  t.set(this.boneMatrices);
                  var n = new sl(t, e, e, $e, Ve);
                  return (
                    (n.needsUpdate = !0),
                    (this.boneMatrices = t),
                    (this.boneTexture = n),
                    (this.boneTextureSize = e),
                    this
                  );
                },
              },
              {
                key: "getBoneByName",
                value: function (e) {
                  for (var t = 0, n = this.bones.length; t < n; t++) {
                    var r = this.bones[t];
                    if (r.name === e) return r;
                  }
                },
              },
              {
                key: "dispose",
                value: function () {
                  null !== this.boneTexture &&
                    (this.boneTexture.dispose(), (this.boneTexture = null));
                },
              },
              {
                key: "fromJSON",
                value: function (e, t) {
                  this.uuid = e.uuid;
                  for (var n = 0, r = e.bones.length; n < r; n++) {
                    var i = e.bones[n],
                      a = t[i];
                    void 0 === a &&
                      (console.warn(
                        "THREE.Skeleton: No bone found with UUID:",
                        i
                      ),
                      (a = new ol())),
                      this.bones.push(a),
                      this.boneInverses.push(
                        new ei().fromArray(e.boneInverses[n])
                      );
                  }
                  return this.init(), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "Skeleton",
                      generator: "Skeleton.toJSON",
                    },
                    bones: [],
                    boneInverses: [],
                  };
                  e.uuid = this.uuid;
                  for (
                    var t = this.bones,
                      n = this.boneInverses,
                      r = 0,
                      i = t.length;
                    r < i;
                    r++
                  ) {
                    var a = t[r];
                    e.bones.push(a.uuid);
                    var o = n[r];
                    e.boneInverses.push(o.toArray());
                  }
                  return e;
                },
              },
            ]),
            e
          );
        })(),
        hl = (function (e) {
          function t(e, n, i) {
            var a,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i)
              )).isInstancedBufferAttribute = !0),
              (a.meshPerAttribute = o),
              a
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.meshPerAttribute = e.meshPerAttribute),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.meshPerAttribute = this.meshPerAttribute),
                    (e.isInstancedBufferAttribute = !0),
                    e
                  );
                },
              },
            ]),
            t
          );
        })(Gi),
        fl = new ei(),
        dl = new ei(),
        pl = [],
        ml = new Ma(),
        vl = (function (e) {
          function t(e, n, i) {
            var a;
            return (
              Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isInstancedMesh = !0),
              (a.instanceMatrix = new hl(new Float32Array(16 * i), 16)),
              (a.instanceColor = null),
              (a.count = i),
              (a.frustumCulled = !1),
              a
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    this.instanceMatrix.copy(e.instanceMatrix),
                    null !== e.instanceColor &&
                      (this.instanceColor = e.instanceColor.clone()),
                    (this.count = e.count),
                    this
                  );
                },
              },
              {
                key: "getColorAt",
                value: function (e, t) {
                  t.fromArray(this.instanceColor.array, 3 * e);
                },
              },
              {
                key: "getMatrixAt",
                value: function (e, t) {
                  t.fromArray(this.instanceMatrix.array, 16 * e);
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.matrixWorld,
                    r = this.count;
                  if (
                    ((ml.geometry = this.geometry),
                    (ml.material = this.material),
                    void 0 !== ml.material)
                  )
                    for (var i = 0; i < r; i++) {
                      this.getMatrixAt(i, fl),
                        dl.multiplyMatrices(n, fl),
                        (ml.matrixWorld = dl),
                        ml.raycast(e, pl);
                      for (var a = 0, o = pl.length; a < o; a++) {
                        var s = pl[a];
                        (s.instanceId = i), (s.object = this), t.push(s);
                      }
                      pl.length = 0;
                    }
                },
              },
              {
                key: "setColorAt",
                value: function (e, t) {
                  null === this.instanceColor &&
                    (this.instanceColor = new hl(
                      new Float32Array(3 * this.instanceMatrix.count),
                      3
                    )),
                    t.toArray(this.instanceColor.array, 3 * e);
                },
              },
              {
                key: "setMatrixAt",
                value: function (e, t) {
                  t.toArray(this.instanceMatrix.array, 16 * e);
                },
              },
              { key: "updateMorphTargets", value: function () {} },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            t
          );
        })(Ma),
        gl = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isLineBasicMaterial = !0),
              (n.type = "LineBasicMaterial"),
              (n.color = new lr(16777215)),
              (n.linewidth = 1),
              (n.linecap = "round"),
              (n.linejoin = "round"),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.linewidth = e.linewidth),
                    (this.linecap = e.linecap),
                    (this.linejoin = e.linejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        yl = new Sr(),
        bl = new Sr(),
        xl = new ei(),
        _l = new Qr(),
        wl = new Wr(),
        Sl = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new oa(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new gl();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isLine = !0),
              (e.type = "Line"),
              (e.geometry = n),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "computeLineDistances",
                value: function () {
                  var e = this.geometry;
                  if (null === e.index) {
                    for (
                      var t = e.attributes.position,
                        n = [0],
                        r = 1,
                        i = t.count;
                      r < i;
                      r++
                    )
                      yl.fromBufferAttribute(t, r - 1),
                        bl.fromBufferAttribute(t, r),
                        (n[r] = n[r - 1]),
                        (n[r] += yl.distanceTo(bl));
                    e.setAttribute("lineDistance", new $i(n, 1));
                  } else
                    console.warn(
                      "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
                    );
                  return this;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.matrixWorld,
                    i = e.params.Line.threshold,
                    a = n.drawRange;
                  if (
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    wl.copy(n.boundingSphere),
                    wl.applyMatrix4(r),
                    (wl.radius += i),
                    !1 !== e.ray.intersectsSphere(wl))
                  ) {
                    xl.copy(r).invert(), _l.copy(e.ray).applyMatrix4(xl);
                    var o =
                        i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                      s = o * o,
                      u = new Sr(),
                      l = new Sr(),
                      c = new Sr(),
                      h = new Sr(),
                      f = this.isLineSegments ? 2 : 1,
                      d = n.index,
                      p = n.attributes.position;
                    if (null !== d)
                      for (
                        var m = Math.max(0, a.start),
                          v = Math.min(d.count, a.start + a.count) - 1;
                        m < v;
                        m += f
                      ) {
                        var g = d.getX(m),
                          y = d.getX(m + 1);
                        if (
                          (u.fromBufferAttribute(p, g),
                          l.fromBufferAttribute(p, y),
                          !(_l.distanceSqToSegment(u, l, h, c) > s))
                        ) {
                          h.applyMatrix4(this.matrixWorld);
                          var b = e.ray.origin.distanceTo(h);
                          b < e.near ||
                            b > e.far ||
                            t.push({
                              distance: b,
                              point: c.clone().applyMatrix4(this.matrixWorld),
                              index: m,
                              face: null,
                              faceIndex: null,
                              object: this,
                            });
                        }
                      }
                    else
                      for (
                        var x = Math.max(0, a.start),
                          _ = Math.min(p.count, a.start + a.count) - 1;
                        x < _;
                        x += f
                      ) {
                        if (
                          (u.fromBufferAttribute(p, x),
                          l.fromBufferAttribute(p, x + 1),
                          !(_l.distanceSqToSegment(u, l, h, c) > s))
                        ) {
                          h.applyMatrix4(this.matrixWorld);
                          var w = e.ray.origin.distanceTo(h);
                          w < e.near ||
                            w > e.far ||
                            t.push({
                              distance: w,
                              point: c.clone().applyMatrix4(this.matrixWorld),
                              index: x,
                              face: null,
                              faceIndex: null,
                              object: this,
                            });
                        }
                      }
                  }
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, i = n.length; r < i; r++) {
                        var a = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[a] = r);
                      }
                    }
                  }
                },
              },
            ]),
            t
          );
        })(Ti),
        Ml = new Sr(),
        Tl = new Sr(),
        El = (function (e) {
          function t(e, n) {
            var i;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isLineSegments = !0),
              (i.type = "LineSegments"),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "computeLineDistances",
                value: function () {
                  var e = this.geometry;
                  if (null === e.index) {
                    for (
                      var t = e.attributes.position, n = [], r = 0, i = t.count;
                      r < i;
                      r += 2
                    )
                      Ml.fromBufferAttribute(t, r),
                        Tl.fromBufferAttribute(t, r + 1),
                        (n[r] = 0 === r ? 0 : n[r - 1]),
                        (n[r + 1] = n[r] + Ml.distanceTo(Tl));
                    e.setAttribute("lineDistance", new $i(n, 1));
                  } else
                    console.warn(
                      "THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
                    );
                  return this;
                },
              },
            ]),
            t
          );
        })(Sl),
        Ol = (function (e) {
          function t(e, n) {
            var i;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isLineLoop = !0),
              (i.type = "LineLoop"),
              i
            );
          }
          return Object(p.a)(t, e), t;
        })(Sl),
        kl = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isPointsMaterial = !0),
              (n.type = "PointsMaterial"),
              (n.color = new lr(16777215)),
              (n.map = null),
              (n.alphaMap = null),
              (n.size = 1),
              (n.sizeAttenuation = !0),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.size = e.size),
                    (this.sizeAttenuation = e.sizeAttenuation),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        Al = new ei(),
        Cl = new Qr(),
        Pl = new Wr(),
        Rl = new Sr(),
        Ll = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new oa(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new kl();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isPoints =
                !0),
              (e.type = "Points"),
              (e.geometry = n),
              (e.material = i),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.material = e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.matrixWorld,
                    i = e.params.Points.threshold,
                    a = n.drawRange;
                  if (
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    Pl.copy(n.boundingSphere),
                    Pl.applyMatrix4(r),
                    (Pl.radius += i),
                    !1 !== e.ray.intersectsSphere(Pl))
                  ) {
                    Al.copy(r).invert(), Cl.copy(e.ray).applyMatrix4(Al);
                    var o =
                        i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                      s = o * o,
                      u = n.index,
                      l = n.attributes.position;
                    if (null !== u)
                      for (
                        var c = Math.max(0, a.start),
                          h = Math.min(u.count, a.start + a.count);
                        c < h;
                        c++
                      ) {
                        var f = u.getX(c);
                        Rl.fromBufferAttribute(l, f),
                          jl(Rl, f, s, r, e, t, this);
                      }
                    else
                      for (
                        var d = Math.max(0, a.start),
                          p = Math.min(l.count, a.start + a.count);
                        d < p;
                        d++
                      )
                        Rl.fromBufferAttribute(l, d),
                          jl(Rl, d, s, r, e, t, this);
                  }
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, i = n.length; r < i; r++) {
                        var a = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[a] = r);
                      }
                    }
                  }
                },
              },
            ]),
            t
          );
        })(Ti);
      function jl(e, t, n, r, i, a, o) {
        var s = Cl.distanceSqToPoint(e);
        if (s < n) {
          var u = new Sr();
          Cl.closestPointToPoint(e, u), u.applyMatrix4(r);
          var l = i.ray.origin.distanceTo(u);
          if (l < i.near || l > i.far) return;
          a.push({
            distance: l,
            distanceToRay: Math.sqrt(s),
            point: u,
            index: t,
            face: null,
            object: o,
          });
        }
      }
      var Il = (function (e) {
          function t(e, n, i, a, o, s, u, l, c) {
            var h;
            Object(y.a)(this, t),
              ((h = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i, a, o, s, u, l, c)
              )).isVideoTexture = !0),
              (h.minFilter = void 0 !== s ? s : Le),
              (h.magFilter = void 0 !== o ? o : Le),
              (h.generateMipmaps = !1);
            var p = Object(d.a)(h);
            return (
              "requestVideoFrameCallback" in e &&
                e.requestVideoFrameCallback(function t() {
                  (p.needsUpdate = !0), e.requestVideoFrameCallback(t);
                }),
              h
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.image).copy(this);
                },
              },
              {
                key: "update",
                value: function () {
                  var e = this.image;
                  !1 === "requestVideoFrameCallback" in e &&
                    e.readyState >= e.HAVE_CURRENT_DATA &&
                    (this.needsUpdate = !0);
                },
              },
            ]),
            t
          );
        })(pr),
        Nl = (function (e) {
          function t(e, n, i) {
            var a;
            return (
              Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, { width: e, height: n })
              )).isFramebufferTexture = !0),
              (a.format = i),
              (a.magFilter = ke),
              (a.minFilter = ke),
              (a.generateMipmaps = !1),
              (a.needsUpdate = !0),
              a
            );
          }
          return Object(p.a)(t, e), t;
        })(pr),
        Dl = (function (e) {
          function t(e, n, i, a, o, s, u, l, c, h, d, p) {
            var m;
            return (
              Object(y.a)(this, t),
              ((m = Object(f.a)(
                this,
                Object(r.a)(t).call(this, null, s, u, l, c, h, a, o, d, p)
              )).isCompressedTexture = !0),
              (m.image = { width: n, height: i }),
              (m.mipmaps = e),
              (m.flipY = !1),
              (m.generateMipmaps = !1),
              m
            );
          }
          return Object(p.a)(t, e), t;
        })(pr),
        zl = (function (e) {
          function t(e, n, i, a, o, s, u, l, c) {
            var h;
            return (
              Object(y.a)(this, t),
              ((h = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i, a, o, s, u, l, c)
              )).isCanvasTexture = !0),
              (h.needsUpdate = !0),
              h
            );
          }
          return Object(p.a)(t, e), t;
        })(pr),
        Ul = (function () {
          function e() {
            Object(y.a)(this, e),
              (this.type = "Curve"),
              (this.arcLengthDivisions = 200);
          }
          return (
            Object(b.a)(e, [
              {
                key: "getPoint",
                value: function () {
                  return (
                    console.warn("THREE.Curve: .getPoint() not implemented."),
                    null
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  var n = this.getUtoTmapping(e);
                  return this.getPoint(n, t);
                },
              },
              {
                key: "getPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 5,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPoint(n / e));
                  return t;
                },
              },
              {
                key: "getSpacedPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 5,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPointAt(n / e));
                  return t;
                },
              },
              {
                key: "getLength",
                value: function () {
                  var e = this.getLengths();
                  return e[e.length - 1];
                },
              },
              {
                key: "getLengths",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : this.arcLengthDivisions;
                  if (
                    this.cacheArcLengths &&
                    this.cacheArcLengths.length === e + 1 &&
                    !this.needsUpdate
                  )
                    return this.cacheArcLengths;
                  this.needsUpdate = !1;
                  var t,
                    n = [],
                    r = this.getPoint(0),
                    i = 0;
                  n.push(0);
                  for (var a = 1; a <= e; a++)
                    (i += (t = this.getPoint(a / e)).distanceTo(r)),
                      n.push(i),
                      (r = t);
                  return (this.cacheArcLengths = n), n;
                },
              },
              {
                key: "updateArcLengths",
                value: function () {
                  (this.needsUpdate = !0), this.getLengths();
                },
              },
              {
                key: "getUtoTmapping",
                value: function (e, t) {
                  var n,
                    r = this.getLengths(),
                    i = 0,
                    a = r.length;
                  n = t || e * r[a - 1];
                  for (var o, s = 0, u = a - 1; s <= u; )
                    if ((o = r[(i = Math.floor(s + (u - s) / 2))] - n) < 0)
                      s = i + 1;
                    else {
                      if (!(o > 0)) {
                        u = i;
                        break;
                      }
                      u = i - 1;
                    }
                  if (r[(i = u)] === n) return i / (a - 1);
                  var l = r[i];
                  return (i + (n - l) / (r[i + 1] - l)) / (a - 1);
                },
              },
              {
                key: "getTangent",
                value: function (e, t) {
                  var n = e - 1e-4,
                    r = e + 1e-4;
                  n < 0 && (n = 0), r > 1 && (r = 1);
                  var i = this.getPoint(n),
                    a = this.getPoint(r),
                    o = t || (i.isVector2 ? new qn() : new Sr());
                  return o.copy(a).sub(i).normalize(), o;
                },
              },
              {
                key: "getTangentAt",
                value: function (e, t) {
                  var n = this.getUtoTmapping(e);
                  return this.getTangent(n, t);
                },
              },
              {
                key: "computeFrenetFrames",
                value: function (e, t) {
                  for (
                    var n = new Sr(),
                      r = [],
                      i = [],
                      a = [],
                      o = new Sr(),
                      s = new ei(),
                      u = 0;
                    u <= e;
                    u++
                  ) {
                    var l = u / e;
                    r[u] = this.getTangentAt(l, new Sr());
                  }
                  (i[0] = new Sr()), (a[0] = new Sr());
                  var c = Number.MAX_VALUE,
                    h = Math.abs(r[0].x),
                    f = Math.abs(r[0].y),
                    d = Math.abs(r[0].z);
                  h <= c && ((c = h), n.set(1, 0, 0)),
                    f <= c && ((c = f), n.set(0, 1, 0)),
                    d <= c && n.set(0, 0, 1),
                    o.crossVectors(r[0], n).normalize(),
                    i[0].crossVectors(r[0], o),
                    a[0].crossVectors(r[0], i[0]);
                  for (var p = 1; p <= e; p++) {
                    if (
                      ((i[p] = i[p - 1].clone()),
                      (a[p] = a[p - 1].clone()),
                      o.crossVectors(r[p - 1], r[p]),
                      o.length() > Number.EPSILON)
                    ) {
                      o.normalize();
                      var m = Math.acos(Dn(r[p - 1].dot(r[p]), -1, 1));
                      i[p].applyMatrix4(s.makeRotationAxis(o, m));
                    }
                    a[p].crossVectors(r[p], i[p]);
                  }
                  if (!0 === t) {
                    var v = Math.acos(Dn(i[0].dot(i[e]), -1, 1));
                    (v /= e),
                      r[0].dot(o.crossVectors(i[0], i[e])) > 0 && (v = -v);
                    for (var g = 1; g <= e; g++)
                      i[g].applyMatrix4(s.makeRotationAxis(r[g], v * g)),
                        a[g].crossVectors(r[g], i[g]);
                  }
                  return { tangents: r, normals: i, binormals: a };
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.arcLengthDivisions = e.arcLengthDivisions), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.5,
                      type: "Curve",
                      generator: "Curve.toJSON",
                    },
                  };
                  return (
                    (e.arcLengthDivisions = this.arcLengthDivisions),
                    (e.type = this.type),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (this.arcLengthDivisions = e.arcLengthDivisions), this;
                },
              },
            ]),
            e
          );
        })(),
        Bl = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2 * Math.PI,
              l =
                arguments.length > 6 && void 0 !== arguments[6] && arguments[6],
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : 0;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isEllipseCurve = !0),
              (e.type = "EllipseCurve"),
              (e.aX = n),
              (e.aY = i),
              (e.xRadius = a),
              (e.yRadius = o),
              (e.aStartAngle = s),
              (e.aEndAngle = u),
              (e.aClockwise = l),
              (e.aRotation = c),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e, t) {
                  for (
                    var n = t || new qn(),
                      r = 2 * Math.PI,
                      i = this.aEndAngle - this.aStartAngle,
                      a = Math.abs(i) < Number.EPSILON;
                    i < 0;

                  )
                    i += r;
                  for (; i > r; ) i -= r;
                  i < Number.EPSILON && (i = a ? 0 : r),
                    !0 !== this.aClockwise ||
                      a ||
                      (i === r ? (i = -r) : (i -= r));
                  var o = this.aStartAngle + e * i,
                    s = this.aX + this.xRadius * Math.cos(o),
                    u = this.aY + this.yRadius * Math.sin(o);
                  if (0 !== this.aRotation) {
                    var l = Math.cos(this.aRotation),
                      c = Math.sin(this.aRotation),
                      h = s - this.aX,
                      f = u - this.aY;
                    (s = h * l - f * c + this.aX),
                      (u = h * c + f * l + this.aY);
                  }
                  return n.set(s, u);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.aX = e.aX),
                    (this.aY = e.aY),
                    (this.xRadius = e.xRadius),
                    (this.yRadius = e.yRadius),
                    (this.aStartAngle = e.aStartAngle),
                    (this.aEndAngle = e.aEndAngle),
                    (this.aClockwise = e.aClockwise),
                    (this.aRotation = e.aRotation),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.aX = this.aX),
                    (e.aY = this.aY),
                    (e.xRadius = this.xRadius),
                    (e.yRadius = this.yRadius),
                    (e.aStartAngle = this.aStartAngle),
                    (e.aEndAngle = this.aEndAngle),
                    (e.aClockwise = this.aClockwise),
                    (e.aRotation = this.aRotation),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    (this.aX = e.aX),
                    (this.aY = e.aY),
                    (this.xRadius = e.xRadius),
                    (this.yRadius = e.yRadius),
                    (this.aStartAngle = e.aStartAngle),
                    (this.aEndAngle = e.aEndAngle),
                    (this.aClockwise = e.aClockwise),
                    (this.aRotation = e.aRotation),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul),
        Fl = (function (e) {
          function t(e, n, i, a, o, s) {
            var u;
            return (
              Object(y.a)(this, t),
              ((u = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i, i, a, o, s)
              )).isArcCurve = !0),
              (u.type = "ArcCurve"),
              u
            );
          }
          return Object(p.a)(t, e), t;
        })(Bl);
      function Gl() {
        var e = 0,
          t = 0,
          n = 0,
          r = 0;
        function i(i, a, o, s) {
          (e = i),
            (t = o),
            (n = -3 * i + 3 * a - 2 * o - s),
            (r = 2 * i - 2 * a + o + s);
        }
        return {
          initCatmullRom: function (e, t, n, r, a) {
            i(t, n, a * (n - e), a * (r - t));
          },
          initNonuniformCatmullRom: function (e, t, n, r, a, o, s) {
            var u = (t - e) / a - (n - e) / (a + o) + (n - t) / o,
              l = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
            i(t, n, (u *= o), (l *= o));
          },
          calc: function (i) {
            var a = i * i;
            return e + t * i + n * a + r * (a * i);
          },
        };
      }
      var Hl = new Sr(),
        Vl = new Gl(),
        Wl = new Gl(),
        ql = new Gl(),
        Xl = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              i =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : "centripetal",
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0.5;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isCatmullRomCurve3 = !0),
              (e.type = "CatmullRomCurve3"),
              (e.points = n),
              (e.closed = i),
              (e.curveType = a),
              (e.tension = o),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t,
                    n,
                    r =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Sr(),
                    i = r,
                    a = this.points,
                    o = a.length,
                    s = (o - (this.closed ? 0 : 1)) * e,
                    u = Math.floor(s),
                    l = s - u;
                  this.closed
                    ? (u += u > 0 ? 0 : (Math.floor(Math.abs(u) / o) + 1) * o)
                    : 0 === l && u === o - 1 && ((u = o - 2), (l = 1)),
                    this.closed || u > 0
                      ? (t = a[(u - 1) % o])
                      : (Hl.subVectors(a[0], a[1]).add(a[0]), (t = Hl));
                  var c = a[u % o],
                    h = a[(u + 1) % o];
                  if (
                    (this.closed || u + 2 < o
                      ? (n = a[(u + 2) % o])
                      : (Hl.subVectors(a[o - 1], a[o - 2]).add(a[o - 1]),
                        (n = Hl)),
                    "centripetal" === this.curveType ||
                      "chordal" === this.curveType)
                  ) {
                    var f = "chordal" === this.curveType ? 0.5 : 0.25,
                      d = Math.pow(t.distanceToSquared(c), f),
                      p = Math.pow(c.distanceToSquared(h), f),
                      m = Math.pow(h.distanceToSquared(n), f);
                    p < 1e-4 && (p = 1),
                      d < 1e-4 && (d = p),
                      m < 1e-4 && (m = p),
                      Vl.initNonuniformCatmullRom(t.x, c.x, h.x, n.x, d, p, m),
                      Wl.initNonuniformCatmullRom(t.y, c.y, h.y, n.y, d, p, m),
                      ql.initNonuniformCatmullRom(t.z, c.z, h.z, n.z, d, p, m);
                  } else
                    "catmullrom" === this.curveType &&
                      (Vl.initCatmullRom(t.x, c.x, h.x, n.x, this.tension),
                      Wl.initCatmullRom(t.y, c.y, h.y, n.y, this.tension),
                      ql.initCatmullRom(t.z, c.z, h.z, n.z, this.tension));
                  return i.set(Vl.calc(l), Wl.calc(l), ql.calc(l)), i;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.points = []);
                  for (var n = 0, i = e.points.length; n < i; n++) {
                    var a = e.points[n];
                    this.points.push(a.clone());
                  }
                  return (
                    (this.closed = e.closed),
                    (this.curveType = e.curveType),
                    (this.tension = e.tension),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  e.points = [];
                  for (var n = 0, i = this.points.length; n < i; n++) {
                    var a = this.points[n];
                    e.points.push(a.toArray());
                  }
                  return (
                    (e.closed = this.closed),
                    (e.curveType = this.curveType),
                    (e.tension = this.tension),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    (this.points = []);
                  for (var n = 0, i = e.points.length; n < i; n++) {
                    var a = e.points[n];
                    this.points.push(new Sr().fromArray(a));
                  }
                  return (
                    (this.closed = e.closed),
                    (this.curveType = e.curveType),
                    (this.tension = e.tension),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul);
      function Yl(e, t, n, r, i) {
        var a = 0.5 * (r - t),
          o = 0.5 * (i - n),
          s = e * e;
        return (
          (2 * n - 2 * r + a + o) * (e * s) +
          (-3 * n + 3 * r - 2 * a - o) * s +
          a * e +
          n
        );
      }
      function Jl(e, t, n, r) {
        return (
          (function (e, t) {
            var n = 1 - e;
            return n * n * t;
          })(e, t) +
          (function (e, t) {
            return 2 * (1 - e) * e * t;
          })(e, n) +
          (function (e, t) {
            return e * e * t;
          })(e, r)
        );
      }
      function Zl(e, t, n, r, i) {
        return (
          (function (e, t) {
            var n = 1 - e;
            return n * n * n * t;
          })(e, t) +
          (function (e, t) {
            var n = 1 - e;
            return 3 * n * n * e * t;
          })(e, n) +
          (function (e, t) {
            return 3 * (1 - e) * e * e * t;
          })(e, r) +
          (function (e, t) {
            return e * e * e * t;
          })(e, i)
        );
      }
      var $l = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new qn(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new qn(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new qn(),
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new qn();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isCubicBezierCurve = !0),
              (e.type = "CubicBezierCurve"),
              (e.v0 = n),
              (e.v1 = i),
              (e.v2 = a),
              (e.v3 = o),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new qn(),
                    n = t,
                    r = this.v0,
                    i = this.v1,
                    a = this.v2,
                    o = this.v3;
                  return (
                    n.set(Zl(e, r.x, i.x, a.x, o.x), Zl(e, r.y, i.y, a.y, o.y)),
                    n
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this.v3.copy(e.v3),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    (e.v3 = this.v3.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this.v3.fromArray(e.v3),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul),
        Kl = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Sr(),
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new Sr();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isCubicBezierCurve3 = !0),
              (e.type = "CubicBezierCurve3"),
              (e.v0 = n),
              (e.v1 = i),
              (e.v2 = a),
              (e.v3 = o),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Sr(),
                    n = t,
                    r = this.v0,
                    i = this.v1,
                    a = this.v2,
                    o = this.v3;
                  return (
                    n.set(
                      Zl(e, r.x, i.x, a.x, o.x),
                      Zl(e, r.y, i.y, a.y, o.y),
                      Zl(e, r.z, i.z, a.z, o.z)
                    ),
                    n
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this.v3.copy(e.v3),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    (e.v3 = this.v3.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this.v3.fromArray(e.v3),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul),
        Ql = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new qn(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new qn();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isLineCurve =
                !0),
              (e.type = "LineCurve"),
              (e.v1 = n),
              (e.v2 = i),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new qn(),
                    n = t;
                  return (
                    1 === e
                      ? n.copy(this.v2)
                      : (n.copy(this.v2).sub(this.v1),
                        n.multiplyScalar(e).add(this.v1)),
                    n
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  return this.getPoint(e, t);
                },
              },
              {
                key: "getTangent",
                value: function (e, t) {
                  var n = t || new qn();
                  return n.copy(this.v2).sub(this.v1).normalize(), n;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul),
        ec = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).isLineCurve3 =
                !0),
              (e.type = "LineCurve3"),
              (e.v1 = n),
              (e.v2 = i),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Sr(),
                    n = t;
                  return (
                    1 === e
                      ? n.copy(this.v2)
                      : (n.copy(this.v2).sub(this.v1),
                        n.multiplyScalar(e).add(this.v1)),
                    n
                  );
                },
              },
              {
                key: "getPointAt",
                value: function (e, t) {
                  return this.getPoint(e, t);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul),
        tc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new qn(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new qn(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new qn();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isQuadraticBezierCurve = !0),
              (e.type = "QuadraticBezierCurve"),
              (e.v0 = n),
              (e.v1 = i),
              (e.v2 = a),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new qn(),
                    n = t,
                    r = this.v0,
                    i = this.v1,
                    a = this.v2;
                  return n.set(Jl(e, r.x, i.x, a.x), Jl(e, r.y, i.y, a.y)), n;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul),
        nc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr(),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Sr();
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isQuadraticBezierCurve3 = !0),
              (e.type = "QuadraticBezierCurve3"),
              (e.v0 = n),
              (e.v1 = i),
              (e.v2 = a),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new Sr(),
                    n = t,
                    r = this.v0,
                    i = this.v1,
                    a = this.v2;
                  return (
                    n.set(
                      Jl(e, r.x, i.x, a.x),
                      Jl(e, r.y, i.y, a.y),
                      Jl(e, r.z, i.z, a.z)
                    ),
                    n
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.v0.copy(e.v0),
                    this.v1.copy(e.v1),
                    this.v2.copy(e.v2),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (
                    (e.v0 = this.v0.toArray()),
                    (e.v1 = this.v1.toArray()),
                    (e.v2 = this.v2.toArray()),
                    e
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    this.v0.fromArray(e.v0),
                    this.v1.fromArray(e.v1),
                    this.v2.fromArray(e.v2),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ul),
        rc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [];
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isSplineCurve = !0),
              (e.type = "SplineCurve"),
              (e.points = n),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPoint",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : new qn(),
                    n = t,
                    r = this.points,
                    i = (r.length - 1) * e,
                    a = Math.floor(i),
                    o = i - a,
                    s = r[0 === a ? a : a - 1],
                    u = r[a],
                    l = r[a > r.length - 2 ? r.length - 1 : a + 1],
                    c = r[a > r.length - 3 ? r.length - 1 : a + 2];
                  return (
                    n.set(Yl(o, s.x, u.x, l.x, c.x), Yl(o, s.y, u.y, l.y, c.y)),
                    n
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.points = []);
                  for (var n = 0, i = e.points.length; n < i; n++) {
                    var a = e.points[n];
                    this.points.push(a.clone());
                  }
                  return this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  e.points = [];
                  for (var n = 0, i = this.points.length; n < i; n++) {
                    var a = this.points[n];
                    e.points.push(a.toArray());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    (this.points = []);
                  for (var n = 0, i = e.points.length; n < i; n++) {
                    var a = e.points[n];
                    this.points.push(new qn().fromArray(a));
                  }
                  return this;
                },
              },
            ]),
            t
          );
        })(Ul),
        ic = Object.freeze({
          __proto__: null,
          ArcCurve: Fl,
          CatmullRomCurve3: Xl,
          CubicBezierCurve: $l,
          CubicBezierCurve3: Kl,
          EllipseCurve: Bl,
          LineCurve: Ql,
          LineCurve3: ec,
          QuadraticBezierCurve: tc,
          QuadraticBezierCurve3: nc,
          SplineCurve: rc,
        }),
        ac = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "CurvePath"),
              (e.curves = []),
              (e.autoClose = !1),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "add",
                value: function (e) {
                  this.curves.push(e);
                },
              },
              {
                key: "closePath",
                value: function () {
                  var e = this.curves[0].getPoint(0),
                    t = this.curves[this.curves.length - 1].getPoint(1);
                  e.equals(t) || this.curves.push(new Ql(t, e));
                },
              },
              {
                key: "getPoint",
                value: function (e, t) {
                  for (
                    var n = e * this.getLength(),
                      r = this.getCurveLengths(),
                      i = 0;
                    i < r.length;

                  ) {
                    if (r[i] >= n) {
                      var a = r[i] - n,
                        o = this.curves[i],
                        s = o.getLength(),
                        u = 0 === s ? 0 : 1 - a / s;
                      return o.getPointAt(u, t);
                    }
                    i++;
                  }
                  return null;
                },
              },
              {
                key: "getLength",
                value: function () {
                  var e = this.getCurveLengths();
                  return e[e.length - 1];
                },
              },
              {
                key: "updateArcLengths",
                value: function () {
                  (this.needsUpdate = !0),
                    (this.cacheLengths = null),
                    this.getCurveLengths();
                },
              },
              {
                key: "getCurveLengths",
                value: function () {
                  if (
                    this.cacheLengths &&
                    this.cacheLengths.length === this.curves.length
                  )
                    return this.cacheLengths;
                  for (
                    var e = [], t = 0, n = 0, r = this.curves.length;
                    n < r;
                    n++
                  )
                    (t += this.curves[n].getLength()), e.push(t);
                  return (this.cacheLengths = e), e;
                },
              },
              {
                key: "getSpacedPoints",
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 40,
                      t = [],
                      n = 0;
                    n <= e;
                    n++
                  )
                    t.push(this.getPoint(n / e));
                  return this.autoClose && t.push(t[0]), t;
                },
              },
              {
                key: "getPoints",
                value: function () {
                  for (
                    var e,
                      t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 12,
                      n = [],
                      r = 0,
                      i = this.curves;
                    r < i.length;
                    r++
                  )
                    for (
                      var a = i[r],
                        o = a.isEllipseCurve
                          ? 2 * t
                          : a.isLineCurve || a.isLineCurve3
                          ? 1
                          : a.isSplineCurve
                          ? t * a.points.length
                          : t,
                        s = a.getPoints(o),
                        u = 0;
                      u < s.length;
                      u++
                    ) {
                      var l = s[u];
                      (e && e.equals(l)) || (n.push(l), (e = l));
                    }
                  return (
                    this.autoClose &&
                      n.length > 1 &&
                      !n[n.length - 1].equals(n[0]) &&
                      n.push(n[0]),
                    n
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.curves = []);
                  for (var n = 0, i = e.curves.length; n < i; n++) {
                    var a = e.curves[n];
                    this.curves.push(a.clone());
                  }
                  return (this.autoClose = e.autoClose), this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  (e.autoClose = this.autoClose), (e.curves = []);
                  for (var n = 0, i = this.curves.length; n < i; n++) {
                    var a = this.curves[n];
                    e.curves.push(a.toJSON());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    (this.autoClose = e.autoClose),
                    (this.curves = []);
                  for (var n = 0, i = e.curves.length; n < i; n++) {
                    var a = e.curves[n];
                    this.curves.push(new ic[a.type]().fromJSON(a));
                  }
                  return this;
                },
              },
            ]),
            t
          );
        })(Ul),
        oc = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "Path"),
              (n.currentPoint = new qn()),
              e && n.setFromPoints(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "setFromPoints",
                value: function (e) {
                  this.moveTo(e[0].x, e[0].y);
                  for (var t = 1, n = e.length; t < n; t++)
                    this.lineTo(e[t].x, e[t].y);
                  return this;
                },
              },
              {
                key: "moveTo",
                value: function (e, t) {
                  return this.currentPoint.set(e, t), this;
                },
              },
              {
                key: "lineTo",
                value: function (e, t) {
                  var n = new Ql(this.currentPoint.clone(), new qn(e, t));
                  return this.curves.push(n), this.currentPoint.set(e, t), this;
                },
              },
              {
                key: "quadraticCurveTo",
                value: function (e, t, n, r) {
                  var i = new tc(
                    this.currentPoint.clone(),
                    new qn(e, t),
                    new qn(n, r)
                  );
                  return this.curves.push(i), this.currentPoint.set(n, r), this;
                },
              },
              {
                key: "bezierCurveTo",
                value: function (e, t, n, r, i, a) {
                  var o = new $l(
                    this.currentPoint.clone(),
                    new qn(e, t),
                    new qn(n, r),
                    new qn(i, a)
                  );
                  return this.curves.push(o), this.currentPoint.set(i, a), this;
                },
              },
              {
                key: "splineThru",
                value: function (e) {
                  var t = [this.currentPoint.clone()].concat(e),
                    n = new rc(t);
                  return (
                    this.curves.push(n),
                    this.currentPoint.copy(e[e.length - 1]),
                    this
                  );
                },
              },
              {
                key: "arc",
                value: function (e, t, n, r, i, a) {
                  var o = this.currentPoint.x,
                    s = this.currentPoint.y;
                  return this.absarc(e + o, t + s, n, r, i, a), this;
                },
              },
              {
                key: "absarc",
                value: function (e, t, n, r, i, a) {
                  return this.absellipse(e, t, n, n, r, i, a), this;
                },
              },
              {
                key: "ellipse",
                value: function (e, t, n, r, i, a, o, s) {
                  var u = this.currentPoint.x,
                    l = this.currentPoint.y;
                  return this.absellipse(e + u, t + l, n, r, i, a, o, s), this;
                },
              },
              {
                key: "absellipse",
                value: function (e, t, n, r, i, a, o, s) {
                  var u = new Bl(e, t, n, r, i, a, o, s);
                  if (this.curves.length > 0) {
                    var l = u.getPoint(0);
                    l.equals(this.currentPoint) || this.lineTo(l.x, l.y);
                  }
                  this.curves.push(u);
                  var c = u.getPoint(1);
                  return this.currentPoint.copy(c), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.currentPoint.copy(e.currentPoint),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  return (e.currentPoint = this.currentPoint.toArray()), e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    this.currentPoint.fromArray(e.currentPoint),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(ac),
        sc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [new qn(0, -0.5), new qn(0.5, 0), new qn(0, 0.5)],
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 12,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2 * Math.PI;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "LatheGeometry"),
              (e.parameters = {
                points: n,
                segments: i,
                phiStart: a,
                phiLength: o,
              }),
              (i = Math.floor(i)),
              (o = Dn(o, 0, 2 * Math.PI));
            for (
              var s = [],
                u = [],
                l = [],
                c = [],
                h = [],
                d = 1 / i,
                p = new Sr(),
                m = new qn(),
                v = new Sr(),
                g = new Sr(),
                b = new Sr(),
                x = 0,
                _ = 0,
                w = 0;
              w <= n.length - 1;
              w++
            )
              switch (w) {
                case 0:
                  (x = n[w + 1].x - n[w].x),
                    (_ = n[w + 1].y - n[w].y),
                    (v.x = 1 * _),
                    (v.y = -x),
                    (v.z = 0 * _),
                    b.copy(v),
                    v.normalize(),
                    c.push(v.x, v.y, v.z);
                  break;
                case n.length - 1:
                  c.push(b.x, b.y, b.z);
                  break;
                default:
                  (x = n[w + 1].x - n[w].x),
                    (_ = n[w + 1].y - n[w].y),
                    (v.x = 1 * _),
                    (v.y = -x),
                    (v.z = 0 * _),
                    g.copy(v),
                    (v.x += b.x),
                    (v.y += b.y),
                    (v.z += b.z),
                    v.normalize(),
                    c.push(v.x, v.y, v.z),
                    b.copy(g);
              }
            for (var S = 0; S <= i; S++)
              for (
                var M = a + S * d * o, T = Math.sin(M), E = Math.cos(M), O = 0;
                O <= n.length - 1;
                O++
              ) {
                (p.x = n[O].x * T),
                  (p.y = n[O].y),
                  (p.z = n[O].x * E),
                  u.push(p.x, p.y, p.z),
                  (m.x = S / i),
                  (m.y = O / (n.length - 1)),
                  l.push(m.x, m.y);
                var k = c[3 * O + 0] * T,
                  A = c[3 * O + 1],
                  C = c[3 * O + 0] * E;
                h.push(k, A, C);
              }
            for (var P = 0; P < i; P++)
              for (var R = 0; R < n.length - 1; R++) {
                var L = R + P * n.length,
                  j = L,
                  I = L + n.length,
                  N = L + n.length + 1,
                  D = L + 1;
                s.push(j, I, D), s.push(N, D, I);
              }
            return (
              e.setIndex(s),
              e.setAttribute("position", new $i(u, 3)),
              e.setAttribute("uv", new $i(l, 2)),
              e.setAttribute("normal", new $i(h, 3)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(e.points, e.segments, e.phiStart, e.phiLength);
                },
              },
            ]),
            t
          );
        })(oa),
        uc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 4,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8;
            Object(y.a)(this, t);
            var s = new oc();
            return (
              s.absarc(0, -i / 2, n, 1.5 * Math.PI, 0),
              s.absarc(0, i / 2, n, 0, 0.5 * Math.PI),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, s.getPoints(a), o)
              )).type = "CapsuleGeometry"),
              (e.parameters = {
                radius: n,
                height: i,
                capSegments: a,
                radialSegments: o,
              }),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.radius,
                    e.length,
                    e.capSegments,
                    e.radialSegments
                  );
                },
              },
            ]),
            t
          );
        })(sc),
        lc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 8,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2 * Math.PI;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "CircleGeometry"),
              (e.parameters = {
                radius: n,
                segments: i,
                thetaStart: a,
                thetaLength: o,
              }),
              (i = Math.max(3, i));
            var s = [],
              u = [],
              l = [],
              c = [],
              h = new Sr(),
              d = new qn();
            u.push(0, 0, 0), l.push(0, 0, 1), c.push(0.5, 0.5);
            for (var p = 0, m = 3; p <= i; p++, m += 3) {
              var v = a + (p / i) * o;
              (h.x = n * Math.cos(v)),
                (h.y = n * Math.sin(v)),
                u.push(h.x, h.y, h.z),
                l.push(0, 0, 1),
                (d.x = (u[m] / n + 1) / 2),
                (d.y = (u[m + 1] / n + 1) / 2),
                c.push(d.x, d.y);
            }
            for (var g = 1; g <= i; g++) s.push(g, g + 1, 0);
            return (
              e.setIndex(s),
              e.setAttribute("position", new $i(u, 3)),
              e.setAttribute("normal", new $i(l, 3)),
              e.setAttribute("uv", new $i(c, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.radius,
                    e.segments,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        cc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 1,
              u =
                arguments.length > 5 && void 0 !== arguments[5] && arguments[5],
              l =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 0,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : 2 * Math.PI;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "CylinderGeometry"),
              (e.parameters = {
                radiusTop: n,
                radiusBottom: i,
                height: a,
                radialSegments: o,
                heightSegments: s,
                openEnded: u,
                thetaStart: l,
                thetaLength: c,
              });
            var h = Object(d.a)(e);
            (o = Math.floor(o)), (s = Math.floor(s));
            var p = [],
              m = [],
              v = [],
              g = [],
              b = 0,
              x = [],
              _ = a / 2,
              w = 0;
            function S(e) {
              for (
                var t = b,
                  r = new qn(),
                  a = new Sr(),
                  s = 0,
                  u = !0 === e ? n : i,
                  f = !0 === e ? 1 : -1,
                  d = 1;
                d <= o;
                d++
              )
                m.push(0, _ * f, 0), v.push(0, f, 0), g.push(0.5, 0.5), b++;
              for (var y = b, x = 0; x <= o; x++) {
                var S = (x / o) * c + l,
                  M = Math.cos(S),
                  T = Math.sin(S);
                (a.x = u * T),
                  (a.y = _ * f),
                  (a.z = u * M),
                  m.push(a.x, a.y, a.z),
                  v.push(0, f, 0),
                  (r.x = 0.5 * M + 0.5),
                  (r.y = 0.5 * T * f + 0.5),
                  g.push(r.x, r.y),
                  b++;
              }
              for (var E = 0; E < o; E++) {
                var O = t + E,
                  k = y + E;
                !0 === e ? p.push(k, k + 1, O) : p.push(k + 1, k, O), (s += 3);
              }
              h.addGroup(w, s, !0 === e ? 1 : 2), (w += s);
            }
            return (
              (function () {
                for (
                  var e = new Sr(), t = new Sr(), r = 0, u = (i - n) / a, f = 0;
                  f <= s;
                  f++
                ) {
                  for (
                    var d = [], y = f / s, S = y * (i - n) + n, M = 0;
                    M <= o;
                    M++
                  ) {
                    var T = M / o,
                      E = T * c + l,
                      O = Math.sin(E),
                      k = Math.cos(E);
                    (t.x = S * O),
                      (t.y = -y * a + _),
                      (t.z = S * k),
                      m.push(t.x, t.y, t.z),
                      e.set(O, u, k).normalize(),
                      v.push(e.x, e.y, e.z),
                      g.push(T, 1 - y),
                      d.push(b++);
                  }
                  x.push(d);
                }
                for (var A = 0; A < o; A++)
                  for (var C = 0; C < s; C++) {
                    var P = x[C][A],
                      R = x[C + 1][A],
                      L = x[C + 1][A + 1],
                      j = x[C][A + 1];
                    p.push(P, R, j), p.push(R, L, j), (r += 6);
                  }
                h.addGroup(w, r, 0), (w += r);
              })(),
              !1 === u && (n > 0 && S(!0), i > 0 && S(!1)),
              e.setIndex(p),
              e.setAttribute("position", new $i(m, 3)),
              e.setAttribute("normal", new $i(v, 3)),
              e.setAttribute("uv", new $i(g, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.radiusTop,
                    e.radiusBottom,
                    e.height,
                    e.radialSegments,
                    e.heightSegments,
                    e.openEnded,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        hc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0,
              l =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 2 * Math.PI;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, 0, n, i, a, o, s, u, l)
              )).type = "ConeGeometry"),
              (e.parameters = {
                radius: n,
                height: i,
                radialSegments: a,
                heightSegments: o,
                openEnded: s,
                thetaStart: u,
                thetaLength: l,
              }),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.radius,
                    e.height,
                    e.radialSegments,
                    e.heightSegments,
                    e.openEnded,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            t
          );
        })(cc),
        fc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [],
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "PolyhedronGeometry"),
              (e.parameters = {
                vertices: n,
                indices: i,
                radius: a,
                detail: o,
              });
            var s = [],
              u = [];
            function l(e, t, n, r) {
              for (var i = r + 1, a = [], o = 0; o <= i; o++) {
                a[o] = [];
                for (
                  var s = e.clone().lerp(n, o / i),
                    u = t.clone().lerp(n, o / i),
                    l = i - o,
                    h = 0;
                  h <= l;
                  h++
                )
                  a[o][h] = 0 === h && o === i ? s : s.clone().lerp(u, h / l);
              }
              for (var f = 0; f < i; f++)
                for (var d = 0; d < 2 * (i - f) - 1; d++) {
                  var p = Math.floor(d / 2);
                  d % 2 === 0
                    ? (c(a[f][p + 1]), c(a[f + 1][p]), c(a[f][p]))
                    : (c(a[f][p + 1]), c(a[f + 1][p + 1]), c(a[f + 1][p]));
                }
            }
            function c(e) {
              s.push(e.x, e.y, e.z);
            }
            function h(e, t) {
              var r = 3 * e;
              (t.x = n[r + 0]), (t.y = n[r + 1]), (t.z = n[r + 2]);
            }
            function d(e, t, n, r) {
              r < 0 && 1 === e.x && (u[t] = e.x - 1),
                0 === n.x && 0 === n.z && (u[t] = r / 2 / Math.PI + 0.5);
            }
            function p(e) {
              return Math.atan2(e.z, -e.x);
            }
            return (
              (function (e) {
                for (
                  var t = new Sr(), n = new Sr(), r = new Sr(), a = 0;
                  a < i.length;
                  a += 3
                )
                  h(i[a + 0], t), h(i[a + 1], n), h(i[a + 2], r), l(t, n, r, e);
              })(o),
              (function (e) {
                for (var t = new Sr(), n = 0; n < s.length; n += 3)
                  (t.x = s[n + 0]),
                    (t.y = s[n + 1]),
                    (t.z = s[n + 2]),
                    t.normalize().multiplyScalar(e),
                    (s[n + 0] = t.x),
                    (s[n + 1] = t.y),
                    (s[n + 2] = t.z);
              })(a),
              (function () {
                for (var e = new Sr(), t = 0; t < s.length; t += 3) {
                  (e.x = s[t + 0]), (e.y = s[t + 1]), (e.z = s[t + 2]);
                  var n = p(e) / 2 / Math.PI + 0.5,
                    r =
                      ((i = e),
                      Math.atan2(-i.y, Math.sqrt(i.x * i.x + i.z * i.z)) /
                        Math.PI +
                        0.5);
                  u.push(n, 1 - r);
                }
                var i;
                (function () {
                  for (
                    var e = new Sr(),
                      t = new Sr(),
                      n = new Sr(),
                      r = new Sr(),
                      i = new qn(),
                      a = new qn(),
                      o = new qn(),
                      l = 0,
                      c = 0;
                    l < s.length;
                    l += 9, c += 6
                  ) {
                    e.set(s[l + 0], s[l + 1], s[l + 2]),
                      t.set(s[l + 3], s[l + 4], s[l + 5]),
                      n.set(s[l + 6], s[l + 7], s[l + 8]),
                      i.set(u[c + 0], u[c + 1]),
                      a.set(u[c + 2], u[c + 3]),
                      o.set(u[c + 4], u[c + 5]),
                      r.copy(e).add(t).add(n).divideScalar(3);
                    var h = p(r);
                    d(i, c + 0, e, h), d(a, c + 2, t, h), d(o, c + 4, n, h);
                  }
                })(),
                  (function () {
                    for (var e = 0; e < u.length; e += 6) {
                      var t = u[e + 0],
                        n = u[e + 2],
                        r = u[e + 4],
                        i = Math.max(t, n, r),
                        a = Math.min(t, n, r);
                      i > 0.9 &&
                        a < 0.1 &&
                        (t < 0.2 && (u[e + 0] += 1),
                        n < 0.2 && (u[e + 2] += 1),
                        r < 0.2 && (u[e + 4] += 1));
                    }
                  })();
              })(),
              e.setAttribute("position", new $i(s, 3)),
              e.setAttribute("normal", new $i(s.slice(), 3)),
              e.setAttribute("uv", new $i(u, 2)),
              0 === o ? e.computeVertexNormals() : e.normalizeNormals(),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(e.vertices, e.indices, e.radius, e.details);
                },
              },
            ]),
            t
          );
        })(oa),
        dc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Object(y.a)(this, t);
            var a = (1 + Math.sqrt(5)) / 2,
              o = 1 / a,
              s = [
                -1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                1,
                1,
                1,
                0,
                -o,
                -a,
                0,
                -o,
                a,
                0,
                o,
                -a,
                0,
                o,
                a,
                -o,
                -a,
                0,
                -o,
                a,
                0,
                o,
                -a,
                0,
                o,
                a,
                0,
                -a,
                0,
                -o,
                a,
                0,
                -o,
                -a,
                0,
                o,
                a,
                0,
                o,
              ];
            return (
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(
                  this,
                  s,
                  [
                    3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6,
                    15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8,
                    2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6,
                    13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11,
                    18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5,
                    19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14,
                    1, 14, 5, 1, 5, 9,
                  ],
                  n,
                  i
                )
              )).type = "DodecahedronGeometry"),
              (e.parameters = { radius: n, detail: i }),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(e.radius, e.detail);
                },
              },
            ]),
            t
          );
        })(fc),
        pc = new Sr(),
        mc = new Sr(),
        vc = new Sr(),
        gc = new Ni(),
        yc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            if (
              (Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "EdgesGeometry"),
              (e.parameters = { geometry: n, thresholdAngle: i }),
              null !== n)
            ) {
              for (
                var a = Math.pow(10, 4),
                  o = Math.cos(jn * i),
                  s = n.getIndex(),
                  u = n.getAttribute("position"),
                  l = s ? s.count : u.count,
                  c = [0, 0, 0],
                  h = ["a", "b", "c"],
                  d = new Array(3),
                  p = {},
                  m = [],
                  v = 0;
                v < l;
                v += 3
              ) {
                s
                  ? ((c[0] = s.getX(v)),
                    (c[1] = s.getX(v + 1)),
                    (c[2] = s.getX(v + 2)))
                  : ((c[0] = v), (c[1] = v + 1), (c[2] = v + 2));
                var g = gc.a,
                  b = gc.b,
                  x = gc.c;
                if (
                  (g.fromBufferAttribute(u, c[0]),
                  b.fromBufferAttribute(u, c[1]),
                  x.fromBufferAttribute(u, c[2]),
                  gc.getNormal(vc),
                  (d[0] = ""
                    .concat(Math.round(g.x * a), ",")
                    .concat(Math.round(g.y * a), ",")
                    .concat(Math.round(g.z * a))),
                  (d[1] = ""
                    .concat(Math.round(b.x * a), ",")
                    .concat(Math.round(b.y * a), ",")
                    .concat(Math.round(b.z * a))),
                  (d[2] = ""
                    .concat(Math.round(x.x * a), ",")
                    .concat(Math.round(x.y * a), ",")
                    .concat(Math.round(x.z * a))),
                  d[0] !== d[1] && d[1] !== d[2] && d[2] !== d[0])
                )
                  for (var _ = 0; _ < 3; _++) {
                    var w = (_ + 1) % 3,
                      S = d[_],
                      M = d[w],
                      T = gc[h[_]],
                      E = gc[h[w]],
                      O = "".concat(S, "_").concat(M),
                      k = "".concat(M, "_").concat(S);
                    k in p && p[k]
                      ? (vc.dot(p[k].normal) <= o &&
                          (m.push(T.x, T.y, T.z), m.push(E.x, E.y, E.z)),
                        (p[k] = null))
                      : O in p ||
                        (p[O] = {
                          index0: c[_],
                          index1: c[w],
                          normal: vc.clone(),
                        });
                  }
              }
              for (var A in p)
                if (p[A]) {
                  var C = p[A],
                    P = C.index0,
                    R = C.index1;
                  pc.fromBufferAttribute(u, P),
                    mc.fromBufferAttribute(u, R),
                    m.push(pc.x, pc.y, pc.z),
                    m.push(mc.x, mc.y, mc.z);
                }
              e.setAttribute("position", new $i(m, 3));
            }
            return e;
          }
          return Object(p.a)(t, e), t;
        })(oa),
        bc = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this, e))).uuid =
                Nn()),
              (n.type = "Shape"),
              (n.holes = []),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getPointsHoles",
                value: function (e) {
                  for (var t = [], n = 0, r = this.holes.length; n < r; n++)
                    t[n] = this.holes[n].getPoints(e);
                  return t;
                },
              },
              {
                key: "extractPoints",
                value: function (e) {
                  return {
                    shape: this.getPoints(e),
                    holes: this.getPointsHoles(e),
                  };
                },
              },
              {
                key: "copy",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.holes = []);
                  for (var n = 0, i = e.holes.length; n < i; n++) {
                    var a = e.holes[n];
                    this.holes.push(a.clone());
                  }
                  return this;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this
                  );
                  (e.uuid = this.uuid), (e.holes = []);
                  for (var n = 0, i = this.holes.length; n < i; n++) {
                    var a = this.holes[n];
                    e.holes.push(a.toJSON());
                  }
                  return e;
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "fromJSON", this).call(this, e),
                    (this.uuid = e.uuid),
                    (this.holes = []);
                  for (var n = 0, i = e.holes.length; n < i; n++) {
                    var a = e.holes[n];
                    this.holes.push(new oc().fromJSON(a));
                  }
                  return this;
                },
              },
            ]),
            t
          );
        })(oc),
        xc = function (e, t) {
          var n,
            r,
            i,
            a,
            o,
            s,
            u,
            l =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 2,
            c = t && t.length,
            h = c ? t[0] * l : e.length,
            f = _c(e, 0, h, l, !0),
            d = [];
          if (!f || f.next === f.prev) return d;
          if ((c && (f = kc(e, t, f, l)), e.length > 80 * l)) {
            (n = i = e[0]), (r = a = e[1]);
            for (var p = l; p < h; p += l)
              (o = e[p]) < n && (n = o),
                (s = e[p + 1]) < r && (r = s),
                o > i && (i = o),
                s > a && (a = s);
            u = 0 !== (u = Math.max(i - n, a - r)) ? 1 / u : 0;
          }
          return Sc(f, d, l, n, r, u), d;
        };
      function _c(e, t, n, r, i) {
        var a, o;
        if (
          i ===
          (function (e, t, n, r) {
            for (var i = 0, a = t, o = n - r; a < n; a += r)
              (i += (e[o] - e[a]) * (e[a + 1] + e[o + 1])), (o = a);
            return i;
          })(e, t, n, r) >
            0
        )
          for (a = t; a < n; a += r) o = Hc(a, e[a], e[a + 1], o);
        else for (a = n - r; a >= t; a -= r) o = Hc(a, e[a], e[a + 1], o);
        return o && Dc(o, o.next) && (Vc(o), (o = o.next)), o;
      }
      function wc(e, t) {
        if (!e) return e;
        t || (t = e);
        var n,
          r = e;
        do {
          if (
            ((n = !1),
            r.steiner || (!Dc(r, r.next) && 0 !== Nc(r.prev, r, r.next)))
          )
            r = r.next;
          else {
            if ((Vc(r), (r = t = r.prev) === r.next)) break;
            n = !0;
          }
        } while (n || r !== t);
        return t;
      }
      function Sc(e, t, n, r, i, a, o) {
        if (e) {
          !o &&
            a &&
            (function (e, t, n, r) {
              var i = e;
              do {
                null === i.z && (i.z = Rc(i.x, i.y, t, n, r)),
                  (i.prevZ = i.prev),
                  (i.nextZ = i.next),
                  (i = i.next);
              } while (i !== e);
              (i.prevZ.nextZ = null),
                (i.prevZ = null),
                (function (e) {
                  var t,
                    n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    u,
                    l = 1;
                  do {
                    for (n = e, e = null, a = null, o = 0; n; ) {
                      for (
                        o++, r = n, s = 0, t = 0;
                        t < l && (s++, (r = r.nextZ));
                        t++
                      );
                      for (u = l; s > 0 || (u > 0 && r); )
                        0 !== s && (0 === u || !r || n.z <= r.z)
                          ? ((i = n), (n = n.nextZ), s--)
                          : ((i = r), (r = r.nextZ), u--),
                          a ? (a.nextZ = i) : (e = i),
                          (i.prevZ = a),
                          (a = i);
                      n = r;
                    }
                    (a.nextZ = null), (l *= 2);
                  } while (o > 1);
                })(i);
            })(e, r, i, a);
          for (var s, u, l = e; e.prev !== e.next; )
            if (((s = e.prev), (u = e.next), a ? Tc(e, r, i, a) : Mc(e)))
              t.push(s.i / n),
                t.push(e.i / n),
                t.push(u.i / n),
                Vc(e),
                (e = u.next),
                (l = u.next);
            else if ((e = u) === l) {
              o
                ? 1 === o
                  ? Sc((e = Ec(wc(e), t, n)), t, n, r, i, a, 2)
                  : 2 === o && Oc(e, t, n, r, i, a)
                : Sc(wc(e), t, n, r, i, a, 1);
              break;
            }
        }
      }
      function Mc(e) {
        var t = e.prev,
          n = e,
          r = e.next;
        if (Nc(t, n, r) >= 0) return !1;
        for (var i = e.next.next; i !== e.prev; ) {
          if (
            jc(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) &&
            Nc(i.prev, i, i.next) >= 0
          )
            return !1;
          i = i.next;
        }
        return !0;
      }
      function Tc(e, t, n, r) {
        var i = e.prev,
          a = e,
          o = e.next;
        if (Nc(i, a, o) >= 0) return !1;
        for (
          var s = i.x < a.x ? (i.x < o.x ? i.x : o.x) : a.x < o.x ? a.x : o.x,
            u = i.y < a.y ? (i.y < o.y ? i.y : o.y) : a.y < o.y ? a.y : o.y,
            l = i.x > a.x ? (i.x > o.x ? i.x : o.x) : a.x > o.x ? a.x : o.x,
            c = i.y > a.y ? (i.y > o.y ? i.y : o.y) : a.y > o.y ? a.y : o.y,
            h = Rc(s, u, t, n, r),
            f = Rc(l, c, t, n, r),
            d = e.prevZ,
            p = e.nextZ;
          d && d.z >= h && p && p.z <= f;

        ) {
          if (
            d !== e.prev &&
            d !== e.next &&
            jc(i.x, i.y, a.x, a.y, o.x, o.y, d.x, d.y) &&
            Nc(d.prev, d, d.next) >= 0
          )
            return !1;
          if (
            ((d = d.prevZ),
            p !== e.prev &&
              p !== e.next &&
              jc(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
              Nc(p.prev, p, p.next) >= 0)
          )
            return !1;
          p = p.nextZ;
        }
        for (; d && d.z >= h; ) {
          if (
            d !== e.prev &&
            d !== e.next &&
            jc(i.x, i.y, a.x, a.y, o.x, o.y, d.x, d.y) &&
            Nc(d.prev, d, d.next) >= 0
          )
            return !1;
          d = d.prevZ;
        }
        for (; p && p.z <= f; ) {
          if (
            p !== e.prev &&
            p !== e.next &&
            jc(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
            Nc(p.prev, p, p.next) >= 0
          )
            return !1;
          p = p.nextZ;
        }
        return !0;
      }
      function Ec(e, t, n) {
        var r = e;
        do {
          var i = r.prev,
            a = r.next.next;
          !Dc(i, a) &&
            zc(i, r, r.next, a) &&
            Fc(i, a) &&
            Fc(a, i) &&
            (t.push(i.i / n),
            t.push(r.i / n),
            t.push(a.i / n),
            Vc(r),
            Vc(r.next),
            (r = e = a)),
            (r = r.next);
        } while (r !== e);
        return wc(r);
      }
      function Oc(e, t, n, r, i, a) {
        var o = e;
        do {
          for (var s = o.next.next; s !== o.prev; ) {
            if (o.i !== s.i && Ic(o, s)) {
              var u = Gc(o, s);
              return (
                (o = wc(o, o.next)),
                (u = wc(u, u.next)),
                Sc(o, t, n, r, i, a),
                void Sc(u, t, n, r, i, a)
              );
            }
            s = s.next;
          }
          o = o.next;
        } while (o !== e);
      }
      function kc(e, t, n, r) {
        var i,
          a,
          o,
          s = [];
        for (i = 0, a = t.length; i < a; i++)
          (o = _c(e, t[i] * r, i < a - 1 ? t[i + 1] * r : e.length, r, !1)) ===
            o.next && (o.steiner = !0),
            s.push(Lc(o));
        for (s.sort(Ac), i = 0; i < s.length; i++)
          Cc(s[i], n), (n = wc(n, n.next));
        return n;
      }
      function Ac(e, t) {
        return e.x - t.x;
      }
      function Cc(e, t) {
        if (
          (t = (function (e, t) {
            var n,
              r = t,
              i = e.x,
              a = e.y,
              o = -1 / 0;
            do {
              if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
                var s = r.x + ((a - r.y) * (r.next.x - r.x)) / (r.next.y - r.y);
                if (s <= i && s > o) {
                  if (((o = s), s === i)) {
                    if (a === r.y) return r;
                    if (a === r.next.y) return r.next;
                  }
                  n = r.x < r.next.x ? r : r.next;
                }
              }
              r = r.next;
            } while (r !== t);
            if (!n) return null;
            if (i === o) return n;
            var u,
              l = n,
              c = n.x,
              h = n.y,
              f = 1 / 0;
            r = n;
            do {
              i >= r.x &&
                r.x >= c &&
                i !== r.x &&
                jc(a < h ? i : o, a, c, h, a < h ? o : i, a, r.x, r.y) &&
                ((u = Math.abs(a - r.y) / (i - r.x)),
                Fc(r, e) &&
                  (u < f ||
                    (u === f && (r.x > n.x || (r.x === n.x && Pc(n, r))))) &&
                  ((n = r), (f = u))),
                (r = r.next);
            } while (r !== l);
            return n;
          })(e, t))
        ) {
          var n = Gc(t, e);
          wc(t, t.next), wc(n, n.next);
        }
      }
      function Pc(e, t) {
        return Nc(e.prev, e, t.prev) < 0 && Nc(t.next, e, e.next) < 0;
      }
      function Rc(e, t, n, r, i) {
        return (
          (e =
            1431655765 &
            ((e =
              858993459 &
              ((e =
                252645135 &
                ((e = 16711935 & ((e = 32767 * (e - n) * i) | (e << 8))) |
                  (e << 4))) |
                (e << 2))) |
              (e << 1))) |
          ((t =
            1431655765 &
            ((t =
              858993459 &
              ((t =
                252645135 &
                ((t = 16711935 & ((t = 32767 * (t - r) * i) | (t << 8))) |
                  (t << 4))) |
                (t << 2))) |
              (t << 1))) <<
            1)
        );
      }
      function Lc(e) {
        var t = e,
          n = e;
        do {
          (t.x < n.x || (t.x === n.x && t.y < n.y)) && (n = t), (t = t.next);
        } while (t !== e);
        return n;
      }
      function jc(e, t, n, r, i, a, o, s) {
        return (
          (i - o) * (t - s) - (e - o) * (a - s) >= 0 &&
          (e - o) * (r - s) - (n - o) * (t - s) >= 0 &&
          (n - o) * (a - s) - (i - o) * (r - s) >= 0
        );
      }
      function Ic(e, t) {
        return (
          e.next.i !== t.i &&
          e.prev.i !== t.i &&
          !(function (e, t) {
            var n = e;
            do {
              if (
                n.i !== e.i &&
                n.next.i !== e.i &&
                n.i !== t.i &&
                n.next.i !== t.i &&
                zc(n, n.next, e, t)
              )
                return !0;
              n = n.next;
            } while (n !== e);
            return !1;
          })(e, t) &&
          ((Fc(e, t) &&
            Fc(t, e) &&
            (function (e, t) {
              var n = e,
                r = !1,
                i = (e.x + t.x) / 2,
                a = (e.y + t.y) / 2;
              do {
                n.y > a !== n.next.y > a &&
                  n.next.y !== n.y &&
                  i < ((n.next.x - n.x) * (a - n.y)) / (n.next.y - n.y) + n.x &&
                  (r = !r),
                  (n = n.next);
              } while (n !== e);
              return r;
            })(e, t) &&
            (Nc(e.prev, e, t.prev) || Nc(e, t.prev, t))) ||
            (Dc(e, t) &&
              Nc(e.prev, e, e.next) > 0 &&
              Nc(t.prev, t, t.next) > 0))
        );
      }
      function Nc(e, t, n) {
        return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
      }
      function Dc(e, t) {
        return e.x === t.x && e.y === t.y;
      }
      function zc(e, t, n, r) {
        var i = Bc(Nc(e, t, n)),
          a = Bc(Nc(e, t, r)),
          o = Bc(Nc(n, r, e)),
          s = Bc(Nc(n, r, t));
        return (
          (i !== a && o !== s) ||
          !(0 !== i || !Uc(e, n, t)) ||
          !(0 !== a || !Uc(e, r, t)) ||
          !(0 !== o || !Uc(n, e, r)) ||
          !(0 !== s || !Uc(n, t, r))
        );
      }
      function Uc(e, t, n) {
        return (
          t.x <= Math.max(e.x, n.x) &&
          t.x >= Math.min(e.x, n.x) &&
          t.y <= Math.max(e.y, n.y) &&
          t.y >= Math.min(e.y, n.y)
        );
      }
      function Bc(e) {
        return e > 0 ? 1 : e < 0 ? -1 : 0;
      }
      function Fc(e, t) {
        return Nc(e.prev, e, e.next) < 0
          ? Nc(e, t, e.next) >= 0 && Nc(e, e.prev, t) >= 0
          : Nc(e, t, e.prev) < 0 || Nc(e, e.next, t) < 0;
      }
      function Gc(e, t) {
        var n = new Wc(e.i, e.x, e.y),
          r = new Wc(t.i, t.x, t.y),
          i = e.next,
          a = t.prev;
        return (
          (e.next = t),
          (t.prev = e),
          (n.next = i),
          (i.prev = n),
          (r.next = n),
          (n.prev = r),
          (a.next = r),
          (r.prev = a),
          r
        );
      }
      function Hc(e, t, n, r) {
        var i = new Wc(e, t, n);
        return (
          r
            ? ((i.next = r.next), (i.prev = r), (r.next.prev = i), (r.next = i))
            : ((i.prev = i), (i.next = i)),
          i
        );
      }
      function Vc(e) {
        (e.next.prev = e.prev),
          (e.prev.next = e.next),
          e.prevZ && (e.prevZ.nextZ = e.nextZ),
          e.nextZ && (e.nextZ.prevZ = e.prevZ);
      }
      function Wc(e, t, n) {
        (this.i = e),
          (this.x = t),
          (this.y = n),
          (this.prev = null),
          (this.next = null),
          (this.z = null),
          (this.prevZ = null),
          (this.nextZ = null),
          (this.steiner = !1);
      }
      var qc = (function () {
        function e() {
          Object(y.a)(this, e);
        }
        return (
          Object(b.a)(e, null, [
            {
              key: "area",
              value: function (e) {
                for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++)
                  n += e[r].x * e[i].y - e[i].x * e[r].y;
                return 0.5 * n;
              },
            },
            {
              key: "isClockWise",
              value: function (t) {
                return e.area(t) < 0;
              },
            },
            {
              key: "triangulateShape",
              value: function (e, t) {
                var n = [],
                  r = [],
                  i = [];
                Xc(e), Yc(n, e);
                var a = e.length;
                t.forEach(Xc);
                for (var o = 0; o < t.length; o++)
                  r.push(a), (a += t[o].length), Yc(n, t[o]);
                for (var s = xc(n, r), u = 0; u < s.length; u += 3)
                  i.push(s.slice(u, u + 3));
                return i;
              },
            },
          ]),
          e
        );
      })();
      function Xc(e) {
        var t = e.length;
        t > 2 && e[t - 1].equals(e[0]) && e.pop();
      }
      function Yc(e, t) {
        for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
      }
      var Jc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new bc([
                      new qn(0.5, 0.5),
                      new qn(-0.5, 0.5),
                      new qn(-0.5, -0.5),
                      new qn(0.5, -0.5),
                    ]),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "ExtrudeGeometry"),
              (e.parameters = { shapes: n, options: i }),
              (n = Array.isArray(n) ? n : [n]);
            for (
              var a = Object(d.a)(e), o = [], s = [], u = 0, l = n.length;
              u < l;
              u++
            ) {
              c(n[u]);
            }
            function c(e) {
              var t,
                n,
                r,
                u,
                l,
                c = [],
                h = void 0 !== i.curveSegments ? i.curveSegments : 12,
                f = void 0 !== i.steps ? i.steps : 1,
                d = void 0 !== i.depth ? i.depth : 1,
                p = void 0 === i.bevelEnabled || i.bevelEnabled,
                m = void 0 !== i.bevelThickness ? i.bevelThickness : 0.2,
                v = void 0 !== i.bevelSize ? i.bevelSize : m - 0.1,
                g = void 0 !== i.bevelOffset ? i.bevelOffset : 0,
                y = void 0 !== i.bevelSegments ? i.bevelSegments : 3,
                b = i.extrudePath,
                x = void 0 !== i.UVGenerator ? i.UVGenerator : Zc,
                _ = !1;
              b &&
                ((t = b.getSpacedPoints(f)),
                (_ = !0),
                (p = !1),
                (n = b.computeFrenetFrames(f, !1)),
                (r = new Sr()),
                (u = new Sr()),
                (l = new Sr())),
                p || ((y = 0), (m = 0), (v = 0), (g = 0));
              var w = e.extractPoints(h),
                S = w.shape,
                M = w.holes;
              if (!qc.isClockWise(S)) {
                S = S.reverse();
                for (var T = 0, E = M.length; T < E; T++) {
                  var O = M[T];
                  qc.isClockWise(O) && (M[T] = O.reverse());
                }
              }
              for (
                var k = qc.triangulateShape(S, M), A = S, C = 0, P = M.length;
                C < P;
                C++
              ) {
                var R = M[C];
                S = S.concat(R);
              }
              function L(e, t, n) {
                return (
                  t ||
                    console.error("THREE.ExtrudeGeometry: vec does not exist"),
                  t.clone().multiplyScalar(n).add(e)
                );
              }
              var j = S.length,
                I = k.length;
              function N(e, t, n) {
                var r,
                  i,
                  a,
                  o = e.x - t.x,
                  s = e.y - t.y,
                  u = n.x - e.x,
                  l = n.y - e.y,
                  c = o * o + s * s,
                  h = o * l - s * u;
                if (Math.abs(h) > Number.EPSILON) {
                  var f = Math.sqrt(c),
                    d = Math.sqrt(u * u + l * l),
                    p = t.x - s / f,
                    m = t.y + o / f,
                    v =
                      ((n.x - l / d - p) * l - (n.y + u / d - m) * u) /
                      (o * l - s * u),
                    g = (r = p + o * v - e.x) * r + (i = m + s * v - e.y) * i;
                  if (g <= 2) return new qn(r, i);
                  a = Math.sqrt(g / 2);
                } else {
                  var y = !1;
                  o > Number.EPSILON
                    ? u > Number.EPSILON && (y = !0)
                    : o < -Number.EPSILON
                    ? u < -Number.EPSILON && (y = !0)
                    : Math.sign(s) === Math.sign(l) && (y = !0),
                    y
                      ? ((r = -s), (i = o), (a = Math.sqrt(c)))
                      : ((r = o), (i = s), (a = Math.sqrt(c / 2)));
                }
                return new qn(r / a, i / a);
              }
              for (
                var D = [], z = 0, U = A.length, B = U - 1, F = z + 1;
                z < U;
                z++, B++, F++
              )
                B === U && (B = 0),
                  F === U && (F = 0),
                  (D[z] = N(A[z], A[B], A[F]));
              for (
                var G, H = [], V = D.concat(), W = 0, q = M.length;
                W < q;
                W++
              ) {
                var X = M[W];
                G = [];
                for (
                  var Y = 0, J = X.length, Z = J - 1, $ = Y + 1;
                  Y < J;
                  Y++, Z++, $++
                )
                  Z === J && (Z = 0),
                    $ === J && ($ = 0),
                    (G[Y] = N(X[Y], X[Z], X[$]));
                H.push(G), (V = V.concat(G));
              }
              for (var K = 0; K < y; K++) {
                for (
                  var Q = K / y,
                    ee = m * Math.cos((Q * Math.PI) / 2),
                    te = v * Math.sin((Q * Math.PI) / 2) + g,
                    ne = 0,
                    re = A.length;
                  ne < re;
                  ne++
                ) {
                  var ie = L(A[ne], D[ne], te);
                  Pe(ie.x, ie.y, -ee);
                }
                for (var ae = 0, oe = M.length; ae < oe; ae++) {
                  var se = M[ae];
                  G = H[ae];
                  for (var ue = 0, le = se.length; ue < le; ue++) {
                    var ce = L(se[ue], G[ue], te);
                    Pe(ce.x, ce.y, -ee);
                  }
                }
              }
              for (var he = v + g, fe = 0; fe < j; fe++) {
                var de = p ? L(S[fe], V[fe], he) : S[fe];
                _
                  ? (u.copy(n.normals[0]).multiplyScalar(de.x),
                    r.copy(n.binormals[0]).multiplyScalar(de.y),
                    l.copy(t[0]).add(u).add(r),
                    Pe(l.x, l.y, l.z))
                  : Pe(de.x, de.y, 0);
              }
              for (var pe = 1; pe <= f; pe++)
                for (var me = 0; me < j; me++) {
                  var ve = p ? L(S[me], V[me], he) : S[me];
                  _
                    ? (u.copy(n.normals[pe]).multiplyScalar(ve.x),
                      r.copy(n.binormals[pe]).multiplyScalar(ve.y),
                      l.copy(t[pe]).add(u).add(r),
                      Pe(l.x, l.y, l.z))
                    : Pe(ve.x, ve.y, (d / f) * pe);
                }
              for (var ge = y - 1; ge >= 0; ge--) {
                for (
                  var ye = ge / y,
                    be = m * Math.cos((ye * Math.PI) / 2),
                    xe = v * Math.sin((ye * Math.PI) / 2) + g,
                    _e = 0,
                    we = A.length;
                  _e < we;
                  _e++
                ) {
                  var Se = L(A[_e], D[_e], xe);
                  Pe(Se.x, Se.y, d + be);
                }
                for (var Me = 0, Te = M.length; Me < Te; Me++) {
                  var Ee = M[Me];
                  G = H[Me];
                  for (var Oe = 0, ke = Ee.length; Oe < ke; Oe++) {
                    var Ae = L(Ee[Oe], G[Oe], xe);
                    _
                      ? Pe(Ae.x, Ae.y + t[f - 1].y, t[f - 1].x + be)
                      : Pe(Ae.x, Ae.y, d + be);
                  }
                }
              }
              function Ce(e, t) {
                for (var n = e.length; --n >= 0; ) {
                  var r = n,
                    i = n - 1;
                  i < 0 && (i = e.length - 1);
                  for (var a = 0, o = f + 2 * y; a < o; a++) {
                    var s = j * a,
                      u = j * (a + 1);
                    Le(t + r + s, t + i + s, t + i + u, t + r + u);
                  }
                }
              }
              function Pe(e, t, n) {
                c.push(e), c.push(t), c.push(n);
              }
              function Re(e, t, n) {
                je(e), je(t), je(n);
                var r = o.length / 3,
                  i = x.generateTopUV(a, o, r - 3, r - 2, r - 1);
                Ie(i[0]), Ie(i[1]), Ie(i[2]);
              }
              function Le(e, t, n, r) {
                je(e), je(t), je(r), je(t), je(n), je(r);
                var i = o.length / 3,
                  s = x.generateSideWallUV(a, o, i - 6, i - 3, i - 2, i - 1);
                Ie(s[0]), Ie(s[1]), Ie(s[3]), Ie(s[1]), Ie(s[2]), Ie(s[3]);
              }
              function je(e) {
                o.push(c[3 * e + 0]),
                  o.push(c[3 * e + 1]),
                  o.push(c[3 * e + 2]);
              }
              function Ie(e) {
                s.push(e.x), s.push(e.y);
              }
              !(function () {
                var e = o.length / 3;
                if (p) {
                  for (var t = 0, n = j * t, r = 0; r < I; r++) {
                    var i = k[r];
                    Re(i[2] + n, i[1] + n, i[0] + n);
                  }
                  n = j * (t = f + 2 * y);
                  for (var s = 0; s < I; s++) {
                    var u = k[s];
                    Re(u[0] + n, u[1] + n, u[2] + n);
                  }
                } else {
                  for (var l = 0; l < I; l++) {
                    var c = k[l];
                    Re(c[2], c[1], c[0]);
                  }
                  for (var h = 0; h < I; h++) {
                    var d = k[h];
                    Re(d[0] + j * f, d[1] + j * f, d[2] + j * f);
                  }
                }
                a.addGroup(e, o.length / 3 - e, 0);
              })(),
                (function () {
                  var e = o.length / 3,
                    t = 0;
                  Ce(A, t), (t += A.length);
                  for (var n = 0, r = M.length; n < r; n++) {
                    var i = M[n];
                    Ce(i, t), (t += i.length);
                  }
                  a.addGroup(e, o.length / 3 - e, 1);
                })();
            }
            return (
              e.setAttribute("position", new $i(o, 3)),
              e.setAttribute("uv", new $i(s, 2)),
              e.computeVertexNormals(),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(
              t,
              [
                {
                  key: "toJSON",
                  value: function () {
                    var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                      this
                    );
                    return (function (e, t, n) {
                      if (((n.shapes = []), Array.isArray(e)))
                        for (var r = 0, i = e.length; r < i; r++) {
                          var a = e[r];
                          n.shapes.push(a.uuid);
                        }
                      else n.shapes.push(e.uuid);
                      (n.options = Object.assign({}, t)),
                        void 0 !== t.extrudePath &&
                          (n.options.extrudePath = t.extrudePath.toJSON());
                      return n;
                    })(this.parameters.shapes, this.parameters.options, e);
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e, n) {
                    for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                      var o = n[e.shapes[i]];
                      r.push(o);
                    }
                    var s = e.options.extrudePath;
                    return (
                      void 0 !== s &&
                        (e.options.extrudePath = new ic[s.type]().fromJSON(s)),
                      new t(r, e.options)
                    );
                  },
                },
              ]
            ),
            t
          );
        })(oa),
        Zc = {
          generateTopUV: function (e, t, n, r, i) {
            var a = t[3 * n],
              o = t[3 * n + 1],
              s = t[3 * r],
              u = t[3 * r + 1],
              l = t[3 * i],
              c = t[3 * i + 1];
            return [new qn(a, o), new qn(s, u), new qn(l, c)];
          },
          generateSideWallUV: function (e, t, n, r, i, a) {
            var o = t[3 * n],
              s = t[3 * n + 1],
              u = t[3 * n + 2],
              l = t[3 * r],
              c = t[3 * r + 1],
              h = t[3 * r + 2],
              f = t[3 * i],
              d = t[3 * i + 1],
              p = t[3 * i + 2],
              m = t[3 * a],
              v = t[3 * a + 1],
              g = t[3 * a + 2];
            return Math.abs(s - c) < Math.abs(o - l)
              ? [
                  new qn(o, 1 - u),
                  new qn(l, 1 - h),
                  new qn(f, 1 - p),
                  new qn(m, 1 - g),
                ]
              : [
                  new qn(s, 1 - u),
                  new qn(c, 1 - h),
                  new qn(d, 1 - p),
                  new qn(v, 1 - g),
                ];
          },
        };
      var $c = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Object(y.a)(this, t);
            var a = (1 + Math.sqrt(5)) / 2,
              o = [
                -1,
                a,
                0,
                1,
                a,
                0,
                -1,
                -a,
                0,
                1,
                -a,
                0,
                0,
                -1,
                a,
                0,
                1,
                a,
                0,
                -1,
                -a,
                0,
                1,
                -a,
                a,
                0,
                -1,
                a,
                0,
                1,
                -a,
                0,
                -1,
                -a,
                0,
                1,
              ];
            return (
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(
                  this,
                  o,
                  [
                    0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5,
                    11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2,
                    6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7,
                    9, 8, 1,
                  ],
                  n,
                  i
                )
              )).type = "IcosahedronGeometry"),
              (e.parameters = { radius: n, detail: i }),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(e.radius, e.detail);
                },
              },
            ]),
            t
          );
        })(fc),
        Kc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Object(y.a)(this, t);
            return (
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(
                  this,
                  [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
                  [
                    0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3,
                    4, 1, 4, 2,
                  ],
                  n,
                  i
                )
              )).type = "OctahedronGeometry"),
              (e.parameters = { radius: n, detail: i }),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(e.radius, e.detail);
                },
              },
            ]),
            t
          );
        })(fc),
        Qc = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0.5,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2 * Math.PI;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "RingGeometry"),
              (e.parameters = {
                innerRadius: n,
                outerRadius: i,
                thetaSegments: a,
                phiSegments: o,
                thetaStart: s,
                thetaLength: u,
              }),
              (a = Math.max(3, a));
            for (
              var l = [],
                c = [],
                h = [],
                d = [],
                p = n,
                m = (i - n) / (o = Math.max(1, o)),
                v = new Sr(),
                g = new qn(),
                b = 0;
              b <= o;
              b++
            ) {
              for (var x = 0; x <= a; x++) {
                var _ = s + (x / a) * u;
                (v.x = p * Math.cos(_)),
                  (v.y = p * Math.sin(_)),
                  c.push(v.x, v.y, v.z),
                  h.push(0, 0, 1),
                  (g.x = (v.x / i + 1) / 2),
                  (g.y = (v.y / i + 1) / 2),
                  d.push(g.x, g.y);
              }
              p += m;
            }
            for (var w = 0; w < o; w++)
              for (var S = w * (a + 1), M = 0; M < a; M++) {
                var T = M + S,
                  E = T,
                  O = T + a + 1,
                  k = T + a + 2,
                  A = T + 1;
                l.push(E, O, A), l.push(O, k, A);
              }
            return (
              e.setIndex(l),
              e.setAttribute("position", new $i(c, 3)),
              e.setAttribute("normal", new $i(h, 3)),
              e.setAttribute("uv", new $i(d, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.innerRadius,
                    e.outerRadius,
                    e.thetaSegments,
                    e.phiSegments,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        eh = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new bc([
                      new qn(0, 0.5),
                      new qn(-0.5, -0.5),
                      new qn(0.5, -0.5),
                    ]),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 12;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "ShapeGeometry"),
              (e.parameters = { shapes: n, curveSegments: i });
            var a = [],
              o = [],
              s = [],
              u = [],
              l = 0,
              c = 0;
            if (!1 === Array.isArray(n)) d(n);
            else
              for (var h = 0; h < n.length; h++)
                d(n[h]), e.addGroup(l, c, h), (l += c), (c = 0);
            function d(e) {
              var t = o.length / 3,
                n = e.extractPoints(i),
                r = n.shape,
                l = n.holes;
              !1 === qc.isClockWise(r) && (r = r.reverse());
              for (var h = 0, f = l.length; h < f; h++) {
                var d = l[h];
                !0 === qc.isClockWise(d) && (l[h] = d.reverse());
              }
              for (
                var p = qc.triangulateShape(r, l), m = 0, v = l.length;
                m < v;
                m++
              ) {
                var g = l[m];
                r = r.concat(g);
              }
              for (var y = 0, b = r.length; y < b; y++) {
                var x = r[y];
                o.push(x.x, x.y, 0), s.push(0, 0, 1), u.push(x.x, x.y);
              }
              for (var _ = 0, w = p.length; _ < w; _++) {
                var S = p[_],
                  M = S[0] + t,
                  T = S[1] + t,
                  E = S[2] + t;
                a.push(M, T, E), (c += 3);
              }
            }
            return (
              e.setIndex(a),
              e.setAttribute("position", new $i(o, 3)),
              e.setAttribute("normal", new $i(s, 3)),
              e.setAttribute("uv", new $i(u, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(
              t,
              [
                {
                  key: "toJSON",
                  value: function () {
                    var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                      this
                    );
                    return (function (e, t) {
                      if (((t.shapes = []), Array.isArray(e)))
                        for (var n = 0, r = e.length; n < r; n++) {
                          var i = e[n];
                          t.shapes.push(i.uuid);
                        }
                      else t.shapes.push(e.uuid);
                      return t;
                    })(this.parameters.shapes, e);
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e, n) {
                    for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                      var o = n[e.shapes[i]];
                      r.push(o);
                    }
                    return new t(r, e.curveSegments);
                  },
                },
              ]
            ),
            t
          );
        })(oa);
      var th = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 32,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 16,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2 * Math.PI,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0,
              l =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : Math.PI;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "SphereGeometry"),
              (e.parameters = {
                radius: n,
                widthSegments: i,
                heightSegments: a,
                phiStart: o,
                phiLength: s,
                thetaStart: u,
                thetaLength: l,
              }),
              (i = Math.max(3, Math.floor(i))),
              (a = Math.max(2, Math.floor(a)));
            for (
              var c = Math.min(u + l, Math.PI),
                h = 0,
                d = [],
                p = new Sr(),
                m = new Sr(),
                v = [],
                g = [],
                b = [],
                x = [],
                _ = 0;
              _ <= a;
              _++
            ) {
              var w = [],
                S = _ / a,
                M = 0;
              0 == _ && 0 == u
                ? (M = 0.5 / i)
                : _ == a && c == Math.PI && (M = -0.5 / i);
              for (var T = 0; T <= i; T++) {
                var E = T / i;
                (p.x = -n * Math.cos(o + E * s) * Math.sin(u + S * l)),
                  (p.y = n * Math.cos(u + S * l)),
                  (p.z = n * Math.sin(o + E * s) * Math.sin(u + S * l)),
                  g.push(p.x, p.y, p.z),
                  m.copy(p).normalize(),
                  b.push(m.x, m.y, m.z),
                  x.push(E + M, 1 - S),
                  w.push(h++);
              }
              d.push(w);
            }
            for (var O = 0; O < a; O++)
              for (var k = 0; k < i; k++) {
                var A = d[O][k + 1],
                  C = d[O][k],
                  P = d[O + 1][k],
                  R = d[O + 1][k + 1];
                (0 !== O || u > 0) && v.push(A, C, R),
                  (O !== a - 1 || c < Math.PI) && v.push(C, P, R);
              }
            return (
              e.setIndex(v),
              e.setAttribute("position", new $i(g, 3)),
              e.setAttribute("normal", new $i(b, 3)),
              e.setAttribute("uv", new $i(x, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.radius,
                    e.widthSegments,
                    e.heightSegments,
                    e.phiStart,
                    e.phiLength,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        nh = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            Object(y.a)(this, t);
            return (
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(
                  this,
                  [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
                  [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1],
                  n,
                  i
                )
              )).type = "TetrahedronGeometry"),
              (e.parameters = { radius: n, detail: i }),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(e.radius, e.detail);
                },
              },
            ]),
            t
          );
        })(fc),
        rh = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0.4,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 6,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2 * Math.PI;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "TorusGeometry"),
              (e.parameters = {
                radius: n,
                tube: i,
                radialSegments: a,
                tubularSegments: o,
                arc: s,
              }),
              (a = Math.floor(a)),
              (o = Math.floor(o));
            for (
              var u = [],
                l = [],
                c = [],
                h = [],
                d = new Sr(),
                p = new Sr(),
                m = new Sr(),
                v = 0;
              v <= a;
              v++
            )
              for (var g = 0; g <= o; g++) {
                var b = (g / o) * s,
                  x = (v / a) * Math.PI * 2;
                (p.x = (n + i * Math.cos(x)) * Math.cos(b)),
                  (p.y = (n + i * Math.cos(x)) * Math.sin(b)),
                  (p.z = i * Math.sin(x)),
                  l.push(p.x, p.y, p.z),
                  (d.x = n * Math.cos(b)),
                  (d.y = n * Math.sin(b)),
                  m.subVectors(p, d).normalize(),
                  c.push(m.x, m.y, m.z),
                  h.push(g / o),
                  h.push(v / a);
              }
            for (var _ = 1; _ <= a; _++)
              for (var w = 1; w <= o; w++) {
                var S = (o + 1) * _ + w - 1,
                  M = (o + 1) * (_ - 1) + w - 1,
                  T = (o + 1) * (_ - 1) + w,
                  E = (o + 1) * _ + w;
                u.push(S, M, E), u.push(M, T, E);
              }
            return (
              e.setIndex(u),
              e.setAttribute("position", new $i(l, 3)),
              e.setAttribute("normal", new $i(c, 3)),
              e.setAttribute("uv", new $i(h, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.radius,
                    e.tube,
                    e.radialSegments,
                    e.tubularSegments,
                    e.arc
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        ih = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0.4,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 64,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 2,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 3;
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "TorusKnotGeometry"),
              (e.parameters = {
                radius: n,
                tube: i,
                tubularSegments: a,
                radialSegments: o,
                p: s,
                q: u,
              }),
              (a = Math.floor(a)),
              (o = Math.floor(o));
            for (
              var l = [],
                c = [],
                h = [],
                d = [],
                p = new Sr(),
                m = new Sr(),
                v = new Sr(),
                g = new Sr(),
                b = new Sr(),
                x = new Sr(),
                _ = new Sr(),
                w = 0;
              w <= a;
              ++w
            ) {
              var S = (w / a) * s * Math.PI * 2;
              j(S, s, u, n, v),
                j(S + 0.01, s, u, n, g),
                x.subVectors(g, v),
                _.addVectors(g, v),
                b.crossVectors(x, _),
                _.crossVectors(b, x),
                b.normalize(),
                _.normalize();
              for (var M = 0; M <= o; ++M) {
                var T = (M / o) * Math.PI * 2,
                  E = -i * Math.cos(T),
                  O = i * Math.sin(T);
                (p.x = v.x + (E * _.x + O * b.x)),
                  (p.y = v.y + (E * _.y + O * b.y)),
                  (p.z = v.z + (E * _.z + O * b.z)),
                  c.push(p.x, p.y, p.z),
                  m.subVectors(p, v).normalize(),
                  h.push(m.x, m.y, m.z),
                  d.push(w / a),
                  d.push(M / o);
              }
            }
            for (var k = 1; k <= a; k++)
              for (var A = 1; A <= o; A++) {
                var C = (o + 1) * (k - 1) + (A - 1),
                  P = (o + 1) * k + (A - 1),
                  R = (o + 1) * k + A,
                  L = (o + 1) * (k - 1) + A;
                l.push(C, P, L), l.push(P, R, L);
              }
            function j(e, t, n, r, i) {
              var a = Math.cos(e),
                o = Math.sin(e),
                s = (n / t) * e,
                u = Math.cos(s);
              (i.x = r * (2 + u) * 0.5 * a),
                (i.y = r * (2 + u) * o * 0.5),
                (i.z = r * Math.sin(s) * 0.5);
            }
            return (
              e.setIndex(l),
              e.setAttribute("position", new $i(c, 3)),
              e.setAttribute("normal", new $i(h, 3)),
              e.setAttribute("uv", new $i(d, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new t(
                    e.radius,
                    e.tube,
                    e.tubularSegments,
                    e.radialSegments,
                    e.p,
                    e.q
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        ah = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new nc(
                      new Sr(-1, -1, 0),
                      new Sr(-1, 1, 0),
                      new Sr(1, 1, 0)
                    ),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 64,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8,
              s =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
            Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "TubeGeometry"),
              (e.parameters = {
                path: n,
                tubularSegments: i,
                radius: a,
                radialSegments: o,
                closed: s,
              });
            var u = n.computeFrenetFrames(i, s);
            (e.tangents = u.tangents),
              (e.normals = u.normals),
              (e.binormals = u.binormals);
            var l = new Sr(),
              c = new Sr(),
              h = new qn(),
              d = new Sr(),
              p = [],
              m = [],
              v = [],
              g = [];
            function b(e) {
              d = n.getPointAt(e / i, d);
              for (
                var t = u.normals[e], r = u.binormals[e], s = 0;
                s <= o;
                s++
              ) {
                var h = (s / o) * Math.PI * 2,
                  f = Math.sin(h),
                  v = -Math.cos(h);
                (c.x = v * t.x + f * r.x),
                  (c.y = v * t.y + f * r.y),
                  (c.z = v * t.z + f * r.z),
                  c.normalize(),
                  m.push(c.x, c.y, c.z),
                  (l.x = d.x + a * c.x),
                  (l.y = d.y + a * c.y),
                  (l.z = d.z + a * c.z),
                  p.push(l.x, l.y, l.z);
              }
            }
            return (
              (function () {
                for (var e = 0; e < i; e++) b(e);
                b(!1 === s ? i : 0),
                  (function () {
                    for (var e = 0; e <= i; e++)
                      for (var t = 0; t <= o; t++)
                        (h.x = e / i), (h.y = t / o), v.push(h.x, h.y);
                  })(),
                  (function () {
                    for (var e = 1; e <= i; e++)
                      for (var t = 1; t <= o; t++) {
                        var n = (o + 1) * (e - 1) + (t - 1),
                          r = (o + 1) * e + (t - 1),
                          a = (o + 1) * e + t,
                          s = (o + 1) * (e - 1) + t;
                        g.push(n, r, s), g.push(r, a, s);
                      }
                  })();
              })(),
              e.setIndex(g),
              e.setAttribute("position", new $i(p, 3)),
              e.setAttribute("normal", new $i(m, 3)),
              e.setAttribute("uv", new $i(v, 2)),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(
              t,
              [
                {
                  key: "toJSON",
                  value: function () {
                    var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                      this
                    );
                    return (e.path = this.parameters.path.toJSON()), e;
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new t(
                      new ic[e.path.type]().fromJSON(e.path),
                      e.tubularSegments,
                      e.radius,
                      e.radialSegments,
                      e.closed
                    );
                  },
                },
              ]
            ),
            t
          );
        })(oa),
        oh = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null;
            if (
              (Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "WireframeGeometry"),
              (e.parameters = { geometry: n }),
              null !== n)
            ) {
              var i = [],
                a = new Set(),
                o = new Sr(),
                s = new Sr();
              if (null !== n.index) {
                var u = n.attributes.position,
                  l = n.index,
                  c = n.groups;
                0 === c.length &&
                  (c = [{ start: 0, count: l.count, materialIndex: 0 }]);
                for (var h = 0, d = c.length; h < d; ++h)
                  for (
                    var p = c[h], m = p.start, v = m, g = m + p.count;
                    v < g;
                    v += 3
                  )
                    for (var b = 0; b < 3; b++) {
                      var x = l.getX(v + b),
                        _ = l.getX(v + ((b + 1) % 3));
                      o.fromBufferAttribute(u, x),
                        s.fromBufferAttribute(u, _),
                        !0 === sh(o, s, a) &&
                          (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z));
                    }
              } else
                for (
                  var w = n.attributes.position, S = 0, M = w.count / 3;
                  S < M;
                  S++
                )
                  for (var T = 0; T < 3; T++) {
                    var E = 3 * S + T,
                      O = 3 * S + ((T + 1) % 3);
                    o.fromBufferAttribute(w, E),
                      s.fromBufferAttribute(w, O),
                      !0 === sh(o, s, a) &&
                        (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z));
                  }
              e.setAttribute("position", new $i(i, 3));
            }
            return e;
          }
          return Object(p.a)(t, e), t;
        })(oa);
      function sh(e, t, n) {
        var r = ""
            .concat(e.x, ",")
            .concat(e.y, ",")
            .concat(e.z, "-")
            .concat(t.x, ",")
            .concat(t.y, ",")
            .concat(t.z),
          i = ""
            .concat(t.x, ",")
            .concat(t.y, ",")
            .concat(t.z, "-")
            .concat(e.x, ",")
            .concat(e.y, ",")
            .concat(e.z);
        return !0 !== n.has(r) && !0 !== n.has(i) && (n.add(r), n.add(i), !0);
      }
      var uh = Object.freeze({
          __proto__: null,
          BoxGeometry: Ea,
          CapsuleGeometry: uc,
          CircleGeometry: lc,
          ConeGeometry: hc,
          CylinderGeometry: cc,
          DodecahedronGeometry: dc,
          EdgesGeometry: yc,
          ExtrudeGeometry: Jc,
          IcosahedronGeometry: $c,
          LatheGeometry: sc,
          OctahedronGeometry: Kc,
          PlaneGeometry: Ja,
          PolyhedronGeometry: fc,
          RingGeometry: Qc,
          ShapeGeometry: eh,
          SphereGeometry: th,
          TetrahedronGeometry: nh,
          TorusGeometry: rh,
          TorusKnotGeometry: ih,
          TubeGeometry: ah,
          WireframeGeometry: oh,
        }),
        lh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isShadowMaterial = !0),
              (n.type = "ShadowMaterial"),
              (n.color = new lr(0)),
              (n.transparent = !0),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        ch = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e)
              )).isRawShaderMaterial = !0),
              (n.type = "RawShaderMaterial"),
              n
            );
          }
          return Object(p.a)(t, e), t;
        })(Ra),
        hh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshStandardMaterial = !0),
              (n.defines = { STANDARD: "" }),
              (n.type = "MeshStandardMaterial"),
              (n.color = new lr(16777215)),
              (n.roughness = 1),
              (n.metalness = 0),
              (n.map = null),
              (n.lightMap = null),
              (n.lightMapIntensity = 1),
              (n.aoMap = null),
              (n.aoMapIntensity = 1),
              (n.emissive = new lr(0)),
              (n.emissiveIntensity = 1),
              (n.emissiveMap = null),
              (n.bumpMap = null),
              (n.bumpScale = 1),
              (n.normalMap = null),
              (n.normalMapType = $t),
              (n.normalScale = new qn(1, 1)),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              (n.roughnessMap = null),
              (n.metalnessMap = null),
              (n.alphaMap = null),
              (n.envMap = null),
              (n.envMapIntensity = 1),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              (n.wireframeLinecap = "round"),
              (n.wireframeLinejoin = "round"),
              (n.flatShading = !1),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.defines = { STANDARD: "" }),
                    this.color.copy(e.color),
                    (this.roughness = e.roughness),
                    (this.metalness = e.metalness),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.roughnessMap = e.roughnessMap),
                    (this.metalnessMap = e.metalnessMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.envMapIntensity = e.envMapIntensity),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        fh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshPhysicalMaterial = !0),
              (n.defines = { STANDARD: "", PHYSICAL: "" }),
              (n.type = "MeshPhysicalMaterial"),
              (n.clearcoatMap = null),
              (n.clearcoatRoughness = 0),
              (n.clearcoatRoughnessMap = null),
              (n.clearcoatNormalScale = new qn(1, 1)),
              (n.clearcoatNormalMap = null),
              (n.ior = 1.5),
              Object.defineProperty(Object(d.a)(n), "reflectivity", {
                get: function () {
                  return Dn((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);
                },
                set: function (e) {
                  this.ior = (1 + 0.4 * e) / (1 - 0.4 * e);
                },
              }),
              (n.iridescenceMap = null),
              (n.iridescenceIOR = 1.3),
              (n.iridescenceThicknessRange = [100, 400]),
              (n.iridescenceThicknessMap = null),
              (n.sheenColor = new lr(0)),
              (n.sheenColorMap = null),
              (n.sheenRoughness = 1),
              (n.sheenRoughnessMap = null),
              (n.transmissionMap = null),
              (n.thickness = 0),
              (n.thicknessMap = null),
              (n.attenuationDistance = 1 / 0),
              (n.attenuationColor = new lr(1, 1, 1)),
              (n.specularIntensity = 1),
              (n.specularIntensityMap = null),
              (n.specularColor = new lr(1, 1, 1)),
              (n.specularColorMap = null),
              (n._sheen = 0),
              (n._clearcoat = 0),
              (n._iridescence = 0),
              (n._transmission = 0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.defines = { STANDARD: "", PHYSICAL: "" }),
                    (this.clearcoat = e.clearcoat),
                    (this.clearcoatMap = e.clearcoatMap),
                    (this.clearcoatRoughness = e.clearcoatRoughness),
                    (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
                    (this.clearcoatNormalMap = e.clearcoatNormalMap),
                    this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
                    (this.ior = e.ior),
                    (this.iridescence = e.iridescence),
                    (this.iridescenceMap = e.iridescenceMap),
                    (this.iridescenceIOR = e.iridescenceIOR),
                    (this.iridescenceThicknessRange = Object(s.a)(
                      e.iridescenceThicknessRange
                    )),
                    (this.iridescenceThicknessMap = e.iridescenceThicknessMap),
                    (this.sheen = e.sheen),
                    this.sheenColor.copy(e.sheenColor),
                    (this.sheenColorMap = e.sheenColorMap),
                    (this.sheenRoughness = e.sheenRoughness),
                    (this.sheenRoughnessMap = e.sheenRoughnessMap),
                    (this.transmission = e.transmission),
                    (this.transmissionMap = e.transmissionMap),
                    (this.thickness = e.thickness),
                    (this.thicknessMap = e.thicknessMap),
                    (this.attenuationDistance = e.attenuationDistance),
                    this.attenuationColor.copy(e.attenuationColor),
                    (this.specularIntensity = e.specularIntensity),
                    (this.specularIntensityMap = e.specularIntensityMap),
                    this.specularColor.copy(e.specularColor),
                    (this.specularColorMap = e.specularColorMap),
                    this
                  );
                },
              },
              {
                key: "sheen",
                get: function () {
                  return this._sheen;
                },
                set: function (e) {
                  this._sheen > 0 !== e > 0 && this.version++,
                    (this._sheen = e);
                },
              },
              {
                key: "clearcoat",
                get: function () {
                  return this._clearcoat;
                },
                set: function (e) {
                  this._clearcoat > 0 !== e > 0 && this.version++,
                    (this._clearcoat = e);
                },
              },
              {
                key: "iridescence",
                get: function () {
                  return this._iridescence;
                },
                set: function (e) {
                  this._iridescence > 0 !== e > 0 && this.version++,
                    (this._iridescence = e);
                },
              },
              {
                key: "transmission",
                get: function () {
                  return this._transmission;
                },
                set: function (e) {
                  this._transmission > 0 !== e > 0 && this.version++,
                    (this._transmission = e);
                },
              },
            ]),
            t
          );
        })(hh),
        dh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshPhongMaterial = !0),
              (n.type = "MeshPhongMaterial"),
              (n.color = new lr(16777215)),
              (n.specular = new lr(1118481)),
              (n.shininess = 30),
              (n.map = null),
              (n.lightMap = null),
              (n.lightMapIntensity = 1),
              (n.aoMap = null),
              (n.aoMapIntensity = 1),
              (n.emissive = new lr(0)),
              (n.emissiveIntensity = 1),
              (n.emissiveMap = null),
              (n.bumpMap = null),
              (n.bumpScale = 1),
              (n.normalMap = null),
              (n.normalMapType = $t),
              (n.normalScale = new qn(1, 1)),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              (n.specularMap = null),
              (n.alphaMap = null),
              (n.envMap = null),
              (n.combine = ce),
              (n.reflectivity = 1),
              (n.refractionRatio = 0.98),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              (n.wireframeLinecap = "round"),
              (n.wireframeLinejoin = "round"),
              (n.flatShading = !1),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    this.specular.copy(e.specular),
                    (this.shininess = e.shininess),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.specularMap = e.specularMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.combine = e.combine),
                    (this.reflectivity = e.reflectivity),
                    (this.refractionRatio = e.refractionRatio),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        ph = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshToonMaterial = !0),
              (n.defines = { TOON: "" }),
              (n.type = "MeshToonMaterial"),
              (n.color = new lr(16777215)),
              (n.map = null),
              (n.gradientMap = null),
              (n.lightMap = null),
              (n.lightMapIntensity = 1),
              (n.aoMap = null),
              (n.aoMapIntensity = 1),
              (n.emissive = new lr(0)),
              (n.emissiveIntensity = 1),
              (n.emissiveMap = null),
              (n.bumpMap = null),
              (n.bumpScale = 1),
              (n.normalMap = null),
              (n.normalMapType = $t),
              (n.normalScale = new qn(1, 1)),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              (n.alphaMap = null),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              (n.wireframeLinecap = "round"),
              (n.wireframeLinejoin = "round"),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.gradientMap = e.gradientMap),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.alphaMap = e.alphaMap),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        mh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshNormalMaterial = !0),
              (n.type = "MeshNormalMaterial"),
              (n.bumpMap = null),
              (n.bumpScale = 1),
              (n.normalMap = null),
              (n.normalMapType = $t),
              (n.normalScale = new qn(1, 1)),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              (n.flatShading = !1),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.flatShading = e.flatShading),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        vh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshLambertMaterial = !0),
              (n.type = "MeshLambertMaterial"),
              (n.color = new lr(16777215)),
              (n.map = null),
              (n.lightMap = null),
              (n.lightMapIntensity = 1),
              (n.aoMap = null),
              (n.aoMapIntensity = 1),
              (n.emissive = new lr(0)),
              (n.emissiveIntensity = 1),
              (n.emissiveMap = null),
              (n.bumpMap = null),
              (n.bumpScale = 1),
              (n.normalMap = null),
              (n.normalMapType = $t),
              (n.normalScale = new qn(1, 1)),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              (n.specularMap = null),
              (n.alphaMap = null),
              (n.envMap = null),
              (n.combine = ce),
              (n.reflectivity = 1),
              (n.refractionRatio = 0.98),
              (n.wireframe = !1),
              (n.wireframeLinewidth = 1),
              (n.wireframeLinecap = "round"),
              (n.wireframeLinejoin = "round"),
              (n.flatShading = !1),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    this.emissive.copy(e.emissive),
                    (this.emissiveMap = e.emissiveMap),
                    (this.emissiveIntensity = e.emissiveIntensity),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.specularMap = e.specularMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.combine = e.combine),
                    (this.reflectivity = e.reflectivity),
                    (this.refractionRatio = e.refractionRatio),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        gh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isMeshMatcapMaterial = !0),
              (n.defines = { MATCAP: "" }),
              (n.type = "MeshMatcapMaterial"),
              (n.color = new lr(16777215)),
              (n.matcap = null),
              (n.map = null),
              (n.bumpMap = null),
              (n.bumpScale = 1),
              (n.normalMap = null),
              (n.normalMapType = $t),
              (n.normalScale = new qn(1, 1)),
              (n.displacementMap = null),
              (n.displacementScale = 1),
              (n.displacementBias = 0),
              (n.alphaMap = null),
              (n.flatShading = !1),
              (n.fog = !0),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.defines = { MATCAP: "" }),
                    this.color.copy(e.color),
                    (this.matcap = e.matcap),
                    (this.map = e.map),
                    (this.bumpMap = e.bumpMap),
                    (this.bumpScale = e.bumpScale),
                    (this.normalMap = e.normalMap),
                    (this.normalMapType = e.normalMapType),
                    this.normalScale.copy(e.normalScale),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.alphaMap = e.alphaMap),
                    (this.flatShading = e.flatShading),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(zi),
        yh = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isLineDashedMaterial = !0),
              (n.type = "LineDashedMaterial"),
              (n.scale = 1),
              (n.dashSize = 3),
              (n.gapSize = 1),
              n.setValues(e),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.scale = e.scale),
                    (this.dashSize = e.dashSize),
                    (this.gapSize = e.gapSize),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(gl);
      function bh(e, t, n) {
        return _h(e)
          ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length))
          : e.slice(t, n);
      }
      function xh(e, t, n) {
        return !e || (!n && e.constructor === t)
          ? e
          : "number" === typeof t.BYTES_PER_ELEMENT
          ? new t(e)
          : Array.prototype.slice.call(e);
      }
      function _h(e) {
        return ArrayBuffer.isView(e) && !(e instanceof DataView);
      }
      function wh(e) {
        for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r) n[r] = r;
        return (
          n.sort(function (t, n) {
            return e[t] - e[n];
          }),
          n
        );
      }
      function Sh(e, t, n) {
        for (
          var r = e.length, i = new e.constructor(r), a = 0, o = 0;
          o !== r;
          ++a
        )
          for (var s = n[a] * t, u = 0; u !== t; ++u) i[o++] = e[s + u];
        return i;
      }
      function Mh(e, t, n, r) {
        for (var i = 1, a = e[0]; void 0 !== a && void 0 === a[r]; ) a = e[i++];
        if (void 0 !== a) {
          var o = a[r];
          if (void 0 !== o)
            if (Array.isArray(o))
              do {
                void 0 !== (o = a[r]) && (t.push(a.time), n.push.apply(n, o)),
                  (a = e[i++]);
              } while (void 0 !== a);
            else if (void 0 !== o.toArray)
              do {
                void 0 !== (o = a[r]) &&
                  (t.push(a.time), o.toArray(n, n.length)),
                  (a = e[i++]);
              } while (void 0 !== a);
            else
              do {
                void 0 !== (o = a[r]) && (t.push(a.time), n.push(o)),
                  (a = e[i++]);
              } while (void 0 !== a);
        }
      }
      var Th = Object.freeze({
          __proto__: null,
          arraySlice: bh,
          convertArray: xh,
          isTypedArray: _h,
          getKeyframeOrder: wh,
          sortedArray: Sh,
          flattenJSON: Mh,
          subclip: function (e, t, n, r) {
            var i =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 30,
              a = e.clone();
            a.name = t;
            for (var o = [], s = 0; s < a.tracks.length; ++s) {
              for (
                var u = a.tracks[s],
                  l = u.getValueSize(),
                  c = [],
                  h = [],
                  f = 0;
                f < u.times.length;
                ++f
              ) {
                var d = u.times[f] * i;
                if (!(d < n || d >= r)) {
                  c.push(u.times[f]);
                  for (var p = 0; p < l; ++p) h.push(u.values[f * l + p]);
                }
              }
              0 !== c.length &&
                ((u.times = xh(c, u.times.constructor)),
                (u.values = xh(h, u.values.constructor)),
                o.push(u));
            }
            a.tracks = o;
            for (var m = 1 / 0, v = 0; v < a.tracks.length; ++v)
              m > a.tracks[v].times[0] && (m = a.tracks[v].times[0]);
            for (var g = 0; g < a.tracks.length; ++g) a.tracks[g].shift(-1 * m);
            return a.resetDuration(), a;
          },
          makeClipAdditive: function (e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : e,
              r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 30;
            r <= 0 && (r = 30);
            for (
              var i = n.tracks.length,
                a = t / r,
                o = function (t) {
                  var r = n.tracks[t],
                    i = r.ValueTypeName;
                  if ("bool" === i || "string" === i) return "continue";
                  var o = e.tracks.find(function (e) {
                    return e.name === r.name && e.ValueTypeName === i;
                  });
                  if (void 0 === o) return "continue";
                  var s = 0,
                    u = r.getValueSize();
                  r.createInterpolant
                    .isInterpolantFactoryMethodGLTFCubicSpline && (s = u / 3);
                  var l = 0,
                    c = o.getValueSize();
                  o.createInterpolant
                    .isInterpolantFactoryMethodGLTFCubicSpline && (l = c / 3);
                  var h = r.times.length - 1,
                    f = void 0;
                  if (a <= r.times[0]) {
                    var d = s,
                      p = u - s;
                    f = bh(r.values, d, p);
                  } else if (a >= r.times[h]) {
                    var m = h * u + s,
                      v = m + u - s;
                    f = bh(r.values, m, v);
                  } else {
                    var g = r.createInterpolant(),
                      y = s,
                      b = u - s;
                    g.evaluate(a), (f = bh(g.resultBuffer, y, b));
                  }
                  "quaternion" === i &&
                    new wr().fromArray(f).normalize().conjugate().toArray(f);
                  for (var x = o.times.length, _ = 0; _ < x; ++_) {
                    var w = _ * c + l;
                    if ("quaternion" === i)
                      wr.multiplyQuaternionsFlat(
                        o.values,
                        w,
                        f,
                        0,
                        o.values,
                        w
                      );
                    else
                      for (var S = c - 2 * l, M = 0; M < S; ++M)
                        o.values[w + M] -= f[M];
                  }
                },
                s = 0;
              s < i;
              ++s
            )
              o(s);
            return (e.blendMode = Ht), e;
          },
        }),
        Eh = (function () {
          function e(t, n, r, i) {
            Object(y.a)(this, e),
              (this.parameterPositions = t),
              (this._cachedIndex = 0),
              (this.resultBuffer = void 0 !== i ? i : new n.constructor(r)),
              (this.sampleValues = n),
              (this.valueSize = r),
              (this.settings = null),
              (this.DefaultSettings_ = {});
          }
          return (
            Object(b.a)(e, [
              {
                key: "evaluate",
                value: function (e) {
                  var t = this.parameterPositions,
                    n = this._cachedIndex,
                    r = t[n],
                    i = t[n - 1];
                  e: {
                    t: {
                      var a;
                      n: {
                        r: if (!(e < r)) {
                          for (var o = n + 2; ; ) {
                            if (void 0 === r) {
                              if (e < i) break r;
                              return (
                                (n = t.length),
                                (this._cachedIndex = n),
                                this.copySampleValue_(n - 1)
                              );
                            }
                            if (n === o) break;
                            if (((i = r), e < (r = t[++n]))) break t;
                          }
                          a = t.length;
                          break n;
                        }
                        if (e >= i) break e;
                        var s = t[1];
                        e < s && ((n = 2), (i = s));
                        for (var u = n - 2; ; ) {
                          if (void 0 === i)
                            return (
                              (this._cachedIndex = 0), this.copySampleValue_(0)
                            );
                          if (n === u) break;
                          if (((r = i), e >= (i = t[--n - 1]))) break t;
                        }
                        (a = n), (n = 0);
                      }
                      for (; n < a; ) {
                        var l = (n + a) >>> 1;
                        e < t[l] ? (a = l) : (n = l + 1);
                      }
                      if (((r = t[n]), void 0 === (i = t[n - 1])))
                        return (
                          (this._cachedIndex = 0), this.copySampleValue_(0)
                        );
                      if (void 0 === r)
                        return (
                          (n = t.length),
                          (this._cachedIndex = n),
                          this.copySampleValue_(n - 1)
                        );
                    }
                    (this._cachedIndex = n), this.intervalChanged_(n, i, r);
                  }
                  return this.interpolate_(n, i, e, r);
                },
              },
              {
                key: "getSettings_",
                value: function () {
                  return this.settings || this.DefaultSettings_;
                },
              },
              {
                key: "copySampleValue_",
                value: function (e) {
                  for (
                    var t = this.resultBuffer,
                      n = this.sampleValues,
                      r = this.valueSize,
                      i = e * r,
                      a = 0;
                    a !== r;
                    ++a
                  )
                    t[a] = n[i + a];
                  return t;
                },
              },
              {
                key: "interpolate_",
                value: function () {
                  throw new Error("call to abstract method");
                },
              },
              { key: "intervalChanged_", value: function () {} },
            ]),
            e
          );
        })(),
        Oh = (function (e) {
          function t(e, n, i, a) {
            var o;
            return (
              Object(y.a)(this, t),
              ((o = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i, a)
              ))._weightPrev = -0),
              (o._offsetPrev = -0),
              (o._weightNext = -0),
              (o._offsetNext = -0),
              (o.DefaultSettings_ = { endingStart: Ut, endingEnd: Ut }),
              o
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "intervalChanged_",
                value: function (e, t, n) {
                  var r = this.parameterPositions,
                    i = e - 2,
                    a = e + 1,
                    o = r[i],
                    s = r[a];
                  if (void 0 === o)
                    switch (this.getSettings_().endingStart) {
                      case Bt:
                        (i = e), (o = 2 * t - n);
                        break;
                      case Ft:
                        o = t + r[(i = r.length - 2)] - r[i + 1];
                        break;
                      default:
                        (i = e), (o = n);
                    }
                  if (void 0 === s)
                    switch (this.getSettings_().endingEnd) {
                      case Bt:
                        (a = e), (s = 2 * n - t);
                        break;
                      case Ft:
                        (a = 1), (s = n + r[1] - r[0]);
                        break;
                      default:
                        (a = e - 1), (s = t);
                    }
                  var u = 0.5 * (n - t),
                    l = this.valueSize;
                  (this._weightPrev = u / (t - o)),
                    (this._weightNext = u / (s - n)),
                    (this._offsetPrev = i * l),
                    (this._offsetNext = a * l);
                },
              },
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      u = s - o,
                      l = this._offsetPrev,
                      c = this._offsetNext,
                      h = this._weightPrev,
                      f = this._weightNext,
                      d = (n - t) / (r - t),
                      p = d * d,
                      m = p * d,
                      v = -h * m + 2 * h * p - h * d,
                      g = (1 + h) * m + (-1.5 - 2 * h) * p + (-0.5 + h) * d + 1,
                      y = (-1 - f) * m + (1.5 + f) * p + 0.5 * d,
                      b = f * m - f * p,
                      x = 0;
                    x !== o;
                    ++x
                  )
                    i[x] =
                      v * a[l + x] + g * a[u + x] + y * a[s + x] + b * a[c + x];
                  return i;
                },
              },
            ]),
            t
          );
        })(Eh),
        kh = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      u = s - o,
                      l = (n - t) / (r - t),
                      c = 1 - l,
                      h = 0;
                    h !== o;
                    ++h
                  )
                    i[h] = a[u + h] * c + a[s + h] * l;
                  return i;
                },
              },
            ]),
            t
          );
        })(Eh),
        Ah = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "interpolate_",
                value: function (e) {
                  return this.copySampleValue_(e - 1);
                },
              },
            ]),
            t
          );
        })(Eh),
        Ch = (function () {
          function e(t, n, r, i) {
            if ((Object(y.a)(this, e), void 0 === t))
              throw new Error("THREE.KeyframeTrack: track name is undefined");
            if (void 0 === n || 0 === n.length)
              throw new Error(
                "THREE.KeyframeTrack: no keyframes in track named " + t
              );
            (this.name = t),
              (this.times = xh(n, this.TimeBufferType)),
              (this.values = xh(r, this.ValueBufferType)),
              this.setInterpolation(i || this.DefaultInterpolation);
          }
          return (
            Object(b.a)(
              e,
              [
                {
                  key: "InterpolantFactoryMethodDiscrete",
                  value: function (e) {
                    return new Ah(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodLinear",
                  value: function (e) {
                    return new kh(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodSmooth",
                  value: function (e) {
                    return new Oh(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "setInterpolation",
                  value: function (e) {
                    var t;
                    switch (e) {
                      case Nt:
                        t = this.InterpolantFactoryMethodDiscrete;
                        break;
                      case Dt:
                        t = this.InterpolantFactoryMethodLinear;
                        break;
                      case zt:
                        t = this.InterpolantFactoryMethodSmooth;
                    }
                    if (void 0 === t) {
                      var n =
                        "unsupported interpolation for " +
                        this.ValueTypeName +
                        " keyframe track named " +
                        this.name;
                      if (void 0 === this.createInterpolant) {
                        if (e === this.DefaultInterpolation) throw new Error(n);
                        this.setInterpolation(this.DefaultInterpolation);
                      }
                      return console.warn("THREE.KeyframeTrack:", n), this;
                    }
                    return (this.createInterpolant = t), this;
                  },
                },
                {
                  key: "getInterpolation",
                  value: function () {
                    switch (this.createInterpolant) {
                      case this.InterpolantFactoryMethodDiscrete:
                        return Nt;
                      case this.InterpolantFactoryMethodLinear:
                        return Dt;
                      case this.InterpolantFactoryMethodSmooth:
                        return zt;
                    }
                  },
                },
                {
                  key: "getValueSize",
                  value: function () {
                    return this.values.length / this.times.length;
                  },
                },
                {
                  key: "shift",
                  value: function (e) {
                    if (0 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] += e;
                    return this;
                  },
                },
                {
                  key: "scale",
                  value: function (e) {
                    if (1 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] *= e;
                    return this;
                  },
                },
                {
                  key: "trim",
                  value: function (e, t) {
                    for (
                      var n = this.times, r = n.length, i = 0, a = r - 1;
                      i !== r && n[i] < e;

                    )
                      ++i;
                    for (; -1 !== a && n[a] > t; ) --a;
                    if ((++a, 0 !== i || a !== r)) {
                      i >= a && (i = (a = Math.max(a, 1)) - 1);
                      var o = this.getValueSize();
                      (this.times = bh(n, i, a)),
                        (this.values = bh(this.values, i * o, a * o));
                    }
                    return this;
                  },
                },
                {
                  key: "validate",
                  value: function () {
                    var e = !0,
                      t = this.getValueSize();
                    t - Math.floor(t) !== 0 &&
                      (console.error(
                        "THREE.KeyframeTrack: Invalid value size in track.",
                        this
                      ),
                      (e = !1));
                    var n = this.times,
                      r = this.values,
                      i = n.length;
                    0 === i &&
                      (console.error(
                        "THREE.KeyframeTrack: Track is empty.",
                        this
                      ),
                      (e = !1));
                    for (var a = null, o = 0; o !== i; o++) {
                      var s = n[o];
                      if ("number" === typeof s && isNaN(s)) {
                        console.error(
                          "THREE.KeyframeTrack: Time is not a valid number.",
                          this,
                          o,
                          s
                        ),
                          (e = !1);
                        break;
                      }
                      if (null !== a && a > s) {
                        console.error(
                          "THREE.KeyframeTrack: Out of order keys.",
                          this,
                          o,
                          s,
                          a
                        ),
                          (e = !1);
                        break;
                      }
                      a = s;
                    }
                    if (void 0 !== r && _h(r))
                      for (var u = 0, l = r.length; u !== l; ++u) {
                        var c = r[u];
                        if (isNaN(c)) {
                          console.error(
                            "THREE.KeyframeTrack: Value is not a valid number.",
                            this,
                            u,
                            c
                          ),
                            (e = !1);
                          break;
                        }
                      }
                    return e;
                  },
                },
                {
                  key: "optimize",
                  value: function () {
                    for (
                      var e = bh(this.times),
                        t = bh(this.values),
                        n = this.getValueSize(),
                        r = this.getInterpolation() === zt,
                        i = e.length - 1,
                        a = 1,
                        o = 1;
                      o < i;
                      ++o
                    ) {
                      var s = !1,
                        u = e[o];
                      if (u !== e[o + 1] && (1 !== o || u !== e[0]))
                        if (r) s = !0;
                        else
                          for (
                            var l = o * n, c = l - n, h = l + n, f = 0;
                            f !== n;
                            ++f
                          ) {
                            var d = t[l + f];
                            if (d !== t[c + f] || d !== t[h + f]) {
                              s = !0;
                              break;
                            }
                          }
                      if (s) {
                        if (o !== a) {
                          e[a] = e[o];
                          for (var p = o * n, m = a * n, v = 0; v !== n; ++v)
                            t[m + v] = t[p + v];
                        }
                        ++a;
                      }
                    }
                    if (i > 0) {
                      e[a] = e[i];
                      for (var g = i * n, y = a * n, b = 0; b !== n; ++b)
                        t[y + b] = t[g + b];
                      ++a;
                    }
                    return (
                      a !== e.length
                        ? ((this.times = bh(e, 0, a)),
                          (this.values = bh(t, 0, a * n)))
                        : ((this.times = e), (this.values = t)),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    var e = bh(this.times, 0),
                      t = bh(this.values, 0),
                      n = new (0, this.constructor)(this.name, e, t);
                    return (n.createInterpolant = this.createInterpolant), n;
                  },
                },
              ],
              [
                {
                  key: "toJSON",
                  value: function (e) {
                    var t,
                      n = e.constructor;
                    if (n.toJSON !== this.toJSON) t = n.toJSON(e);
                    else {
                      t = {
                        name: e.name,
                        times: xh(e.times, Array),
                        values: xh(e.values, Array),
                      };
                      var r = e.getInterpolation();
                      r !== e.DefaultInterpolation && (t.interpolation = r);
                    }
                    return (t.type = e.ValueTypeName), t;
                  },
                },
              ]
            ),
            e
          );
        })();
      (Ch.prototype.TimeBufferType = Float32Array),
        (Ch.prototype.ValueBufferType = Float32Array),
        (Ch.prototype.DefaultInterpolation = Dt);
      var Ph = (function (e) {
        function t() {
          return (
            Object(y.a)(this, t),
            Object(f.a)(this, Object(r.a)(t).apply(this, arguments))
          );
        }
        return Object(p.a)(t, e), t;
      })(Ch);
      (Ph.prototype.ValueTypeName = "bool"),
        (Ph.prototype.ValueBufferType = Array),
        (Ph.prototype.DefaultInterpolation = Nt),
        (Ph.prototype.InterpolantFactoryMethodLinear = void 0),
        (Ph.prototype.InterpolantFactoryMethodSmooth = void 0);
      var Rh = (function (e) {
        function t() {
          return (
            Object(y.a)(this, t),
            Object(f.a)(this, Object(r.a)(t).apply(this, arguments))
          );
        }
        return Object(p.a)(t, e), t;
      })(Ch);
      Rh.prototype.ValueTypeName = "color";
      var Lh = (function (e) {
        function t() {
          return (
            Object(y.a)(this, t),
            Object(f.a)(this, Object(r.a)(t).apply(this, arguments))
          );
        }
        return Object(p.a)(t, e), t;
      })(Ch);
      Lh.prototype.ValueTypeName = "number";
      var jh = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var i = this.resultBuffer,
                      a = this.sampleValues,
                      o = this.valueSize,
                      s = (n - t) / (r - t),
                      u = e * o,
                      l = u + o;
                    u !== l;
                    u += 4
                  )
                    wr.slerpFlat(i, 0, a, u - o, a, u, s);
                  return i;
                },
              },
            ]),
            t
          );
        })(Eh),
        Ih = (function (e) {
          function t() {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).apply(this, arguments))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "InterpolantFactoryMethodLinear",
                value: function (e) {
                  return new jh(
                    this.times,
                    this.values,
                    this.getValueSize(),
                    e
                  );
                },
              },
            ]),
            t
          );
        })(Ch);
      (Ih.prototype.ValueTypeName = "quaternion"),
        (Ih.prototype.DefaultInterpolation = Dt),
        (Ih.prototype.InterpolantFactoryMethodSmooth = void 0);
      var Nh = (function (e) {
        function t() {
          return (
            Object(y.a)(this, t),
            Object(f.a)(this, Object(r.a)(t).apply(this, arguments))
          );
        }
        return Object(p.a)(t, e), t;
      })(Ch);
      (Nh.prototype.ValueTypeName = "string"),
        (Nh.prototype.ValueBufferType = Array),
        (Nh.prototype.DefaultInterpolation = Nt),
        (Nh.prototype.InterpolantFactoryMethodLinear = void 0),
        (Nh.prototype.InterpolantFactoryMethodSmooth = void 0);
      var Dh = (function (e) {
        function t() {
          return (
            Object(y.a)(this, t),
            Object(f.a)(this, Object(r.a)(t).apply(this, arguments))
          );
        }
        return Object(p.a)(t, e), t;
      })(Ch);
      Dh.prototype.ValueTypeName = "vector";
      var zh = (function () {
        function e(t) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : -1,
            r = arguments.length > 2 ? arguments[2] : void 0,
            i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : Gt;
          Object(y.a)(this, e),
            (this.name = t),
            (this.tracks = r),
            (this.duration = n),
            (this.blendMode = i),
            (this.uuid = Nn()),
            this.duration < 0 && this.resetDuration();
        }
        return (
          Object(b.a)(
            e,
            [
              {
                key: "resetDuration",
                value: function () {
                  for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                    var r = this.tracks[t];
                    e = Math.max(e, r.times[r.times.length - 1]);
                  }
                  return (this.duration = e), this;
                },
              },
              {
                key: "trim",
                value: function () {
                  for (var e = 0; e < this.tracks.length; e++)
                    this.tracks[e].trim(0, this.duration);
                  return this;
                },
              },
              {
                key: "validate",
                value: function () {
                  for (var e = !0, t = 0; t < this.tracks.length; t++)
                    e = e && this.tracks[t].validate();
                  return e;
                },
              },
              {
                key: "optimize",
                value: function () {
                  for (var e = 0; e < this.tracks.length; e++)
                    this.tracks[e].optimize();
                  return this;
                },
              },
              {
                key: "clone",
                value: function () {
                  for (var e = [], t = 0; t < this.tracks.length; t++)
                    e.push(this.tracks[t].clone());
                  return new this.constructor(
                    this.name,
                    this.duration,
                    e,
                    this.blendMode
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.constructor.toJSON(this);
                },
              },
            ],
            [
              {
                key: "parse",
                value: function (e) {
                  for (
                    var t = [],
                      n = e.tracks,
                      r = 1 / (e.fps || 1),
                      i = 0,
                      a = n.length;
                    i !== a;
                    ++i
                  )
                    t.push(Uh(n[i]).scale(r));
                  var o = new this(e.name, e.duration, t, e.blendMode);
                  return (o.uuid = e.uuid), o;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  for (
                    var t = [],
                      n = e.tracks,
                      r = {
                        name: e.name,
                        duration: e.duration,
                        tracks: t,
                        uuid: e.uuid,
                        blendMode: e.blendMode,
                      },
                      i = 0,
                      a = n.length;
                    i !== a;
                    ++i
                  )
                    t.push(Ch.toJSON(n[i]));
                  return r;
                },
              },
              {
                key: "CreateFromMorphTargetSequence",
                value: function (e, t, n, r) {
                  for (var i = t.length, a = [], o = 0; o < i; o++) {
                    var s = [],
                      u = [];
                    s.push((o + i - 1) % i, o, (o + 1) % i), u.push(0, 1, 0);
                    var l = wh(s);
                    (s = Sh(s, 1, l)),
                      (u = Sh(u, 1, l)),
                      r || 0 !== s[0] || (s.push(i), u.push(u[0])),
                      a.push(
                        new Lh(
                          ".morphTargetInfluences[" + t[o].name + "]",
                          s,
                          u
                        ).scale(1 / n)
                      );
                  }
                  return new this(e, -1, a);
                },
              },
              {
                key: "findByName",
                value: function (e, t) {
                  var n = e;
                  if (!Array.isArray(e)) {
                    var r = e;
                    n = (r.geometry && r.geometry.animations) || r.animations;
                  }
                  for (var i = 0; i < n.length; i++)
                    if (n[i].name === t) return n[i];
                  return null;
                },
              },
              {
                key: "CreateClipsFromMorphTargetSequences",
                value: function (e, t, n) {
                  for (
                    var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length;
                    a < o;
                    a++
                  ) {
                    var s = e[a],
                      u = s.name.match(i);
                    if (u && u.length > 1) {
                      var l = u[1],
                        c = r[l];
                      c || (r[l] = c = []), c.push(s);
                    }
                  }
                  var h = [];
                  for (var f in r)
                    h.push(this.CreateFromMorphTargetSequence(f, r[f], t, n));
                  return h;
                },
              },
              {
                key: "parseAnimation",
                value: function (e, t) {
                  if (!e)
                    return (
                      console.error(
                        "THREE.AnimationClip: No animation in JSONLoader data."
                      ),
                      null
                    );
                  for (
                    var n = function (e, t, n, r, i) {
                        if (0 !== n.length) {
                          var a = [],
                            o = [];
                          Mh(n, a, o, r),
                            0 !== a.length && i.push(new e(t, a, o));
                        }
                      },
                      r = [],
                      i = e.name || "default",
                      a = e.fps || 30,
                      o = e.blendMode,
                      s = e.length || -1,
                      u = e.hierarchy || [],
                      l = 0;
                    l < u.length;
                    l++
                  ) {
                    var c = u[l].keys;
                    if (c && 0 !== c.length)
                      if (c[0].morphTargets) {
                        var h = {},
                          f = void 0;
                        for (f = 0; f < c.length; f++)
                          if (c[f].morphTargets)
                            for (var d = 0; d < c[f].morphTargets.length; d++)
                              h[c[f].morphTargets[d]] = -1;
                        for (var p in h) {
                          for (
                            var m = [], v = [], g = 0;
                            g !== c[f].morphTargets.length;
                            ++g
                          ) {
                            var y = c[f];
                            m.push(y.time), v.push(y.morphTarget === p ? 1 : 0);
                          }
                          r.push(
                            new Lh(".morphTargetInfluence[" + p + "]", m, v)
                          );
                        }
                        s = h.length * a;
                      } else {
                        var b = ".bones[" + t[l].name + "]";
                        n(Dh, b + ".position", c, "pos", r),
                          n(Ih, b + ".quaternion", c, "rot", r),
                          n(Dh, b + ".scale", c, "scl", r);
                      }
                  }
                  return 0 === r.length ? null : new this(i, s, r, o);
                },
              },
            ]
          ),
          e
        );
      })();
      function Uh(e) {
        if (void 0 === e.type)
          throw new Error(
            "THREE.KeyframeTrack: track type undefined, can not parse"
          );
        var t = (function (e) {
          switch (e.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return Lh;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return Dh;
            case "color":
              return Rh;
            case "quaternion":
              return Ih;
            case "bool":
            case "boolean":
              return Ph;
            case "string":
              return Nh;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e);
        })(e.type);
        if (void 0 === e.times) {
          var n = [],
            r = [];
          Mh(e.keys, n, r, "value"), (e.times = n), (e.values = r);
        }
        return void 0 !== t.parse
          ? t.parse(e)
          : new t(e.name, e.times, e.values, e.interpolation);
      }
      var Bh,
        Fh = {
          enabled: !1,
          files: {},
          add: function (e, t) {
            !1 !== this.enabled && (this.files[e] = t);
          },
          get: function (e) {
            if (!1 !== this.enabled) return this.files[e];
          },
          remove: function (e) {
            delete this.files[e];
          },
          clear: function () {
            this.files = {};
          },
        },
        Gh = function e(t, n, r) {
          Object(y.a)(this, e);
          var i = this,
            a = !1,
            o = 0,
            s = 0,
            u = void 0,
            l = [];
          (this.onStart = void 0),
            (this.onLoad = t),
            (this.onProgress = n),
            (this.onError = r),
            (this.itemStart = function (e) {
              s++,
                !1 === a && void 0 !== i.onStart && i.onStart(e, o, s),
                (a = !0);
            }),
            (this.itemEnd = function (e) {
              o++,
                void 0 !== i.onProgress && i.onProgress(e, o, s),
                o === s && ((a = !1), void 0 !== i.onLoad && i.onLoad());
            }),
            (this.itemError = function (e) {
              void 0 !== i.onError && i.onError(e);
            }),
            (this.resolveURL = function (e) {
              return u ? u(e) : e;
            }),
            (this.setURLModifier = function (e) {
              return (u = e), this;
            }),
            (this.addHandler = function (e, t) {
              return l.push(e, t), this;
            }),
            (this.removeHandler = function (e) {
              var t = l.indexOf(e);
              return -1 !== t && l.splice(t, 2), this;
            }),
            (this.getHandler = function (e) {
              for (var t = 0, n = l.length; t < n; t += 2) {
                var r = l[t],
                  i = l[t + 1];
                if ((r.global && (r.lastIndex = 0), r.test(e))) return i;
              }
              return null;
            });
        },
        Hh = new Gh(),
        Vh = (function () {
          function e(t) {
            Object(y.a)(this, e),
              (this.manager = void 0 !== t ? t : Hh),
              (this.crossOrigin = "anonymous"),
              (this.withCredentials = !1),
              (this.path = ""),
              (this.resourcePath = ""),
              (this.requestHeader = {});
          }
          return (
            Object(b.a)(e, [
              { key: "load", value: function () {} },
              {
                key: "loadAsync",
                value: function (e, t) {
                  var n = this;
                  return new Promise(function (r, i) {
                    n.load(e, r, t, i);
                  });
                },
              },
              { key: "parse", value: function () {} },
              {
                key: "setCrossOrigin",
                value: function (e) {
                  return (this.crossOrigin = e), this;
                },
              },
              {
                key: "setWithCredentials",
                value: function (e) {
                  return (this.withCredentials = e), this;
                },
              },
              {
                key: "setPath",
                value: function (e) {
                  return (this.path = e), this;
                },
              },
              {
                key: "setResourcePath",
                value: function (e) {
                  return (this.resourcePath = e), this;
                },
              },
              {
                key: "setRequestHeader",
                value: function (e) {
                  return (this.requestHeader = e), this;
                },
              },
            ]),
            e
          );
        })(),
        Wh = {},
        qh = (function (e) {
          function t(e, n) {
            var i;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(this, Object(r.a)(t).call(this, e))).response =
                n),
              i
            );
          }
          return Object(p.a)(t, e), t;
        })(o(Error)),
        Xh = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this;
                  void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var a = Fh.get(e);
                  if (void 0 !== a)
                    return (
                      this.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  if (void 0 === Wh[e]) {
                    (Wh[e] = []),
                      Wh[e].push({ onLoad: t, onProgress: n, onError: r });
                    var o = new Request(e, {
                        headers: new Headers(this.requestHeader),
                        credentials: this.withCredentials
                          ? "include"
                          : "same-origin",
                      }),
                      s = this.mimeType,
                      u = this.responseType;
                    fetch(o)
                      .then(function (t) {
                        if (200 === t.status || 0 === t.status) {
                          if (
                            (0 === t.status &&
                              console.warn(
                                "THREE.FileLoader: HTTP Status 0 received."
                              ),
                            "undefined" === typeof ReadableStream ||
                              void 0 === t.body ||
                              void 0 === t.body.getReader)
                          )
                            return t;
                          var n = Wh[e],
                            r = t.body.getReader(),
                            i = t.headers.get("Content-Length"),
                            a = i ? parseInt(i) : 0,
                            o = 0 !== a,
                            s = 0,
                            u = new ReadableStream({
                              start: function (e) {
                                !(function t() {
                                  r.read().then(function (r) {
                                    var i = r.done,
                                      u = r.value;
                                    if (i) e.close();
                                    else {
                                      s += u.byteLength;
                                      for (
                                        var l = new ProgressEvent("progress", {
                                            lengthComputable: o,
                                            loaded: s,
                                            total: a,
                                          }),
                                          c = 0,
                                          h = n.length;
                                        c < h;
                                        c++
                                      ) {
                                        var f = n[c];
                                        f.onProgress && f.onProgress(l);
                                      }
                                      e.enqueue(u), t();
                                    }
                                  });
                                })();
                              },
                            });
                          return new Response(u);
                        }
                        throw new qh(
                          'fetch for "'
                            .concat(t.url, '" responded with ')
                            .concat(t.status, ": ")
                            .concat(t.statusText),
                          t
                        );
                      })
                      .then(function (e) {
                        switch (u) {
                          case "arraybuffer":
                            return e.arrayBuffer();
                          case "blob":
                            return e.blob();
                          case "document":
                            return e.text().then(function (e) {
                              return new DOMParser().parseFromString(e, s);
                            });
                          case "json":
                            return e.json();
                          default:
                            if (void 0 === s) return e.text();
                            var t = /charset="?([^;"\s]*)"?/i.exec(s),
                              n = t && t[1] ? t[1].toLowerCase() : void 0,
                              r = new TextDecoder(n);
                            return e.arrayBuffer().then(function (e) {
                              return r.decode(e);
                            });
                        }
                      })
                      .then(function (t) {
                        Fh.add(e, t);
                        var n = Wh[e];
                        delete Wh[e];
                        for (var r = 0, i = n.length; r < i; r++) {
                          var a = n[r];
                          a.onLoad && a.onLoad(t);
                        }
                      })
                      .catch(function (t) {
                        var n = Wh[e];
                        if (void 0 === n) throw (i.manager.itemError(e), t);
                        delete Wh[e];
                        for (var r = 0, a = n.length; r < a; r++) {
                          var o = n[r];
                          o.onError && o.onError(t);
                        }
                        i.manager.itemError(e);
                      })
                      .finally(function () {
                        i.manager.itemEnd(e);
                      }),
                      this.manager.itemStart(e);
                  } else Wh[e].push({ onLoad: t, onProgress: n, onError: r });
                },
              },
              {
                key: "setResponseType",
                value: function (e) {
                  return (this.responseType = e), this;
                },
              },
              {
                key: "setMimeType",
                value: function (e) {
                  return (this.mimeType = e), this;
                },
              },
            ]),
            t
          );
        })(Vh),
        Yh = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Xh(this.manager);
                  a.setPath(this.path),
                    a.setRequestHeader(this.requestHeader),
                    a.setWithCredentials(this.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(JSON.parse(n)));
                        } catch (a) {
                          r ? r(a) : console.error(a), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "parse",
                value: function (e) {
                  for (var t = [], n = 0; n < e.length; n++) {
                    var r = zh.parse(e[n]);
                    t.push(r);
                  }
                  return t;
                },
              },
            ]),
            t
          );
        })(Vh),
        Jh = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = [],
                    o = new Dl(),
                    s = new Xh(this.manager);
                  s.setPath(this.path),
                    s.setResponseType("arraybuffer"),
                    s.setRequestHeader(this.requestHeader),
                    s.setWithCredentials(i.withCredentials);
                  var u = 0;
                  function l(l) {
                    s.load(
                      e[l],
                      function (e) {
                        var n = i.parse(e, !0);
                        (a[l] = {
                          width: n.width,
                          height: n.height,
                          format: n.format,
                          mipmaps: n.mipmaps,
                        }),
                          6 === (u += 1) &&
                            (1 === n.mipmapCount && (o.minFilter = Le),
                            (o.image = a),
                            (o.format = n.format),
                            (o.needsUpdate = !0),
                            t && t(o));
                      },
                      n,
                      r
                    );
                  }
                  if (Array.isArray(e))
                    for (var c = 0, h = e.length; c < h; ++c) l(c);
                  else
                    s.load(
                      e,
                      function (e) {
                        var n = i.parse(e, !0);
                        if (n.isCubemap) {
                          for (
                            var r = n.mipmaps.length / n.mipmapCount, s = 0;
                            s < r;
                            s++
                          ) {
                            a[s] = { mipmaps: [] };
                            for (var u = 0; u < n.mipmapCount; u++)
                              a[s].mipmaps.push(
                                n.mipmaps[s * n.mipmapCount + u]
                              ),
                                (a[s].format = n.format),
                                (a[s].width = n.width),
                                (a[s].height = n.height);
                          }
                          o.image = a;
                        } else
                          (o.image.width = n.width),
                            (o.image.height = n.height),
                            (o.mipmaps = n.mipmaps);
                        1 === n.mipmapCount && (o.minFilter = Le),
                          (o.format = n.format),
                          (o.needsUpdate = !0),
                          t && t(o);
                      },
                      n,
                      r
                    );
                  return o;
                },
              },
            ]),
            t
          );
        })(Vh),
        Zh = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var i = this,
                    a = Fh.get(e);
                  if (void 0 !== a)
                    return (
                      i.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  var o = $n("img");
                  function s() {
                    l(), Fh.add(e, this), t && t(this), i.manager.itemEnd(e);
                  }
                  function u(t) {
                    l(),
                      r && r(t),
                      i.manager.itemError(e),
                      i.manager.itemEnd(e);
                  }
                  function l() {
                    o.removeEventListener("load", s, !1),
                      o.removeEventListener("error", u, !1);
                  }
                  return (
                    o.addEventListener("load", s, !1),
                    o.addEventListener("error", u, !1),
                    "data:" !== e.slice(0, 5) &&
                      void 0 !== this.crossOrigin &&
                      (o.crossOrigin = this.crossOrigin),
                    i.manager.itemStart(e),
                    (o.src = e),
                    o
                  );
                },
              },
            ]),
            t
          );
        })(Vh),
        $h = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = new za(),
                    a = new Zh(this.manager);
                  a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
                  var o = 0;
                  function s(n) {
                    a.load(
                      e[n],
                      function (e) {
                        (i.images[n] = e),
                          6 === ++o && ((i.needsUpdate = !0), t && t(i));
                      },
                      void 0,
                      r
                    );
                  }
                  for (var u = 0; u < e.length; ++u) s(u);
                  return i;
                },
              },
            ]),
            t
          );
        })(Vh),
        Kh = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new sl(),
                    o = new Xh(this.manager);
                  return (
                    o.setResponseType("arraybuffer"),
                    o.setRequestHeader(this.requestHeader),
                    o.setPath(this.path),
                    o.setWithCredentials(i.withCredentials),
                    o.load(
                      e,
                      function (e) {
                        var n = i.parse(e);
                        n &&
                          (void 0 !== n.image
                            ? (a.image = n.image)
                            : void 0 !== n.data &&
                              ((a.image.width = n.width),
                              (a.image.height = n.height),
                              (a.image.data = n.data)),
                          (a.wrapS = void 0 !== n.wrapS ? n.wrapS : Ee),
                          (a.wrapT = void 0 !== n.wrapT ? n.wrapT : Ee),
                          (a.magFilter =
                            void 0 !== n.magFilter ? n.magFilter : Le),
                          (a.minFilter =
                            void 0 !== n.minFilter ? n.minFilter : Le),
                          (a.anisotropy =
                            void 0 !== n.anisotropy ? n.anisotropy : 1),
                          void 0 !== n.encoding && (a.encoding = n.encoding),
                          void 0 !== n.flipY && (a.flipY = n.flipY),
                          void 0 !== n.format && (a.format = n.format),
                          void 0 !== n.type && (a.type = n.type),
                          void 0 !== n.mipmaps &&
                            ((a.mipmaps = n.mipmaps), (a.minFilter = Ne)),
                          1 === n.mipmapCount && (a.minFilter = Le),
                          void 0 !== n.generateMipmaps &&
                            (a.generateMipmaps = n.generateMipmaps),
                          (a.needsUpdate = !0),
                          t && t(a, n));
                      },
                      n,
                      r
                    ),
                    a
                  );
                },
              },
            ]),
            t
          );
        })(Vh),
        Qh = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = new pr(),
                    a = new Zh(this.manager);
                  return (
                    a.setCrossOrigin(this.crossOrigin),
                    a.setPath(this.path),
                    a.load(
                      e,
                      function (e) {
                        (i.image = e),
                          (i.needsUpdate = !0),
                          void 0 !== t && t(i);
                      },
                      n,
                      r
                    ),
                    i
                  );
                },
              },
            ]),
            t
          );
        })(Vh),
        ef = (function (e) {
          function t(e) {
            var n,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this))).isLight = !0),
              (n.type = "Light"),
              (n.color = new lr(e)),
              (n.intensity = i),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              { key: "dispose", value: function () {} },
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    this.color.copy(e.color),
                    (this.intensity = e.intensity),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  return (
                    (n.object.color = this.color.getHex()),
                    (n.object.intensity = this.intensity),
                    void 0 !== this.groundColor &&
                      (n.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance &&
                      (n.object.distance = this.distance),
                    void 0 !== this.angle && (n.object.angle = this.angle),
                    void 0 !== this.decay && (n.object.decay = this.decay),
                    void 0 !== this.penumbra &&
                      (n.object.penumbra = this.penumbra),
                    void 0 !== this.shadow &&
                      (n.object.shadow = this.shadow.toJSON()),
                    n
                  );
                },
              },
            ]),
            t
          );
        })(Ti),
        tf = (function (e) {
          function t(e, n, i) {
            var a;
            return (
              Object(y.a)(this, t),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, i)
              )).isHemisphereLight = !0),
              (a.type = "HemisphereLight"),
              a.position.copy(Ti.DefaultUp),
              a.updateMatrix(),
              (a.groundColor = new lr(n)),
              a
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    this.groundColor.copy(e.groundColor),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(ef),
        nf = new ei(),
        rf = new Sr(),
        af = new Sr(),
        of = (function () {
          function e(t) {
            Object(y.a)(this, e),
              (this.camera = t),
              (this.bias = 0),
              (this.normalBias = 0),
              (this.radius = 1),
              (this.blurSamples = 8),
              (this.mapSize = new qn(512, 512)),
              (this.map = null),
              (this.mapPass = null),
              (this.matrix = new ei()),
              (this.autoUpdate = !0),
              (this.needsUpdate = !1),
              (this._frustum = new qa()),
              (this._frameExtents = new qn(1, 1)),
              (this._viewportCount = 1),
              (this._viewports = [new mr(0, 0, 1, 1)]);
          }
          return (
            Object(b.a)(e, [
              {
                key: "getViewportCount",
                value: function () {
                  return this._viewportCount;
                },
              },
              {
                key: "getFrustum",
                value: function () {
                  return this._frustum;
                },
              },
              {
                key: "updateMatrices",
                value: function (e) {
                  var t = this.camera,
                    n = this.matrix;
                  rf.setFromMatrixPosition(e.matrixWorld),
                    t.position.copy(rf),
                    af.setFromMatrixPosition(e.target.matrixWorld),
                    t.lookAt(af),
                    t.updateMatrixWorld(),
                    nf.multiplyMatrices(
                      t.projectionMatrix,
                      t.matrixWorldInverse
                    ),
                    this._frustum.setFromProjectionMatrix(nf),
                    n.set(
                      0.5,
                      0,
                      0,
                      0.5,
                      0,
                      0.5,
                      0,
                      0.5,
                      0,
                      0,
                      0.5,
                      0.5,
                      0,
                      0,
                      0,
                      1
                    ),
                    n.multiply(nf);
                },
              },
              {
                key: "getViewport",
                value: function (e) {
                  return this._viewports[e];
                },
              },
              {
                key: "getFrameExtents",
                value: function () {
                  return this._frameExtents;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.map && this.map.dispose(),
                    this.mapPass && this.mapPass.dispose();
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.camera = e.camera.clone()),
                    (this.bias = e.bias),
                    (this.radius = e.radius),
                    this.mapSize.copy(e.mapSize),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {};
                  return (
                    0 !== this.bias && (e.bias = this.bias),
                    0 !== this.normalBias && (e.normalBias = this.normalBias),
                    1 !== this.radius && (e.radius = this.radius),
                    (512 === this.mapSize.x && 512 === this.mapSize.y) ||
                      (e.mapSize = this.mapSize.toArray()),
                    (e.camera = this.camera.toJSON(!1).object),
                    delete e.camera.matrix,
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        sf = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, new ja(50, 1, 0.5, 500))
              )).isSpotLightShadow = !0),
              (e.focus = 1),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "updateMatrices",
                value: function (e) {
                  var n = this.camera,
                    i = 2 * In * e.angle * this.focus,
                    a = this.mapSize.width / this.mapSize.height,
                    o = e.distance || n.far;
                  (i === n.fov && a === n.aspect && o === n.far) ||
                    ((n.fov = i),
                    (n.aspect = a),
                    (n.far = o),
                    n.updateProjectionMatrix()),
                    c(Object(r.a)(t.prototype), "updateMatrices", this).call(
                      this,
                      e
                    );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.focus = e.focus),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(of),
        uf = (function (e) {
          function t(e, n) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : Math.PI / 3,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isSpotLight = !0),
              (i.type = "SpotLight"),
              i.position.copy(Ti.DefaultUp),
              i.updateMatrix(),
              (i.target = new Ti()),
              (i.distance = a),
              (i.angle = o),
              (i.penumbra = s),
              (i.decay = u),
              (i.map = null),
              (i.shadow = new sf()),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.shadow.dispose();
                },
              },
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.distance = e.distance),
                    (this.angle = e.angle),
                    (this.penumbra = e.penumbra),
                    (this.decay = e.decay),
                    (this.target = e.target.clone()),
                    (this.shadow = e.shadow.clone()),
                    this
                  );
                },
              },
              {
                key: "power",
                get: function () {
                  return this.intensity * Math.PI;
                },
                set: function (e) {
                  this.intensity = e / Math.PI;
                },
              },
            ]),
            t
          );
        })(ef),
        lf = new ei(),
        cf = new Sr(),
        hf = new Sr(),
        ff = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, new ja(90, 1, 0.5, 500))
              )).isPointLightShadow = !0),
              (e._frameExtents = new qn(4, 2)),
              (e._viewportCount = 6),
              (e._viewports = [
                new mr(2, 1, 1, 1),
                new mr(0, 1, 1, 1),
                new mr(3, 1, 1, 1),
                new mr(1, 1, 1, 1),
                new mr(3, 0, 1, 1),
                new mr(1, 0, 1, 1),
              ]),
              (e._cubeDirections = [
                new Sr(1, 0, 0),
                new Sr(-1, 0, 0),
                new Sr(0, 0, 1),
                new Sr(0, 0, -1),
                new Sr(0, 1, 0),
                new Sr(0, -1, 0),
              ]),
              (e._cubeUps = [
                new Sr(0, 1, 0),
                new Sr(0, 1, 0),
                new Sr(0, 1, 0),
                new Sr(0, 1, 0),
                new Sr(0, 0, 1),
                new Sr(0, 0, -1),
              ]),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "updateMatrices",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.camera,
                    r = this.matrix,
                    i = e.distance || n.far;
                  i !== n.far && ((n.far = i), n.updateProjectionMatrix()),
                    cf.setFromMatrixPosition(e.matrixWorld),
                    n.position.copy(cf),
                    hf.copy(n.position),
                    hf.add(this._cubeDirections[t]),
                    n.up.copy(this._cubeUps[t]),
                    n.lookAt(hf),
                    n.updateMatrixWorld(),
                    r.makeTranslation(-cf.x, -cf.y, -cf.z),
                    lf.multiplyMatrices(
                      n.projectionMatrix,
                      n.matrixWorldInverse
                    ),
                    this._frustum.setFromProjectionMatrix(lf);
                },
              },
            ]),
            t
          );
        })(of),
        df = (function (e) {
          function t(e, n) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isPointLight = !0),
              (i.type = "PointLight"),
              (i.distance = a),
              (i.decay = o),
              (i.shadow = new ff()),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.shadow.dispose();
                },
              },
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.distance = e.distance),
                    (this.decay = e.decay),
                    (this.shadow = e.shadow.clone()),
                    this
                  );
                },
              },
              {
                key: "power",
                get: function () {
                  return 4 * this.intensity * Math.PI;
                },
                set: function (e) {
                  this.intensity = e / (4 * Math.PI);
                },
              },
            ]),
            t
          );
        })(ef),
        pf = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, new ao(-5, 5, 5, -5, 0.5, 500))
              )).isDirectionalLightShadow = !0),
              e
            );
          }
          return Object(p.a)(t, e), t;
        })(of),
        mf = (function (e) {
          function t(e, n) {
            var i;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isDirectionalLight = !0),
              (i.type = "DirectionalLight"),
              i.position.copy(Ti.DefaultUp),
              i.updateMatrix(),
              (i.target = new Ti()),
              (i.shadow = new pf()),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.shadow.dispose();
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.target = e.target.clone()),
                    (this.shadow = e.shadow.clone()),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(ef),
        vf = (function (e) {
          function t(e, n) {
            var i;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isAmbientLight = !0),
              (i.type = "AmbientLight"),
              i
            );
          }
          return Object(p.a)(t, e), t;
        })(ef),
        gf = (function (e) {
          function t(e, n) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 10,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 10;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isRectAreaLight = !0),
              (i.type = "RectAreaLight"),
              (i.width = a),
              (i.height = o),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.width = e.width),
                    (this.height = e.height),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  return (
                    (n.object.width = this.width),
                    (n.object.height = this.height),
                    n
                  );
                },
              },
              {
                key: "power",
                get: function () {
                  return this.intensity * this.width * this.height * Math.PI;
                },
                set: function (e) {
                  this.intensity = e / (this.width * this.height * Math.PI);
                },
              },
            ]),
            t
          );
        })(ef),
        yf = (function () {
          function e() {
            Object(y.a)(this, e),
              (this.isSphericalHarmonics3 = !0),
              (this.coefficients = []);
            for (var t = 0; t < 9; t++) this.coefficients.push(new Sr());
          }
          return (
            Object(b.a)(
              e,
              [
                {
                  key: "set",
                  value: function (e) {
                    for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
                    return this;
                  },
                },
                {
                  key: "zero",
                  value: function () {
                    for (var e = 0; e < 9; e++)
                      this.coefficients[e].set(0, 0, 0);
                    return this;
                  },
                },
                {
                  key: "getAt",
                  value: function (e, t) {
                    var n = e.x,
                      r = e.y,
                      i = e.z,
                      a = this.coefficients;
                    return (
                      t.copy(a[0]).multiplyScalar(0.282095),
                      t.addScaledVector(a[1], 0.488603 * r),
                      t.addScaledVector(a[2], 0.488603 * i),
                      t.addScaledVector(a[3], 0.488603 * n),
                      t.addScaledVector(a[4], n * r * 1.092548),
                      t.addScaledVector(a[5], r * i * 1.092548),
                      t.addScaledVector(a[6], 0.315392 * (3 * i * i - 1)),
                      t.addScaledVector(a[7], n * i * 1.092548),
                      t.addScaledVector(a[8], 0.546274 * (n * n - r * r)),
                      t
                    );
                  },
                },
                {
                  key: "getIrradianceAt",
                  value: function (e, t) {
                    var n = e.x,
                      r = e.y,
                      i = e.z,
                      a = this.coefficients;
                    return (
                      t.copy(a[0]).multiplyScalar(0.886227),
                      t.addScaledVector(a[1], 1.023328 * r),
                      t.addScaledVector(a[2], 1.023328 * i),
                      t.addScaledVector(a[3], 1.023328 * n),
                      t.addScaledVector(a[4], 0.858086 * n * r),
                      t.addScaledVector(a[5], 0.858086 * r * i),
                      t.addScaledVector(a[6], 0.743125 * i * i - 0.247708),
                      t.addScaledVector(a[7], 0.858086 * n * i),
                      t.addScaledVector(a[8], 0.429043 * (n * n - r * r)),
                      t
                    );
                  },
                },
                {
                  key: "add",
                  value: function (e) {
                    for (var t = 0; t < 9; t++)
                      this.coefficients[t].add(e.coefficients[t]);
                    return this;
                  },
                },
                {
                  key: "addScaledSH",
                  value: function (e, t) {
                    for (var n = 0; n < 9; n++)
                      this.coefficients[n].addScaledVector(
                        e.coefficients[n],
                        t
                      );
                    return this;
                  },
                },
                {
                  key: "scale",
                  value: function (e) {
                    for (var t = 0; t < 9; t++)
                      this.coefficients[t].multiplyScalar(e);
                    return this;
                  },
                },
                {
                  key: "lerp",
                  value: function (e, t) {
                    for (var n = 0; n < 9; n++)
                      this.coefficients[n].lerp(e.coefficients[n], t);
                    return this;
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    for (var t = 0; t < 9; t++)
                      if (!this.coefficients[t].equals(e.coefficients[t]))
                        return !1;
                    return !0;
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return this.set(e.coefficients);
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor().copy(this);
                  },
                },
                {
                  key: "fromArray",
                  value: function (e) {
                    for (
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0,
                        n = this.coefficients,
                        r = 0;
                      r < 9;
                      r++
                    )
                      n[r].fromArray(e, t + 3 * r);
                    return this;
                  },
                },
                {
                  key: "toArray",
                  value: function () {
                    for (
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : [],
                        t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0,
                        n = this.coefficients,
                        r = 0;
                      r < 9;
                      r++
                    )
                      n[r].toArray(e, t + 3 * r);
                    return e;
                  },
                },
              ],
              [
                {
                  key: "getBasisAt",
                  value: function (e, t) {
                    var n = e.x,
                      r = e.y,
                      i = e.z;
                    (t[0] = 0.282095),
                      (t[1] = 0.488603 * r),
                      (t[2] = 0.488603 * i),
                      (t[3] = 0.488603 * n),
                      (t[4] = 1.092548 * n * r),
                      (t[5] = 1.092548 * r * i),
                      (t[6] = 0.315392 * (3 * i * i - 1)),
                      (t[7] = 1.092548 * n * i),
                      (t[8] = 0.546274 * (n * n - r * r));
                  },
                },
              ]
            ),
            e
          );
        })(),
        bf = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new yf(),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this, void 0, i)
              )).isLightProbe = !0),
              (e.sh = n),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    this.sh.copy(e.sh),
                    this
                  );
                },
              },
              {
                key: "fromJSON",
                value: function (e) {
                  return (
                    (this.intensity = e.intensity),
                    this.sh.fromArray(e.sh),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  return (n.object.sh = this.sh.toArray()), n;
                },
              },
            ]),
            t
          );
        })(ef),
        xf = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this, e))).textures =
                {}),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(
              t,
              [
                {
                  key: "load",
                  value: function (e, t, n, r) {
                    var i = this,
                      a = new Xh(i.manager);
                    a.setPath(i.path),
                      a.setRequestHeader(i.requestHeader),
                      a.setWithCredentials(i.withCredentials),
                      a.load(
                        e,
                        function (n) {
                          try {
                            t(i.parse(JSON.parse(n)));
                          } catch (a) {
                            r ? r(a) : console.error(a), i.manager.itemError(e);
                          }
                        },
                        n,
                        r
                      );
                  },
                },
                {
                  key: "parse",
                  value: function (e) {
                    var n = this.textures;
                    function r(e) {
                      return (
                        void 0 === n[e] &&
                          console.warn(
                            "THREE.MaterialLoader: Undefined texture",
                            e
                          ),
                        n[e]
                      );
                    }
                    var i = t.createMaterialFromType(e.type);
                    if (
                      (void 0 !== e.uuid && (i.uuid = e.uuid),
                      void 0 !== e.name && (i.name = e.name),
                      void 0 !== e.color &&
                        void 0 !== i.color &&
                        i.color.setHex(e.color),
                      void 0 !== e.roughness && (i.roughness = e.roughness),
                      void 0 !== e.metalness && (i.metalness = e.metalness),
                      void 0 !== e.sheen && (i.sheen = e.sheen),
                      void 0 !== e.sheenColor &&
                        (i.sheenColor = new lr().setHex(e.sheenColor)),
                      void 0 !== e.sheenRoughness &&
                        (i.sheenRoughness = e.sheenRoughness),
                      void 0 !== e.emissive &&
                        void 0 !== i.emissive &&
                        i.emissive.setHex(e.emissive),
                      void 0 !== e.specular &&
                        void 0 !== i.specular &&
                        i.specular.setHex(e.specular),
                      void 0 !== e.specularIntensity &&
                        (i.specularIntensity = e.specularIntensity),
                      void 0 !== e.specularColor &&
                        void 0 !== i.specularColor &&
                        i.specularColor.setHex(e.specularColor),
                      void 0 !== e.shininess && (i.shininess = e.shininess),
                      void 0 !== e.clearcoat && (i.clearcoat = e.clearcoat),
                      void 0 !== e.clearcoatRoughness &&
                        (i.clearcoatRoughness = e.clearcoatRoughness),
                      void 0 !== e.iridescence &&
                        (i.iridescence = e.iridescence),
                      void 0 !== e.iridescenceIOR &&
                        (i.iridescenceIOR = e.iridescenceIOR),
                      void 0 !== e.iridescenceThicknessRange &&
                        (i.iridescenceThicknessRange =
                          e.iridescenceThicknessRange),
                      void 0 !== e.transmission &&
                        (i.transmission = e.transmission),
                      void 0 !== e.thickness && (i.thickness = e.thickness),
                      void 0 !== e.attenuationDistance &&
                        (i.attenuationDistance = e.attenuationDistance),
                      void 0 !== e.attenuationColor &&
                        void 0 !== i.attenuationColor &&
                        i.attenuationColor.setHex(e.attenuationColor),
                      void 0 !== e.fog && (i.fog = e.fog),
                      void 0 !== e.flatShading &&
                        (i.flatShading = e.flatShading),
                      void 0 !== e.blending && (i.blending = e.blending),
                      void 0 !== e.combine && (i.combine = e.combine),
                      void 0 !== e.side && (i.side = e.side),
                      void 0 !== e.shadowSide && (i.shadowSide = e.shadowSide),
                      void 0 !== e.opacity && (i.opacity = e.opacity),
                      void 0 !== e.transparent &&
                        (i.transparent = e.transparent),
                      void 0 !== e.alphaTest && (i.alphaTest = e.alphaTest),
                      void 0 !== e.depthTest && (i.depthTest = e.depthTest),
                      void 0 !== e.depthWrite && (i.depthWrite = e.depthWrite),
                      void 0 !== e.colorWrite && (i.colorWrite = e.colorWrite),
                      void 0 !== e.stencilWrite &&
                        (i.stencilWrite = e.stencilWrite),
                      void 0 !== e.stencilWriteMask &&
                        (i.stencilWriteMask = e.stencilWriteMask),
                      void 0 !== e.stencilFunc &&
                        (i.stencilFunc = e.stencilFunc),
                      void 0 !== e.stencilRef && (i.stencilRef = e.stencilRef),
                      void 0 !== e.stencilFuncMask &&
                        (i.stencilFuncMask = e.stencilFuncMask),
                      void 0 !== e.stencilFail &&
                        (i.stencilFail = e.stencilFail),
                      void 0 !== e.stencilZFail &&
                        (i.stencilZFail = e.stencilZFail),
                      void 0 !== e.stencilZPass &&
                        (i.stencilZPass = e.stencilZPass),
                      void 0 !== e.wireframe && (i.wireframe = e.wireframe),
                      void 0 !== e.wireframeLinewidth &&
                        (i.wireframeLinewidth = e.wireframeLinewidth),
                      void 0 !== e.wireframeLinecap &&
                        (i.wireframeLinecap = e.wireframeLinecap),
                      void 0 !== e.wireframeLinejoin &&
                        (i.wireframeLinejoin = e.wireframeLinejoin),
                      void 0 !== e.rotation && (i.rotation = e.rotation),
                      1 !== e.linewidth && (i.linewidth = e.linewidth),
                      void 0 !== e.dashSize && (i.dashSize = e.dashSize),
                      void 0 !== e.gapSize && (i.gapSize = e.gapSize),
                      void 0 !== e.scale && (i.scale = e.scale),
                      void 0 !== e.polygonOffset &&
                        (i.polygonOffset = e.polygonOffset),
                      void 0 !== e.polygonOffsetFactor &&
                        (i.polygonOffsetFactor = e.polygonOffsetFactor),
                      void 0 !== e.polygonOffsetUnits &&
                        (i.polygonOffsetUnits = e.polygonOffsetUnits),
                      void 0 !== e.dithering && (i.dithering = e.dithering),
                      void 0 !== e.alphaToCoverage &&
                        (i.alphaToCoverage = e.alphaToCoverage),
                      void 0 !== e.premultipliedAlpha &&
                        (i.premultipliedAlpha = e.premultipliedAlpha),
                      void 0 !== e.visible && (i.visible = e.visible),
                      void 0 !== e.toneMapped && (i.toneMapped = e.toneMapped),
                      void 0 !== e.userData && (i.userData = e.userData),
                      void 0 !== e.vertexColors &&
                        ("number" === typeof e.vertexColors
                          ? (i.vertexColors = e.vertexColors > 0)
                          : (i.vertexColors = e.vertexColors)),
                      void 0 !== e.uniforms)
                    )
                      for (var a in e.uniforms) {
                        var o = e.uniforms[a];
                        switch (((i.uniforms[a] = {}), o.type)) {
                          case "t":
                            i.uniforms[a].value = r(o.value);
                            break;
                          case "c":
                            i.uniforms[a].value = new lr().setHex(o.value);
                            break;
                          case "v2":
                            i.uniforms[a].value = new qn().fromArray(o.value);
                            break;
                          case "v3":
                            i.uniforms[a].value = new Sr().fromArray(o.value);
                            break;
                          case "v4":
                            i.uniforms[a].value = new mr().fromArray(o.value);
                            break;
                          case "m3":
                            i.uniforms[a].value = new Xn().fromArray(o.value);
                            break;
                          case "m4":
                            i.uniforms[a].value = new ei().fromArray(o.value);
                            break;
                          default:
                            i.uniforms[a].value = o.value;
                        }
                      }
                    if (
                      (void 0 !== e.defines && (i.defines = e.defines),
                      void 0 !== e.vertexShader &&
                        (i.vertexShader = e.vertexShader),
                      void 0 !== e.fragmentShader &&
                        (i.fragmentShader = e.fragmentShader),
                      void 0 !== e.glslVersion &&
                        (i.glslVersion = e.glslVersion),
                      void 0 !== e.extensions)
                    )
                      for (var s in e.extensions)
                        i.extensions[s] = e.extensions[s];
                    if (
                      (void 0 !== e.size && (i.size = e.size),
                      void 0 !== e.sizeAttenuation &&
                        (i.sizeAttenuation = e.sizeAttenuation),
                      void 0 !== e.map && (i.map = r(e.map)),
                      void 0 !== e.matcap && (i.matcap = r(e.matcap)),
                      void 0 !== e.alphaMap && (i.alphaMap = r(e.alphaMap)),
                      void 0 !== e.bumpMap && (i.bumpMap = r(e.bumpMap)),
                      void 0 !== e.bumpScale && (i.bumpScale = e.bumpScale),
                      void 0 !== e.normalMap && (i.normalMap = r(e.normalMap)),
                      void 0 !== e.normalMapType &&
                        (i.normalMapType = e.normalMapType),
                      void 0 !== e.normalScale)
                    ) {
                      var u = e.normalScale;
                      !1 === Array.isArray(u) && (u = [u, u]),
                        (i.normalScale = new qn().fromArray(u));
                    }
                    return (
                      void 0 !== e.displacementMap &&
                        (i.displacementMap = r(e.displacementMap)),
                      void 0 !== e.displacementScale &&
                        (i.displacementScale = e.displacementScale),
                      void 0 !== e.displacementBias &&
                        (i.displacementBias = e.displacementBias),
                      void 0 !== e.roughnessMap &&
                        (i.roughnessMap = r(e.roughnessMap)),
                      void 0 !== e.metalnessMap &&
                        (i.metalnessMap = r(e.metalnessMap)),
                      void 0 !== e.emissiveMap &&
                        (i.emissiveMap = r(e.emissiveMap)),
                      void 0 !== e.emissiveIntensity &&
                        (i.emissiveIntensity = e.emissiveIntensity),
                      void 0 !== e.specularMap &&
                        (i.specularMap = r(e.specularMap)),
                      void 0 !== e.specularIntensityMap &&
                        (i.specularIntensityMap = r(e.specularIntensityMap)),
                      void 0 !== e.specularColorMap &&
                        (i.specularColorMap = r(e.specularColorMap)),
                      void 0 !== e.envMap && (i.envMap = r(e.envMap)),
                      void 0 !== e.envMapIntensity &&
                        (i.envMapIntensity = e.envMapIntensity),
                      void 0 !== e.reflectivity &&
                        (i.reflectivity = e.reflectivity),
                      void 0 !== e.refractionRatio &&
                        (i.refractionRatio = e.refractionRatio),
                      void 0 !== e.lightMap && (i.lightMap = r(e.lightMap)),
                      void 0 !== e.lightMapIntensity &&
                        (i.lightMapIntensity = e.lightMapIntensity),
                      void 0 !== e.aoMap && (i.aoMap = r(e.aoMap)),
                      void 0 !== e.aoMapIntensity &&
                        (i.aoMapIntensity = e.aoMapIntensity),
                      void 0 !== e.gradientMap &&
                        (i.gradientMap = r(e.gradientMap)),
                      void 0 !== e.clearcoatMap &&
                        (i.clearcoatMap = r(e.clearcoatMap)),
                      void 0 !== e.clearcoatRoughnessMap &&
                        (i.clearcoatRoughnessMap = r(e.clearcoatRoughnessMap)),
                      void 0 !== e.clearcoatNormalMap &&
                        (i.clearcoatNormalMap = r(e.clearcoatNormalMap)),
                      void 0 !== e.clearcoatNormalScale &&
                        (i.clearcoatNormalScale = new qn().fromArray(
                          e.clearcoatNormalScale
                        )),
                      void 0 !== e.iridescenceMap &&
                        (i.iridescenceMap = r(e.iridescenceMap)),
                      void 0 !== e.iridescenceThicknessMap &&
                        (i.iridescenceThicknessMap = r(
                          e.iridescenceThicknessMap
                        )),
                      void 0 !== e.transmissionMap &&
                        (i.transmissionMap = r(e.transmissionMap)),
                      void 0 !== e.thicknessMap &&
                        (i.thicknessMap = r(e.thicknessMap)),
                      void 0 !== e.sheenColorMap &&
                        (i.sheenColorMap = r(e.sheenColorMap)),
                      void 0 !== e.sheenRoughnessMap &&
                        (i.sheenRoughnessMap = r(e.sheenRoughnessMap)),
                      i
                    );
                  },
                },
                {
                  key: "setTextures",
                  value: function (e) {
                    return (this.textures = e), this;
                  },
                },
              ],
              [
                {
                  key: "createMaterialFromType",
                  value: function (e) {
                    return new {
                      ShadowMaterial: lh,
                      SpriteMaterial: Nu,
                      RawShaderMaterial: ch,
                      ShaderMaterial: Ra,
                      PointsMaterial: kl,
                      MeshPhysicalMaterial: fh,
                      MeshStandardMaterial: hh,
                      MeshPhongMaterial: dh,
                      MeshToonMaterial: ph,
                      MeshNormalMaterial: mh,
                      MeshLambertMaterial: vh,
                      MeshDepthMaterial: hu,
                      MeshDistanceMaterial: fu,
                      MeshBasicMaterial: Ui,
                      MeshMatcapMaterial: gh,
                      LineDashedMaterial: yh,
                      LineBasicMaterial: gl,
                      Material: zi,
                    }[e]();
                  },
                },
              ]
            ),
            t
          );
        })(Vh),
        _f = (function () {
          function e() {
            Object(y.a)(this, e);
          }
          return (
            Object(b.a)(e, null, [
              {
                key: "decodeText",
                value: function (e) {
                  if ("undefined" !== typeof TextDecoder)
                    return new TextDecoder().decode(e);
                  for (var t = "", n = 0, r = e.length; n < r; n++)
                    t += String.fromCharCode(e[n]);
                  try {
                    return decodeURIComponent(escape(t));
                  } catch (i) {
                    return t;
                  }
                },
              },
              {
                key: "extractUrlBase",
                value: function (e) {
                  var t = e.lastIndexOf("/");
                  return -1 === t ? "./" : e.slice(0, t + 1);
                },
              },
              {
                key: "resolveURL",
                value: function (e, t) {
                  return "string" !== typeof e || "" === e
                    ? ""
                    : (/^https?:\/\//i.test(t) &&
                        /^\//.test(e) &&
                        (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")),
                      /^(https?:)?\/\//i.test(e)
                        ? e
                        : /^data:.*,.*$/i.test(e)
                        ? e
                        : /^blob:.*$/i.test(e)
                        ? e
                        : t + e);
                },
              },
            ]),
            e
          );
        })(),
        wf = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isInstancedBufferGeometry = !0),
              (e.type = "InstancedBufferGeometry"),
              (e.instanceCount = 1 / 0),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.instanceCount = e.instanceCount),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    this
                  );
                  return (
                    (e.instanceCount = this.instanceCount),
                    (e.isInstancedBufferGeometry = !0),
                    e
                  );
                },
              },
            ]),
            t
          );
        })(oa),
        Sf = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Xh(i.manager);
                  a.setPath(i.path),
                    a.setRequestHeader(i.requestHeader),
                    a.setWithCredentials(i.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          t(i.parse(JSON.parse(n)));
                        } catch (a) {
                          r ? r(a) : console.error(a), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "parse",
                value: function (e) {
                  var t = {},
                    n = {};
                  function r(e, r) {
                    if (void 0 !== t[r]) return t[r];
                    var i = e.interleavedBuffers[r],
                      a = (function (e, t) {
                        if (void 0 !== n[t]) return n[t];
                        var r = e.arrayBuffers[t],
                          i = new Uint32Array(r).buffer;
                        return (n[t] = i), i;
                      })(e, i.buffer),
                      o = Zn(i.type, a),
                      s = new Lu(o, i.stride);
                    return (s.uuid = i.uuid), (t[r] = s), s;
                  }
                  var i = e.isInstancedBufferGeometry ? new wf() : new oa(),
                    a = e.data.index;
                  if (void 0 !== a) {
                    var o = Zn(a.type, a.array);
                    i.setIndex(new Gi(o, 1));
                  }
                  var s = e.data.attributes;
                  for (var u in s) {
                    var l = s[u],
                      c = void 0;
                    if (l.isInterleavedBufferAttribute) {
                      var h = r(e.data, l.data);
                      c = new Iu(h, l.itemSize, l.offset, l.normalized);
                    } else {
                      var f = Zn(l.type, l.array);
                      c = new (l.isInstancedBufferAttribute ? hl : Gi)(
                        f,
                        l.itemSize,
                        l.normalized
                      );
                    }
                    void 0 !== l.name && (c.name = l.name),
                      void 0 !== l.usage && c.setUsage(l.usage),
                      void 0 !== l.updateRange &&
                        ((c.updateRange.offset = l.updateRange.offset),
                        (c.updateRange.count = l.updateRange.count)),
                      i.setAttribute(u, c);
                  }
                  var d = e.data.morphAttributes;
                  if (d)
                    for (var p in d) {
                      for (
                        var m = d[p], v = [], g = 0, y = m.length;
                        g < y;
                        g++
                      ) {
                        var b = m[g],
                          x = void 0;
                        if (b.isInterleavedBufferAttribute) {
                          var _ = r(e.data, b.data);
                          x = new Iu(_, b.itemSize, b.offset, b.normalized);
                        } else {
                          var w = Zn(b.type, b.array);
                          x = new Gi(w, b.itemSize, b.normalized);
                        }
                        void 0 !== b.name && (x.name = b.name), v.push(x);
                      }
                      i.morphAttributes[p] = v;
                    }
                  e.data.morphTargetsRelative && (i.morphTargetsRelative = !0);
                  var S = e.data.groups || e.data.drawcalls || e.data.offsets;
                  if (void 0 !== S)
                    for (var M = 0, T = S.length; M !== T; ++M) {
                      var E = S[M];
                      i.addGroup(E.start, E.count, E.materialIndex);
                    }
                  var O = e.data.boundingSphere;
                  if (void 0 !== O) {
                    var k = new Sr();
                    void 0 !== O.center && k.fromArray(O.center),
                      (i.boundingSphere = new Wr(k, O.radius));
                  }
                  return (
                    e.name && (i.name = e.name),
                    e.userData && (i.userData = e.userData),
                    i
                  );
                },
              },
            ]),
            t
          );
        })(Vh),
        Mf = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = "" === this.path ? _f.extractUrlBase(e) : this.path;
                  this.resourcePath = this.resourcePath || a;
                  var o = new Xh(this.manager);
                  o.setPath(this.path),
                    o.setRequestHeader(this.requestHeader),
                    o.setWithCredentials(this.withCredentials),
                    o.load(
                      e,
                      function (n) {
                        var a = null;
                        try {
                          a = JSON.parse(n);
                        } catch (s) {
                          return (
                            void 0 !== r && r(s),
                            void console.error(
                              "THREE:ObjectLoader: Can't parse " + e + ".",
                              s.message
                            )
                          );
                        }
                        var o = a.metadata;
                        void 0 !== o &&
                        void 0 !== o.type &&
                        "geometry" !== o.type.toLowerCase()
                          ? i.parse(a, t)
                          : console.error(
                              "THREE.ObjectLoader: Can't load " + e
                            );
                      },
                      n,
                      r
                    );
                },
              },
              {
                key: "loadAsync",
                value: (function () {
                  var e = Object(u.a)(
                    g.a.mark(function e(t, n) {
                      var r, i, a, o, s, u;
                      return g.a.wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                return (
                                  (r = this),
                                  (i =
                                    "" === this.path
                                      ? _f.extractUrlBase(t)
                                      : this.path),
                                  (this.resourcePath = this.resourcePath || i),
                                  (a = new Xh(this.manager)).setPath(this.path),
                                  a.setRequestHeader(this.requestHeader),
                                  a.setWithCredentials(this.withCredentials),
                                  (e.next = 9),
                                  a.loadAsync(t, n)
                                );
                              case 9:
                                if (
                                  ((o = e.sent),
                                  (s = JSON.parse(o)),
                                  void 0 !== (u = s.metadata) &&
                                    void 0 !== u.type &&
                                    "geometry" !== u.type.toLowerCase())
                                ) {
                                  e.next = 14;
                                  break;
                                }
                                throw new Error(
                                  "THREE.ObjectLoader: Can't load " + t
                                );
                              case 14:
                                return (e.next = 16), r.parseAsync(s);
                              case 16:
                                return e.abrupt("return", e.sent);
                              case 17:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t, n) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parse",
                value: function (e, t) {
                  var n = this.parseAnimations(e.animations),
                    r = this.parseShapes(e.shapes),
                    i = this.parseGeometries(e.geometries, r),
                    a = this.parseImages(e.images, function () {
                      void 0 !== t && t(u);
                    }),
                    o = this.parseTextures(e.textures, a),
                    s = this.parseMaterials(e.materials, o),
                    u = this.parseObject(e.object, i, s, o, n),
                    l = this.parseSkeletons(e.skeletons, u);
                  if ((this.bindSkeletons(u, l), void 0 !== t)) {
                    var c = !1;
                    for (var h in a)
                      if (a[h].data instanceof HTMLImageElement) {
                        c = !0;
                        break;
                      }
                    !1 === c && t(u);
                  }
                  return u;
                },
              },
              {
                key: "parseAsync",
                value: (function () {
                  var e = Object(u.a)(
                    g.a.mark(function e(t) {
                      var n, r, i, a, o, s, u, l;
                      return g.a.wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                return (
                                  (n = this.parseAnimations(t.animations)),
                                  (r = this.parseShapes(t.shapes)),
                                  (i = this.parseGeometries(t.geometries, r)),
                                  (e.next = 5),
                                  this.parseImagesAsync(t.images)
                                );
                              case 5:
                                return (
                                  (a = e.sent),
                                  (o = this.parseTextures(t.textures, a)),
                                  (s = this.parseMaterials(t.materials, o)),
                                  (u = this.parseObject(t.object, i, s, o, n)),
                                  (l = this.parseSkeletons(t.skeletons, u)),
                                  this.bindSkeletons(u, l),
                                  e.abrupt("return", u)
                                );
                              case 12:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parseShapes",
                value: function (e) {
                  var t = {};
                  if (void 0 !== e)
                    for (var n = 0, r = e.length; n < r; n++) {
                      var i = new bc().fromJSON(e[n]);
                      t[i.uuid] = i;
                    }
                  return t;
                },
              },
              {
                key: "parseSkeletons",
                value: function (e, t) {
                  var n = {},
                    r = {};
                  if (
                    (t.traverse(function (e) {
                      e.isBone && (r[e.uuid] = e);
                    }),
                    void 0 !== e)
                  )
                    for (var i = 0, a = e.length; i < a; i++) {
                      var o = new cl().fromJSON(e[i], r);
                      n[o.uuid] = o;
                    }
                  return n;
                },
              },
              {
                key: "parseGeometries",
                value: function (e, t) {
                  var n = {};
                  if (void 0 !== e)
                    for (var r = new Sf(), i = 0, a = e.length; i < a; i++) {
                      var o = void 0,
                        s = e[i];
                      switch (s.type) {
                        case "BufferGeometry":
                        case "InstancedBufferGeometry":
                          o = r.parse(s);
                          break;
                        default:
                          s.type in uh
                            ? (o = uh[s.type].fromJSON(s, t))
                            : console.warn(
                                'THREE.ObjectLoader: Unsupported geometry type "'.concat(
                                  s.type,
                                  '"'
                                )
                              );
                      }
                      (o.uuid = s.uuid),
                        void 0 !== s.name && (o.name = s.name),
                        !0 === o.isBufferGeometry &&
                          void 0 !== s.userData &&
                          (o.userData = s.userData),
                        (n[s.uuid] = o);
                    }
                  return n;
                },
              },
              {
                key: "parseMaterials",
                value: function (e, t) {
                  var n = {},
                    r = {};
                  if (void 0 !== e) {
                    var i = new xf();
                    i.setTextures(t);
                    for (var a = 0, o = e.length; a < o; a++) {
                      var s = e[a];
                      void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)),
                        (r[s.uuid] = n[s.uuid]);
                    }
                  }
                  return r;
                },
              },
              {
                key: "parseAnimations",
                value: function (e) {
                  var t = {};
                  if (void 0 !== e)
                    for (var n = 0; n < e.length; n++) {
                      var r = e[n],
                        i = zh.parse(r);
                      t[i.uuid] = i;
                    }
                  return t;
                },
              },
              {
                key: "parseImages",
                value: function (e, t) {
                  var n,
                    r = this,
                    i = {};
                  function a(e) {
                    if ("string" === typeof e) {
                      var t = e;
                      return (function (e) {
                        return (
                          r.manager.itemStart(e),
                          n.load(
                            e,
                            function () {
                              r.manager.itemEnd(e);
                            },
                            void 0,
                            function () {
                              r.manager.itemError(e), r.manager.itemEnd(e);
                            }
                          )
                        );
                      })(
                        /^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)
                          ? t
                          : r.resourcePath + t
                      );
                    }
                    return e.data
                      ? {
                          data: Zn(e.type, e.data),
                          width: e.width,
                          height: e.height,
                        }
                      : null;
                  }
                  if (void 0 !== e && e.length > 0) {
                    var o = new Gh(t);
                    (n = new Zh(o)).setCrossOrigin(this.crossOrigin);
                    for (var s = 0, u = e.length; s < u; s++) {
                      var l = e[s],
                        c = l.url;
                      if (Array.isArray(c)) {
                        for (var h = [], f = 0, d = c.length; f < d; f++) {
                          var p = a(c[f]);
                          null !== p &&
                            (p instanceof HTMLImageElement
                              ? h.push(p)
                              : h.push(new sl(p.data, p.width, p.height)));
                        }
                        i[l.uuid] = new hr(h);
                      } else {
                        var m = a(l.url);
                        i[l.uuid] = new hr(m);
                      }
                    }
                  }
                  return i;
                },
              },
              {
                key: "parseImagesAsync",
                value: (function () {
                  var e = Object(u.a)(
                    g.a.mark(function e(t) {
                      var n, r, i, a, o, s, l, c, h, f, d, p, m, v, y;
                      return g.a.wrap(
                        function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                if (
                                  ((o = function () {
                                    return (o = Object(u.a)(
                                      g.a.mark(function e(t) {
                                        var r, a;
                                        return g.a.wrap(function (e) {
                                          for (;;)
                                            switch ((e.prev = e.next)) {
                                              case 0:
                                                if ("string" !== typeof t) {
                                                  e.next = 8;
                                                  break;
                                                }
                                                return (
                                                  (a =
                                                    /^(\/\/)|([a-z]+:(\/\/)?)/i.test(
                                                      (r = t)
                                                    )
                                                      ? r
                                                      : n.resourcePath + r),
                                                  (e.next = 5),
                                                  i.loadAsync(a)
                                                );
                                              case 5:
                                                return e.abrupt(
                                                  "return",
                                                  e.sent
                                                );
                                              case 8:
                                                if (!t.data) {
                                                  e.next = 12;
                                                  break;
                                                }
                                                return e.abrupt("return", {
                                                  data: Zn(t.type, t.data),
                                                  width: t.width,
                                                  height: t.height,
                                                });
                                              case 12:
                                                return e.abrupt("return", null);
                                              case 13:
                                              case "end":
                                                return e.stop();
                                            }
                                        }, e);
                                      })
                                    )).apply(this, arguments);
                                  }),
                                  (a = function (e) {
                                    return o.apply(this, arguments);
                                  }),
                                  (n = this),
                                  (r = {}),
                                  !(void 0 !== t && t.length > 0))
                                ) {
                                  e.next = 33;
                                  break;
                                }
                                (i = new Zh(this.manager)).setCrossOrigin(
                                  this.crossOrigin
                                ),
                                  (s = 0),
                                  (l = t.length);
                              case 8:
                                if (!(s < l)) {
                                  e.next = 33;
                                  break;
                                }
                                if (
                                  ((c = t[s]), (h = c.url), !Array.isArray(h))
                                ) {
                                  e.next = 26;
                                  break;
                                }
                                (f = []), (d = 0), (p = h.length);
                              case 14:
                                if (!(d < p)) {
                                  e.next = 23;
                                  break;
                                }
                                return (m = h[d]), (e.next = 18), a(m);
                              case 18:
                                null !== (v = e.sent) &&
                                  (v instanceof HTMLImageElement
                                    ? f.push(v)
                                    : f.push(
                                        new sl(v.data, v.width, v.height)
                                      ));
                              case 20:
                                d++, (e.next = 14);
                                break;
                              case 23:
                                (r[c.uuid] = new hr(f)), (e.next = 30);
                                break;
                              case 26:
                                return (e.next = 28), a(c.url);
                              case 28:
                                (y = e.sent), (r[c.uuid] = new hr(y));
                              case 30:
                                s++, (e.next = 8);
                                break;
                              case 33:
                                return e.abrupt("return", r);
                              case 34:
                              case "end":
                                return e.stop();
                            }
                        },
                        e,
                        this
                      );
                    })
                  );
                  return function (t) {
                    return e.apply(this, arguments);
                  };
                })(),
              },
              {
                key: "parseTextures",
                value: function (e, t) {
                  function n(e, t) {
                    return "number" === typeof e
                      ? e
                      : (console.warn(
                          "THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
                          e
                        ),
                        t[e]);
                  }
                  var r = {};
                  if (void 0 !== e)
                    for (var i = 0, a = e.length; i < a; i++) {
                      var o = e[i];
                      void 0 === o.image &&
                        console.warn(
                          'THREE.ObjectLoader: No "image" specified for',
                          o.uuid
                        ),
                        void 0 === t[o.image] &&
                          console.warn(
                            "THREE.ObjectLoader: Undefined image",
                            o.image
                          );
                      var s = t[o.image],
                        u = s.data,
                        l = void 0;
                      Array.isArray(u)
                        ? ((l = new za()),
                          6 === u.length && (l.needsUpdate = !0))
                        : ((l = u && u.data ? new sl() : new pr()),
                          u && (l.needsUpdate = !0)),
                        (l.source = s),
                        (l.uuid = o.uuid),
                        void 0 !== o.name && (l.name = o.name),
                        void 0 !== o.mapping && (l.mapping = n(o.mapping, Tf)),
                        void 0 !== o.offset && l.offset.fromArray(o.offset),
                        void 0 !== o.repeat && l.repeat.fromArray(o.repeat),
                        void 0 !== o.center && l.center.fromArray(o.center),
                        void 0 !== o.rotation && (l.rotation = o.rotation),
                        void 0 !== o.wrap &&
                          ((l.wrapS = n(o.wrap[0], Ef)),
                          (l.wrapT = n(o.wrap[1], Ef))),
                        void 0 !== o.format && (l.format = o.format),
                        void 0 !== o.type && (l.type = o.type),
                        void 0 !== o.encoding && (l.encoding = o.encoding),
                        void 0 !== o.minFilter &&
                          (l.minFilter = n(o.minFilter, Of)),
                        void 0 !== o.magFilter &&
                          (l.magFilter = n(o.magFilter, Of)),
                        void 0 !== o.anisotropy &&
                          (l.anisotropy = o.anisotropy),
                        void 0 !== o.flipY && (l.flipY = o.flipY),
                        void 0 !== o.premultiplyAlpha &&
                          (l.premultiplyAlpha = o.premultiplyAlpha),
                        void 0 !== o.unpackAlignment &&
                          (l.unpackAlignment = o.unpackAlignment),
                        void 0 !== o.userData && (l.userData = o.userData),
                        (r[o.uuid] = l);
                    }
                  return r;
                },
              },
              {
                key: "parseObject",
                value: function (e, t, n, r, i) {
                  var a, o, s;
                  function u(e) {
                    return (
                      void 0 === t[e] &&
                        console.warn(
                          "THREE.ObjectLoader: Undefined geometry",
                          e
                        ),
                      t[e]
                    );
                  }
                  function l(e) {
                    if (void 0 !== e) {
                      if (Array.isArray(e)) {
                        for (var t = [], r = 0, i = e.length; r < i; r++) {
                          var a = e[r];
                          void 0 === n[a] &&
                            console.warn(
                              "THREE.ObjectLoader: Undefined material",
                              a
                            ),
                            t.push(n[a]);
                        }
                        return t;
                      }
                      return (
                        void 0 === n[e] &&
                          console.warn(
                            "THREE.ObjectLoader: Undefined material",
                            e
                          ),
                        n[e]
                      );
                    }
                  }
                  function c(e) {
                    return (
                      void 0 === r[e] &&
                        console.warn(
                          "THREE.ObjectLoader: Undefined texture",
                          e
                        ),
                      r[e]
                    );
                  }
                  switch (e.type) {
                    case "Scene":
                      (a = new Ru()),
                        void 0 !== e.background &&
                          (Number.isInteger(e.background)
                            ? (a.background = new lr(e.background))
                            : (a.background = c(e.background))),
                        void 0 !== e.environment &&
                          (a.environment = c(e.environment)),
                        void 0 !== e.fog &&
                          ("Fog" === e.fog.type
                            ? (a.fog = new Pu(
                                e.fog.color,
                                e.fog.near,
                                e.fog.far
                              ))
                            : "FogExp2" === e.fog.type &&
                              (a.fog = new Cu(e.fog.color, e.fog.density)));
                      break;
                    case "PerspectiveCamera":
                      (a = new ja(e.fov, e.aspect, e.near, e.far)),
                        void 0 !== e.focus && (a.focus = e.focus),
                        void 0 !== e.zoom && (a.zoom = e.zoom),
                        void 0 !== e.filmGauge && (a.filmGauge = e.filmGauge),
                        void 0 !== e.filmOffset &&
                          (a.filmOffset = e.filmOffset),
                        void 0 !== e.view &&
                          (a.view = Object.assign({}, e.view));
                      break;
                    case "OrthographicCamera":
                      (a = new ao(
                        e.left,
                        e.right,
                        e.top,
                        e.bottom,
                        e.near,
                        e.far
                      )),
                        void 0 !== e.zoom && (a.zoom = e.zoom),
                        void 0 !== e.view &&
                          (a.view = Object.assign({}, e.view));
                      break;
                    case "AmbientLight":
                      a = new vf(e.color, e.intensity);
                      break;
                    case "DirectionalLight":
                      a = new mf(e.color, e.intensity);
                      break;
                    case "PointLight":
                      a = new df(e.color, e.intensity, e.distance, e.decay);
                      break;
                    case "RectAreaLight":
                      a = new gf(e.color, e.intensity, e.width, e.height);
                      break;
                    case "SpotLight":
                      a = new uf(
                        e.color,
                        e.intensity,
                        e.distance,
                        e.angle,
                        e.penumbra,
                        e.decay
                      );
                      break;
                    case "HemisphereLight":
                      a = new tf(e.color, e.groundColor, e.intensity);
                      break;
                    case "LightProbe":
                      a = new bf().fromJSON(e);
                      break;
                    case "SkinnedMesh":
                      (o = u(e.geometry)),
                        (s = l(e.material)),
                        (a = new al(o, s)),
                        void 0 !== e.bindMode && (a.bindMode = e.bindMode),
                        void 0 !== e.bindMatrix &&
                          a.bindMatrix.fromArray(e.bindMatrix),
                        void 0 !== e.skeleton && (a.skeleton = e.skeleton);
                      break;
                    case "Mesh":
                      (o = u(e.geometry)),
                        (s = l(e.material)),
                        (a = new Ma(o, s));
                      break;
                    case "InstancedMesh":
                      (o = u(e.geometry)), (s = l(e.material));
                      var h = e.count,
                        f = e.instanceMatrix,
                        d = e.instanceColor;
                      ((a = new vl(o, s, h)).instanceMatrix = new hl(
                        new Float32Array(f.array),
                        16
                      )),
                        void 0 !== d &&
                          (a.instanceColor = new hl(
                            new Float32Array(d.array),
                            d.itemSize
                          ));
                      break;
                    case "LOD":
                      a = new Qu();
                      break;
                    case "Line":
                      a = new Sl(u(e.geometry), l(e.material));
                      break;
                    case "LineLoop":
                      a = new Ol(u(e.geometry), l(e.material));
                      break;
                    case "LineSegments":
                      a = new El(u(e.geometry), l(e.material));
                      break;
                    case "PointCloud":
                    case "Points":
                      a = new Ll(u(e.geometry), l(e.material));
                      break;
                    case "Sprite":
                      a = new Ju(l(e.material));
                      break;
                    case "Group":
                      a = new xu();
                      break;
                    case "Bone":
                      a = new ol();
                      break;
                    default:
                      a = new Ti();
                  }
                  if (
                    ((a.uuid = e.uuid),
                    void 0 !== e.name && (a.name = e.name),
                    void 0 !== e.matrix
                      ? (a.matrix.fromArray(e.matrix),
                        void 0 !== e.matrixAutoUpdate &&
                          (a.matrixAutoUpdate = e.matrixAutoUpdate),
                        a.matrixAutoUpdate &&
                          a.matrix.decompose(a.position, a.quaternion, a.scale))
                      : (void 0 !== e.position &&
                          a.position.fromArray(e.position),
                        void 0 !== e.rotation &&
                          a.rotation.fromArray(e.rotation),
                        void 0 !== e.quaternion &&
                          a.quaternion.fromArray(e.quaternion),
                        void 0 !== e.scale && a.scale.fromArray(e.scale)),
                    void 0 !== e.castShadow && (a.castShadow = e.castShadow),
                    void 0 !== e.receiveShadow &&
                      (a.receiveShadow = e.receiveShadow),
                    e.shadow &&
                      (void 0 !== e.shadow.bias &&
                        (a.shadow.bias = e.shadow.bias),
                      void 0 !== e.shadow.normalBias &&
                        (a.shadow.normalBias = e.shadow.normalBias),
                      void 0 !== e.shadow.radius &&
                        (a.shadow.radius = e.shadow.radius),
                      void 0 !== e.shadow.mapSize &&
                        a.shadow.mapSize.fromArray(e.shadow.mapSize),
                      void 0 !== e.shadow.camera &&
                        (a.shadow.camera = this.parseObject(e.shadow.camera))),
                    void 0 !== e.visible && (a.visible = e.visible),
                    void 0 !== e.frustumCulled &&
                      (a.frustumCulled = e.frustumCulled),
                    void 0 !== e.renderOrder && (a.renderOrder = e.renderOrder),
                    void 0 !== e.userData && (a.userData = e.userData),
                    void 0 !== e.layers && (a.layers.mask = e.layers),
                    void 0 !== e.children)
                  )
                    for (var p = e.children, m = 0; m < p.length; m++)
                      a.add(this.parseObject(p[m], t, n, r, i));
                  if (void 0 !== e.animations)
                    for (var v = e.animations, g = 0; g < v.length; g++) {
                      var y = v[g];
                      a.animations.push(i[y]);
                    }
                  if ("LOD" === e.type) {
                    void 0 !== e.autoUpdate && (a.autoUpdate = e.autoUpdate);
                    for (var b = e.levels, x = 0; x < b.length; x++) {
                      var _ = b[x],
                        w = a.getObjectByProperty("uuid", _.object);
                      void 0 !== w && a.addLevel(w, _.distance);
                    }
                  }
                  return a;
                },
              },
              {
                key: "bindSkeletons",
                value: function (e, t) {
                  0 !== Object.keys(t).length &&
                    e.traverse(function (e) {
                      if (!0 === e.isSkinnedMesh && void 0 !== e.skeleton) {
                        var n = t[e.skeleton];
                        void 0 === n
                          ? console.warn(
                              "THREE.ObjectLoader: No skeleton found with UUID:",
                              e.skeleton
                            )
                          : e.bind(n, e.bindMatrix);
                      }
                    });
                },
              },
            ]),
            t
          );
        })(Vh),
        Tf = {
          UVMapping: be,
          CubeReflectionMapping: xe,
          CubeRefractionMapping: _e,
          EquirectangularReflectionMapping: we,
          EquirectangularRefractionMapping: Se,
          CubeUVReflectionMapping: Me,
        },
        Ef = {
          RepeatWrapping: Te,
          ClampToEdgeWrapping: Ee,
          MirroredRepeatWrapping: Oe,
        },
        Of = {
          NearestFilter: ke,
          NearestMipmapNearestFilter: Ae,
          NearestMipmapLinearFilter: Pe,
          LinearFilter: Le,
          LinearMipmapNearestFilter: je,
          LinearMipmapLinearFilter: Ne,
        },
        kf = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e)
              )).isImageBitmapLoader = !0),
              "undefined" === typeof createImageBitmap &&
                console.warn(
                  "THREE.ImageBitmapLoader: createImageBitmap() not supported."
                ),
              "undefined" === typeof fetch &&
                console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
              (n.options = { premultiplyAlpha: "none" }),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "setOptions",
                value: function (e) {
                  return (this.options = e), this;
                },
              },
              {
                key: "load",
                value: function (e, t, n, r) {
                  void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var i = this,
                    a = Fh.get(e);
                  if (void 0 !== a)
                    return (
                      i.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(a), i.manager.itemEnd(e);
                      }, 0),
                      a
                    );
                  var o = {};
                  (o.credentials =
                    "anonymous" === this.crossOrigin
                      ? "same-origin"
                      : "include"),
                    (o.headers = this.requestHeader),
                    fetch(e, o)
                      .then(function (e) {
                        return e.blob();
                      })
                      .then(function (e) {
                        return createImageBitmap(
                          e,
                          Object.assign(i.options, {
                            colorSpaceConversion: "none",
                          })
                        );
                      })
                      .then(function (n) {
                        Fh.add(e, n), t && t(n), i.manager.itemEnd(e);
                      })
                      .catch(function (t) {
                        r && r(t), i.manager.itemError(e), i.manager.itemEnd(e);
                      }),
                    i.manager.itemStart(e);
                },
              },
            ]),
            t
          );
        })(Vh),
        Af = {
          getContext: function () {
            return (
              void 0 === Bh &&
                (Bh = new (window.AudioContext || window.webkitAudioContext)()),
              Bh
            );
          },
          setContext: function (e) {
            Bh = e;
          },
        },
        Cf = (function (e) {
          function t(e) {
            return (
              Object(y.a)(this, t),
              Object(f.a)(this, Object(r.a)(t).call(this, e))
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var i = this,
                    a = new Xh(this.manager);
                  a.setResponseType("arraybuffer"),
                    a.setPath(this.path),
                    a.setRequestHeader(this.requestHeader),
                    a.setWithCredentials(this.withCredentials),
                    a.load(
                      e,
                      function (n) {
                        try {
                          var a = n.slice(0);
                          Af.getContext().decodeAudioData(a, function (e) {
                            t(e);
                          });
                        } catch (o) {
                          r ? r(o) : console.error(o), i.manager.itemError(e);
                        }
                      },
                      n,
                      r
                    );
                },
              },
            ]),
            t
          );
        })(Vh),
        Pf = (function (e) {
          function t(e, n) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, void 0, a)
              )).isHemisphereLightProbe = !0);
            var o = new lr().set(e),
              s = new lr().set(n),
              u = new Sr(o.r, o.g, o.b),
              l = new Sr(s.r, s.g, s.b),
              c = Math.sqrt(Math.PI),
              h = c * Math.sqrt(0.75);
            return (
              i.sh.coefficients[0].copy(u).add(l).multiplyScalar(c),
              i.sh.coefficients[1].copy(u).sub(l).multiplyScalar(h),
              i
            );
          }
          return Object(p.a)(t, e), t;
        })(bf),
        Rf = (function (e) {
          function t(e) {
            var n,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1;
            Object(y.a)(this, t),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this, void 0, i)
              )).isAmbientLightProbe = !0);
            var a = new lr().set(e);
            return (
              n.sh.coefficients[0]
                .set(a.r, a.g, a.b)
                .multiplyScalar(2 * Math.sqrt(Math.PI)),
              n
            );
          }
          return Object(p.a)(t, e), t;
        })(bf),
        Lf = new ei(),
        jf = new ei(),
        If = new ei(),
        Nf = (function () {
          function e() {
            Object(y.a)(this, e),
              (this.type = "StereoCamera"),
              (this.aspect = 1),
              (this.eyeSep = 0.064),
              (this.cameraL = new ja()),
              this.cameraL.layers.enable(1),
              (this.cameraL.matrixAutoUpdate = !1),
              (this.cameraR = new ja()),
              this.cameraR.layers.enable(2),
              (this.cameraR.matrixAutoUpdate = !1),
              (this._cache = {
                focus: null,
                fov: null,
                aspect: null,
                near: null,
                far: null,
                zoom: null,
                eyeSep: null,
              });
          }
          return (
            Object(b.a)(e, [
              {
                key: "update",
                value: function (e) {
                  var t = this._cache;
                  if (
                    t.focus !== e.focus ||
                    t.fov !== e.fov ||
                    t.aspect !== e.aspect * this.aspect ||
                    t.near !== e.near ||
                    t.far !== e.far ||
                    t.zoom !== e.zoom ||
                    t.eyeSep !== this.eyeSep
                  ) {
                    (t.focus = e.focus),
                      (t.fov = e.fov),
                      (t.aspect = e.aspect * this.aspect),
                      (t.near = e.near),
                      (t.far = e.far),
                      (t.zoom = e.zoom),
                      (t.eyeSep = this.eyeSep),
                      If.copy(e.projectionMatrix);
                    var n,
                      r,
                      i = t.eyeSep / 2,
                      a = (i * t.near) / t.focus,
                      o = (t.near * Math.tan(jn * t.fov * 0.5)) / t.zoom;
                    (jf.elements[12] = -i),
                      (Lf.elements[12] = i),
                      (n = -o * t.aspect + a),
                      (r = o * t.aspect + a),
                      (If.elements[0] = (2 * t.near) / (r - n)),
                      (If.elements[8] = (r + n) / (r - n)),
                      this.cameraL.projectionMatrix.copy(If),
                      (n = -o * t.aspect - a),
                      (r = o * t.aspect - a),
                      (If.elements[0] = (2 * t.near) / (r - n)),
                      (If.elements[8] = (r + n) / (r - n)),
                      this.cameraR.projectionMatrix.copy(If);
                  }
                  this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(jf),
                    this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Lf);
                },
              },
            ]),
            e
          );
        })(),
        Df = (function () {
          function e() {
            var t =
              !(arguments.length > 0 && void 0 !== arguments[0]) ||
              arguments[0];
            Object(y.a)(this, e),
              (this.autoStart = t),
              (this.startTime = 0),
              (this.oldTime = 0),
              (this.elapsedTime = 0),
              (this.running = !1);
          }
          return (
            Object(b.a)(e, [
              {
                key: "start",
                value: function () {
                  (this.startTime = zf()),
                    (this.oldTime = this.startTime),
                    (this.elapsedTime = 0),
                    (this.running = !0);
                },
              },
              {
                key: "stop",
                value: function () {
                  this.getElapsedTime(),
                    (this.running = !1),
                    (this.autoStart = !1);
                },
              },
              {
                key: "getElapsedTime",
                value: function () {
                  return this.getDelta(), this.elapsedTime;
                },
              },
              {
                key: "getDelta",
                value: function () {
                  var e = 0;
                  if (this.autoStart && !this.running) return this.start(), 0;
                  if (this.running) {
                    var t = zf();
                    (e = (t - this.oldTime) / 1e3),
                      (this.oldTime = t),
                      (this.elapsedTime += e);
                  }
                  return e;
                },
              },
            ]),
            e
          );
        })();
      function zf() {
        return ("undefined" === typeof performance ? Date : performance).now();
      }
      var Uf = new Sr(),
        Bf = new wr(),
        Ff = new Sr(),
        Gf = new Sr(),
        Hf = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "AudioListener"),
              (e.context = Af.getContext()),
              (e.gain = e.context.createGain()),
              e.gain.connect(e.context.destination),
              (e.filter = null),
              (e.timeDelta = 0),
              (e._clock = new Df()),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getInput",
                value: function () {
                  return this.gain;
                },
              },
              {
                key: "removeFilter",
                value: function () {
                  return (
                    null !== this.filter &&
                      (this.gain.disconnect(this.filter),
                      this.filter.disconnect(this.context.destination),
                      this.gain.connect(this.context.destination),
                      (this.filter = null)),
                    this
                  );
                },
              },
              {
                key: "getFilter",
                value: function () {
                  return this.filter;
                },
              },
              {
                key: "setFilter",
                value: function (e) {
                  return (
                    null !== this.filter
                      ? (this.gain.disconnect(this.filter),
                        this.filter.disconnect(this.context.destination))
                      : this.gain.disconnect(this.context.destination),
                    (this.filter = e),
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination),
                    this
                  );
                },
              },
              {
                key: "getMasterVolume",
                value: function () {
                  return this.gain.gain.value;
                },
              },
              {
                key: "setMasterVolume",
                value: function (e) {
                  return (
                    this.gain.gain.setTargetAtTime(
                      e,
                      this.context.currentTime,
                      0.01
                    ),
                    this
                  );
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  c(Object(r.a)(t.prototype), "updateMatrixWorld", this).call(
                    this,
                    e
                  );
                  var n = this.context.listener,
                    i = this.up;
                  if (
                    ((this.timeDelta = this._clock.getDelta()),
                    this.matrixWorld.decompose(Uf, Bf, Ff),
                    Gf.set(0, 0, -1).applyQuaternion(Bf),
                    n.positionX)
                  ) {
                    var a = this.context.currentTime + this.timeDelta;
                    n.positionX.linearRampToValueAtTime(Uf.x, a),
                      n.positionY.linearRampToValueAtTime(Uf.y, a),
                      n.positionZ.linearRampToValueAtTime(Uf.z, a),
                      n.forwardX.linearRampToValueAtTime(Gf.x, a),
                      n.forwardY.linearRampToValueAtTime(Gf.y, a),
                      n.forwardZ.linearRampToValueAtTime(Gf.z, a),
                      n.upX.linearRampToValueAtTime(i.x, a),
                      n.upY.linearRampToValueAtTime(i.y, a),
                      n.upZ.linearRampToValueAtTime(i.z, a);
                  } else
                    n.setPosition(Uf.x, Uf.y, Uf.z),
                      n.setOrientation(Gf.x, Gf.y, Gf.z, i.x, i.y, i.z);
                },
              },
            ]),
            t
          );
        })(Ti),
        Vf = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "Audio"),
              (n.listener = e),
              (n.context = e.context),
              (n.gain = n.context.createGain()),
              n.gain.connect(e.getInput()),
              (n.autoplay = !1),
              (n.buffer = null),
              (n.detune = 0),
              (n.loop = !1),
              (n.loopStart = 0),
              (n.loopEnd = 0),
              (n.offset = 0),
              (n.duration = void 0),
              (n.playbackRate = 1),
              (n.isPlaying = !1),
              (n.hasPlaybackControl = !0),
              (n.source = null),
              (n.sourceType = "empty"),
              (n._startedAt = 0),
              (n._progress = 0),
              (n._connected = !1),
              (n.filters = []),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "getOutput",
                value: function () {
                  return this.gain;
                },
              },
              {
                key: "setNodeSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "audioNode"),
                    (this.source = e),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setMediaElementSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "mediaNode"),
                    (this.source = this.context.createMediaElementSource(e)),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setMediaStreamSource",
                value: function (e) {
                  return (
                    (this.hasPlaybackControl = !1),
                    (this.sourceType = "mediaStreamNode"),
                    (this.source = this.context.createMediaStreamSource(e)),
                    this.connect(),
                    this
                  );
                },
              },
              {
                key: "setBuffer",
                value: function (e) {
                  return (
                    (this.buffer = e),
                    (this.sourceType = "buffer"),
                    this.autoplay && this.play(),
                    this
                  );
                },
              },
              {
                key: "play",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : 0;
                  if (!0 !== this.isPlaying) {
                    if (!1 !== this.hasPlaybackControl) {
                      this._startedAt = this.context.currentTime + e;
                      var t = this.context.createBufferSource();
                      return (
                        (t.buffer = this.buffer),
                        (t.loop = this.loop),
                        (t.loopStart = this.loopStart),
                        (t.loopEnd = this.loopEnd),
                        (t.onended = this.onEnded.bind(this)),
                        t.start(
                          this._startedAt,
                          this._progress + this.offset,
                          this.duration
                        ),
                        (this.isPlaying = !0),
                        (this.source = t),
                        this.setDetune(this.detune),
                        this.setPlaybackRate(this.playbackRate),
                        this.connect()
                      );
                    }
                    console.warn(
                      "THREE.Audio: this Audio has no playback control."
                    );
                  } else console.warn("THREE.Audio: Audio is already playing.");
                },
              },
              {
                key: "pause",
                value: function () {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      !0 === this.isPlaying &&
                        ((this._progress +=
                          Math.max(
                            this.context.currentTime - this._startedAt,
                            0
                          ) * this.playbackRate),
                        !0 === this.loop &&
                          (this._progress =
                            this._progress %
                            (this.duration || this.buffer.duration)),
                        this.source.stop(),
                        (this.source.onended = null),
                        (this.isPlaying = !1)),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "stop",
                value: function () {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this._progress = 0),
                      this.source.stop(),
                      (this.source.onended = null),
                      (this.isPlaying = !1),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "connect",
                value: function () {
                  if (this.filters.length > 0) {
                    this.source.connect(this.filters[0]);
                    for (var e = 1, t = this.filters.length; e < t; e++)
                      this.filters[e - 1].connect(this.filters[e]);
                    this.filters[this.filters.length - 1].connect(
                      this.getOutput()
                    );
                  } else this.source.connect(this.getOutput());
                  return (this._connected = !0), this;
                },
              },
              {
                key: "disconnect",
                value: function () {
                  if (this.filters.length > 0) {
                    this.source.disconnect(this.filters[0]);
                    for (var e = 1, t = this.filters.length; e < t; e++)
                      this.filters[e - 1].disconnect(this.filters[e]);
                    this.filters[this.filters.length - 1].disconnect(
                      this.getOutput()
                    );
                  } else this.source.disconnect(this.getOutput());
                  return (this._connected = !1), this;
                },
              },
              {
                key: "getFilters",
                value: function () {
                  return this.filters;
                },
              },
              {
                key: "setFilters",
                value: function (e) {
                  return (
                    e || (e = []),
                    !0 === this._connected
                      ? (this.disconnect(),
                        (this.filters = e.slice()),
                        this.connect())
                      : (this.filters = e.slice()),
                    this
                  );
                },
              },
              {
                key: "setDetune",
                value: function (e) {
                  if (((this.detune = e), void 0 !== this.source.detune))
                    return (
                      !0 === this.isPlaying &&
                        this.source.detune.setTargetAtTime(
                          this.detune,
                          this.context.currentTime,
                          0.01
                        ),
                      this
                    );
                },
              },
              {
                key: "getDetune",
                value: function () {
                  return this.detune;
                },
              },
              {
                key: "getFilter",
                value: function () {
                  return this.getFilters()[0];
                },
              },
              {
                key: "setFilter",
                value: function (e) {
                  return this.setFilters(e ? [e] : []);
                },
              },
              {
                key: "setPlaybackRate",
                value: function (e) {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this.playbackRate = e),
                      !0 === this.isPlaying &&
                        this.source.playbackRate.setTargetAtTime(
                          this.playbackRate,
                          this.context.currentTime,
                          0.01
                        ),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "getPlaybackRate",
                value: function () {
                  return this.playbackRate;
                },
              },
              {
                key: "onEnded",
                value: function () {
                  this.isPlaying = !1;
                },
              },
              {
                key: "getLoop",
                value: function () {
                  return !1 === this.hasPlaybackControl
                    ? (console.warn(
                        "THREE.Audio: this Audio has no playback control."
                      ),
                      !1)
                    : this.loop;
                },
              },
              {
                key: "setLoop",
                value: function (e) {
                  if (!1 !== this.hasPlaybackControl)
                    return (
                      (this.loop = e),
                      !0 === this.isPlaying && (this.source.loop = this.loop),
                      this
                    );
                  console.warn(
                    "THREE.Audio: this Audio has no playback control."
                  );
                },
              },
              {
                key: "setLoopStart",
                value: function (e) {
                  return (this.loopStart = e), this;
                },
              },
              {
                key: "setLoopEnd",
                value: function (e) {
                  return (this.loopEnd = e), this;
                },
              },
              {
                key: "getVolume",
                value: function () {
                  return this.gain.gain.value;
                },
              },
              {
                key: "setVolume",
                value: function (e) {
                  return (
                    this.gain.gain.setTargetAtTime(
                      e,
                      this.context.currentTime,
                      0.01
                    ),
                    this
                  );
                },
              },
            ]),
            t
          );
        })(Ti),
        Wf = new Sr(),
        qf = new wr(),
        Xf = new Sr(),
        Yf = new Sr(),
        Jf = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this, e))).panner =
                n.context.createPanner()),
              (n.panner.panningModel = "HRTF"),
              n.panner.connect(n.gain),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "disconnect",
                value: function () {
                  c(Object(r.a)(t.prototype), "disconnect", this).call(this),
                    this.panner.disconnect(this.gain);
                },
              },
              {
                key: "getOutput",
                value: function () {
                  return this.panner;
                },
              },
              {
                key: "getRefDistance",
                value: function () {
                  return this.panner.refDistance;
                },
              },
              {
                key: "setRefDistance",
                value: function (e) {
                  return (this.panner.refDistance = e), this;
                },
              },
              {
                key: "getRolloffFactor",
                value: function () {
                  return this.panner.rolloffFactor;
                },
              },
              {
                key: "setRolloffFactor",
                value: function (e) {
                  return (this.panner.rolloffFactor = e), this;
                },
              },
              {
                key: "getDistanceModel",
                value: function () {
                  return this.panner.distanceModel;
                },
              },
              {
                key: "setDistanceModel",
                value: function (e) {
                  return (this.panner.distanceModel = e), this;
                },
              },
              {
                key: "getMaxDistance",
                value: function () {
                  return this.panner.maxDistance;
                },
              },
              {
                key: "setMaxDistance",
                value: function (e) {
                  return (this.panner.maxDistance = e), this;
                },
              },
              {
                key: "setDirectionalCone",
                value: function (e, t, n) {
                  return (
                    (this.panner.coneInnerAngle = e),
                    (this.panner.coneOuterAngle = t),
                    (this.panner.coneOuterGain = n),
                    this
                  );
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  if (
                    (c(
                      Object(r.a)(t.prototype),
                      "updateMatrixWorld",
                      this
                    ).call(this, e),
                    !0 !== this.hasPlaybackControl || !1 !== this.isPlaying)
                  ) {
                    this.matrixWorld.decompose(Wf, qf, Xf),
                      Yf.set(0, 0, 1).applyQuaternion(qf);
                    var n = this.panner;
                    if (n.positionX) {
                      var i =
                        this.context.currentTime + this.listener.timeDelta;
                      n.positionX.linearRampToValueAtTime(Wf.x, i),
                        n.positionY.linearRampToValueAtTime(Wf.y, i),
                        n.positionZ.linearRampToValueAtTime(Wf.z, i),
                        n.orientationX.linearRampToValueAtTime(Yf.x, i),
                        n.orientationY.linearRampToValueAtTime(Yf.y, i),
                        n.orientationZ.linearRampToValueAtTime(Yf.z, i);
                    } else
                      n.setPosition(Wf.x, Wf.y, Wf.z),
                        n.setOrientation(Yf.x, Yf.y, Yf.z);
                  }
                },
              },
            ]),
            t
          );
        })(Vf),
        Zf = (function () {
          function e(t) {
            var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 2048;
            Object(y.a)(this, e),
              (this.analyser = t.context.createAnalyser()),
              (this.analyser.fftSize = n),
              (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
              t.getOutput().connect(this.analyser);
          }
          return (
            Object(b.a)(e, [
              {
                key: "getFrequencyData",
                value: function () {
                  return (
                    this.analyser.getByteFrequencyData(this.data), this.data
                  );
                },
              },
              {
                key: "getAverageFrequency",
                value: function () {
                  for (
                    var e = 0, t = this.getFrequencyData(), n = 0;
                    n < t.length;
                    n++
                  )
                    e += t[n];
                  return e / t.length;
                },
              },
            ]),
            e
          );
        })(),
        $f = (function () {
          function e(t, n, r) {
            var i, a, o;
            switch (
              (Object(y.a)(this, e),
              (this.binding = t),
              (this.valueSize = r),
              n)
            ) {
              case "quaternion":
                (i = this._slerp),
                  (a = this._slerpAdditive),
                  (o = this._setAdditiveIdentityQuaternion),
                  (this.buffer = new Float64Array(6 * r)),
                  (this._workIndex = 5);
                break;
              case "string":
              case "bool":
                (i = this._select),
                  (a = this._select),
                  (o = this._setAdditiveIdentityOther),
                  (this.buffer = new Array(5 * r));
                break;
              default:
                (i = this._lerp),
                  (a = this._lerpAdditive),
                  (o = this._setAdditiveIdentityNumeric),
                  (this.buffer = new Float64Array(5 * r));
            }
            (this._mixBufferRegion = i),
              (this._mixBufferRegionAdditive = a),
              (this._setIdentity = o),
              (this._origIndex = 3),
              (this._addIndex = 4),
              (this.cumulativeWeight = 0),
              (this.cumulativeWeightAdditive = 0),
              (this.useCount = 0),
              (this.referenceCount = 0);
          }
          return (
            Object(b.a)(e, [
              {
                key: "accumulate",
                value: function (e, t) {
                  var n = this.buffer,
                    r = this.valueSize,
                    i = e * r + r,
                    a = this.cumulativeWeight;
                  if (0 === a) {
                    for (var o = 0; o !== r; ++o) n[i + o] = n[o];
                    a = t;
                  } else {
                    var s = t / (a += t);
                    this._mixBufferRegion(n, i, 0, s, r);
                  }
                  this.cumulativeWeight = a;
                },
              },
              {
                key: "accumulateAdditive",
                value: function (e) {
                  var t = this.buffer,
                    n = this.valueSize,
                    r = n * this._addIndex;
                  0 === this.cumulativeWeightAdditive && this._setIdentity(),
                    this._mixBufferRegionAdditive(t, r, 0, e, n),
                    (this.cumulativeWeightAdditive += e);
                },
              },
              {
                key: "apply",
                value: function (e) {
                  var t = this.valueSize,
                    n = this.buffer,
                    r = e * t + t,
                    i = this.cumulativeWeight,
                    a = this.cumulativeWeightAdditive,
                    o = this.binding;
                  if (
                    ((this.cumulativeWeight = 0),
                    (this.cumulativeWeightAdditive = 0),
                    i < 1)
                  ) {
                    var s = t * this._origIndex;
                    this._mixBufferRegion(n, r, s, 1 - i, t);
                  }
                  a > 0 &&
                    this._mixBufferRegionAdditive(
                      n,
                      r,
                      this._addIndex * t,
                      1,
                      t
                    );
                  for (var u = t, l = t + t; u !== l; ++u)
                    if (n[u] !== n[u + t]) {
                      o.setValue(n, r);
                      break;
                    }
                },
              },
              {
                key: "saveOriginalState",
                value: function () {
                  var e = this.binding,
                    t = this.buffer,
                    n = this.valueSize,
                    r = n * this._origIndex;
                  e.getValue(t, r);
                  for (var i = n, a = r; i !== a; ++i) t[i] = t[r + (i % n)];
                  this._setIdentity(),
                    (this.cumulativeWeight = 0),
                    (this.cumulativeWeightAdditive = 0);
                },
              },
              {
                key: "restoreOriginalState",
                value: function () {
                  var e = 3 * this.valueSize;
                  this.binding.setValue(this.buffer, e);
                },
              },
              {
                key: "_setAdditiveIdentityNumeric",
                value: function () {
                  for (
                    var e = this._addIndex * this.valueSize,
                      t = e + this.valueSize,
                      n = e;
                    n < t;
                    n++
                  )
                    this.buffer[n] = 0;
                },
              },
              {
                key: "_setAdditiveIdentityQuaternion",
                value: function () {
                  this._setAdditiveIdentityNumeric(),
                    (this.buffer[this._addIndex * this.valueSize + 3] = 1);
                },
              },
              {
                key: "_setAdditiveIdentityOther",
                value: function () {
                  for (
                    var e = this._origIndex * this.valueSize,
                      t = this._addIndex * this.valueSize,
                      n = 0;
                    n < this.valueSize;
                    n++
                  )
                    this.buffer[t + n] = this.buffer[e + n];
                },
              },
              {
                key: "_select",
                value: function (e, t, n, r, i) {
                  if (r >= 0.5)
                    for (var a = 0; a !== i; ++a) e[t + a] = e[n + a];
                },
              },
              {
                key: "_slerp",
                value: function (e, t, n, r) {
                  wr.slerpFlat(e, t, e, t, e, n, r);
                },
              },
              {
                key: "_slerpAdditive",
                value: function (e, t, n, r, i) {
                  var a = this._workIndex * i;
                  wr.multiplyQuaternionsFlat(e, a, e, t, e, n),
                    wr.slerpFlat(e, t, e, t, e, a, r);
                },
              },
              {
                key: "_lerp",
                value: function (e, t, n, r, i) {
                  for (var a = 1 - r, o = 0; o !== i; ++o) {
                    var s = t + o;
                    e[s] = e[s] * a + e[n + o] * r;
                  }
                },
              },
              {
                key: "_lerpAdditive",
                value: function (e, t, n, r, i) {
                  for (var a = 0; a !== i; ++a) {
                    var o = t + a;
                    e[o] = e[o] + e[n + a] * r;
                  }
                },
              },
            ]),
            e
          );
        })(),
        Kf = new RegExp("[\\[\\]\\.:\\/]", "g"),
        Qf = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]",
        ed = new RegExp(
          "^" +
            /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]") +
            /(WCOD+)?/.source.replace("WCOD", Qf) +
            /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace(
              "WC",
              "[^\\[\\]\\.:\\/]"
            ) +
            /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]") +
            "$"
        ),
        td = ["material", "materials", "bones", "map"],
        nd = (function () {
          function e(t, n, r) {
            Object(y.a)(this, e);
            var i = r || rd.parseTrackName(n);
            (this._targetGroup = t), (this._bindings = t.subscribe_(n, i));
          }
          return (
            Object(b.a)(e, [
              {
                key: "getValue",
                value: function (e, t) {
                  this.bind();
                  var n = this._targetGroup.nCachedObjects_,
                    r = this._bindings[n];
                  void 0 !== r && r.getValue(e, t);
                },
              },
              {
                key: "setValue",
                value: function (e, t) {
                  for (
                    var n = this._bindings,
                      r = this._targetGroup.nCachedObjects_,
                      i = n.length;
                    r !== i;
                    ++r
                  )
                    n[r].setValue(e, t);
                },
              },
              {
                key: "bind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].bind();
                },
              },
              {
                key: "unbind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].unbind();
                },
              },
            ]),
            e
          );
        })(),
        rd = (function () {
          function e(t, n, r) {
            Object(y.a)(this, e),
              (this.path = n),
              (this.parsedPath = r || e.parseTrackName(n)),
              (this.node = e.findNode(t, this.parsedPath.nodeName) || t),
              (this.rootNode = t),
              (this.getValue = this._getValue_unbound),
              (this.setValue = this._setValue_unbound);
          }
          return (
            Object(b.a)(
              e,
              [
                { key: "_getValue_unavailable", value: function () {} },
                { key: "_setValue_unavailable", value: function () {} },
                {
                  key: "_getValue_direct",
                  value: function (e, t) {
                    e[t] = this.targetObject[this.propertyName];
                  },
                },
                {
                  key: "_getValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      e[t++] = n[r];
                  },
                },
                {
                  key: "_getValue_arrayElement",
                  value: function (e, t) {
                    e[t] = this.resolvedProperty[this.propertyIndex];
                  },
                },
                {
                  key: "_getValue_toArray",
                  value: function (e, t) {
                    this.resolvedProperty.toArray(e, t);
                  },
                },
                {
                  key: "_setValue_direct",
                  value: function (e, t) {
                    this.targetObject[this.propertyName] = e[t];
                  },
                },
                {
                  key: "_setValue_direct_setNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_direct_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                  },
                },
                {
                  key: "_setValue_array_setNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.needsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_array_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, i = n.length;
                      r !== i;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.matrixWorldNeedsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_arrayElement",
                  value: function (e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t];
                  },
                },
                {
                  key: "_setValue_arrayElement_setNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t);
                  },
                },
                {
                  key: "_setValue_fromArray_setNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_getValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.getValue(e, t);
                  },
                },
                {
                  key: "_setValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.setValue(e, t);
                  },
                },
                {
                  key: "bind",
                  value: function () {
                    var t = this.node,
                      n = this.parsedPath,
                      r = n.objectName,
                      i = n.propertyName,
                      a = n.propertyIndex;
                    if (
                      (t ||
                        ((t =
                          e.findNode(this.rootNode, n.nodeName) ||
                          this.rootNode),
                        (this.node = t)),
                      (this.getValue = this._getValue_unavailable),
                      (this.setValue = this._setValue_unavailable),
                      t)
                    ) {
                      if (r) {
                        var o = n.objectIndex;
                        switch (r) {
                          case "materials":
                            if (!t.material)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                                this
                              );
                            if (!t.material.materials)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
                                this
                              );
                            t = t.material.materials;
                            break;
                          case "bones":
                            if (!t.skeleton)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
                                this
                              );
                            t = t.skeleton.bones;
                            for (var s = 0; s < t.length; s++)
                              if (t[s].name === o) {
                                o = s;
                                break;
                              }
                            break;
                          case "map":
                            if ("map" in t) {
                              t = t.map;
                              break;
                            }
                            if (!t.material)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                                this
                              );
                            if (!t.material.map)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",
                                this
                              );
                            t = t.material.map;
                            break;
                          default:
                            if (void 0 === t[r])
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
                                this
                              );
                            t = t[r];
                        }
                        if (void 0 !== o) {
                          if (void 0 === t[o])
                            return void console.error(
                              "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
                              this,
                              t
                            );
                          t = t[o];
                        }
                      }
                      var u = t[i];
                      if (void 0 !== u) {
                        var l = this.Versioning.None;
                        (this.targetObject = t),
                          void 0 !== t.needsUpdate
                            ? (l = this.Versioning.NeedsUpdate)
                            : void 0 !== t.matrixWorldNeedsUpdate &&
                              (l = this.Versioning.MatrixWorldNeedsUpdate);
                        var c = this.BindingType.Direct;
                        if (void 0 !== a) {
                          if ("morphTargetInfluences" === i) {
                            if (!t.geometry)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
                                this
                              );
                            if (!t.geometry.morphAttributes)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
                                this
                              );
                            void 0 !== t.morphTargetDictionary[a] &&
                              (a = t.morphTargetDictionary[a]);
                          }
                          (c = this.BindingType.ArrayElement),
                            (this.resolvedProperty = u),
                            (this.propertyIndex = a);
                        } else
                          void 0 !== u.fromArray && void 0 !== u.toArray
                            ? ((c = this.BindingType.HasFromToArray),
                              (this.resolvedProperty = u))
                            : Array.isArray(u)
                            ? ((c = this.BindingType.EntireArray),
                              (this.resolvedProperty = u))
                            : (this.propertyName = i);
                        (this.getValue = this.GetterByBindingType[c]),
                          (this.setValue =
                            this.SetterByBindingTypeAndVersioning[c][l]);
                      } else {
                        var h = n.nodeName;
                        console.error(
                          "THREE.PropertyBinding: Trying to update property for track: " +
                            h +
                            "." +
                            i +
                            " but it wasn't found.",
                          t
                        );
                      }
                    } else
                      console.error(
                        "THREE.PropertyBinding: Trying to update node for track: " +
                          this.path +
                          " but it wasn't found."
                      );
                  },
                },
                {
                  key: "unbind",
                  value: function () {
                    (this.node = null),
                      (this.getValue = this._getValue_unbound),
                      (this.setValue = this._setValue_unbound);
                  },
                },
              ],
              [
                {
                  key: "create",
                  value: function (t, n, r) {
                    return t && t.isAnimationObjectGroup
                      ? new e.Composite(t, n, r)
                      : new e(t, n, r);
                  },
                },
                {
                  key: "sanitizeNodeName",
                  value: function (e) {
                    return e.replace(/\s/g, "_").replace(Kf, "");
                  },
                },
                {
                  key: "parseTrackName",
                  value: function (e) {
                    var t = ed.exec(e);
                    if (null === t)
                      throw new Error(
                        "PropertyBinding: Cannot parse trackName: " + e
                      );
                    var n = {
                        nodeName: t[2],
                        objectName: t[3],
                        objectIndex: t[4],
                        propertyName: t[5],
                        propertyIndex: t[6],
                      },
                      r = n.nodeName && n.nodeName.lastIndexOf(".");
                    if (void 0 !== r && -1 !== r) {
                      var i = n.nodeName.substring(r + 1);
                      -1 !== td.indexOf(i) &&
                        ((n.nodeName = n.nodeName.substring(0, r)),
                        (n.objectName = i));
                    }
                    if (null === n.propertyName || 0 === n.propertyName.length)
                      throw new Error(
                        "PropertyBinding: can not parse propertyName from trackName: " +
                          e
                      );
                    return n;
                  },
                },
                {
                  key: "findNode",
                  value: function (e, t) {
                    if (
                      void 0 === t ||
                      "" === t ||
                      "." === t ||
                      -1 === t ||
                      t === e.name ||
                      t === e.uuid
                    )
                      return e;
                    if (e.skeleton) {
                      var n = e.skeleton.getBoneByName(t);
                      if (void 0 !== n) return n;
                    }
                    if (e.children) {
                      var r = (function e(n) {
                        for (var r = 0; r < n.length; r++) {
                          var i = n[r];
                          if (i.name === t || i.uuid === t) return i;
                          var a = e(i.children);
                          if (a) return a;
                        }
                        return null;
                      })(e.children);
                      if (r) return r;
                    }
                    return null;
                  },
                },
              ]
            ),
            e
          );
        })();
      (rd.Composite = nd),
        (rd.prototype.BindingType = {
          Direct: 0,
          EntireArray: 1,
          ArrayElement: 2,
          HasFromToArray: 3,
        }),
        (rd.prototype.Versioning = {
          None: 0,
          NeedsUpdate: 1,
          MatrixWorldNeedsUpdate: 2,
        }),
        (rd.prototype.GetterByBindingType = [
          rd.prototype._getValue_direct,
          rd.prototype._getValue_array,
          rd.prototype._getValue_arrayElement,
          rd.prototype._getValue_toArray,
        ]),
        (rd.prototype.SetterByBindingTypeAndVersioning = [
          [
            rd.prototype._setValue_direct,
            rd.prototype._setValue_direct_setNeedsUpdate,
            rd.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
          ],
          [
            rd.prototype._setValue_array,
            rd.prototype._setValue_array_setNeedsUpdate,
            rd.prototype._setValue_array_setMatrixWorldNeedsUpdate,
          ],
          [
            rd.prototype._setValue_arrayElement,
            rd.prototype._setValue_arrayElement_setNeedsUpdate,
            rd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
          ],
          [
            rd.prototype._setValue_fromArray,
            rd.prototype._setValue_fromArray_setNeedsUpdate,
            rd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
          ],
        ]);
      var id = (function () {
          function e() {
            Object(y.a)(this, e),
              (this.isAnimationObjectGroup = !0),
              (this.uuid = Nn()),
              (this._objects = Array.prototype.slice.call(arguments)),
              (this.nCachedObjects_ = 0);
            var t = {};
            this._indicesByUUID = t;
            for (var n = 0, r = arguments.length; n !== r; ++n)
              t[arguments[n].uuid] = n;
            (this._paths = []),
              (this._parsedPaths = []),
              (this._bindings = []),
              (this._bindingsIndicesByPath = {});
            var i = this;
            this.stats = {
              objects: {
                get total() {
                  return i._objects.length;
                },
                get inUse() {
                  return this.total - i.nCachedObjects_;
                },
              },
              get bindingsPerObject() {
                return i._bindings.length;
              },
            };
          }
          return (
            Object(b.a)(e, [
              {
                key: "add",
                value: function () {
                  for (
                    var e = this._objects,
                      t = this._indicesByUUID,
                      n = this._paths,
                      r = this._parsedPaths,
                      i = this._bindings,
                      a = i.length,
                      o = void 0,
                      s = e.length,
                      u = this.nCachedObjects_,
                      l = 0,
                      c = arguments.length;
                    l !== c;
                    ++l
                  ) {
                    var h = arguments[l],
                      f = h.uuid,
                      d = t[f];
                    if (void 0 === d) {
                      (d = s++), (t[f] = d), e.push(h);
                      for (var p = 0, m = a; p !== m; ++p)
                        i[p].push(new rd(h, n[p], r[p]));
                    } else if (d < u) {
                      o = e[d];
                      var v = --u,
                        g = e[v];
                      (t[g.uuid] = d), (e[d] = g), (t[f] = v), (e[v] = h);
                      for (var y = 0, b = a; y !== b; ++y) {
                        var x = i[y],
                          _ = x[v],
                          w = x[d];
                        (x[d] = _),
                          void 0 === w && (w = new rd(h, n[y], r[y])),
                          (x[v] = w);
                      }
                    } else
                      e[d] !== o &&
                        console.error(
                          "THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes."
                        );
                  }
                  this.nCachedObjects_ = u;
                },
              },
              {
                key: "remove",
                value: function () {
                  for (
                    var e = this._objects,
                      t = this._indicesByUUID,
                      n = this._bindings,
                      r = n.length,
                      i = this.nCachedObjects_,
                      a = 0,
                      o = arguments.length;
                    a !== o;
                    ++a
                  ) {
                    var s = arguments[a],
                      u = s.uuid,
                      l = t[u];
                    if (void 0 !== l && l >= i) {
                      var c = i++,
                        h = e[c];
                      (t[h.uuid] = l), (e[l] = h), (t[u] = c), (e[c] = s);
                      for (var f = 0, d = r; f !== d; ++f) {
                        var p = n[f],
                          m = p[c],
                          v = p[l];
                        (p[l] = m), (p[c] = v);
                      }
                    }
                  }
                  this.nCachedObjects_ = i;
                },
              },
              {
                key: "uncache",
                value: function () {
                  for (
                    var e = this._objects,
                      t = this._indicesByUUID,
                      n = this._bindings,
                      r = n.length,
                      i = this.nCachedObjects_,
                      a = e.length,
                      o = 0,
                      s = arguments.length;
                    o !== s;
                    ++o
                  ) {
                    var u = arguments[o],
                      l = u.uuid,
                      c = t[l];
                    if (void 0 !== c)
                      if ((delete t[l], c < i)) {
                        var h = --i,
                          f = e[h],
                          d = --a,
                          p = e[d];
                        (t[f.uuid] = c),
                          (e[c] = f),
                          (t[p.uuid] = h),
                          (e[h] = p),
                          e.pop();
                        for (var m = 0, v = r; m !== v; ++m) {
                          var g = n[m],
                            y = g[h],
                            b = g[d];
                          (g[c] = y), (g[h] = b), g.pop();
                        }
                      } else {
                        var x = --a,
                          _ = e[x];
                        x > 0 && (t[_.uuid] = c), (e[c] = _), e.pop();
                        for (var w = 0, S = r; w !== S; ++w) {
                          var M = n[w];
                          (M[c] = M[x]), M.pop();
                        }
                      }
                  }
                  this.nCachedObjects_ = i;
                },
              },
              {
                key: "subscribe_",
                value: function (e, t) {
                  var n = this._bindingsIndicesByPath,
                    r = n[e],
                    i = this._bindings;
                  if (void 0 !== r) return i[r];
                  var a = this._paths,
                    o = this._parsedPaths,
                    s = this._objects,
                    u = s.length,
                    l = this.nCachedObjects_,
                    c = new Array(u);
                  (r = i.length), (n[e] = r), a.push(e), o.push(t), i.push(c);
                  for (var h = l, f = s.length; h !== f; ++h) {
                    var d = s[h];
                    c[h] = new rd(d, e, t);
                  }
                  return c;
                },
              },
              {
                key: "unsubscribe_",
                value: function (e) {
                  var t = this._bindingsIndicesByPath,
                    n = t[e];
                  if (void 0 !== n) {
                    var r = this._paths,
                      i = this._parsedPaths,
                      a = this._bindings,
                      o = a.length - 1,
                      s = a[o];
                    (t[e[o]] = n),
                      (a[n] = s),
                      a.pop(),
                      (i[n] = i[o]),
                      i.pop(),
                      (r[n] = r[o]),
                      r.pop();
                  }
                },
              },
            ]),
            e
          );
        })(),
        ad = (function () {
          function e(t, n) {
            var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : null,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : n.blendMode;
            Object(y.a)(this, e),
              (this._mixer = t),
              (this._clip = n),
              (this._localRoot = r),
              (this.blendMode = i);
            for (
              var a = n.tracks,
                o = a.length,
                s = new Array(o),
                u = { endingStart: Ut, endingEnd: Ut },
                l = 0;
              l !== o;
              ++l
            ) {
              var c = a[l].createInterpolant(null);
              (s[l] = c), (c.settings = u);
            }
            (this._interpolantSettings = u),
              (this._interpolants = s),
              (this._propertyBindings = new Array(o)),
              (this._cacheIndex = null),
              (this._byClipCacheIndex = null),
              (this._timeScaleInterpolant = null),
              (this._weightInterpolant = null),
              (this.loop = jt),
              (this._loopCount = -1),
              (this._startTime = null),
              (this.time = 0),
              (this.timeScale = 1),
              (this._effectiveTimeScale = 1),
              (this.weight = 1),
              (this._effectiveWeight = 1),
              (this.repetitions = 1 / 0),
              (this.paused = !1),
              (this.enabled = !0),
              (this.clampWhenFinished = !1),
              (this.zeroSlopeAtStart = !0),
              (this.zeroSlopeAtEnd = !0);
          }
          return (
            Object(b.a)(e, [
              {
                key: "play",
                value: function () {
                  return this._mixer._activateAction(this), this;
                },
              },
              {
                key: "stop",
                value: function () {
                  return this._mixer._deactivateAction(this), this.reset();
                },
              },
              {
                key: "reset",
                value: function () {
                  return (
                    (this.paused = !1),
                    (this.enabled = !0),
                    (this.time = 0),
                    (this._loopCount = -1),
                    (this._startTime = null),
                    this.stopFading().stopWarping()
                  );
                },
              },
              {
                key: "isRunning",
                value: function () {
                  return (
                    this.enabled &&
                    !this.paused &&
                    0 !== this.timeScale &&
                    null === this._startTime &&
                    this._mixer._isActiveAction(this)
                  );
                },
              },
              {
                key: "isScheduled",
                value: function () {
                  return this._mixer._isActiveAction(this);
                },
              },
              {
                key: "startAt",
                value: function (e) {
                  return (this._startTime = e), this;
                },
              },
              {
                key: "setLoop",
                value: function (e, t) {
                  return (this.loop = e), (this.repetitions = t), this;
                },
              },
              {
                key: "setEffectiveWeight",
                value: function (e) {
                  return (
                    (this.weight = e),
                    (this._effectiveWeight = this.enabled ? e : 0),
                    this.stopFading()
                  );
                },
              },
              {
                key: "getEffectiveWeight",
                value: function () {
                  return this._effectiveWeight;
                },
              },
              {
                key: "fadeIn",
                value: function (e) {
                  return this._scheduleFading(e, 0, 1);
                },
              },
              {
                key: "fadeOut",
                value: function (e) {
                  return this._scheduleFading(e, 1, 0);
                },
              },
              {
                key: "crossFadeFrom",
                value: function (e, t, n) {
                  if ((e.fadeOut(t), this.fadeIn(t), n)) {
                    var r = this._clip.duration,
                      i = e._clip.duration,
                      a = i / r,
                      o = r / i;
                    e.warp(1, a, t), this.warp(o, 1, t);
                  }
                  return this;
                },
              },
              {
                key: "crossFadeTo",
                value: function (e, t, n) {
                  return e.crossFadeFrom(this, t, n);
                },
              },
              {
                key: "stopFading",
                value: function () {
                  var e = this._weightInterpolant;
                  return (
                    null !== e &&
                      ((this._weightInterpolant = null),
                      this._mixer._takeBackControlInterpolant(e)),
                    this
                  );
                },
              },
              {
                key: "setEffectiveTimeScale",
                value: function (e) {
                  return (
                    (this.timeScale = e),
                    (this._effectiveTimeScale = this.paused ? 0 : e),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "getEffectiveTimeScale",
                value: function () {
                  return this._effectiveTimeScale;
                },
              },
              {
                key: "setDuration",
                value: function (e) {
                  return (
                    (this.timeScale = this._clip.duration / e),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "syncWith",
                value: function (e) {
                  return (
                    (this.time = e.time),
                    (this.timeScale = e.timeScale),
                    this.stopWarping()
                  );
                },
              },
              {
                key: "halt",
                value: function (e) {
                  return this.warp(this._effectiveTimeScale, 0, e);
                },
              },
              {
                key: "warp",
                value: function (e, t, n) {
                  var r = this._mixer,
                    i = r.time,
                    a = this.timeScale,
                    o = this._timeScaleInterpolant;
                  null === o &&
                    ((o = r._lendControlInterpolant()),
                    (this._timeScaleInterpolant = o));
                  var s = o.parameterPositions,
                    u = o.sampleValues;
                  return (
                    (s[0] = i),
                    (s[1] = i + n),
                    (u[0] = e / a),
                    (u[1] = t / a),
                    this
                  );
                },
              },
              {
                key: "stopWarping",
                value: function () {
                  var e = this._timeScaleInterpolant;
                  return (
                    null !== e &&
                      ((this._timeScaleInterpolant = null),
                      this._mixer._takeBackControlInterpolant(e)),
                    this
                  );
                },
              },
              {
                key: "getMixer",
                value: function () {
                  return this._mixer;
                },
              },
              {
                key: "getClip",
                value: function () {
                  return this._clip;
                },
              },
              {
                key: "getRoot",
                value: function () {
                  return this._localRoot || this._mixer._root;
                },
              },
              {
                key: "_update",
                value: function (e, t, n, r) {
                  if (this.enabled) {
                    var i = this._startTime;
                    if (null !== i) {
                      var a = (e - i) * n;
                      a < 0 || 0 === n
                        ? (t = 0)
                        : ((this._startTime = null), (t = n * a));
                    }
                    t *= this._updateTimeScale(e);
                    var o = this._updateTime(t),
                      s = this._updateWeight(e);
                    if (s > 0) {
                      var u = this._interpolants,
                        l = this._propertyBindings;
                      switch (this.blendMode) {
                        case Ht:
                          for (var c = 0, h = u.length; c !== h; ++c)
                            u[c].evaluate(o), l[c].accumulateAdditive(s);
                          break;
                        case Gt:
                        default:
                          for (var f = 0, d = u.length; f !== d; ++f)
                            u[f].evaluate(o), l[f].accumulate(r, s);
                      }
                    }
                  } else this._updateWeight(e);
                },
              },
              {
                key: "_updateWeight",
                value: function (e) {
                  var t = 0;
                  if (this.enabled) {
                    t = this.weight;
                    var n = this._weightInterpolant;
                    if (null !== n) {
                      var r = n.evaluate(e)[0];
                      (t *= r),
                        e > n.parameterPositions[1] &&
                          (this.stopFading(), 0 === r && (this.enabled = !1));
                    }
                  }
                  return (this._effectiveWeight = t), t;
                },
              },
              {
                key: "_updateTimeScale",
                value: function (e) {
                  var t = 0;
                  if (!this.paused) {
                    t = this.timeScale;
                    var n = this._timeScaleInterpolant;
                    if (null !== n)
                      (t *= n.evaluate(e)[0]),
                        e > n.parameterPositions[1] &&
                          (this.stopWarping(),
                          0 === t ? (this.paused = !0) : (this.timeScale = t));
                  }
                  return (this._effectiveTimeScale = t), t;
                },
              },
              {
                key: "_updateTime",
                value: function (e) {
                  var t = this._clip.duration,
                    n = this.loop,
                    r = this.time + e,
                    i = this._loopCount,
                    a = n === It;
                  if (0 === e)
                    return -1 === i ? r : a && 1 === (1 & i) ? t - r : r;
                  if (n === Lt) {
                    -1 === i &&
                      ((this._loopCount = 0), this._setEndings(!0, !0, !1));
                    e: {
                      if (r >= t) r = t;
                      else {
                        if (!(r < 0)) {
                          this.time = r;
                          break e;
                        }
                        r = 0;
                      }
                      this.clampWhenFinished
                        ? (this.paused = !0)
                        : (this.enabled = !1),
                        (this.time = r),
                        this._mixer.dispatchEvent({
                          type: "finished",
                          action: this,
                          direction: e < 0 ? -1 : 1,
                        });
                    }
                  } else {
                    if (
                      (-1 === i &&
                        (e >= 0
                          ? ((i = 0),
                            this._setEndings(!0, 0 === this.repetitions, a))
                          : this._setEndings(0 === this.repetitions, !0, a)),
                      r >= t || r < 0)
                    ) {
                      var o = Math.floor(r / t);
                      (r -= t * o), (i += Math.abs(o));
                      var s = this.repetitions - i;
                      if (s <= 0)
                        this.clampWhenFinished
                          ? (this.paused = !0)
                          : (this.enabled = !1),
                          (r = e > 0 ? t : 0),
                          (this.time = r),
                          this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: e > 0 ? 1 : -1,
                          });
                      else {
                        if (1 === s) {
                          var u = e < 0;
                          this._setEndings(u, !u, a);
                        } else this._setEndings(!1, !1, a);
                        (this._loopCount = i),
                          (this.time = r),
                          this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: o,
                          });
                      }
                    } else this.time = r;
                    if (a && 1 === (1 & i)) return t - r;
                  }
                  return r;
                },
              },
              {
                key: "_setEndings",
                value: function (e, t, n) {
                  var r = this._interpolantSettings;
                  n
                    ? ((r.endingStart = Bt), (r.endingEnd = Bt))
                    : ((r.endingStart = e
                        ? this.zeroSlopeAtStart
                          ? Bt
                          : Ut
                        : Ft),
                      (r.endingEnd = t ? (this.zeroSlopeAtEnd ? Bt : Ut) : Ft));
                },
              },
              {
                key: "_scheduleFading",
                value: function (e, t, n) {
                  var r = this._mixer,
                    i = r.time,
                    a = this._weightInterpolant;
                  null === a &&
                    ((a = r._lendControlInterpolant()),
                    (this._weightInterpolant = a));
                  var o = a.parameterPositions,
                    s = a.sampleValues;
                  return (
                    (o[0] = i), (s[0] = t), (o[1] = i + e), (s[1] = n), this
                  );
                },
              },
            ]),
            e
          );
        })(),
        od = new Float32Array(1),
        sd = (function (e) {
          function t(e) {
            var n;
            return (
              Object(y.a)(this, t),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this)))._root = e),
              n._initMemoryManager(),
              (n._accuIndex = 0),
              (n.time = 0),
              (n.timeScale = 1),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "_bindAction",
                value: function (e, t) {
                  var n = e._localRoot || this._root,
                    r = e._clip.tracks,
                    i = r.length,
                    a = e._propertyBindings,
                    o = e._interpolants,
                    s = n.uuid,
                    u = this._bindingsByRootAndName,
                    l = u[s];
                  void 0 === l && ((l = {}), (u[s] = l));
                  for (var c = 0; c !== i; ++c) {
                    var h = r[c],
                      f = h.name,
                      d = l[f];
                    if (void 0 !== d) ++d.referenceCount, (a[c] = d);
                    else {
                      if (void 0 !== (d = a[c])) {
                        null === d._cacheIndex &&
                          (++d.referenceCount,
                          this._addInactiveBinding(d, s, f));
                        continue;
                      }
                      var p = t && t._propertyBindings[c].binding.parsedPath;
                      ++(d = new $f(
                        rd.create(n, f, p),
                        h.ValueTypeName,
                        h.getValueSize()
                      )).referenceCount,
                        this._addInactiveBinding(d, s, f),
                        (a[c] = d);
                    }
                    o[c].resultBuffer = d.buffer;
                  }
                },
              },
              {
                key: "_activateAction",
                value: function (e) {
                  if (!this._isActiveAction(e)) {
                    if (null === e._cacheIndex) {
                      var t = (e._localRoot || this._root).uuid,
                        n = e._clip.uuid,
                        r = this._actionsByClip[n];
                      this._bindAction(e, r && r.knownActions[0]),
                        this._addInactiveAction(e, n, t);
                    }
                    for (
                      var i = e._propertyBindings, a = 0, o = i.length;
                      a !== o;
                      ++a
                    ) {
                      var s = i[a];
                      0 === s.useCount++ &&
                        (this._lendBinding(s), s.saveOriginalState());
                    }
                    this._lendAction(e);
                  }
                },
              },
              {
                key: "_deactivateAction",
                value: function (e) {
                  if (this._isActiveAction(e)) {
                    for (
                      var t = e._propertyBindings, n = 0, r = t.length;
                      n !== r;
                      ++n
                    ) {
                      var i = t[n];
                      0 === --i.useCount &&
                        (i.restoreOriginalState(), this._takeBackBinding(i));
                    }
                    this._takeBackAction(e);
                  }
                },
              },
              {
                key: "_initMemoryManager",
                value: function () {
                  (this._actions = []),
                    (this._nActiveActions = 0),
                    (this._actionsByClip = {}),
                    (this._bindings = []),
                    (this._nActiveBindings = 0),
                    (this._bindingsByRootAndName = {}),
                    (this._controlInterpolants = []),
                    (this._nActiveControlInterpolants = 0);
                  var e = this;
                  this.stats = {
                    actions: {
                      get total() {
                        return e._actions.length;
                      },
                      get inUse() {
                        return e._nActiveActions;
                      },
                    },
                    bindings: {
                      get total() {
                        return e._bindings.length;
                      },
                      get inUse() {
                        return e._nActiveBindings;
                      },
                    },
                    controlInterpolants: {
                      get total() {
                        return e._controlInterpolants.length;
                      },
                      get inUse() {
                        return e._nActiveControlInterpolants;
                      },
                    },
                  };
                },
              },
              {
                key: "_isActiveAction",
                value: function (e) {
                  var t = e._cacheIndex;
                  return null !== t && t < this._nActiveActions;
                },
              },
              {
                key: "_addInactiveAction",
                value: function (e, t, n) {
                  var r = this._actions,
                    i = this._actionsByClip,
                    a = i[t];
                  if (void 0 === a)
                    (a = { knownActions: [e], actionByRoot: {} }),
                      (e._byClipCacheIndex = 0),
                      (i[t] = a);
                  else {
                    var o = a.knownActions;
                    (e._byClipCacheIndex = o.length), o.push(e);
                  }
                  (e._cacheIndex = r.length),
                    r.push(e),
                    (a.actionByRoot[n] = e);
                },
              },
              {
                key: "_removeInactiveAction",
                value: function (e) {
                  var t = this._actions,
                    n = t[t.length - 1],
                    r = e._cacheIndex;
                  (n._cacheIndex = r),
                    (t[r] = n),
                    t.pop(),
                    (e._cacheIndex = null);
                  var i = e._clip.uuid,
                    a = this._actionsByClip,
                    o = a[i],
                    s = o.knownActions,
                    u = s[s.length - 1],
                    l = e._byClipCacheIndex;
                  (u._byClipCacheIndex = l),
                    (s[l] = u),
                    s.pop(),
                    (e._byClipCacheIndex = null),
                    delete o.actionByRoot[(e._localRoot || this._root).uuid],
                    0 === s.length && delete a[i],
                    this._removeInactiveBindingsForAction(e);
                },
              },
              {
                key: "_removeInactiveBindingsForAction",
                value: function (e) {
                  for (
                    var t = e._propertyBindings, n = 0, r = t.length;
                    n !== r;
                    ++n
                  ) {
                    var i = t[n];
                    0 === --i.referenceCount && this._removeInactiveBinding(i);
                  }
                },
              },
              {
                key: "_lendAction",
                value: function (e) {
                  var t = this._actions,
                    n = e._cacheIndex,
                    r = this._nActiveActions++,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_takeBackAction",
                value: function (e) {
                  var t = this._actions,
                    n = e._cacheIndex,
                    r = --this._nActiveActions,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_addInactiveBinding",
                value: function (e, t, n) {
                  var r = this._bindingsByRootAndName,
                    i = this._bindings,
                    a = r[t];
                  void 0 === a && ((a = {}), (r[t] = a)),
                    (a[n] = e),
                    (e._cacheIndex = i.length),
                    i.push(e);
                },
              },
              {
                key: "_removeInactiveBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e.binding,
                    r = n.rootNode.uuid,
                    i = n.path,
                    a = this._bindingsByRootAndName,
                    o = a[r],
                    s = t[t.length - 1],
                    u = e._cacheIndex;
                  (s._cacheIndex = u),
                    (t[u] = s),
                    t.pop(),
                    delete o[i],
                    0 === Object.keys(o).length && delete a[r];
                },
              },
              {
                key: "_lendBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e._cacheIndex,
                    r = this._nActiveBindings++,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_takeBackBinding",
                value: function (e) {
                  var t = this._bindings,
                    n = e._cacheIndex,
                    r = --this._nActiveBindings,
                    i = t[r];
                  (e._cacheIndex = r),
                    (t[r] = e),
                    (i._cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "_lendControlInterpolant",
                value: function () {
                  var e = this._controlInterpolants,
                    t = this._nActiveControlInterpolants++,
                    n = e[t];
                  return (
                    void 0 === n &&
                      (((n = new kh(
                        new Float32Array(2),
                        new Float32Array(2),
                        1,
                        od
                      )).__cacheIndex = t),
                      (e[t] = n)),
                    n
                  );
                },
              },
              {
                key: "_takeBackControlInterpolant",
                value: function (e) {
                  var t = this._controlInterpolants,
                    n = e.__cacheIndex,
                    r = --this._nActiveControlInterpolants,
                    i = t[r];
                  (e.__cacheIndex = r),
                    (t[r] = e),
                    (i.__cacheIndex = n),
                    (t[n] = i);
                },
              },
              {
                key: "clipAction",
                value: function (e, t, n) {
                  var r = t || this._root,
                    i = r.uuid,
                    a = "string" === typeof e ? zh.findByName(r, e) : e,
                    o = null !== a ? a.uuid : e,
                    s = this._actionsByClip[o],
                    u = null;
                  if (
                    (void 0 === n && (n = null !== a ? a.blendMode : Gt),
                    void 0 !== s)
                  ) {
                    var l = s.actionByRoot[i];
                    if (void 0 !== l && l.blendMode === n) return l;
                    (u = s.knownActions[0]), null === a && (a = u._clip);
                  }
                  if (null === a) return null;
                  var c = new ad(this, a, t, n);
                  return (
                    this._bindAction(c, u), this._addInactiveAction(c, o, i), c
                  );
                },
              },
              {
                key: "existingAction",
                value: function (e, t) {
                  var n = t || this._root,
                    r = n.uuid,
                    i = "string" === typeof e ? zh.findByName(n, e) : e,
                    a = i ? i.uuid : e,
                    o = this._actionsByClip[a];
                  return (void 0 !== o && o.actionByRoot[r]) || null;
                },
              },
              {
                key: "stopAllAction",
                value: function () {
                  for (
                    var e = this._actions, t = this._nActiveActions - 1;
                    t >= 0;
                    --t
                  )
                    e[t].stop();
                  return this;
                },
              },
              {
                key: "update",
                value: function (e) {
                  e *= this.timeScale;
                  for (
                    var t = this._actions,
                      n = this._nActiveActions,
                      r = (this.time += e),
                      i = Math.sign(e),
                      a = (this._accuIndex ^= 1),
                      o = 0;
                    o !== n;
                    ++o
                  ) {
                    t[o]._update(r, e, i, a);
                  }
                  for (
                    var s = this._bindings, u = this._nActiveBindings, l = 0;
                    l !== u;
                    ++l
                  )
                    s[l].apply(a);
                  return this;
                },
              },
              {
                key: "setTime",
                value: function (e) {
                  this.time = 0;
                  for (var t = 0; t < this._actions.length; t++)
                    this._actions[t].time = 0;
                  return this.update(e);
                },
              },
              {
                key: "getRoot",
                value: function () {
                  return this._root;
                },
              },
              {
                key: "uncacheClip",
                value: function (e) {
                  var t = this._actions,
                    n = e.uuid,
                    r = this._actionsByClip,
                    i = r[n];
                  if (void 0 !== i) {
                    for (
                      var a = i.knownActions, o = 0, s = a.length;
                      o !== s;
                      ++o
                    ) {
                      var u = a[o];
                      this._deactivateAction(u);
                      var l = u._cacheIndex,
                        c = t[t.length - 1];
                      (u._cacheIndex = null),
                        (u._byClipCacheIndex = null),
                        (c._cacheIndex = l),
                        (t[l] = c),
                        t.pop(),
                        this._removeInactiveBindingsForAction(u);
                    }
                    delete r[n];
                  }
                },
              },
              {
                key: "uncacheRoot",
                value: function (e) {
                  var t = e.uuid,
                    n = this._actionsByClip;
                  for (var r in n) {
                    var i = n[r].actionByRoot[t];
                    void 0 !== i &&
                      (this._deactivateAction(i),
                      this._removeInactiveAction(i));
                  }
                  var a = this._bindingsByRootAndName[t];
                  if (void 0 !== a)
                    for (var o in a) {
                      var s = a[o];
                      s.restoreOriginalState(), this._removeInactiveBinding(s);
                    }
                },
              },
              {
                key: "uncacheAction",
                value: function (e, t) {
                  var n = this.existingAction(e, t);
                  null !== n &&
                    (this._deactivateAction(n), this._removeInactiveAction(n));
                },
              },
            ]),
            t
          );
        })(Pn),
        ud = (function () {
          function e(t) {
            Object(y.a)(this, e), (this.value = t);
          }
          return (
            Object(b.a)(e, [
              {
                key: "clone",
                value: function () {
                  return new e(
                    void 0 === this.value.clone
                      ? this.value
                      : this.value.clone()
                  );
                },
              },
            ]),
            e
          );
        })(),
        ld = 0,
        cd = (function (e) {
          function t() {
            var e;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(
                this,
                Object(r.a)(t).call(this)
              )).isUniformsGroup = !0),
              Object.defineProperty(Object(d.a)(e), "id", { value: ld++ }),
              (e.name = ""),
              (e.usage = bn),
              (e.uniforms = []),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "add",
                value: function (e) {
                  return this.uniforms.push(e), this;
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t = this.uniforms.indexOf(e);
                  return -1 !== t && this.uniforms.splice(t, 1), this;
                },
              },
              {
                key: "setName",
                value: function (e) {
                  return (this.name = e), this;
                },
              },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "dispose",
                value: function () {
                  return this.dispatchEvent({ type: "dispose" }), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.name = e.name), (this.usage = e.usage);
                  var t = e.uniforms;
                  this.uniforms.length = 0;
                  for (var n = 0, r = t.length; n < r; n++)
                    this.uniforms.push(t[n].clone());
                  return this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            t
          );
        })(Pn),
        hd = (function (e) {
          function t(e, n) {
            var i,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1;
            return (
              Object(y.a)(this, t),
              ((i = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n)
              )).isInstancedInterleavedBuffer = !0),
              (i.meshPerAttribute = a),
              i
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e),
                    (this.meshPerAttribute = e.meshPerAttribute),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "clone", this).call(
                    this,
                    e
                  );
                  return (n.meshPerAttribute = this.meshPerAttribute), n;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var n = c(Object(r.a)(t.prototype), "toJSON", this).call(
                    this,
                    e
                  );
                  return (
                    (n.isInstancedInterleavedBuffer = !0),
                    (n.meshPerAttribute = this.meshPerAttribute),
                    n
                  );
                },
              },
            ]),
            t
          );
        })(Lu),
        fd = (function () {
          function e(t, n, r, i, a) {
            Object(y.a)(this, e),
              (this.isGLBufferAttribute = !0),
              (this.buffer = t),
              (this.type = n),
              (this.itemSize = r),
              (this.elementSize = i),
              (this.count = a),
              (this.version = 0);
          }
          return (
            Object(b.a)(e, [
              {
                key: "setBuffer",
                value: function (e) {
                  return (this.buffer = e), this;
                },
              },
              {
                key: "setType",
                value: function (e, t) {
                  return (this.type = e), (this.elementSize = t), this;
                },
              },
              {
                key: "setItemSize",
                value: function (e) {
                  return (this.itemSize = e), this;
                },
              },
              {
                key: "setCount",
                value: function (e) {
                  return (this.count = e), this;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            e
          );
        })(),
        dd = (function () {
          function e(t, n) {
            var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1 / 0;
            Object(y.a)(this, e),
              (this.ray = new Qr(t, n)),
              (this.near = r),
              (this.far = i),
              (this.camera = null),
              (this.layers = new hi()),
              (this.params = {
                Mesh: {},
                Line: { threshold: 1 },
                LOD: {},
                Points: { threshold: 1 },
                Sprite: {},
              });
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  this.ray.set(e, t);
                },
              },
              {
                key: "setFromCamera",
                value: function (e, t) {
                  t.isPerspectiveCamera
                    ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
                      this.ray.direction
                        .set(e.x, e.y, 0.5)
                        .unproject(t)
                        .sub(this.ray.origin)
                        .normalize(),
                      (this.camera = t))
                    : t.isOrthographicCamera
                    ? (this.ray.origin
                        .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                        .unproject(t),
                      this.ray.direction
                        .set(0, 0, -1)
                        .transformDirection(t.matrixWorld),
                      (this.camera = t))
                    : console.error(
                        "THREE.Raycaster: Unsupported camera type: " + t.type
                      );
                },
              },
              {
                key: "intersectObject",
                value: function (e) {
                  var t =
                      !(arguments.length > 1 && void 0 !== arguments[1]) ||
                      arguments[1],
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : [];
                  return md(e, this, n, t), n.sort(pd), n;
                },
              },
              {
                key: "intersectObjects",
                value: function (e) {
                  for (
                    var t =
                        !(arguments.length > 1 && void 0 !== arguments[1]) ||
                        arguments[1],
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : [],
                      r = 0,
                      i = e.length;
                    r < i;
                    r++
                  )
                    md(e[r], this, n, t);
                  return n.sort(pd), n;
                },
              },
            ]),
            e
          );
        })();
      function pd(e, t) {
        return e.distance - t.distance;
      }
      function md(e, t, n, r) {
        if ((e.layers.test(t.layers) && e.raycast(t, n), !0 === r))
          for (var i = e.children, a = 0, o = i.length; a < o; a++)
            md(i[a], t, n, !0);
      }
      var vd = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            return (
              Object(y.a)(this, e),
              (this.radius = t),
              (this.phi = n),
              (this.theta = r),
              this
            );
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    (this.radius = e), (this.phi = t), (this.theta = n), this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.radius = e.radius),
                    (this.phi = e.phi),
                    (this.theta = e.theta),
                    this
                  );
                },
              },
              {
                key: "makeSafe",
                value: function () {
                  return (
                    (this.phi = Math.max(
                      1e-6,
                      Math.min(Math.PI - 1e-6, this.phi)
                    )),
                    this
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return this.setFromCartesianCoords(e.x, e.y, e.z);
                },
              },
              {
                key: "setFromCartesianCoords",
                value: function (e, t, n) {
                  return (
                    (this.radius = Math.sqrt(e * e + t * t + n * n)),
                    0 === this.radius
                      ? ((this.theta = 0), (this.phi = 0))
                      : ((this.theta = Math.atan2(e, n)),
                        (this.phi = Math.acos(Dn(t / this.radius, -1, 1)))),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        gd = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            return (
              Object(y.a)(this, e),
              (this.radius = t),
              (this.theta = n),
              (this.y = r),
              this
            );
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    (this.radius = e), (this.theta = t), (this.y = n), this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.radius = e.radius),
                    (this.theta = e.theta),
                    (this.y = e.y),
                    this
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return this.setFromCartesianCoords(e.x, e.y, e.z);
                },
              },
              {
                key: "setFromCartesianCoords",
                value: function (e, t, n) {
                  return (
                    (this.radius = Math.sqrt(e * e + n * n)),
                    (this.theta = Math.atan2(e, n)),
                    (this.y = t),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        yd = new qn(),
        bd = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new qn(1 / 0, 1 / 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new qn(-1 / 0, -1 / 0);
            Object(y.a)(this, e),
              (this.isBox2 = !0),
              (this.min = t),
              (this.max = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.min.copy(e), this.max.copy(t), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t++)
                    this.expandByPoint(e[t]);
                  return this;
                },
              },
              {
                key: "setFromCenterAndSize",
                value: function (e, t) {
                  var n = yd.copy(t).multiplyScalar(0.5);
                  return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.min.copy(e.min), this.max.copy(e.max), this;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return (
                    (this.min.x = this.min.y = 1 / 0),
                    (this.max.x = this.max.y = -1 / 0),
                    this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return this.max.x < this.min.x || this.max.y < this.min.y;
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0)
                    : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                },
              },
              {
                key: "getSize",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0)
                    : e.subVectors(this.max, this.min);
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  return this.min.min(e), this.max.max(e), this;
                },
              },
              {
                key: "expandByVector",
                value: function (e) {
                  return this.min.sub(e), this.max.add(e), this;
                },
              },
              {
                key: "expandByScalar",
                value: function (e) {
                  return this.min.addScalar(-e), this.max.addScalar(e), this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return !(
                    e.x < this.min.x ||
                    e.x > this.max.x ||
                    e.y < this.min.y ||
                    e.y > this.max.y
                  );
                },
              },
              {
                key: "containsBox",
                value: function (e) {
                  return (
                    this.min.x <= e.min.x &&
                    e.max.x <= this.max.x &&
                    this.min.y <= e.min.y &&
                    e.max.y <= this.max.y
                  );
                },
              },
              {
                key: "getParameter",
                value: function (e, t) {
                  return t.set(
                    (e.x - this.min.x) / (this.max.x - this.min.x),
                    (e.y - this.min.y) / (this.max.y - this.min.y)
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return !(
                    e.max.x < this.min.x ||
                    e.min.x > this.max.x ||
                    e.max.y < this.min.y ||
                    e.min.y > this.max.y
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  return t.copy(e).clamp(this.min, this.max);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return yd.copy(e).clamp(this.min, this.max).sub(e).length();
                },
              },
              {
                key: "intersect",
                value: function (e) {
                  return this.min.max(e.min), this.max.min(e.max), this;
                },
              },
              {
                key: "union",
                value: function (e) {
                  return this.min.min(e.min), this.max.max(e.max), this;
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.min.add(e), this.max.add(e), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.min.equals(this.min) && e.max.equals(this.max);
                },
              },
            ]),
            e
          );
        })(),
        xd = new Sr(),
        _d = new Sr(),
        wd = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr();
            Object(y.a)(this, e), (this.start = t), (this.end = n);
          }
          return (
            Object(b.a)(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.start.copy(e), this.end.copy(t), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.start.copy(e.start), this.end.copy(e.end), this;
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return e.addVectors(this.start, this.end).multiplyScalar(0.5);
                },
              },
              {
                key: "delta",
                value: function (e) {
                  return e.subVectors(this.end, this.start);
                },
              },
              {
                key: "distanceSq",
                value: function () {
                  return this.start.distanceToSquared(this.end);
                },
              },
              {
                key: "distance",
                value: function () {
                  return this.start.distanceTo(this.end);
                },
              },
              {
                key: "at",
                value: function (e, t) {
                  return this.delta(t).multiplyScalar(e).add(this.start);
                },
              },
              {
                key: "closestPointToPointParameter",
                value: function (e, t) {
                  xd.subVectors(e, this.start),
                    _d.subVectors(this.end, this.start);
                  var n = _d.dot(_d),
                    r = _d.dot(xd) / n;
                  return t && (r = Dn(r, 0, 1)), r;
                },
              },
              {
                key: "closestPointToPoint",
                value: function (e, t, n) {
                  var r = this.closestPointToPointParameter(e, t);
                  return this.delta(n).multiplyScalar(r).add(this.start);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.start.equals(this.start) && e.end.equals(this.end);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        Sd = new Sr(),
        Md = (function (e) {
          function t(e, n) {
            var i;
            Object(y.a)(this, t),
              ((i = Object(f.a)(this, Object(r.a)(t).call(this))).light = e),
              i.light.updateMatrixWorld(),
              (i.matrix = e.matrixWorld),
              (i.matrixAutoUpdate = !1),
              (i.color = n);
            for (
              var a = new oa(),
                o = [
                  0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0,
                  0, 0, 1, 1, 0, 0, 0, 0, -1, 1,
                ],
                s = 0,
                u = 1;
              s < 32;
              s++, u++
            ) {
              var l = (s / 32) * Math.PI * 2,
                c = (u / 32) * Math.PI * 2;
              o.push(Math.cos(l), Math.sin(l), 1, Math.cos(c), Math.sin(c), 1);
            }
            a.setAttribute("position", new $i(o, 3));
            var h = new gl({ fog: !1, toneMapped: !1 });
            return (i.cone = new El(a, h)), i.add(i.cone), i.update(), i;
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.cone.geometry.dispose(), this.cone.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  this.light.updateMatrixWorld();
                  var e = this.light.distance ? this.light.distance : 1e3,
                    t = e * Math.tan(this.light.angle);
                  this.cone.scale.set(t, t, e),
                    Sd.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(Sd),
                    void 0 !== this.color
                      ? this.cone.material.color.set(this.color)
                      : this.cone.material.color.copy(this.light.color);
                },
              },
            ]),
            t
          );
        })(Ti),
        Td = new Sr(),
        Ed = new ei(),
        Od = new ei(),
        kd = (function (e) {
          function t(e) {
            var n;
            Object(y.a)(this, t);
            for (
              var i = (function e(t) {
                  var n = [];
                  !0 === t.isBone && n.push(t);
                  for (var r = 0; r < t.children.length; r++)
                    n.push.apply(n, e(t.children[r]));
                  return n;
                })(e),
                a = new oa(),
                o = [],
                s = [],
                u = new lr(0, 0, 1),
                l = new lr(0, 1, 0),
                c = 0;
              c < i.length;
              c++
            ) {
              var h = i[c];
              h.parent &&
                h.parent.isBone &&
                (o.push(0, 0, 0),
                o.push(0, 0, 0),
                s.push(u.r, u.g, u.b),
                s.push(l.r, l.g, l.b));
            }
            a.setAttribute("position", new $i(o, 3)),
              a.setAttribute("color", new $i(s, 3));
            var d = new gl({
              vertexColors: !0,
              depthTest: !1,
              depthWrite: !1,
              toneMapped: !1,
              transparent: !0,
            });
            return (
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(this, a, d)
              )).isSkeletonHelper = !0),
              (n.type = "SkeletonHelper"),
              (n.root = e),
              (n.bones = i),
              (n.matrix = e.matrixWorld),
              (n.matrixAutoUpdate = !1),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  var n = this.bones,
                    i = this.geometry,
                    a = i.getAttribute("position");
                  Od.copy(this.root.matrixWorld).invert();
                  for (var o = 0, s = 0; o < n.length; o++) {
                    var u = n[o];
                    u.parent &&
                      u.parent.isBone &&
                      (Ed.multiplyMatrices(Od, u.matrixWorld),
                      Td.setFromMatrixPosition(Ed),
                      a.setXYZ(s, Td.x, Td.y, Td.z),
                      Ed.multiplyMatrices(Od, u.parent.matrixWorld),
                      Td.setFromMatrixPosition(Ed),
                      a.setXYZ(s + 1, Td.x, Td.y, Td.z),
                      (s += 2));
                  }
                  (i.getAttribute("position").needsUpdate = !0),
                    c(Object(r.a)(t.prototype), "updateMatrixWorld", this).call(
                      this,
                      e
                    );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            t
          );
        })(El);
      var Ad = (function (e) {
          function t(e, n, i) {
            var a;
            Object(y.a)(this, t);
            var o = new th(n, 4, 2),
              s = new Ui({ wireframe: !0, fog: !1, toneMapped: !1 });
            return (
              ((a = Object(f.a)(this, Object(r.a)(t).call(this, o, s))).light =
                e),
              a.light.updateMatrixWorld(),
              (a.color = i),
              (a.type = "PointLightHelper"),
              (a.matrix = a.light.matrixWorld),
              (a.matrixAutoUpdate = !1),
              a.update(),
              a
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  void 0 !== this.color
                    ? this.material.color.set(this.color)
                    : this.material.color.copy(this.light.color);
                },
              },
            ]),
            t
          );
        })(Ma),
        Cd = new Sr(),
        Pd = new lr(),
        Rd = new lr(),
        Ld = (function (e) {
          function t(e, n, i) {
            var a;
            Object(y.a)(this, t),
              ((a = Object(f.a)(this, Object(r.a)(t).call(this))).light = e),
              a.light.updateMatrixWorld(),
              (a.matrix = e.matrixWorld),
              (a.matrixAutoUpdate = !1),
              (a.color = i);
            var o = new Kc(n);
            o.rotateY(0.5 * Math.PI),
              (a.material = new Ui({ wireframe: !0, fog: !1, toneMapped: !1 })),
              void 0 === a.color && (a.material.vertexColors = !0);
            var s = o.getAttribute("position"),
              u = new Float32Array(3 * s.count);
            return (
              o.setAttribute("color", new Gi(u, 3)),
              a.add(new Ma(o, a.material)),
              a.update(),
              a
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.children[0].geometry.dispose(),
                    this.children[0].material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  var e = this.children[0];
                  if (void 0 !== this.color)
                    this.material.color.set(this.color);
                  else {
                    var t = e.geometry.getAttribute("color");
                    Pd.copy(this.light.color), Rd.copy(this.light.groundColor);
                    for (var n = 0, r = t.count; n < r; n++) {
                      var i = n < r / 2 ? Pd : Rd;
                      t.setXYZ(n, i.r, i.g, i.b);
                    }
                    t.needsUpdate = !0;
                  }
                  e.lookAt(
                    Cd.setFromMatrixPosition(this.light.matrixWorld).negate()
                  );
                },
              },
            ]),
            t
          );
        })(Ti),
        jd = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 10,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 10,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 4473924,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 8947848;
            Object(y.a)(this, t), (a = new lr(a)), (o = new lr(o));
            for (
              var s = i / 2,
                u = n / i,
                l = n / 2,
                c = [],
                h = [],
                d = 0,
                p = 0,
                m = -l;
              d <= i;
              d++, m += u
            ) {
              c.push(-l, 0, m, l, 0, m), c.push(m, 0, -l, m, 0, l);
              var v = d === s ? a : o;
              v.toArray(h, p),
                (p += 3),
                v.toArray(h, p),
                (p += 3),
                v.toArray(h, p),
                (p += 3),
                v.toArray(h, p),
                (p += 3);
            }
            var g = new oa();
            g.setAttribute("position", new $i(c, 3)),
              g.setAttribute("color", new $i(h, 3));
            var b = new gl({ vertexColors: !0, toneMapped: !1 });
            return (
              ((e = Object(f.a)(this, Object(r.a)(t).call(this, g, b))).type =
                "GridHelper"),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            t
          );
        })(El),
        Id = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 10,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 16,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 8,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 64,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 4473924,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 8947848;
            Object(y.a)(this, t), (s = new lr(s)), (u = new lr(u));
            var l = [],
              c = [];
            if (i > 1)
              for (var h = 0; h < i; h++) {
                var d = (h / i) * (2 * Math.PI),
                  p = Math.sin(d) * n,
                  m = Math.cos(d) * n;
                l.push(0, 0, 0), l.push(p, 0, m);
                var v = 1 & h ? s : u;
                c.push(v.r, v.g, v.b), c.push(v.r, v.g, v.b);
              }
            for (var g = 0; g < a; g++)
              for (
                var b = 1 & g ? s : u, x = n - (n / a) * g, _ = 0;
                _ < o;
                _++
              ) {
                var w = (_ / o) * (2 * Math.PI),
                  S = Math.sin(w) * x,
                  M = Math.cos(w) * x;
                l.push(S, 0, M),
                  c.push(b.r, b.g, b.b),
                  (w = ((_ + 1) / o) * (2 * Math.PI)),
                  (S = Math.sin(w) * x),
                  (M = Math.cos(w) * x),
                  l.push(S, 0, M),
                  c.push(b.r, b.g, b.b);
              }
            var T = new oa();
            T.setAttribute("position", new $i(l, 3)),
              T.setAttribute("color", new $i(c, 3));
            var E = new gl({ vertexColors: !0, toneMapped: !1 });
            return (
              ((e = Object(f.a)(this, Object(r.a)(t).call(this, T, E))).type =
                "PolarGridHelper"),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            t
          );
        })(El),
        Nd = new Sr(),
        Dd = new Sr(),
        zd = new Sr(),
        Ud = (function (e) {
          function t(e, n, i) {
            var a;
            Object(y.a)(this, t),
              ((a = Object(f.a)(this, Object(r.a)(t).call(this))).light = e),
              a.light.updateMatrixWorld(),
              (a.matrix = e.matrixWorld),
              (a.matrixAutoUpdate = !1),
              (a.color = i),
              void 0 === n && (n = 1);
            var o = new oa();
            o.setAttribute(
              "position",
              new $i([-n, n, 0, n, n, 0, n, -n, 0, -n, -n, 0, -n, n, 0], 3)
            );
            var s = new gl({ fog: !1, toneMapped: !1 });
            return (
              (a.lightPlane = new Sl(o, s)),
              a.add(a.lightPlane),
              (o = new oa()).setAttribute(
                "position",
                new $i([0, 0, 0, 0, 0, 1], 3)
              ),
              (a.targetLine = new Sl(o, s)),
              a.add(a.targetLine),
              a.update(),
              a
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "dispose",
                value: function () {
                  this.lightPlane.geometry.dispose(),
                    this.lightPlane.material.dispose(),
                    this.targetLine.geometry.dispose(),
                    this.targetLine.material.dispose();
                },
              },
              {
                key: "update",
                value: function () {
                  Nd.setFromMatrixPosition(this.light.matrixWorld),
                    Dd.setFromMatrixPosition(this.light.target.matrixWorld),
                    zd.subVectors(Dd, Nd),
                    this.lightPlane.lookAt(Dd),
                    void 0 !== this.color
                      ? (this.lightPlane.material.color.set(this.color),
                        this.targetLine.material.color.set(this.color))
                      : (this.lightPlane.material.color.copy(this.light.color),
                        this.targetLine.material.color.copy(this.light.color)),
                    this.targetLine.lookAt(Dd),
                    (this.targetLine.scale.z = zd.length());
                },
              },
            ]),
            t
          );
        })(Ti),
        Bd = new Sr(),
        Fd = new La(),
        Gd = (function (e) {
          function t(e) {
            var n;
            Object(y.a)(this, t);
            var i = new oa(),
              a = new gl({ color: 16777215, vertexColors: !0, toneMapped: !1 }),
              o = [],
              s = [],
              u = {};
            function l(e, t) {
              c(e), c(t);
            }
            function c(e) {
              o.push(0, 0, 0),
                s.push(0, 0, 0),
                void 0 === u[e] && (u[e] = []),
                u[e].push(o.length / 3 - 1);
            }
            l("n1", "n2"),
              l("n2", "n4"),
              l("n4", "n3"),
              l("n3", "n1"),
              l("f1", "f2"),
              l("f2", "f4"),
              l("f4", "f3"),
              l("f3", "f1"),
              l("n1", "f1"),
              l("n2", "f2"),
              l("n3", "f3"),
              l("n4", "f4"),
              l("p", "n1"),
              l("p", "n2"),
              l("p", "n3"),
              l("p", "n4"),
              l("u1", "u2"),
              l("u2", "u3"),
              l("u3", "u1"),
              l("c", "t"),
              l("p", "c"),
              l("cn1", "cn2"),
              l("cn3", "cn4"),
              l("cf1", "cf2"),
              l("cf3", "cf4"),
              i.setAttribute("position", new $i(o, 3)),
              i.setAttribute("color", new $i(s, 3)),
              ((n = Object(f.a)(this, Object(r.a)(t).call(this, i, a))).type =
                "CameraHelper"),
              (n.camera = e),
              n.camera.updateProjectionMatrix &&
                n.camera.updateProjectionMatrix(),
              (n.matrix = e.matrixWorld),
              (n.matrixAutoUpdate = !1),
              (n.pointMap = u),
              n.update();
            var h = new lr(16755200),
              d = new lr(16711680),
              p = new lr(43775),
              m = new lr(16777215),
              v = new lr(3355443);
            return n.setColors(h, d, p, m, v), n;
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "setColors",
                value: function (e, t, n, r, i) {
                  var a = this.geometry.getAttribute("color");
                  a.setXYZ(0, e.r, e.g, e.b),
                    a.setXYZ(1, e.r, e.g, e.b),
                    a.setXYZ(2, e.r, e.g, e.b),
                    a.setXYZ(3, e.r, e.g, e.b),
                    a.setXYZ(4, e.r, e.g, e.b),
                    a.setXYZ(5, e.r, e.g, e.b),
                    a.setXYZ(6, e.r, e.g, e.b),
                    a.setXYZ(7, e.r, e.g, e.b),
                    a.setXYZ(8, e.r, e.g, e.b),
                    a.setXYZ(9, e.r, e.g, e.b),
                    a.setXYZ(10, e.r, e.g, e.b),
                    a.setXYZ(11, e.r, e.g, e.b),
                    a.setXYZ(12, e.r, e.g, e.b),
                    a.setXYZ(13, e.r, e.g, e.b),
                    a.setXYZ(14, e.r, e.g, e.b),
                    a.setXYZ(15, e.r, e.g, e.b),
                    a.setXYZ(16, e.r, e.g, e.b),
                    a.setXYZ(17, e.r, e.g, e.b),
                    a.setXYZ(18, e.r, e.g, e.b),
                    a.setXYZ(19, e.r, e.g, e.b),
                    a.setXYZ(20, e.r, e.g, e.b),
                    a.setXYZ(21, e.r, e.g, e.b),
                    a.setXYZ(22, e.r, e.g, e.b),
                    a.setXYZ(23, e.r, e.g, e.b),
                    a.setXYZ(24, t.r, t.g, t.b),
                    a.setXYZ(25, t.r, t.g, t.b),
                    a.setXYZ(26, t.r, t.g, t.b),
                    a.setXYZ(27, t.r, t.g, t.b),
                    a.setXYZ(28, t.r, t.g, t.b),
                    a.setXYZ(29, t.r, t.g, t.b),
                    a.setXYZ(30, t.r, t.g, t.b),
                    a.setXYZ(31, t.r, t.g, t.b),
                    a.setXYZ(32, n.r, n.g, n.b),
                    a.setXYZ(33, n.r, n.g, n.b),
                    a.setXYZ(34, n.r, n.g, n.b),
                    a.setXYZ(35, n.r, n.g, n.b),
                    a.setXYZ(36, n.r, n.g, n.b),
                    a.setXYZ(37, n.r, n.g, n.b),
                    a.setXYZ(38, r.r, r.g, r.b),
                    a.setXYZ(39, r.r, r.g, r.b),
                    a.setXYZ(40, i.r, i.g, i.b),
                    a.setXYZ(41, i.r, i.g, i.b),
                    a.setXYZ(42, i.r, i.g, i.b),
                    a.setXYZ(43, i.r, i.g, i.b),
                    a.setXYZ(44, i.r, i.g, i.b),
                    a.setXYZ(45, i.r, i.g, i.b),
                    a.setXYZ(46, i.r, i.g, i.b),
                    a.setXYZ(47, i.r, i.g, i.b),
                    a.setXYZ(48, i.r, i.g, i.b),
                    a.setXYZ(49, i.r, i.g, i.b),
                    (a.needsUpdate = !0);
                },
              },
              {
                key: "update",
                value: function () {
                  var e = this.geometry,
                    t = this.pointMap;
                  Fd.projectionMatrixInverse.copy(
                    this.camera.projectionMatrixInverse
                  ),
                    Hd("c", t, e, Fd, 0, 0, -1),
                    Hd("t", t, e, Fd, 0, 0, 1),
                    Hd("n1", t, e, Fd, -1, -1, -1),
                    Hd("n2", t, e, Fd, 1, -1, -1),
                    Hd("n3", t, e, Fd, -1, 1, -1),
                    Hd("n4", t, e, Fd, 1, 1, -1),
                    Hd("f1", t, e, Fd, -1, -1, 1),
                    Hd("f2", t, e, Fd, 1, -1, 1),
                    Hd("f3", t, e, Fd, -1, 1, 1),
                    Hd("f4", t, e, Fd, 1, 1, 1),
                    Hd("u1", t, e, Fd, 0.7, 1.1, -1),
                    Hd("u2", t, e, Fd, -0.7, 1.1, -1),
                    Hd("u3", t, e, Fd, 0, 2, -1),
                    Hd("cf1", t, e, Fd, -1, 0, 1),
                    Hd("cf2", t, e, Fd, 1, 0, 1),
                    Hd("cf3", t, e, Fd, 0, -1, 1),
                    Hd("cf4", t, e, Fd, 0, 1, 1),
                    Hd("cn1", t, e, Fd, -1, 0, -1),
                    Hd("cn2", t, e, Fd, 1, 0, -1),
                    Hd("cn3", t, e, Fd, 0, -1, -1),
                    Hd("cn4", t, e, Fd, 0, 1, -1),
                    (e.getAttribute("position").needsUpdate = !0);
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            t
          );
        })(El);
      function Hd(e, t, n, r, i, a, o) {
        Bd.set(i, a, o).unproject(r);
        var s = t[e];
        if (void 0 !== s)
          for (
            var u = n.getAttribute("position"), l = 0, c = s.length;
            l < c;
            l++
          )
            u.setXYZ(s[l], Bd.x, Bd.y, Bd.z);
      }
      var Vd,
        Wd,
        qd = new Er(),
        Xd = (function (e) {
          function t(e) {
            var n,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 16776960;
            Object(y.a)(this, t);
            var a = new Uint16Array([
                0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                6, 3, 7,
              ]),
              o = new Float32Array(24),
              s = new oa();
            return (
              s.setIndex(new Gi(a, 1)),
              s.setAttribute("position", new Gi(o, 3)),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(
                  this,
                  s,
                  new gl({ color: i, toneMapped: !1 })
                )
              )).object = e),
              (n.type = "BoxHelper"),
              (n.matrixAutoUpdate = !1),
              n.update(),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "update",
                value: function (e) {
                  if (
                    (void 0 !== e &&
                      console.warn(
                        "THREE.BoxHelper: .update() has no longer arguments."
                      ),
                    void 0 !== this.object && qd.setFromObject(this.object),
                    !qd.isEmpty())
                  ) {
                    var t = qd.min,
                      n = qd.max,
                      r = this.geometry.attributes.position,
                      i = r.array;
                    (i[0] = n.x),
                      (i[1] = n.y),
                      (i[2] = n.z),
                      (i[3] = t.x),
                      (i[4] = n.y),
                      (i[5] = n.z),
                      (i[6] = t.x),
                      (i[7] = t.y),
                      (i[8] = n.z),
                      (i[9] = n.x),
                      (i[10] = t.y),
                      (i[11] = n.z),
                      (i[12] = n.x),
                      (i[13] = n.y),
                      (i[14] = t.z),
                      (i[15] = t.x),
                      (i[16] = n.y),
                      (i[17] = t.z),
                      (i[18] = t.x),
                      (i[19] = t.y),
                      (i[20] = t.z),
                      (i[21] = n.x),
                      (i[22] = t.y),
                      (i[23] = t.z),
                      (r.needsUpdate = !0),
                      this.geometry.computeBoundingSphere();
                  }
                },
              },
              {
                key: "setFromObject",
                value: function (e) {
                  return (this.object = e), this.update(), this;
                },
              },
              {
                key: "copy",
                value: function (e, n) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, n),
                    (this.object = e.object),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            t
          );
        })(El),
        Yd = (function (e) {
          function t(e) {
            var n,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 16776960;
            Object(y.a)(this, t);
            var a = new Uint16Array([
                0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                6, 3, 7,
              ]),
              o = new oa();
            return (
              o.setIndex(new Gi(a, 1)),
              o.setAttribute(
                "position",
                new $i(
                  [
                    1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1,
                    -1, -1, -1, 1, -1, -1,
                  ],
                  3
                )
              ),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(
                  this,
                  o,
                  new gl({ color: i, toneMapped: !1 })
                )
              )).box = e),
              (n.type = "Box3Helper"),
              n.geometry.computeBoundingSphere(),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  var n = this.box;
                  n.isEmpty() ||
                    (n.getCenter(this.position),
                    n.getSize(this.scale),
                    this.scale.multiplyScalar(0.5),
                    c(Object(r.a)(t.prototype), "updateMatrixWorld", this).call(
                      this,
                      e
                    ));
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            t
          );
        })(El),
        Jd = (function (e) {
          function t(e) {
            var n,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 16776960;
            Object(y.a)(this, t);
            var o = a,
              s = new oa();
            s.setAttribute(
              "position",
              new $i(
                [
                  1, -1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0,
                  1, -1, 0, 1, 1, 0,
                ],
                3
              )
            ),
              s.computeBoundingSphere(),
              ((n = Object(f.a)(
                this,
                Object(r.a)(t).call(
                  this,
                  s,
                  new gl({ color: o, toneMapped: !1 })
                )
              )).type = "PlaneHelper"),
              (n.plane = e),
              (n.size = i);
            var u = new oa();
            return (
              u.setAttribute(
                "position",
                new $i(
                  [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0],
                  3
                )
              ),
              u.computeBoundingSphere(),
              n.add(
                new Ma(
                  u,
                  new Ui({
                    color: o,
                    opacity: 0.2,
                    transparent: !0,
                    depthWrite: !1,
                    toneMapped: !1,
                  })
                )
              ),
              n
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  this.position.set(0, 0, 0),
                    this.scale.set(0.5 * this.size, 0.5 * this.size, 1),
                    this.lookAt(this.plane.normal),
                    this.translateZ(-this.plane.constant),
                    c(Object(r.a)(t.prototype), "updateMatrixWorld", this).call(
                      this,
                      e
                    );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(),
                    this.material.dispose(),
                    this.children[0].geometry.dispose(),
                    this.children[0].material.dispose();
                },
              },
            ]),
            t
          );
        })(Sl),
        Zd = new Sr(),
        $d = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Sr(0, 0, 1),
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Sr(0, 0, 0),
              a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 16776960,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0.2 * a,
              u =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0.2 * s;
            return (
              Object(y.a)(this, t),
              ((e = Object(f.a)(this, Object(r.a)(t).call(this))).type =
                "ArrowHelper"),
              void 0 === Vd &&
                ((Vd = new oa()).setAttribute(
                  "position",
                  new $i([0, 0, 0, 0, 1, 0], 3)
                ),
                (Wd = new cc(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)),
              e.position.copy(i),
              (e.line = new Sl(Vd, new gl({ color: o, toneMapped: !1 }))),
              (e.line.matrixAutoUpdate = !1),
              e.add(e.line),
              (e.cone = new Ma(Wd, new Ui({ color: o, toneMapped: !1 }))),
              (e.cone.matrixAutoUpdate = !1),
              e.add(e.cone),
              e.setDirection(n),
              e.setLength(a, s, u),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "setDirection",
                value: function (e) {
                  if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1);
                  else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
                  else {
                    Zd.set(e.z, 0, -e.x).normalize();
                    var t = Math.acos(e.y);
                    this.quaternion.setFromAxisAngle(Zd, t);
                  }
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0.2 * e,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0.2 * t;
                  this.line.scale.set(1, Math.max(1e-4, e - t), 1),
                    this.line.updateMatrix(),
                    this.cone.scale.set(n, t, n),
                    (this.cone.position.y = e),
                    this.cone.updateMatrix();
                },
              },
              {
                key: "setColor",
                value: function (e) {
                  this.line.material.color.set(e),
                    this.cone.material.color.set(e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    c(Object(r.a)(t.prototype), "copy", this).call(this, e, !1),
                    this.line.copy(e.line),
                    this.cone.copy(e.cone),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.line.geometry.dispose(),
                    this.line.material.dispose(),
                    this.cone.geometry.dispose(),
                    this.cone.material.dispose();
                },
              },
            ]),
            t
          );
        })(Ti),
        Kd = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1;
            Object(y.a)(this, t);
            var i = [0, 0, 0, n, 0, 0, 0, 0, 0, 0, n, 0, 0, 0, 0, 0, 0, n],
              a = new oa();
            a.setAttribute("position", new $i(i, 3)),
              a.setAttribute(
                "color",
                new $i(
                  [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
                  3
                )
              );
            var o = new gl({ vertexColors: !0, toneMapped: !1 });
            return (
              ((e = Object(f.a)(this, Object(r.a)(t).call(this, a, o))).type =
                "AxesHelper"),
              e
            );
          }
          return (
            Object(p.a)(t, e),
            Object(b.a)(t, [
              {
                key: "setColors",
                value: function (e, t, n) {
                  var r = new lr(),
                    i = this.geometry.attributes.color.array;
                  return (
                    r.set(e),
                    r.toArray(i, 0),
                    r.toArray(i, 3),
                    r.set(t),
                    r.toArray(i, 6),
                    r.toArray(i, 9),
                    r.set(n),
                    r.toArray(i, 12),
                    r.toArray(i, 15),
                    (this.geometry.attributes.color.needsUpdate = !0),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose(), this.material.dispose();
                },
              },
            ]),
            t
          );
        })(El),
        Qd = (function () {
          function e() {
            Object(y.a)(this, e),
              (this.type = "ShapePath"),
              (this.color = new lr()),
              (this.subPaths = []),
              (this.currentPath = null);
          }
          return (
            Object(b.a)(e, [
              {
                key: "moveTo",
                value: function (e, t) {
                  return (
                    (this.currentPath = new oc()),
                    this.subPaths.push(this.currentPath),
                    this.currentPath.moveTo(e, t),
                    this
                  );
                },
              },
              {
                key: "lineTo",
                value: function (e, t) {
                  return this.currentPath.lineTo(e, t), this;
                },
              },
              {
                key: "quadraticCurveTo",
                value: function (e, t, n, r) {
                  return this.currentPath.quadraticCurveTo(e, t, n, r), this;
                },
              },
              {
                key: "bezierCurveTo",
                value: function (e, t, n, r, i, a) {
                  return this.currentPath.bezierCurveTo(e, t, n, r, i, a), this;
                },
              },
              {
                key: "splineThru",
                value: function (e) {
                  return this.currentPath.splineThru(e), this;
                },
              },
              {
                key: "toShapes",
                value: function (e) {
                  function t(e, t) {
                    for (
                      var n = t.length, r = !1, i = n - 1, a = 0;
                      a < n;
                      i = a++
                    ) {
                      var o = t[i],
                        s = t[a],
                        u = s.x - o.x,
                        l = s.y - o.y;
                      if (Math.abs(l) > Number.EPSILON) {
                        if (
                          (l < 0 &&
                            ((o = t[a]), (u = -u), (s = t[i]), (l = -l)),
                          e.y < o.y || e.y > s.y)
                        )
                          continue;
                        if (e.y === o.y) {
                          if (e.x === o.x) return !0;
                        } else {
                          var c = l * (e.x - o.x) - u * (e.y - o.y);
                          if (0 === c) return !0;
                          if (c < 0) continue;
                          r = !r;
                        }
                      } else {
                        if (e.y !== o.y) continue;
                        if (
                          (s.x <= e.x && e.x <= o.x) ||
                          (o.x <= e.x && e.x <= s.x)
                        )
                          return !0;
                      }
                    }
                    return r;
                  }
                  var n,
                    r,
                    i,
                    a = qc.isClockWise,
                    o = this.subPaths;
                  if (0 === o.length) return [];
                  var s = [];
                  if (1 === o.length)
                    return (
                      (r = o[0]),
                      ((i = new bc()).curves = r.curves),
                      s.push(i),
                      s
                    );
                  var u = !a(o[0].getPoints());
                  u = e ? !u : u;
                  var l,
                    c,
                    h = [],
                    f = [],
                    d = [],
                    p = 0;
                  (f[p] = void 0), (d[p] = []);
                  for (var m = 0, v = o.length; m < v; m++)
                    (n = a((l = (r = o[m]).getPoints()))),
                      (n = e ? !n : n)
                        ? (!u && f[p] && p++,
                          (f[p] = { s: new bc(), p: l }),
                          (f[p].s.curves = r.curves),
                          u && p++,
                          (d[p] = []))
                        : d[p].push({ h: r, p: l[0] });
                  if (!f[0])
                    return (function (e) {
                      for (var t = [], n = 0, r = e.length; n < r; n++) {
                        var i = e[n],
                          a = new bc();
                        (a.curves = i.curves), t.push(a);
                      }
                      return t;
                    })(o);
                  if (f.length > 1) {
                    for (var g = !1, y = 0, b = 0, x = f.length; b < x; b++)
                      h[b] = [];
                    for (var _ = 0, w = f.length; _ < w; _++)
                      for (var S = d[_], M = 0; M < S.length; M++) {
                        for (var T = S[M], E = !0, O = 0; O < f.length; O++)
                          t(T.p, f[O].p) &&
                            (_ !== O && y++,
                            E ? ((E = !1), h[O].push(T)) : (g = !0));
                        E && h[_].push(T);
                      }
                    y > 0 && !1 === g && (d = h);
                  }
                  for (var k = 0, A = f.length; k < A; k++) {
                    (i = f[k].s), s.push(i);
                    for (var C = 0, P = (c = d[k]).length; C < P; C++)
                      i.holes.push(c[C].h);
                  }
                  return s;
                },
              },
            ]),
            e
          );
        })(),
        ep = tp();
      function tp() {
        for (
          var e = new ArrayBuffer(4),
            t = new Float32Array(e),
            n = new Uint32Array(e),
            r = new Uint32Array(512),
            i = new Uint32Array(512),
            a = 0;
          a < 256;
          ++a
        ) {
          var o = a - 127;
          o < -27
            ? ((r[a] = 0), (r[256 | a] = 32768), (i[a] = 24), (i[256 | a] = 24))
            : o < -14
            ? ((r[a] = 1024 >> (-o - 14)),
              (r[256 | a] = (1024 >> (-o - 14)) | 32768),
              (i[a] = -o - 1),
              (i[256 | a] = -o - 1))
            : o <= 15
            ? ((r[a] = (o + 15) << 10),
              (r[256 | a] = ((o + 15) << 10) | 32768),
              (i[a] = 13),
              (i[256 | a] = 13))
            : o < 128
            ? ((r[a] = 31744),
              (r[256 | a] = 64512),
              (i[a] = 24),
              (i[256 | a] = 24))
            : ((r[a] = 31744),
              (r[256 | a] = 64512),
              (i[a] = 13),
              (i[256 | a] = 13));
        }
        for (
          var s = new Uint32Array(2048),
            u = new Uint32Array(64),
            l = new Uint32Array(64),
            c = 1;
          c < 1024;
          ++c
        ) {
          for (var h = c << 13, f = 0; 0 === (8388608 & h); )
            (h <<= 1), (f -= 8388608);
          (h &= -8388609), (f += 947912704), (s[c] = h | f);
        }
        for (var d = 1024; d < 2048; ++d) s[d] = 939524096 + ((d - 1024) << 13);
        for (var p = 1; p < 31; ++p) u[p] = p << 23;
        (u[31] = 1199570944), (u[32] = 2147483648);
        for (var m = 33; m < 63; ++m) u[m] = 2147483648 + ((m - 32) << 23);
        u[63] = 3347054592;
        for (var v = 1; v < 64; ++v) 32 !== v && (l[v] = 1024);
        return {
          floatView: t,
          uint32View: n,
          baseTable: r,
          shiftTable: i,
          mantissaTable: s,
          exponentTable: u,
          offsetTable: l,
        };
      }
      var np = Object.freeze({
        __proto__: null,
        toHalfFloat: function (e) {
          Math.abs(e) > 65504 &&
            console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),
            (e = Dn(e, -65504, 65504)),
            (ep.floatView[0] = e);
          var t = ep.uint32View[0],
            n = (t >> 23) & 511;
          return ep.baseTable[n] + ((8388607 & t) >> ep.shiftTable[n]);
        },
        fromHalfFloat: function (e) {
          var t = e >> 10;
          return (
            (ep.uint32View[0] =
              ep.mantissaTable[ep.offsetTable[t] + (1023 & e)] +
              ep.exponentTable[t]),
            ep.floatView[0]
          );
        },
      });
      function rp() {
        console.error("THREE.ImmediateRenderObject has been removed.");
      }
      var ip = (function (e) {
          function t(e, n, i) {
            var a;
            return (
              Object(y.a)(this, t),
              console.error(
                'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'
              ),
              ((a = Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i)
              )).samples = 4),
              a
            );
          }
          return Object(p.a)(t, e), t;
        })(vr),
        ap = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.DataTexture2DArray has been renamed to DataArrayTexture."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return Object(p.a)(t, e), t;
        })(gr),
        op = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.DataTexture3D has been renamed to Data3DTexture."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return Object(p.a)(t, e), t;
        })(br),
        sp = (function (e) {
          function t(e, n, i, a, o, s) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a, o, s))
            );
          }
          return Object(p.a)(t, e), t;
        })(Ea),
        up = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return Object(p.a)(t, e), t;
        })(uc),
        lp = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return Object(p.a)(t, e), t;
        })(lc),
        cp = (function (e) {
          function t(e, n, i, a, o, s, u) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a, o, s, u))
            );
          }
          return Object(p.a)(t, e), t;
        })(hc),
        hp = (function (e) {
          function t(e, n, i, a, o, s, u, l) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."
              ),
              Object(f.a)(
                this,
                Object(r.a)(t).call(this, e, n, i, a, o, s, u, l)
              )
            );
          }
          return Object(p.a)(t, e), t;
        })(cc),
        fp = (function (e) {
          function t(e, n) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n))
            );
          }
          return Object(p.a)(t, e), t;
        })(dc),
        dp = (function (e) {
          function t(e, n) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n))
            );
          }
          return Object(p.a)(t, e), t;
        })(Jc),
        pp = (function (e) {
          function t(e, n) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n))
            );
          }
          return Object(p.a)(t, e), t;
        })($c),
        mp = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return Object(p.a)(t, e), t;
        })(sc),
        vp = (function (e) {
          function t(e, n) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n))
            );
          }
          return Object(p.a)(t, e), t;
        })(Kc),
        gp = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return Object(p.a)(t, e), t;
        })(Ja),
        yp = (function (e) {
          function t(e, n, i, a) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a))
            );
          }
          return Object(p.a)(t, e), t;
        })(fc),
        bp = (function (e) {
          function t(e, n, i, a, o, s) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a, o, s))
            );
          }
          return Object(p.a)(t, e), t;
        })(Qc),
        xp = (function (e) {
          function t(e, n) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n))
            );
          }
          return Object(p.a)(t, e), t;
        })(eh),
        _p = (function (e) {
          function t(e, n, i, a, o, s, u) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a, o, s, u))
            );
          }
          return Object(p.a)(t, e), t;
        })(th),
        wp = (function (e) {
          function t(e, n) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n))
            );
          }
          return Object(p.a)(t, e), t;
        })(nh),
        Sp = (function (e) {
          function t(e, n, i, a, o) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a, o))
            );
          }
          return Object(p.a)(t, e), t;
        })(rh),
        Mp = (function (e) {
          function t(e, n, i, a, o, s) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a, o, s))
            );
          }
          return Object(p.a)(t, e), t;
        })(ih),
        Tp = (function (e) {
          function t(e, n, i, a, o) {
            return (
              Object(y.a)(this, t),
              console.warn(
                "THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."
              ),
              Object(f.a)(this, Object(r.a)(t).call(this, e, n, i, a, o))
            );
          }
          return Object(p.a)(t, e), t;
        })(ah);
      "undefined" !== typeof __THREE_DEVTOOLS__ &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("register", { detail: { revision: x } })
        ),
        "undefined" !== typeof window &&
          (window.__THREE__
            ? console.warn(
                "WARNING: Multiple instances of Three.js being imported."
              )
            : (window.__THREE__ = x));
    },
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      "use strict";
      var r = n(63),
        i = "function" === typeof Symbol && Symbol.for,
        a = i ? Symbol.for("react.element") : 60103,
        o = i ? Symbol.for("react.portal") : 60106,
        s = i ? Symbol.for("react.fragment") : 60107,
        u = i ? Symbol.for("react.strict_mode") : 60108,
        l = i ? Symbol.for("react.profiler") : 60114,
        c = i ? Symbol.for("react.provider") : 60109,
        h = i ? Symbol.for("react.context") : 60110,
        f = i ? Symbol.for("react.forward_ref") : 60112,
        d = i ? Symbol.for("react.suspense") : 60113,
        p = i ? Symbol.for("react.suspense_list") : 60120,
        m = i ? Symbol.for("react.memo") : 60115,
        v = i ? Symbol.for("react.lazy") : 60116;
      i && Symbol.for("react.fundamental"), i && Symbol.for("react.responder");
      var g = "function" === typeof Symbol && Symbol.iterator;
      function y(e) {
        for (
          var t = e.message,
            n = "https://reactjs.org/docs/error-decoder.html?invariant=" + t,
            r = 1;
          r < arguments.length;
          r++
        )
          n += "&args[]=" + encodeURIComponent(arguments[r]);
        return (
          (e.message =
            "Minified React error #" +
            t +
            "; visit " +
            n +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings. "),
          e
        );
      }
      var b = {
          isMounted: function () {
            return !1;
          },
          enqueueForceUpdate: function () {},
          enqueueReplaceState: function () {},
          enqueueSetState: function () {},
        },
        x = {};
      function _(e, t, n) {
        (this.props = e),
          (this.context = t),
          (this.refs = x),
          (this.updater = n || b);
      }
      function w() {}
      function S(e, t, n) {
        (this.props = e),
          (this.context = t),
          (this.refs = x),
          (this.updater = n || b);
      }
      (_.prototype.isReactComponent = {}),
        (_.prototype.setState = function (e, t) {
          if ("object" !== typeof e && "function" !== typeof e && null != e)
            throw y(Error(85));
          this.updater.enqueueSetState(this, e, t, "setState");
        }),
        (_.prototype.forceUpdate = function (e) {
          this.updater.enqueueForceUpdate(this, e, "forceUpdate");
        }),
        (w.prototype = _.prototype);
      var M = (S.prototype = new w());
      (M.constructor = S), r(M, _.prototype), (M.isPureReactComponent = !0);
      var T = { current: null },
        E = { suspense: null },
        O = { current: null },
        k = Object.prototype.hasOwnProperty,
        A = { key: !0, ref: !0, __self: !0, __source: !0 };
      function C(e, t, n) {
        var r = void 0,
          i = {},
          o = null,
          s = null;
        if (null != t)
          for (r in (void 0 !== t.ref && (s = t.ref),
          void 0 !== t.key && (o = "" + t.key),
          t))
            k.call(t, r) && !A.hasOwnProperty(r) && (i[r] = t[r]);
        var u = arguments.length - 2;
        if (1 === u) i.children = n;
        else if (1 < u) {
          for (var l = Array(u), c = 0; c < u; c++) l[c] = arguments[c + 2];
          i.children = l;
        }
        if (e && e.defaultProps)
          for (r in (u = e.defaultProps)) void 0 === i[r] && (i[r] = u[r]);
        return {
          $$typeof: a,
          type: e,
          key: o,
          ref: s,
          props: i,
          _owner: O.current,
        };
      }
      function P(e) {
        return "object" === typeof e && null !== e && e.$$typeof === a;
      }
      var R = /\/+/g,
        L = [];
      function j(e, t, n, r) {
        if (L.length) {
          var i = L.pop();
          return (
            (i.result = e),
            (i.keyPrefix = t),
            (i.func = n),
            (i.context = r),
            (i.count = 0),
            i
          );
        }
        return { result: e, keyPrefix: t, func: n, context: r, count: 0 };
      }
      function I(e) {
        (e.result = null),
          (e.keyPrefix = null),
          (e.func = null),
          (e.context = null),
          (e.count = 0),
          10 > L.length && L.push(e);
      }
      function N(e, t, n) {
        return null == e
          ? 0
          : (function e(t, n, r, i) {
              var s = typeof t;
              ("undefined" !== s && "boolean" !== s) || (t = null);
              var u = !1;
              if (null === t) u = !0;
              else
                switch (s) {
                  case "string":
                  case "number":
                    u = !0;
                    break;
                  case "object":
                    switch (t.$$typeof) {
                      case a:
                      case o:
                        u = !0;
                    }
                }
              if (u) return r(i, t, "" === n ? "." + D(t, 0) : n), 1;
              if (((u = 0), (n = "" === n ? "." : n + ":"), Array.isArray(t)))
                for (var l = 0; l < t.length; l++) {
                  var c = n + D((s = t[l]), l);
                  u += e(s, c, r, i);
                }
              else if (
                (null === t || "object" !== typeof t
                  ? (c = null)
                  : (c =
                      "function" === typeof (c = (g && t[g]) || t["@@iterator"])
                        ? c
                        : null),
                "function" === typeof c)
              )
                for (t = c.call(t), l = 0; !(s = t.next()).done; )
                  u += e((s = s.value), (c = n + D(s, l++)), r, i);
              else if ("object" === s)
                throw (
                  ((r = "" + t),
                  y(
                    Error(31),
                    "[object Object]" === r
                      ? "object with keys {" + Object.keys(t).join(", ") + "}"
                      : r,
                    ""
                  ))
                );
              return u;
            })(e, "", t, n);
      }
      function D(e, t) {
        return "object" === typeof e && null !== e && null != e.key
          ? (function (e) {
              var t = { "=": "=0", ":": "=2" };
              return (
                "$" +
                ("" + e).replace(/[=:]/g, function (e) {
                  return t[e];
                })
              );
            })(e.key)
          : t.toString(36);
      }
      function z(e, t) {
        e.func.call(e.context, t, e.count++);
      }
      function U(e, t, n) {
        var r = e.result,
          i = e.keyPrefix;
        (e = e.func.call(e.context, t, e.count++)),
          Array.isArray(e)
            ? B(e, r, n, function (e) {
                return e;
              })
            : null != e &&
              (P(e) &&
                (e = (function (e, t) {
                  return {
                    $$typeof: a,
                    type: e.type,
                    key: t,
                    ref: e.ref,
                    props: e.props,
                    _owner: e._owner,
                  };
                })(
                  e,
                  i +
                    (!e.key || (t && t.key === e.key)
                      ? ""
                      : ("" + e.key).replace(R, "$&/") + "/") +
                    n
                )),
              r.push(e));
      }
      function B(e, t, n, r, i) {
        var a = "";
        null != n && (a = ("" + n).replace(R, "$&/") + "/"),
          N(e, U, (t = j(t, a, r, i))),
          I(t);
      }
      function F() {
        var e = T.current;
        if (null === e) throw y(Error(321));
        return e;
      }
      var G = {
          Children: {
            map: function (e, t, n) {
              if (null == e) return e;
              var r = [];
              return B(e, r, null, t, n), r;
            },
            forEach: function (e, t, n) {
              if (null == e) return e;
              N(e, z, (t = j(null, null, t, n))), I(t);
            },
            count: function (e) {
              return N(
                e,
                function () {
                  return null;
                },
                null
              );
            },
            toArray: function (e) {
              var t = [];
              return (
                B(e, t, null, function (e) {
                  return e;
                }),
                t
              );
            },
            only: function (e) {
              if (!P(e)) throw y(Error(143));
              return e;
            },
          },
          createRef: function () {
            return { current: null };
          },
          Component: _,
          PureComponent: S,
          createContext: function (e, t) {
            return (
              void 0 === t && (t = null),
              ((e = {
                $$typeof: h,
                _calculateChangedBits: t,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
              }).Provider = { $$typeof: c, _context: e }),
              (e.Consumer = e)
            );
          },
          forwardRef: function (e) {
            return { $$typeof: f, render: e };
          },
          lazy: function (e) {
            return { $$typeof: v, _ctor: e, _status: -1, _result: null };
          },
          memo: function (e, t) {
            return { $$typeof: m, type: e, compare: void 0 === t ? null : t };
          },
          useCallback: function (e, t) {
            return F().useCallback(e, t);
          },
          useContext: function (e, t) {
            return F().useContext(e, t);
          },
          useEffect: function (e, t) {
            return F().useEffect(e, t);
          },
          useImperativeHandle: function (e, t, n) {
            return F().useImperativeHandle(e, t, n);
          },
          useDebugValue: function () {},
          useLayoutEffect: function (e, t) {
            return F().useLayoutEffect(e, t);
          },
          useMemo: function (e, t) {
            return F().useMemo(e, t);
          },
          useReducer: function (e, t, n) {
            return F().useReducer(e, t, n);
          },
          useRef: function (e) {
            return F().useRef(e);
          },
          useState: function (e) {
            return F().useState(e);
          },
          Fragment: s,
          Profiler: l,
          StrictMode: u,
          Suspense: d,
          unstable_SuspenseList: p,
          createElement: C,
          cloneElement: function (e, t, n) {
            if (null === e || void 0 === e) throw y(Error(267), e);
            var i = void 0,
              o = r({}, e.props),
              s = e.key,
              u = e.ref,
              l = e._owner;
            if (null != t) {
              void 0 !== t.ref && ((u = t.ref), (l = O.current)),
                void 0 !== t.key && (s = "" + t.key);
              var c = void 0;
              for (i in (e.type &&
                e.type.defaultProps &&
                (c = e.type.defaultProps),
              t))
                k.call(t, i) &&
                  !A.hasOwnProperty(i) &&
                  (o[i] = void 0 === t[i] && void 0 !== c ? c[i] : t[i]);
            }
            if (1 === (i = arguments.length - 2)) o.children = n;
            else if (1 < i) {
              c = Array(i);
              for (var h = 0; h < i; h++) c[h] = arguments[h + 2];
              o.children = c;
            }
            return {
              $$typeof: a,
              type: e.type,
              key: s,
              ref: u,
              props: o,
              _owner: l,
            };
          },
          createFactory: function (e) {
            var t = C.bind(null, e);
            return (t.type = e), t;
          },
          isValidElement: P,
          version: "16.9.0",
          unstable_withSuspenseConfig: function (e, t) {
            var n = E.suspense;
            E.suspense = void 0 === t ? null : t;
            try {
              e();
            } finally {
              E.suspense = n;
            }
          },
          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            ReactCurrentDispatcher: T,
            ReactCurrentBatchConfig: E,
            ReactCurrentOwner: O,
            IsSomeRendererActing: { current: !1 },
            assign: r,
          },
        },
        H = { default: G },
        V = (H && G) || H;
      e.exports = V.default || V;
    },
    function (e, t, n) {
      "use strict";
      var r = n(0),
        i = n(63),
        a = n(96);
      function o(e) {
        for (
          var t = e.message,
            n = "https://reactjs.org/docs/error-decoder.html?invariant=" + t,
            r = 1;
          r < arguments.length;
          r++
        )
          n += "&args[]=" + encodeURIComponent(arguments[r]);
        return (
          (e.message =
            "Minified React error #" +
            t +
            "; visit " +
            n +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings. "),
          e
        );
      }
      if (!r) throw o(Error(227));
      var s = null,
        u = {};
      function l() {
        if (s)
          for (var e in u) {
            var t = u[e],
              n = s.indexOf(e);
            if (!(-1 < n)) throw o(Error(96), e);
            if (!h[n]) {
              if (!t.extractEvents) throw o(Error(97), e);
              for (var r in ((h[n] = t), (n = t.eventTypes))) {
                var i = void 0,
                  a = n[r],
                  l = t,
                  d = r;
                if (f.hasOwnProperty(d)) throw o(Error(99), d);
                f[d] = a;
                var p = a.phasedRegistrationNames;
                if (p) {
                  for (i in p) p.hasOwnProperty(i) && c(p[i], l, d);
                  i = !0;
                } else
                  a.registrationName
                    ? (c(a.registrationName, l, d), (i = !0))
                    : (i = !1);
                if (!i) throw o(Error(98), r, e);
              }
            }
          }
      }
      function c(e, t, n) {
        if (d[e]) throw o(Error(100), e);
        (d[e] = t), (p[e] = t.eventTypes[n].dependencies);
      }
      var h = [],
        f = {},
        d = {},
        p = {};
      function m(e, t, n, r, i, a, o, s, u) {
        var l = Array.prototype.slice.call(arguments, 3);
        try {
          t.apply(n, l);
        } catch (c) {
          this.onError(c);
        }
      }
      var v = !1,
        g = null,
        y = !1,
        b = null,
        x = {
          onError: function (e) {
            (v = !0), (g = e);
          },
        };
      function _(e, t, n, r, i, a, o, s, u) {
        (v = !1), (g = null), m.apply(x, arguments);
      }
      var w = null,
        S = null,
        M = null;
      function T(e, t, n) {
        var r = e.type || "unknown-event";
        (e.currentTarget = M(n)),
          (function (e, t, n, r, i, a, s, u, l) {
            if ((_.apply(this, arguments), v)) {
              if (!v) throw o(Error(198));
              var c = g;
              (v = !1), (g = null), y || ((y = !0), (b = c));
            }
          })(r, t, void 0, e),
          (e.currentTarget = null);
      }
      function E(e, t) {
        if (null == t) throw o(Error(30));
        return null == e
          ? t
          : Array.isArray(e)
          ? Array.isArray(t)
            ? (e.push.apply(e, t), e)
            : (e.push(t), e)
          : Array.isArray(t)
          ? [e].concat(t)
          : [e, t];
      }
      function O(e, t, n) {
        Array.isArray(e) ? e.forEach(t, n) : e && t.call(n, e);
      }
      var k = null;
      function A(e) {
        if (e) {
          var t = e._dispatchListeners,
            n = e._dispatchInstances;
          if (Array.isArray(t))
            for (var r = 0; r < t.length && !e.isPropagationStopped(); r++)
              T(e, t[r], n[r]);
          else t && T(e, t, n);
          (e._dispatchListeners = null),
            (e._dispatchInstances = null),
            e.isPersistent() || e.constructor.release(e);
        }
      }
      function C(e) {
        if ((null !== e && (k = E(k, e)), (e = k), (k = null), e)) {
          if ((O(e, A), k)) throw o(Error(95));
          if (y) throw ((e = b), (y = !1), (b = null), e);
        }
      }
      var P = {
        injectEventPluginOrder: function (e) {
          if (s) throw o(Error(101));
          (s = Array.prototype.slice.call(e)), l();
        },
        injectEventPluginsByName: function (e) {
          var t,
            n = !1;
          for (t in e)
            if (e.hasOwnProperty(t)) {
              var r = e[t];
              if (!u.hasOwnProperty(t) || u[t] !== r) {
                if (u[t]) throw o(Error(102), t);
                (u[t] = r), (n = !0);
              }
            }
          n && l();
        },
      };
      function R(e, t) {
        var n = e.stateNode;
        if (!n) return null;
        var r = w(n);
        if (!r) return null;
        n = r[t];
        e: switch (t) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
            (r = !r.disabled) ||
              (r = !(
                "button" === (e = e.type) ||
                "input" === e ||
                "select" === e ||
                "textarea" === e
              )),
              (e = !r);
            break e;
          default:
            e = !1;
        }
        if (e) return null;
        if (n && "function" !== typeof n) throw o(Error(231), t, typeof n);
        return n;
      }
      var L = Math.random().toString(36).slice(2),
        j = "__reactInternalInstance$" + L,
        I = "__reactEventHandlers$" + L;
      function N(e) {
        if (e[j]) return e[j];
        for (; !e[j]; ) {
          if (!e.parentNode) return null;
          e = e.parentNode;
        }
        return 5 === (e = e[j]).tag || 6 === e.tag ? e : null;
      }
      function D(e) {
        return !(e = e[j]) || (5 !== e.tag && 6 !== e.tag) ? null : e;
      }
      function z(e) {
        if (5 === e.tag || 6 === e.tag) return e.stateNode;
        throw o(Error(33));
      }
      function U(e) {
        return e[I] || null;
      }
      function B(e) {
        do {
          e = e.return;
        } while (e && 5 !== e.tag);
        return e || null;
      }
      function F(e, t, n) {
        (t = R(e, n.dispatchConfig.phasedRegistrationNames[t])) &&
          ((n._dispatchListeners = E(n._dispatchListeners, t)),
          (n._dispatchInstances = E(n._dispatchInstances, e)));
      }
      function G(e) {
        if (e && e.dispatchConfig.phasedRegistrationNames) {
          for (var t = e._targetInst, n = []; t; ) n.push(t), (t = B(t));
          for (t = n.length; 0 < t--; ) F(n[t], "captured", e);
          for (t = 0; t < n.length; t++) F(n[t], "bubbled", e);
        }
      }
      function H(e, t, n) {
        e &&
          n &&
          n.dispatchConfig.registrationName &&
          (t = R(e, n.dispatchConfig.registrationName)) &&
          ((n._dispatchListeners = E(n._dispatchListeners, t)),
          (n._dispatchInstances = E(n._dispatchInstances, e)));
      }
      function V(e) {
        e && e.dispatchConfig.registrationName && H(e._targetInst, null, e);
      }
      function W(e) {
        O(e, G);
      }
      var q = !(
        "undefined" === typeof window ||
        "undefined" === typeof window.document ||
        "undefined" === typeof window.document.createElement
      );
      function X(e, t) {
        var n = {};
        return (
          (n[e.toLowerCase()] = t.toLowerCase()),
          (n["Webkit" + e] = "webkit" + t),
          (n["Moz" + e] = "moz" + t),
          n
        );
      }
      var Y = {
          animationend: X("Animation", "AnimationEnd"),
          animationiteration: X("Animation", "AnimationIteration"),
          animationstart: X("Animation", "AnimationStart"),
          transitionend: X("Transition", "TransitionEnd"),
        },
        J = {},
        Z = {};
      function $(e) {
        if (J[e]) return J[e];
        if (!Y[e]) return e;
        var t,
          n = Y[e];
        for (t in n) if (n.hasOwnProperty(t) && t in Z) return (J[e] = n[t]);
        return e;
      }
      q &&
        ((Z = document.createElement("div").style),
        "AnimationEvent" in window ||
          (delete Y.animationend.animation,
          delete Y.animationiteration.animation,
          delete Y.animationstart.animation),
        "TransitionEvent" in window || delete Y.transitionend.transition);
      var K = $("animationend"),
        Q = $("animationiteration"),
        ee = $("animationstart"),
        te = $("transitionend"),
        ne =
          "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(
            " "
          ),
        re = null,
        ie = null,
        ae = null;
      function oe() {
        if (ae) return ae;
        var e,
          t,
          n = ie,
          r = n.length,
          i = "value" in re ? re.value : re.textContent,
          a = i.length;
        for (e = 0; e < r && n[e] === i[e]; e++);
        var o = r - e;
        for (t = 1; t <= o && n[r - t] === i[a - t]; t++);
        return (ae = i.slice(e, 1 < t ? 1 - t : void 0));
      }
      function se() {
        return !0;
      }
      function ue() {
        return !1;
      }
      function le(e, t, n, r) {
        for (var i in ((this.dispatchConfig = e),
        (this._targetInst = t),
        (this.nativeEvent = n),
        (e = this.constructor.Interface)))
          e.hasOwnProperty(i) &&
            ((t = e[i])
              ? (this[i] = t(n))
              : "target" === i
              ? (this.target = r)
              : (this[i] = n[i]));
        return (
          (this.isDefaultPrevented = (
            null != n.defaultPrevented
              ? n.defaultPrevented
              : !1 === n.returnValue
          )
            ? se
            : ue),
          (this.isPropagationStopped = ue),
          this
        );
      }
      function ce(e, t, n, r) {
        if (this.eventPool.length) {
          var i = this.eventPool.pop();
          return this.call(i, e, t, n, r), i;
        }
        return new this(e, t, n, r);
      }
      function he(e) {
        if (!(e instanceof this)) throw o(Error(279));
        e.destructor(), 10 > this.eventPool.length && this.eventPool.push(e);
      }
      function fe(e) {
        (e.eventPool = []), (e.getPooled = ce), (e.release = he);
      }
      i(le.prototype, {
        preventDefault: function () {
          this.defaultPrevented = !0;
          var e = this.nativeEvent;
          e &&
            (e.preventDefault
              ? e.preventDefault()
              : "unknown" !== typeof e.returnValue && (e.returnValue = !1),
            (this.isDefaultPrevented = se));
        },
        stopPropagation: function () {
          var e = this.nativeEvent;
          e &&
            (e.stopPropagation
              ? e.stopPropagation()
              : "unknown" !== typeof e.cancelBubble && (e.cancelBubble = !0),
            (this.isPropagationStopped = se));
        },
        persist: function () {
          this.isPersistent = se;
        },
        isPersistent: ue,
        destructor: function () {
          var e,
            t = this.constructor.Interface;
          for (e in t) this[e] = null;
          (this.nativeEvent = this._targetInst = this.dispatchConfig = null),
            (this.isPropagationStopped = this.isDefaultPrevented = ue),
            (this._dispatchInstances = this._dispatchListeners = null);
        },
      }),
        (le.Interface = {
          type: null,
          target: null,
          currentTarget: function () {
            return null;
          },
          eventPhase: null,
          bubbles: null,
          cancelable: null,
          timeStamp: function (e) {
            return e.timeStamp || Date.now();
          },
          defaultPrevented: null,
          isTrusted: null,
        }),
        (le.extend = function (e) {
          function t() {}
          function n() {
            return r.apply(this, arguments);
          }
          var r = this;
          t.prototype = r.prototype;
          var a = new t();
          return (
            i(a, n.prototype),
            (n.prototype = a),
            (n.prototype.constructor = n),
            (n.Interface = i({}, r.Interface, e)),
            (n.extend = r.extend),
            fe(n),
            n
          );
        }),
        fe(le);
      var de = le.extend({ data: null }),
        pe = le.extend({ data: null }),
        me = [9, 13, 27, 32],
        ve = q && "CompositionEvent" in window,
        ge = null;
      q && "documentMode" in document && (ge = document.documentMode);
      var ye = q && "TextEvent" in window && !ge,
        be = q && (!ve || (ge && 8 < ge && 11 >= ge)),
        xe = String.fromCharCode(32),
        _e = {
          beforeInput: {
            phasedRegistrationNames: {
              bubbled: "onBeforeInput",
              captured: "onBeforeInputCapture",
            },
            dependencies: ["compositionend", "keypress", "textInput", "paste"],
          },
          compositionEnd: {
            phasedRegistrationNames: {
              bubbled: "onCompositionEnd",
              captured: "onCompositionEndCapture",
            },
            dependencies:
              "blur compositionend keydown keypress keyup mousedown".split(" "),
          },
          compositionStart: {
            phasedRegistrationNames: {
              bubbled: "onCompositionStart",
              captured: "onCompositionStartCapture",
            },
            dependencies:
              "blur compositionstart keydown keypress keyup mousedown".split(
                " "
              ),
          },
          compositionUpdate: {
            phasedRegistrationNames: {
              bubbled: "onCompositionUpdate",
              captured: "onCompositionUpdateCapture",
            },
            dependencies:
              "blur compositionupdate keydown keypress keyup mousedown".split(
                " "
              ),
          },
        },
        we = !1;
      function Se(e, t) {
        switch (e) {
          case "keyup":
            return -1 !== me.indexOf(t.keyCode);
          case "keydown":
            return 229 !== t.keyCode;
          case "keypress":
          case "mousedown":
          case "blur":
            return !0;
          default:
            return !1;
        }
      }
      function Me(e) {
        return "object" === typeof (e = e.detail) && "data" in e
          ? e.data
          : null;
      }
      var Te = !1;
      var Ee = {
          eventTypes: _e,
          extractEvents: function (e, t, n, r) {
            var i = void 0,
              a = void 0;
            if (ve)
              e: {
                switch (e) {
                  case "compositionstart":
                    i = _e.compositionStart;
                    break e;
                  case "compositionend":
                    i = _e.compositionEnd;
                    break e;
                  case "compositionupdate":
                    i = _e.compositionUpdate;
                    break e;
                }
                i = void 0;
              }
            else
              Te
                ? Se(e, n) && (i = _e.compositionEnd)
                : "keydown" === e &&
                  229 === n.keyCode &&
                  (i = _e.compositionStart);
            return (
              i
                ? (be &&
                    "ko" !== n.locale &&
                    (Te || i !== _e.compositionStart
                      ? i === _e.compositionEnd && Te && (a = oe())
                      : ((ie = "value" in (re = r) ? re.value : re.textContent),
                        (Te = !0))),
                  (i = de.getPooled(i, t, n, r)),
                  a ? (i.data = a) : null !== (a = Me(n)) && (i.data = a),
                  W(i),
                  (a = i))
                : (a = null),
              (e = ye
                ? (function (e, t) {
                    switch (e) {
                      case "compositionend":
                        return Me(t);
                      case "keypress":
                        return 32 !== t.which ? null : ((we = !0), xe);
                      case "textInput":
                        return (e = t.data) === xe && we ? null : e;
                      default:
                        return null;
                    }
                  })(e, n)
                : (function (e, t) {
                    if (Te)
                      return "compositionend" === e || (!ve && Se(e, t))
                        ? ((e = oe()), (ae = ie = re = null), (Te = !1), e)
                        : null;
                    switch (e) {
                      case "paste":
                        return null;
                      case "keypress":
                        if (
                          !(t.ctrlKey || t.altKey || t.metaKey) ||
                          (t.ctrlKey && t.altKey)
                        ) {
                          if (t.char && 1 < t.char.length) return t.char;
                          if (t.which) return String.fromCharCode(t.which);
                        }
                        return null;
                      case "compositionend":
                        return be && "ko" !== t.locale ? null : t.data;
                      default:
                        return null;
                    }
                  })(e, n))
                ? (((t = pe.getPooled(_e.beforeInput, t, n, r)).data = e), W(t))
                : (t = null),
              null === a ? t : null === t ? a : [a, t]
            );
          },
        },
        Oe = null,
        ke = null,
        Ae = null;
      function Ce(e) {
        if ((e = S(e))) {
          if ("function" !== typeof Oe) throw o(Error(280));
          var t = w(e.stateNode);
          Oe(e.stateNode, e.type, t);
        }
      }
      function Pe(e) {
        ke ? (Ae ? Ae.push(e) : (Ae = [e])) : (ke = e);
      }
      function Re() {
        if (ke) {
          var e = ke,
            t = Ae;
          if (((Ae = ke = null), Ce(e), t))
            for (e = 0; e < t.length; e++) Ce(t[e]);
        }
      }
      function Le(e, t) {
        return e(t);
      }
      function je(e, t, n, r) {
        return e(t, n, r);
      }
      function Ie() {}
      var Ne = Le,
        De = !1;
      function ze() {
        (null === ke && null === Ae) || (Ie(), Re());
      }
      var Ue = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0,
      };
      function Be(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return "input" === t ? !!Ue[e.type] : "textarea" === t;
      }
      function Fe(e) {
        return (
          (e = e.target || e.srcElement || window).correspondingUseElement &&
            (e = e.correspondingUseElement),
          3 === e.nodeType ? e.parentNode : e
        );
      }
      function Ge(e) {
        if (!q) return !1;
        var t = (e = "on" + e) in document;
        return (
          t ||
            ((t = document.createElement("div")).setAttribute(e, "return;"),
            (t = "function" === typeof t[e])),
          t
        );
      }
      function He(e) {
        var t = e.type;
        return (
          (e = e.nodeName) &&
          "input" === e.toLowerCase() &&
          ("checkbox" === t || "radio" === t)
        );
      }
      function Ve(e) {
        e._valueTracker ||
          (e._valueTracker = (function (e) {
            var t = He(e) ? "checked" : "value",
              n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
              r = "" + e[t];
            if (
              !e.hasOwnProperty(t) &&
              "undefined" !== typeof n &&
              "function" === typeof n.get &&
              "function" === typeof n.set
            ) {
              var i = n.get,
                a = n.set;
              return (
                Object.defineProperty(e, t, {
                  configurable: !0,
                  get: function () {
                    return i.call(this);
                  },
                  set: function (e) {
                    (r = "" + e), a.call(this, e);
                  },
                }),
                Object.defineProperty(e, t, { enumerable: n.enumerable }),
                {
                  getValue: function () {
                    return r;
                  },
                  setValue: function (e) {
                    r = "" + e;
                  },
                  stopTracking: function () {
                    (e._valueTracker = null), delete e[t];
                  },
                }
              );
            }
          })(e));
      }
      function We(e) {
        if (!e) return !1;
        var t = e._valueTracker;
        if (!t) return !0;
        var n = t.getValue(),
          r = "";
        return (
          e && (r = He(e) ? (e.checked ? "true" : "false") : e.value),
          (e = r) !== n && (t.setValue(e), !0)
        );
      }
      var qe = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      qe.hasOwnProperty("ReactCurrentDispatcher") ||
        (qe.ReactCurrentDispatcher = { current: null }),
        qe.hasOwnProperty("ReactCurrentBatchConfig") ||
          (qe.ReactCurrentBatchConfig = { suspense: null });
      var Xe = /^(.*)[\\\/]/,
        Ye = "function" === typeof Symbol && Symbol.for,
        Je = Ye ? Symbol.for("react.element") : 60103,
        Ze = Ye ? Symbol.for("react.portal") : 60106,
        $e = Ye ? Symbol.for("react.fragment") : 60107,
        Ke = Ye ? Symbol.for("react.strict_mode") : 60108,
        Qe = Ye ? Symbol.for("react.profiler") : 60114,
        et = Ye ? Symbol.for("react.provider") : 60109,
        tt = Ye ? Symbol.for("react.context") : 60110,
        nt = Ye ? Symbol.for("react.concurrent_mode") : 60111,
        rt = Ye ? Symbol.for("react.forward_ref") : 60112,
        it = Ye ? Symbol.for("react.suspense") : 60113,
        at = Ye ? Symbol.for("react.suspense_list") : 60120,
        ot = Ye ? Symbol.for("react.memo") : 60115,
        st = Ye ? Symbol.for("react.lazy") : 60116;
      Ye && Symbol.for("react.fundamental"),
        Ye && Symbol.for("react.responder");
      var ut = "function" === typeof Symbol && Symbol.iterator;
      function lt(e) {
        return null === e || "object" !== typeof e
          ? null
          : "function" === typeof (e = (ut && e[ut]) || e["@@iterator"])
          ? e
          : null;
      }
      function ct(e) {
        if (null == e) return null;
        if ("function" === typeof e) return e.displayName || e.name || null;
        if ("string" === typeof e) return e;
        switch (e) {
          case $e:
            return "Fragment";
          case Ze:
            return "Portal";
          case Qe:
            return "Profiler";
          case Ke:
            return "StrictMode";
          case it:
            return "Suspense";
          case at:
            return "SuspenseList";
        }
        if ("object" === typeof e)
          switch (e.$$typeof) {
            case tt:
              return "Context.Consumer";
            case et:
              return "Context.Provider";
            case rt:
              var t = e.render;
              return (
                (t = t.displayName || t.name || ""),
                e.displayName ||
                  ("" !== t ? "ForwardRef(" + t + ")" : "ForwardRef")
              );
            case ot:
              return ct(e.type);
            case st:
              if ((e = 1 === e._status ? e._result : null)) return ct(e);
          }
        return null;
      }
      function ht(e) {
        var t = "";
        do {
          e: switch (e.tag) {
            case 3:
            case 4:
            case 6:
            case 7:
            case 10:
            case 9:
              var n = "";
              break e;
            default:
              var r = e._debugOwner,
                i = e._debugSource,
                a = ct(e.type);
              (n = null),
                r && (n = ct(r.type)),
                (r = a),
                (a = ""),
                i
                  ? (a =
                      " (at " +
                      i.fileName.replace(Xe, "") +
                      ":" +
                      i.lineNumber +
                      ")")
                  : n && (a = " (created by " + n + ")"),
                (n = "\n    in " + (r || "Unknown") + a);
          }
          (t += n), (e = e.return);
        } while (e);
        return t;
      }
      var ft =
          /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
        dt = Object.prototype.hasOwnProperty,
        pt = {},
        mt = {};
      function vt(e, t, n, r, i, a) {
        (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
          (this.attributeName = r),
          (this.attributeNamespace = i),
          (this.mustUseProperty = n),
          (this.propertyName = e),
          (this.type = t),
          (this.sanitizeURL = a);
      }
      var gt = {};
      "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
        .split(" ")
        .forEach(function (e) {
          gt[e] = new vt(e, 0, !1, e, null, !1);
        }),
        [
          ["acceptCharset", "accept-charset"],
          ["className", "class"],
          ["htmlFor", "for"],
          ["httpEquiv", "http-equiv"],
        ].forEach(function (e) {
          var t = e[0];
          gt[t] = new vt(t, 1, !1, e[1], null, !1);
        }),
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(
          function (e) {
            gt[e] = new vt(e, 2, !1, e.toLowerCase(), null, !1);
          }
        ),
        [
          "autoReverse",
          "externalResourcesRequired",
          "focusable",
          "preserveAlpha",
        ].forEach(function (e) {
          gt[e] = new vt(e, 2, !1, e, null, !1);
        }),
        "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
          .split(" ")
          .forEach(function (e) {
            gt[e] = new vt(e, 3, !1, e.toLowerCase(), null, !1);
          }),
        ["checked", "multiple", "muted", "selected"].forEach(function (e) {
          gt[e] = new vt(e, 3, !0, e, null, !1);
        }),
        ["capture", "download"].forEach(function (e) {
          gt[e] = new vt(e, 4, !1, e, null, !1);
        }),
        ["cols", "rows", "size", "span"].forEach(function (e) {
          gt[e] = new vt(e, 6, !1, e, null, !1);
        }),
        ["rowSpan", "start"].forEach(function (e) {
          gt[e] = new vt(e, 5, !1, e.toLowerCase(), null, !1);
        });
      var yt = /[\-:]([a-z])/g;
      function bt(e) {
        return e[1].toUpperCase();
      }
      function xt(e, t, n, r) {
        var i = gt.hasOwnProperty(t) ? gt[t] : null;
        (null !== i
          ? 0 === i.type
          : !r &&
            2 < t.length &&
            ("o" === t[0] || "O" === t[0]) &&
            ("n" === t[1] || "N" === t[1])) ||
          ((function (e, t, n, r) {
            if (
              null === t ||
              "undefined" === typeof t ||
              (function (e, t, n, r) {
                if (null !== n && 0 === n.type) return !1;
                switch (typeof t) {
                  case "function":
                  case "symbol":
                    return !0;
                  case "boolean":
                    return (
                      !r &&
                      (null !== n
                        ? !n.acceptsBooleans
                        : "data-" !== (e = e.toLowerCase().slice(0, 5)) &&
                          "aria-" !== e)
                    );
                  default:
                    return !1;
                }
              })(e, t, n, r)
            )
              return !0;
            if (r) return !1;
            if (null !== n)
              switch (n.type) {
                case 3:
                  return !t;
                case 4:
                  return !1 === t;
                case 5:
                  return isNaN(t);
                case 6:
                  return isNaN(t) || 1 > t;
              }
            return !1;
          })(t, n, i, r) && (n = null),
          r || null === i
            ? (function (e) {
                return (
                  !!dt.call(mt, e) ||
                  (!dt.call(pt, e) &&
                    (ft.test(e) ? (mt[e] = !0) : ((pt[e] = !0), !1)))
                );
              })(t) &&
              (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n))
            : i.mustUseProperty
            ? (e[i.propertyName] = null === n ? 3 !== i.type && "" : n)
            : ((t = i.attributeName),
              (r = i.attributeNamespace),
              null === n
                ? e.removeAttribute(t)
                : ((n =
                    3 === (i = i.type) || (4 === i && !0 === n) ? "" : "" + n),
                  r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
      }
      function _t(e) {
        switch (typeof e) {
          case "boolean":
          case "number":
          case "object":
          case "string":
          case "undefined":
            return e;
          default:
            return "";
        }
      }
      function wt(e, t) {
        var n = t.checked;
        return i({}, t, {
          defaultChecked: void 0,
          defaultValue: void 0,
          value: void 0,
          checked: null != n ? n : e._wrapperState.initialChecked,
        });
      }
      function St(e, t) {
        var n = null == t.defaultValue ? "" : t.defaultValue,
          r = null != t.checked ? t.checked : t.defaultChecked;
        (n = _t(null != t.value ? t.value : n)),
          (e._wrapperState = {
            initialChecked: r,
            initialValue: n,
            controlled:
              "checkbox" === t.type || "radio" === t.type
                ? null != t.checked
                : null != t.value,
          });
      }
      function Mt(e, t) {
        null != (t = t.checked) && xt(e, "checked", t, !1);
      }
      function Tt(e, t) {
        Mt(e, t);
        var n = _t(t.value),
          r = t.type;
        if (null != n)
          "number" === r
            ? ((0 === n && "" === e.value) || e.value != n) &&
              (e.value = "" + n)
            : e.value !== "" + n && (e.value = "" + n);
        else if ("submit" === r || "reset" === r)
          return void e.removeAttribute("value");
        t.hasOwnProperty("value")
          ? Ot(e, t.type, n)
          : t.hasOwnProperty("defaultValue") &&
            Ot(e, t.type, _t(t.defaultValue)),
          null == t.checked &&
            null != t.defaultChecked &&
            (e.defaultChecked = !!t.defaultChecked);
      }
      function Et(e, t, n) {
        if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
          var r = t.type;
          if (
            !(
              ("submit" !== r && "reset" !== r) ||
              (void 0 !== t.value && null !== t.value)
            )
          )
            return;
          (t = "" + e._wrapperState.initialValue),
            n || t === e.value || (e.value = t),
            (e.defaultValue = t);
        }
        "" !== (n = e.name) && (e.name = ""),
          (e.defaultChecked = !e.defaultChecked),
          (e.defaultChecked = !!e._wrapperState.initialChecked),
          "" !== n && (e.name = n);
      }
      function Ot(e, t, n) {
        ("number" === t && e.ownerDocument.activeElement === e) ||
          (null == n
            ? (e.defaultValue = "" + e._wrapperState.initialValue)
            : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
      }
      "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
        .split(" ")
        .forEach(function (e) {
          var t = e.replace(yt, bt);
          gt[t] = new vt(t, 1, !1, e, null, !1);
        }),
        "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
          .split(" ")
          .forEach(function (e) {
            var t = e.replace(yt, bt);
            gt[t] = new vt(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1);
          }),
        ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
          var t = e.replace(yt, bt);
          gt[t] = new vt(
            t,
            1,
            !1,
            e,
            "http://www.w3.org/XML/1998/namespace",
            !1
          );
        }),
        ["tabIndex", "crossOrigin"].forEach(function (e) {
          gt[e] = new vt(e, 1, !1, e.toLowerCase(), null, !1);
        }),
        (gt.xlinkHref = new vt(
          "xlinkHref",
          1,
          !1,
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          !0
        )),
        ["src", "href", "action", "formAction"].forEach(function (e) {
          gt[e] = new vt(e, 1, !1, e.toLowerCase(), null, !0);
        });
      var kt = {
        change: {
          phasedRegistrationNames: {
            bubbled: "onChange",
            captured: "onChangeCapture",
          },
          dependencies:
            "blur change click focus input keydown keyup selectionchange".split(
              " "
            ),
        },
      };
      function At(e, t, n) {
        return (
          ((e = le.getPooled(kt.change, e, t, n)).type = "change"),
          Pe(n),
          W(e),
          e
        );
      }
      var Ct = null,
        Pt = null;
      function Rt(e) {
        C(e);
      }
      function Lt(e) {
        if (We(z(e))) return e;
      }
      function jt(e, t) {
        if ("change" === e) return t;
      }
      var It = !1;
      function Nt() {
        Ct && (Ct.detachEvent("onpropertychange", Dt), (Pt = Ct = null));
      }
      function Dt(e) {
        if ("value" === e.propertyName && Lt(Pt))
          if (((e = At(Pt, e, Fe(e))), De)) C(e);
          else {
            De = !0;
            try {
              Le(Rt, e);
            } finally {
              (De = !1), ze();
            }
          }
      }
      function zt(e, t, n) {
        "focus" === e
          ? (Nt(), (Pt = n), (Ct = t).attachEvent("onpropertychange", Dt))
          : "blur" === e && Nt();
      }
      function Ut(e) {
        if ("selectionchange" === e || "keyup" === e || "keydown" === e)
          return Lt(Pt);
      }
      function Bt(e, t) {
        if ("click" === e) return Lt(t);
      }
      function Ft(e, t) {
        if ("input" === e || "change" === e) return Lt(t);
      }
      q &&
        (It =
          Ge("input") && (!document.documentMode || 9 < document.documentMode));
      var Gt = {
          eventTypes: kt,
          _isInputEventSupported: It,
          extractEvents: function (e, t, n, r) {
            var i = t ? z(t) : window,
              a = void 0,
              o = void 0,
              s = i.nodeName && i.nodeName.toLowerCase();
            if (
              ("select" === s || ("input" === s && "file" === i.type)
                ? (a = jt)
                : Be(i)
                ? It
                  ? (a = Ft)
                  : ((a = Ut), (o = zt))
                : (s = i.nodeName) &&
                  "input" === s.toLowerCase() &&
                  ("checkbox" === i.type || "radio" === i.type) &&
                  (a = Bt),
              a && (a = a(e, t)))
            )
              return At(a, n, r);
            o && o(e, i, t),
              "blur" === e &&
                (e = i._wrapperState) &&
                e.controlled &&
                "number" === i.type &&
                Ot(i, "number", i.value);
          },
        },
        Ht = le.extend({ view: null, detail: null }),
        Vt = {
          Alt: "altKey",
          Control: "ctrlKey",
          Meta: "metaKey",
          Shift: "shiftKey",
        };
      function Wt(e) {
        var t = this.nativeEvent;
        return t.getModifierState
          ? t.getModifierState(e)
          : !!(e = Vt[e]) && !!t[e];
      }
      function qt() {
        return Wt;
      }
      var Xt = 0,
        Yt = 0,
        Jt = !1,
        Zt = !1,
        $t = Ht.extend({
          screenX: null,
          screenY: null,
          clientX: null,
          clientY: null,
          pageX: null,
          pageY: null,
          ctrlKey: null,
          shiftKey: null,
          altKey: null,
          metaKey: null,
          getModifierState: qt,
          button: null,
          buttons: null,
          relatedTarget: function (e) {
            return (
              e.relatedTarget ||
              (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
            );
          },
          movementX: function (e) {
            if ("movementX" in e) return e.movementX;
            var t = Xt;
            return (
              (Xt = e.screenX),
              Jt ? ("mousemove" === e.type ? e.screenX - t : 0) : ((Jt = !0), 0)
            );
          },
          movementY: function (e) {
            if ("movementY" in e) return e.movementY;
            var t = Yt;
            return (
              (Yt = e.screenY),
              Zt ? ("mousemove" === e.type ? e.screenY - t : 0) : ((Zt = !0), 0)
            );
          },
        }),
        Kt = $t.extend({
          pointerId: null,
          width: null,
          height: null,
          pressure: null,
          tangentialPressure: null,
          tiltX: null,
          tiltY: null,
          twist: null,
          pointerType: null,
          isPrimary: null,
        }),
        Qt = {
          mouseEnter: {
            registrationName: "onMouseEnter",
            dependencies: ["mouseout", "mouseover"],
          },
          mouseLeave: {
            registrationName: "onMouseLeave",
            dependencies: ["mouseout", "mouseover"],
          },
          pointerEnter: {
            registrationName: "onPointerEnter",
            dependencies: ["pointerout", "pointerover"],
          },
          pointerLeave: {
            registrationName: "onPointerLeave",
            dependencies: ["pointerout", "pointerover"],
          },
        },
        en = {
          eventTypes: Qt,
          extractEvents: function (e, t, n, r) {
            var i = "mouseover" === e || "pointerover" === e,
              a = "mouseout" === e || "pointerout" === e;
            if ((i && (n.relatedTarget || n.fromElement)) || (!a && !i))
              return null;
            if (
              ((i =
                r.window === r
                  ? r
                  : (i = r.ownerDocument)
                  ? i.defaultView || i.parentWindow
                  : window),
              a
                ? ((a = t),
                  (t = (t = n.relatedTarget || n.toElement) ? N(t) : null))
                : (a = null),
              a === t)
            )
              return null;
            var o = void 0,
              s = void 0,
              u = void 0,
              l = void 0;
            "mouseout" === e || "mouseover" === e
              ? ((o = $t),
                (s = Qt.mouseLeave),
                (u = Qt.mouseEnter),
                (l = "mouse"))
              : ("pointerout" !== e && "pointerover" !== e) ||
                ((o = Kt),
                (s = Qt.pointerLeave),
                (u = Qt.pointerEnter),
                (l = "pointer"));
            var c = null == a ? i : z(a);
            if (
              ((i = null == t ? i : z(t)),
              ((e = o.getPooled(s, a, n, r)).type = l + "leave"),
              (e.target = c),
              (e.relatedTarget = i),
              ((n = o.getPooled(u, t, n, r)).type = l + "enter"),
              (n.target = i),
              (n.relatedTarget = c),
              (r = t),
              a && r)
            )
              e: {
                for (i = r, l = 0, o = t = a; o; o = B(o)) l++;
                for (o = 0, u = i; u; u = B(u)) o++;
                for (; 0 < l - o; ) (t = B(t)), l--;
                for (; 0 < o - l; ) (i = B(i)), o--;
                for (; l--; ) {
                  if (t === i || t === i.alternate) break e;
                  (t = B(t)), (i = B(i));
                }
                t = null;
              }
            else t = null;
            for (
              i = t, t = [];
              a && a !== i && (null === (l = a.alternate) || l !== i);

            )
              t.push(a), (a = B(a));
            for (
              a = [];
              r && r !== i && (null === (l = r.alternate) || l !== i);

            )
              a.push(r), (r = B(r));
            for (r = 0; r < t.length; r++) H(t[r], "bubbled", e);
            for (r = a.length; 0 < r--; ) H(a[r], "captured", n);
            return [e, n];
          },
        };
      function tn(e, t) {
        return (
          (e === t && (0 !== e || 1 / e === 1 / t)) || (e !== e && t !== t)
        );
      }
      var nn = Object.prototype.hasOwnProperty;
      function rn(e, t) {
        if (tn(e, t)) return !0;
        if (
          "object" !== typeof e ||
          null === e ||
          "object" !== typeof t ||
          null === t
        )
          return !1;
        var n = Object.keys(e),
          r = Object.keys(t);
        if (n.length !== r.length) return !1;
        for (r = 0; r < n.length; r++)
          if (!nn.call(t, n[r]) || !tn(e[n[r]], t[n[r]])) return !1;
        return !0;
      }
      function an(e, t) {
        return { responder: e, props: t };
      }
      function on(e) {
        var t = e;
        if (e.alternate) for (; t.return; ) t = t.return;
        else {
          if (0 !== (2 & t.effectTag)) return 1;
          for (; t.return; ) if (0 !== (2 & (t = t.return).effectTag)) return 1;
        }
        return 3 === t.tag ? 2 : 3;
      }
      function sn(e) {
        if (2 !== on(e)) throw o(Error(188));
      }
      function un(e) {
        if (
          !(e = (function (e) {
            var t = e.alternate;
            if (!t) {
              if (3 === (t = on(e))) throw o(Error(188));
              return 1 === t ? null : e;
            }
            for (var n = e, r = t; ; ) {
              var i = n.return;
              if (null === i) break;
              var a = i.alternate;
              if (null === a) {
                if (null !== (r = i.return)) {
                  n = r;
                  continue;
                }
                break;
              }
              if (i.child === a.child) {
                for (a = i.child; a; ) {
                  if (a === n) return sn(i), e;
                  if (a === r) return sn(i), t;
                  a = a.sibling;
                }
                throw o(Error(188));
              }
              if (n.return !== r.return) (n = i), (r = a);
              else {
                for (var s = !1, u = i.child; u; ) {
                  if (u === n) {
                    (s = !0), (n = i), (r = a);
                    break;
                  }
                  if (u === r) {
                    (s = !0), (r = i), (n = a);
                    break;
                  }
                  u = u.sibling;
                }
                if (!s) {
                  for (u = a.child; u; ) {
                    if (u === n) {
                      (s = !0), (n = a), (r = i);
                      break;
                    }
                    if (u === r) {
                      (s = !0), (r = a), (n = i);
                      break;
                    }
                    u = u.sibling;
                  }
                  if (!s) throw o(Error(189));
                }
              }
              if (n.alternate !== r) throw o(Error(190));
            }
            if (3 !== n.tag) throw o(Error(188));
            return n.stateNode.current === n ? e : t;
          })(e))
        )
          return null;
        for (var t = e; ; ) {
          if (5 === t.tag || 6 === t.tag) return t;
          if (t.child) (t.child.return = t), (t = t.child);
          else {
            if (t === e) break;
            for (; !t.sibling; ) {
              if (!t.return || t.return === e) return null;
              t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
          }
        }
        return null;
      }
      new Map(), new Map(), new Set(), new Map();
      var ln = le.extend({
          animationName: null,
          elapsedTime: null,
          pseudoElement: null,
        }),
        cn = le.extend({
          clipboardData: function (e) {
            return "clipboardData" in e
              ? e.clipboardData
              : window.clipboardData;
          },
        }),
        hn = Ht.extend({ relatedTarget: null });
      function fn(e) {
        var t = e.keyCode;
        return (
          "charCode" in e
            ? 0 === (e = e.charCode) && 13 === t && (e = 13)
            : (e = t),
          10 === e && (e = 13),
          32 <= e || 13 === e ? e : 0
        );
      }
      for (
        var dn = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
          },
          pn = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
          },
          mn = Ht.extend({
            key: function (e) {
              if (e.key) {
                var t = dn[e.key] || e.key;
                if ("Unidentified" !== t) return t;
              }
              return "keypress" === e.type
                ? 13 === (e = fn(e))
                  ? "Enter"
                  : String.fromCharCode(e)
                : "keydown" === e.type || "keyup" === e.type
                ? pn[e.keyCode] || "Unidentified"
                : "";
            },
            location: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            repeat: null,
            locale: null,
            getModifierState: qt,
            charCode: function (e) {
              return "keypress" === e.type ? fn(e) : 0;
            },
            keyCode: function (e) {
              return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
            },
            which: function (e) {
              return "keypress" === e.type
                ? fn(e)
                : "keydown" === e.type || "keyup" === e.type
                ? e.keyCode
                : 0;
            },
          }),
          vn = $t.extend({ dataTransfer: null }),
          gn = Ht.extend({
            touches: null,
            targetTouches: null,
            changedTouches: null,
            altKey: null,
            metaKey: null,
            ctrlKey: null,
            shiftKey: null,
            getModifierState: qt,
          }),
          yn = le.extend({
            propertyName: null,
            elapsedTime: null,
            pseudoElement: null,
          }),
          bn = $t.extend({
            deltaX: function (e) {
              return ("deltaX" in e)
                ? e.deltaX
                : ("wheelDeltaX" in e)
                ? -e.wheelDeltaX
                : 0;
            },
            deltaY: function (e) {
              return ("deltaY" in e)
                ? e.deltaY
                : ("wheelDeltaY" in e)
                ? -e.wheelDeltaY
                : ("wheelDelta" in e)
                ? -e.wheelDelta
                : 0;
            },
            deltaZ: null,
            deltaMode: null,
          }),
          xn = [
            ["blur", "blur", 0],
            ["cancel", "cancel", 0],
            ["click", "click", 0],
            ["close", "close", 0],
            ["contextmenu", "contextMenu", 0],
            ["copy", "copy", 0],
            ["cut", "cut", 0],
            ["auxclick", "auxClick", 0],
            ["dblclick", "doubleClick", 0],
            ["dragend", "dragEnd", 0],
            ["dragstart", "dragStart", 0],
            ["drop", "drop", 0],
            ["focus", "focus", 0],
            ["input", "input", 0],
            ["invalid", "invalid", 0],
            ["keydown", "keyDown", 0],
            ["keypress", "keyPress", 0],
            ["keyup", "keyUp", 0],
            ["mousedown", "mouseDown", 0],
            ["mouseup", "mouseUp", 0],
            ["paste", "paste", 0],
            ["pause", "pause", 0],
            ["play", "play", 0],
            ["pointercancel", "pointerCancel", 0],
            ["pointerdown", "pointerDown", 0],
            ["pointerup", "pointerUp", 0],
            ["ratechange", "rateChange", 0],
            ["reset", "reset", 0],
            ["seeked", "seeked", 0],
            ["submit", "submit", 0],
            ["touchcancel", "touchCancel", 0],
            ["touchend", "touchEnd", 0],
            ["touchstart", "touchStart", 0],
            ["volumechange", "volumeChange", 0],
            ["drag", "drag", 1],
            ["dragenter", "dragEnter", 1],
            ["dragexit", "dragExit", 1],
            ["dragleave", "dragLeave", 1],
            ["dragover", "dragOver", 1],
            ["mousemove", "mouseMove", 1],
            ["mouseout", "mouseOut", 1],
            ["mouseover", "mouseOver", 1],
            ["pointermove", "pointerMove", 1],
            ["pointerout", "pointerOut", 1],
            ["pointerover", "pointerOver", 1],
            ["scroll", "scroll", 1],
            ["toggle", "toggle", 1],
            ["touchmove", "touchMove", 1],
            ["wheel", "wheel", 1],
            ["abort", "abort", 2],
            [K, "animationEnd", 2],
            [Q, "animationIteration", 2],
            [ee, "animationStart", 2],
            ["canplay", "canPlay", 2],
            ["canplaythrough", "canPlayThrough", 2],
            ["durationchange", "durationChange", 2],
            ["emptied", "emptied", 2],
            ["encrypted", "encrypted", 2],
            ["ended", "ended", 2],
            ["error", "error", 2],
            ["gotpointercapture", "gotPointerCapture", 2],
            ["load", "load", 2],
            ["loadeddata", "loadedData", 2],
            ["loadedmetadata", "loadedMetadata", 2],
            ["loadstart", "loadStart", 2],
            ["lostpointercapture", "lostPointerCapture", 2],
            ["playing", "playing", 2],
            ["progress", "progress", 2],
            ["seeking", "seeking", 2],
            ["stalled", "stalled", 2],
            ["suspend", "suspend", 2],
            ["timeupdate", "timeUpdate", 2],
            [te, "transitionEnd", 2],
            ["waiting", "waiting", 2],
          ],
          _n = {},
          wn = {},
          Sn = 0;
        Sn < xn.length;
        Sn++
      ) {
        var Mn = xn[Sn],
          Tn = Mn[0],
          En = Mn[1],
          On = Mn[2],
          kn = "on" + (En[0].toUpperCase() + En.slice(1)),
          An = {
            phasedRegistrationNames: { bubbled: kn, captured: kn + "Capture" },
            dependencies: [Tn],
            eventPriority: On,
          };
        (_n[En] = An), (wn[Tn] = An);
      }
      var Cn = {
          eventTypes: _n,
          getEventPriority: function (e) {
            return void 0 !== (e = wn[e]) ? e.eventPriority : 2;
          },
          extractEvents: function (e, t, n, r) {
            var i = wn[e];
            if (!i) return null;
            switch (e) {
              case "keypress":
                if (0 === fn(n)) return null;
              case "keydown":
              case "keyup":
                e = mn;
                break;
              case "blur":
              case "focus":
                e = hn;
                break;
              case "click":
                if (2 === n.button) return null;
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                e = $t;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                e = vn;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                e = gn;
                break;
              case K:
              case Q:
              case ee:
                e = ln;
                break;
              case te:
                e = yn;
                break;
              case "scroll":
                e = Ht;
                break;
              case "wheel":
                e = bn;
                break;
              case "copy":
              case "cut":
              case "paste":
                e = cn;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                e = Kt;
                break;
              default:
                e = le;
            }
            return W((t = e.getPooled(i, t, n, r))), t;
          },
        },
        Pn = Cn.getEventPriority,
        Rn = [];
      function Ln(e) {
        var t = e.targetInst,
          n = t;
        do {
          if (!n) {
            e.ancestors.push(n);
            break;
          }
          var r;
          for (r = n; r.return; ) r = r.return;
          if (!(r = 3 !== r.tag ? null : r.stateNode.containerInfo)) break;
          e.ancestors.push(n), (n = N(r));
        } while (n);
        for (n = 0; n < e.ancestors.length; n++) {
          t = e.ancestors[n];
          var i = Fe(e.nativeEvent);
          r = e.topLevelType;
          for (var a = e.nativeEvent, o = null, s = 0; s < h.length; s++) {
            var u = h[s];
            u && (u = u.extractEvents(r, t, a, i)) && (o = E(o, u));
          }
          C(o);
        }
      }
      var jn = !0;
      function In(e, t) {
        Nn(t, e, !1);
      }
      function Nn(e, t, n) {
        switch (Pn(t)) {
          case 0:
            var r = Dn.bind(null, t, 1);
            break;
          case 1:
            r = zn.bind(null, t, 1);
            break;
          default:
            r = Un.bind(null, t, 1);
        }
        n ? e.addEventListener(t, r, !0) : e.addEventListener(t, r, !1);
      }
      function Dn(e, t, n) {
        De || Ie();
        var r = Un,
          i = De;
        De = !0;
        try {
          je(r, e, t, n);
        } finally {
          (De = i) || ze();
        }
      }
      function zn(e, t, n) {
        Un(e, t, n);
      }
      function Un(e, t, n) {
        if (jn) {
          if (
            (null === (t = N((t = Fe(n)))) ||
              "number" !== typeof t.tag ||
              2 === on(t) ||
              (t = null),
            Rn.length)
          ) {
            var r = Rn.pop();
            (r.topLevelType = e),
              (r.nativeEvent = n),
              (r.targetInst = t),
              (e = r);
          } else
            e = {
              topLevelType: e,
              nativeEvent: n,
              targetInst: t,
              ancestors: [],
            };
          try {
            if (((n = e), De)) Ln(n);
            else {
              De = !0;
              try {
                Ne(Ln, n, void 0);
              } finally {
                (De = !1), ze();
              }
            }
          } finally {
            (e.topLevelType = null),
              (e.nativeEvent = null),
              (e.targetInst = null),
              (e.ancestors.length = 0),
              10 > Rn.length && Rn.push(e);
          }
        }
      }
      var Bn = new ("function" === typeof WeakMap ? WeakMap : Map)();
      function Fn(e) {
        var t = Bn.get(e);
        return void 0 === t && ((t = new Set()), Bn.set(e, t)), t;
      }
      function Gn(e) {
        if (
          "undefined" ===
          typeof (e =
            e || ("undefined" !== typeof document ? document : void 0))
        )
          return null;
        try {
          return e.activeElement || e.body;
        } catch (t) {
          return e.body;
        }
      }
      function Hn(e) {
        for (; e && e.firstChild; ) e = e.firstChild;
        return e;
      }
      function Vn(e, t) {
        var n,
          r = Hn(e);
        for (e = 0; r; ) {
          if (3 === r.nodeType) {
            if (((n = e + r.textContent.length), e <= t && n >= t))
              return { node: r, offset: t - e };
            e = n;
          }
          e: {
            for (; r; ) {
              if (r.nextSibling) {
                r = r.nextSibling;
                break e;
              }
              r = r.parentNode;
            }
            r = void 0;
          }
          r = Hn(r);
        }
      }
      function Wn() {
        for (var e = window, t = Gn(); t instanceof e.HTMLIFrameElement; ) {
          try {
            var n = "string" === typeof t.contentWindow.location.href;
          } catch (r) {
            n = !1;
          }
          if (!n) break;
          t = Gn((e = t.contentWindow).document);
        }
        return t;
      }
      function qn(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return (
          t &&
          (("input" === t &&
            ("text" === e.type ||
              "search" === e.type ||
              "tel" === e.type ||
              "url" === e.type ||
              "password" === e.type)) ||
            "textarea" === t ||
            "true" === e.contentEditable)
        );
      }
      var Xn = q && "documentMode" in document && 11 >= document.documentMode,
        Yn = {
          select: {
            phasedRegistrationNames: {
              bubbled: "onSelect",
              captured: "onSelectCapture",
            },
            dependencies:
              "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(
                " "
              ),
          },
        },
        Jn = null,
        Zn = null,
        $n = null,
        Kn = !1;
      function Qn(e, t) {
        var n =
          t.window === t ? t.document : 9 === t.nodeType ? t : t.ownerDocument;
        return Kn || null == Jn || Jn !== Gn(n)
          ? null
          : ("selectionStart" in (n = Jn) && qn(n)
              ? (n = { start: n.selectionStart, end: n.selectionEnd })
              : (n = {
                  anchorNode: (n = (
                    (n.ownerDocument && n.ownerDocument.defaultView) ||
                    window
                  ).getSelection()).anchorNode,
                  anchorOffset: n.anchorOffset,
                  focusNode: n.focusNode,
                  focusOffset: n.focusOffset,
                }),
            $n && rn($n, n)
              ? null
              : (($n = n),
                ((e = le.getPooled(Yn.select, Zn, e, t)).type = "select"),
                (e.target = Jn),
                W(e),
                e));
      }
      var er = {
        eventTypes: Yn,
        extractEvents: function (e, t, n, r) {
          var i,
            a =
              r.window === r
                ? r.document
                : 9 === r.nodeType
                ? r
                : r.ownerDocument;
          if (!(i = !a)) {
            e: {
              (a = Fn(a)), (i = p.onSelect);
              for (var o = 0; o < i.length; o++)
                if (!a.has(i[o])) {
                  a = !1;
                  break e;
                }
              a = !0;
            }
            i = !a;
          }
          if (i) return null;
          switch (((a = t ? z(t) : window), e)) {
            case "focus":
              (Be(a) || "true" === a.contentEditable) &&
                ((Jn = a), (Zn = t), ($n = null));
              break;
            case "blur":
              $n = Zn = Jn = null;
              break;
            case "mousedown":
              Kn = !0;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              return (Kn = !1), Qn(n, r);
            case "selectionchange":
              if (Xn) break;
            case "keydown":
            case "keyup":
              return Qn(n, r);
          }
          return null;
        },
      };
      function tr(e, t) {
        return (
          (e = i({ children: void 0 }, t)),
          (t = (function (e) {
            var t = "";
            return (
              r.Children.forEach(e, function (e) {
                null != e && (t += e);
              }),
              t
            );
          })(t.children)) && (e.children = t),
          e
        );
      }
      function nr(e, t, n, r) {
        if (((e = e.options), t)) {
          t = {};
          for (var i = 0; i < n.length; i++) t["$" + n[i]] = !0;
          for (n = 0; n < e.length; n++)
            (i = t.hasOwnProperty("$" + e[n].value)),
              e[n].selected !== i && (e[n].selected = i),
              i && r && (e[n].defaultSelected = !0);
        } else {
          for (n = "" + _t(n), t = null, i = 0; i < e.length; i++) {
            if (e[i].value === n)
              return (
                (e[i].selected = !0), void (r && (e[i].defaultSelected = !0))
              );
            null !== t || e[i].disabled || (t = e[i]);
          }
          null !== t && (t.selected = !0);
        }
      }
      function rr(e, t) {
        if (null != t.dangerouslySetInnerHTML) throw o(Error(91));
        return i({}, t, {
          value: void 0,
          defaultValue: void 0,
          children: "" + e._wrapperState.initialValue,
        });
      }
      function ir(e, t) {
        var n = t.value;
        if (null == n) {
          if (((n = t.defaultValue), null != (t = t.children))) {
            if (null != n) throw o(Error(92));
            if (Array.isArray(t)) {
              if (!(1 >= t.length)) throw o(Error(93));
              t = t[0];
            }
            n = t;
          }
          null == n && (n = "");
        }
        e._wrapperState = { initialValue: _t(n) };
      }
      function ar(e, t) {
        var n = _t(t.value),
          r = _t(t.defaultValue);
        null != n &&
          ((n = "" + n) !== e.value && (e.value = n),
          null == t.defaultValue &&
            e.defaultValue !== n &&
            (e.defaultValue = n)),
          null != r && (e.defaultValue = "" + r);
      }
      function or(e) {
        var t = e.textContent;
        t === e._wrapperState.initialValue && (e.value = t);
      }
      P.injectEventPluginOrder(
        "ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(
          " "
        )
      ),
        (w = U),
        (S = D),
        (M = z),
        P.injectEventPluginsByName({
          SimpleEventPlugin: Cn,
          EnterLeaveEventPlugin: en,
          ChangeEventPlugin: Gt,
          SelectEventPlugin: er,
          BeforeInputEventPlugin: Ee,
        });
      var sr = {
        html: "http://www.w3.org/1999/xhtml",
        mathml: "http://www.w3.org/1998/Math/MathML",
        svg: "http://www.w3.org/2000/svg",
      };
      function ur(e) {
        switch (e) {
          case "svg":
            return "http://www.w3.org/2000/svg";
          case "math":
            return "http://www.w3.org/1998/Math/MathML";
          default:
            return "http://www.w3.org/1999/xhtml";
        }
      }
      function lr(e, t) {
        return null == e || "http://www.w3.org/1999/xhtml" === e
          ? ur(t)
          : "http://www.w3.org/2000/svg" === e && "foreignObject" === t
          ? "http://www.w3.org/1999/xhtml"
          : e;
      }
      var cr = void 0,
        hr = (function (e) {
          return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction
            ? function (t, n, r, i) {
                MSApp.execUnsafeLocalFunction(function () {
                  return e(t, n);
                });
              }
            : e;
        })(function (e, t) {
          if (e.namespaceURI !== sr.svg || "innerHTML" in e) e.innerHTML = t;
          else {
            for (
              (cr = cr || document.createElement("div")).innerHTML =
                "<svg>" + t + "</svg>",
                t = cr.firstChild;
              e.firstChild;

            )
              e.removeChild(e.firstChild);
            for (; t.firstChild; ) e.appendChild(t.firstChild);
          }
        });
      function fr(e, t) {
        if (t) {
          var n = e.firstChild;
          if (n && n === e.lastChild && 3 === n.nodeType)
            return void (n.nodeValue = t);
        }
        e.textContent = t;
      }
      var dr = {
          animationIterationCount: !0,
          borderImageOutset: !0,
          borderImageSlice: !0,
          borderImageWidth: !0,
          boxFlex: !0,
          boxFlexGroup: !0,
          boxOrdinalGroup: !0,
          columnCount: !0,
          columns: !0,
          flex: !0,
          flexGrow: !0,
          flexPositive: !0,
          flexShrink: !0,
          flexNegative: !0,
          flexOrder: !0,
          gridArea: !0,
          gridRow: !0,
          gridRowEnd: !0,
          gridRowSpan: !0,
          gridRowStart: !0,
          gridColumn: !0,
          gridColumnEnd: !0,
          gridColumnSpan: !0,
          gridColumnStart: !0,
          fontWeight: !0,
          lineClamp: !0,
          lineHeight: !0,
          opacity: !0,
          order: !0,
          orphans: !0,
          tabSize: !0,
          widows: !0,
          zIndex: !0,
          zoom: !0,
          fillOpacity: !0,
          floodOpacity: !0,
          stopOpacity: !0,
          strokeDasharray: !0,
          strokeDashoffset: !0,
          strokeMiterlimit: !0,
          strokeOpacity: !0,
          strokeWidth: !0,
        },
        pr = ["Webkit", "ms", "Moz", "O"];
      function mr(e, t, n) {
        return null == t || "boolean" === typeof t || "" === t
          ? ""
          : n ||
            "number" !== typeof t ||
            0 === t ||
            (dr.hasOwnProperty(e) && dr[e])
          ? ("" + t).trim()
          : t + "px";
      }
      function vr(e, t) {
        for (var n in ((e = e.style), t))
          if (t.hasOwnProperty(n)) {
            var r = 0 === n.indexOf("--"),
              i = mr(n, t[n], r);
            "float" === n && (n = "cssFloat"),
              r ? e.setProperty(n, i) : (e[n] = i);
          }
      }
      Object.keys(dr).forEach(function (e) {
        pr.forEach(function (t) {
          (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (dr[t] = dr[e]);
        });
      });
      var gr = i(
        { menuitem: !0 },
        {
          area: !0,
          base: !0,
          br: !0,
          col: !0,
          embed: !0,
          hr: !0,
          img: !0,
          input: !0,
          keygen: !0,
          link: !0,
          meta: !0,
          param: !0,
          source: !0,
          track: !0,
          wbr: !0,
        }
      );
      function yr(e, t) {
        if (t) {
          if (
            gr[e] &&
            (null != t.children || null != t.dangerouslySetInnerHTML)
          )
            throw o(Error(137), e, "");
          if (null != t.dangerouslySetInnerHTML) {
            if (null != t.children) throw o(Error(60));
            if (
              !(
                "object" === typeof t.dangerouslySetInnerHTML &&
                "__html" in t.dangerouslySetInnerHTML
              )
            )
              throw o(Error(61));
          }
          if (null != t.style && "object" !== typeof t.style)
            throw o(Error(62), "");
        }
      }
      function br(e, t) {
        if (-1 === e.indexOf("-")) return "string" === typeof t.is;
        switch (e) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return !1;
          default:
            return !0;
        }
      }
      function xr(e, t) {
        var n = Fn(
          (e = 9 === e.nodeType || 11 === e.nodeType ? e : e.ownerDocument)
        );
        t = p[t];
        for (var r = 0; r < t.length; r++) {
          var i = t[r];
          if (!n.has(i)) {
            switch (i) {
              case "scroll":
                Nn(e, "scroll", !0);
                break;
              case "focus":
              case "blur":
                Nn(e, "focus", !0),
                  Nn(e, "blur", !0),
                  n.add("blur"),
                  n.add("focus");
                break;
              case "cancel":
              case "close":
                Ge(i) && Nn(e, i, !0);
                break;
              case "invalid":
              case "submit":
              case "reset":
                break;
              default:
                -1 === ne.indexOf(i) && In(i, e);
            }
            n.add(i);
          }
        }
      }
      function _r() {}
      var wr = null,
        Sr = null;
      function Mr(e, t) {
        switch (e) {
          case "button":
          case "input":
          case "select":
          case "textarea":
            return !!t.autoFocus;
        }
        return !1;
      }
      function Tr(e, t) {
        return (
          "textarea" === e ||
          "option" === e ||
          "noscript" === e ||
          "string" === typeof t.children ||
          "number" === typeof t.children ||
          ("object" === typeof t.dangerouslySetInnerHTML &&
            null !== t.dangerouslySetInnerHTML &&
            null != t.dangerouslySetInnerHTML.__html)
        );
      }
      var Er = "function" === typeof setTimeout ? setTimeout : void 0,
        Or = "function" === typeof clearTimeout ? clearTimeout : void 0;
      function kr(e) {
        for (; null != e; e = e.nextSibling) {
          var t = e.nodeType;
          if (1 === t || 3 === t) break;
        }
        return e;
      }
      new Set();
      var Ar = [],
        Cr = -1;
      function Pr(e) {
        0 > Cr || ((e.current = Ar[Cr]), (Ar[Cr] = null), Cr--);
      }
      function Rr(e, t) {
        (Ar[++Cr] = e.current), (e.current = t);
      }
      var Lr = {},
        jr = { current: Lr },
        Ir = { current: !1 },
        Nr = Lr;
      function Dr(e, t) {
        var n = e.type.contextTypes;
        if (!n) return Lr;
        var r = e.stateNode;
        if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
          return r.__reactInternalMemoizedMaskedChildContext;
        var i,
          a = {};
        for (i in n) a[i] = t[i];
        return (
          r &&
            (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
              t),
            (e.__reactInternalMemoizedMaskedChildContext = a)),
          a
        );
      }
      function zr(e) {
        return null !== (e = e.childContextTypes) && void 0 !== e;
      }
      function Ur(e) {
        Pr(Ir), Pr(jr);
      }
      function Br(e) {
        Pr(Ir), Pr(jr);
      }
      function Fr(e, t, n) {
        if (jr.current !== Lr) throw o(Error(168));
        Rr(jr, t), Rr(Ir, n);
      }
      function Gr(e, t, n) {
        var r = e.stateNode;
        if (
          ((e = t.childContextTypes), "function" !== typeof r.getChildContext)
        )
          return n;
        for (var a in (r = r.getChildContext()))
          if (!(a in e)) throw o(Error(108), ct(t) || "Unknown", a);
        return i({}, n, r);
      }
      function Hr(e) {
        var t = e.stateNode;
        return (
          (t = (t && t.__reactInternalMemoizedMergedChildContext) || Lr),
          (Nr = jr.current),
          Rr(jr, t),
          Rr(Ir, Ir.current),
          !0
        );
      }
      function Vr(e, t, n) {
        var r = e.stateNode;
        if (!r) throw o(Error(169));
        n
          ? ((t = Gr(e, t, Nr)),
            (r.__reactInternalMemoizedMergedChildContext = t),
            Pr(Ir),
            Pr(jr),
            Rr(jr, t))
          : Pr(Ir),
          Rr(Ir, n);
      }
      var Wr = a.unstable_runWithPriority,
        qr = a.unstable_scheduleCallback,
        Xr = a.unstable_cancelCallback,
        Yr = a.unstable_shouldYield,
        Jr = a.unstable_requestPaint,
        Zr = a.unstable_now,
        $r = a.unstable_getCurrentPriorityLevel,
        Kr = a.unstable_ImmediatePriority,
        Qr = a.unstable_UserBlockingPriority,
        ei = a.unstable_NormalPriority,
        ti = a.unstable_LowPriority,
        ni = a.unstable_IdlePriority,
        ri = {},
        ii = void 0 !== Jr ? Jr : function () {},
        ai = null,
        oi = null,
        si = !1,
        ui = Zr(),
        li =
          1e4 > ui
            ? Zr
            : function () {
                return Zr() - ui;
              };
      function ci() {
        switch ($r()) {
          case Kr:
            return 99;
          case Qr:
            return 98;
          case ei:
            return 97;
          case ti:
            return 96;
          case ni:
            return 95;
          default:
            throw o(Error(332));
        }
      }
      function hi(e) {
        switch (e) {
          case 99:
            return Kr;
          case 98:
            return Qr;
          case 97:
            return ei;
          case 96:
            return ti;
          case 95:
            return ni;
          default:
            throw o(Error(332));
        }
      }
      function fi(e, t) {
        return (e = hi(e)), Wr(e, t);
      }
      function di(e, t, n) {
        return (e = hi(e)), qr(e, t, n);
      }
      function pi(e) {
        return null === ai ? ((ai = [e]), (oi = qr(Kr, vi))) : ai.push(e), ri;
      }
      function mi() {
        null !== oi && Xr(oi), vi();
      }
      function vi() {
        if (!si && null !== ai) {
          si = !0;
          var e = 0;
          try {
            var t = ai;
            fi(99, function () {
              for (; e < t.length; e++) {
                var n = t[e];
                do {
                  n = n(!0);
                } while (null !== n);
              }
            }),
              (ai = null);
          } catch (n) {
            throw (null !== ai && (ai = ai.slice(e + 1)), qr(Kr, mi), n);
          } finally {
            si = !1;
          }
        }
      }
      function gi(e, t) {
        return 1073741823 === t
          ? 99
          : 1 === t
          ? 95
          : 0 >= (e = 10 * (1073741821 - t) - 10 * (1073741821 - e))
          ? 99
          : 250 >= e
          ? 98
          : 5250 >= e
          ? 97
          : 95;
      }
      function yi(e, t) {
        if (e && e.defaultProps)
          for (var n in ((t = i({}, t)), (e = e.defaultProps)))
            void 0 === t[n] && (t[n] = e[n]);
        return t;
      }
      var bi = { current: null },
        xi = null,
        _i = null,
        wi = null;
      function Si() {
        wi = _i = xi = null;
      }
      function Mi(e, t) {
        var n = e.type._context;
        Rr(bi, n._currentValue), (n._currentValue = t);
      }
      function Ti(e) {
        var t = bi.current;
        Pr(bi), (e.type._context._currentValue = t);
      }
      function Ei(e, t) {
        for (; null !== e; ) {
          var n = e.alternate;
          if (e.childExpirationTime < t)
            (e.childExpirationTime = t),
              null !== n &&
                n.childExpirationTime < t &&
                (n.childExpirationTime = t);
          else {
            if (!(null !== n && n.childExpirationTime < t)) break;
            n.childExpirationTime = t;
          }
          e = e.return;
        }
      }
      function Oi(e, t) {
        (xi = e),
          (wi = _i = null),
          null !== (e = e.dependencies) &&
            null !== e.firstContext &&
            (e.expirationTime >= t && (co = !0), (e.firstContext = null));
      }
      function ki(e, t) {
        if (wi !== e && !1 !== t && 0 !== t)
          if (
            (("number" === typeof t && 1073741823 !== t) ||
              ((wi = e), (t = 1073741823)),
            (t = { context: e, observedBits: t, next: null }),
            null === _i)
          ) {
            if (null === xi) throw o(Error(308));
            (_i = t),
              (xi.dependencies = {
                expirationTime: 0,
                firstContext: t,
                responders: null,
              });
          } else _i = _i.next = t;
        return e._currentValue;
      }
      var Ai = !1;
      function Ci(e) {
        return {
          baseState: e,
          firstUpdate: null,
          lastUpdate: null,
          firstCapturedUpdate: null,
          lastCapturedUpdate: null,
          firstEffect: null,
          lastEffect: null,
          firstCapturedEffect: null,
          lastCapturedEffect: null,
        };
      }
      function Pi(e) {
        return {
          baseState: e.baseState,
          firstUpdate: e.firstUpdate,
          lastUpdate: e.lastUpdate,
          firstCapturedUpdate: null,
          lastCapturedUpdate: null,
          firstEffect: null,
          lastEffect: null,
          firstCapturedEffect: null,
          lastCapturedEffect: null,
        };
      }
      function Ri(e, t) {
        return {
          expirationTime: e,
          suspenseConfig: t,
          tag: 0,
          payload: null,
          callback: null,
          next: null,
          nextEffect: null,
        };
      }
      function Li(e, t) {
        null === e.lastUpdate
          ? (e.firstUpdate = e.lastUpdate = t)
          : ((e.lastUpdate.next = t), (e.lastUpdate = t));
      }
      function ji(e, t) {
        var n = e.alternate;
        if (null === n) {
          var r = e.updateQueue,
            i = null;
          null === r && (r = e.updateQueue = Ci(e.memoizedState));
        } else
          (r = e.updateQueue),
            (i = n.updateQueue),
            null === r
              ? null === i
                ? ((r = e.updateQueue = Ci(e.memoizedState)),
                  (i = n.updateQueue = Ci(n.memoizedState)))
                : (r = e.updateQueue = Pi(i))
              : null === i && (i = n.updateQueue = Pi(r));
        null === i || r === i
          ? Li(r, t)
          : null === r.lastUpdate || null === i.lastUpdate
          ? (Li(r, t), Li(i, t))
          : (Li(r, t), (i.lastUpdate = t));
      }
      function Ii(e, t) {
        var n = e.updateQueue;
        null ===
        (n = null === n ? (e.updateQueue = Ci(e.memoizedState)) : Ni(e, n))
          .lastCapturedUpdate
          ? (n.firstCapturedUpdate = n.lastCapturedUpdate = t)
          : ((n.lastCapturedUpdate.next = t), (n.lastCapturedUpdate = t));
      }
      function Ni(e, t) {
        var n = e.alternate;
        return (
          null !== n && t === n.updateQueue && (t = e.updateQueue = Pi(t)), t
        );
      }
      function Di(e, t, n, r, a, o) {
        switch (n.tag) {
          case 1:
            return "function" === typeof (e = n.payload) ? e.call(o, r, a) : e;
          case 3:
            e.effectTag = (-2049 & e.effectTag) | 64;
          case 0:
            if (
              null ===
                (a =
                  "function" === typeof (e = n.payload)
                    ? e.call(o, r, a)
                    : e) ||
              void 0 === a
            )
              break;
            return i({}, r, a);
          case 2:
            Ai = !0;
        }
        return r;
      }
      function zi(e, t, n, r, i) {
        Ai = !1;
        for (
          var a = (t = Ni(e, t)).baseState,
            o = null,
            s = 0,
            u = t.firstUpdate,
            l = a;
          null !== u;

        ) {
          var c = u.expirationTime;
          c < i
            ? (null === o && ((o = u), (a = l)), s < c && (s = c))
            : (Gs(c, u.suspenseConfig),
              (l = Di(e, 0, u, l, n, r)),
              null !== u.callback &&
                ((e.effectTag |= 32),
                (u.nextEffect = null),
                null === t.lastEffect
                  ? (t.firstEffect = t.lastEffect = u)
                  : ((t.lastEffect.nextEffect = u), (t.lastEffect = u)))),
            (u = u.next);
        }
        for (c = null, u = t.firstCapturedUpdate; null !== u; ) {
          var h = u.expirationTime;
          h < i
            ? (null === c && ((c = u), null === o && (a = l)), s < h && (s = h))
            : ((l = Di(e, 0, u, l, n, r)),
              null !== u.callback &&
                ((e.effectTag |= 32),
                (u.nextEffect = null),
                null === t.lastCapturedEffect
                  ? (t.firstCapturedEffect = t.lastCapturedEffect = u)
                  : ((t.lastCapturedEffect.nextEffect = u),
                    (t.lastCapturedEffect = u)))),
            (u = u.next);
        }
        null === o && (t.lastUpdate = null),
          null === c ? (t.lastCapturedUpdate = null) : (e.effectTag |= 32),
          null === o && null === c && (a = l),
          (t.baseState = a),
          (t.firstUpdate = o),
          (t.firstCapturedUpdate = c),
          (e.expirationTime = s),
          (e.memoizedState = l);
      }
      function Ui(e, t, n) {
        null !== t.firstCapturedUpdate &&
          (null !== t.lastUpdate &&
            ((t.lastUpdate.next = t.firstCapturedUpdate),
            (t.lastUpdate = t.lastCapturedUpdate)),
          (t.firstCapturedUpdate = t.lastCapturedUpdate = null)),
          Bi(t.firstEffect, n),
          (t.firstEffect = t.lastEffect = null),
          Bi(t.firstCapturedEffect, n),
          (t.firstCapturedEffect = t.lastCapturedEffect = null);
      }
      function Bi(e, t) {
        for (; null !== e; ) {
          var n = e.callback;
          if (null !== n) {
            e.callback = null;
            var r = t;
            if ("function" !== typeof n) throw o(Error(191), n);
            n.call(r);
          }
          e = e.nextEffect;
        }
      }
      var Fi = qe.ReactCurrentBatchConfig,
        Gi = new r.Component().refs;
      function Hi(e, t, n, r) {
        (n =
          null === (n = n(r, (t = e.memoizedState))) || void 0 === n
            ? t
            : i({}, t, n)),
          (e.memoizedState = n),
          null !== (r = e.updateQueue) &&
            0 === e.expirationTime &&
            (r.baseState = n);
      }
      var Vi = {
        isMounted: function (e) {
          return !!(e = e._reactInternalFiber) && 2 === on(e);
        },
        enqueueSetState: function (e, t, n) {
          e = e._reactInternalFiber;
          var r = As(),
            i = Fi.suspense;
          ((i = Ri((r = Cs(r, e, i)), i)).payload = t),
            void 0 !== n && null !== n && (i.callback = n),
            ji(e, i),
            Rs(e, r);
        },
        enqueueReplaceState: function (e, t, n) {
          e = e._reactInternalFiber;
          var r = As(),
            i = Fi.suspense;
          ((i = Ri((r = Cs(r, e, i)), i)).tag = 1),
            (i.payload = t),
            void 0 !== n && null !== n && (i.callback = n),
            ji(e, i),
            Rs(e, r);
        },
        enqueueForceUpdate: function (e, t) {
          e = e._reactInternalFiber;
          var n = As(),
            r = Fi.suspense;
          ((r = Ri((n = Cs(n, e, r)), r)).tag = 2),
            void 0 !== t && null !== t && (r.callback = t),
            ji(e, r),
            Rs(e, n);
        },
      };
      function Wi(e, t, n, r, i, a, o) {
        return "function" === typeof (e = e.stateNode).shouldComponentUpdate
          ? e.shouldComponentUpdate(r, a, o)
          : !t.prototype ||
              !t.prototype.isPureReactComponent ||
              !rn(n, r) ||
              !rn(i, a);
      }
      function qi(e, t, n) {
        var r = !1,
          i = Lr,
          a = t.contextType;
        return (
          "object" === typeof a && null !== a
            ? (a = ki(a))
            : ((i = zr(t) ? Nr : jr.current),
              (a = (r = null !== (r = t.contextTypes) && void 0 !== r)
                ? Dr(e, i)
                : Lr)),
          (t = new t(n, a)),
          (e.memoizedState =
            null !== t.state && void 0 !== t.state ? t.state : null),
          (t.updater = Vi),
          (e.stateNode = t),
          (t._reactInternalFiber = e),
          r &&
            (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
              i),
            (e.__reactInternalMemoizedMaskedChildContext = a)),
          t
        );
      }
      function Xi(e, t, n, r) {
        (e = t.state),
          "function" === typeof t.componentWillReceiveProps &&
            t.componentWillReceiveProps(n, r),
          "function" === typeof t.UNSAFE_componentWillReceiveProps &&
            t.UNSAFE_componentWillReceiveProps(n, r),
          t.state !== e && Vi.enqueueReplaceState(t, t.state, null);
      }
      function Yi(e, t, n, r) {
        var i = e.stateNode;
        (i.props = n), (i.state = e.memoizedState), (i.refs = Gi);
        var a = t.contextType;
        "object" === typeof a && null !== a
          ? (i.context = ki(a))
          : ((a = zr(t) ? Nr : jr.current), (i.context = Dr(e, a))),
          null !== (a = e.updateQueue) &&
            (zi(e, a, n, i, r), (i.state = e.memoizedState)),
          "function" === typeof (a = t.getDerivedStateFromProps) &&
            (Hi(e, t, a, n), (i.state = e.memoizedState)),
          "function" === typeof t.getDerivedStateFromProps ||
            "function" === typeof i.getSnapshotBeforeUpdate ||
            ("function" !== typeof i.UNSAFE_componentWillMount &&
              "function" !== typeof i.componentWillMount) ||
            ((t = i.state),
            "function" === typeof i.componentWillMount &&
              i.componentWillMount(),
            "function" === typeof i.UNSAFE_componentWillMount &&
              i.UNSAFE_componentWillMount(),
            t !== i.state && Vi.enqueueReplaceState(i, i.state, null),
            null !== (a = e.updateQueue) &&
              (zi(e, a, n, i, r), (i.state = e.memoizedState))),
          "function" === typeof i.componentDidMount && (e.effectTag |= 4);
      }
      var Ji = Array.isArray;
      function Zi(e, t, n) {
        if (
          null !== (e = n.ref) &&
          "function" !== typeof e &&
          "object" !== typeof e
        ) {
          if (n._owner) {
            n = n._owner;
            var r = void 0;
            if (n) {
              if (1 !== n.tag) throw o(Error(309));
              r = n.stateNode;
            }
            if (!r) throw o(Error(147), e);
            var i = "" + e;
            return null !== t &&
              null !== t.ref &&
              "function" === typeof t.ref &&
              t.ref._stringRef === i
              ? t.ref
              : (((t = function (e) {
                  var t = r.refs;
                  t === Gi && (t = r.refs = {}),
                    null === e ? delete t[i] : (t[i] = e);
                })._stringRef = i),
                t);
          }
          if ("string" !== typeof e) throw o(Error(284));
          if (!n._owner) throw o(Error(290), e);
        }
        return e;
      }
      function $i(e, t) {
        if ("textarea" !== e.type)
          throw o(
            Error(31),
            "[object Object]" === Object.prototype.toString.call(t)
              ? "object with keys {" + Object.keys(t).join(", ") + "}"
              : t,
            ""
          );
      }
      function Ki(e) {
        function t(t, n) {
          if (e) {
            var r = t.lastEffect;
            null !== r
              ? ((r.nextEffect = n), (t.lastEffect = n))
              : (t.firstEffect = t.lastEffect = n),
              (n.nextEffect = null),
              (n.effectTag = 8);
          }
        }
        function n(n, r) {
          if (!e) return null;
          for (; null !== r; ) t(n, r), (r = r.sibling);
          return null;
        }
        function r(e, t) {
          for (e = new Map(); null !== t; )
            null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
              (t = t.sibling);
          return e;
        }
        function i(e, t, n) {
          return ((e = au(e, t)).index = 0), (e.sibling = null), e;
        }
        function a(t, n, r) {
          return (
            (t.index = r),
            e
              ? null !== (r = t.alternate)
                ? (r = r.index) < n
                  ? ((t.effectTag = 2), n)
                  : r
                : ((t.effectTag = 2), n)
              : n
          );
        }
        function s(t) {
          return e && null === t.alternate && (t.effectTag = 2), t;
        }
        function u(e, t, n, r) {
          return null === t || 6 !== t.tag
            ? (((t = uu(n, e.mode, r)).return = e), t)
            : (((t = i(t, n)).return = e), t);
        }
        function l(e, t, n, r) {
          return null !== t && t.elementType === n.type
            ? (((r = i(t, n.props)).ref = Zi(e, t, n)), (r.return = e), r)
            : (((r = ou(n.type, n.key, n.props, null, e.mode, r)).ref = Zi(
                e,
                t,
                n
              )),
              (r.return = e),
              r);
        }
        function c(e, t, n, r) {
          return null === t ||
            4 !== t.tag ||
            t.stateNode.containerInfo !== n.containerInfo ||
            t.stateNode.implementation !== n.implementation
            ? (((t = lu(n, e.mode, r)).return = e), t)
            : (((t = i(t, n.children || [])).return = e), t);
        }
        function h(e, t, n, r, a) {
          return null === t || 7 !== t.tag
            ? (((t = su(n, e.mode, r, a)).return = e), t)
            : (((t = i(t, n)).return = e), t);
        }
        function f(e, t, n) {
          if ("string" === typeof t || "number" === typeof t)
            return ((t = uu("" + t, e.mode, n)).return = e), t;
          if ("object" === typeof t && null !== t) {
            switch (t.$$typeof) {
              case Je:
                return (
                  ((n = ou(t.type, t.key, t.props, null, e.mode, n)).ref = Zi(
                    e,
                    null,
                    t
                  )),
                  (n.return = e),
                  n
                );
              case Ze:
                return ((t = lu(t, e.mode, n)).return = e), t;
            }
            if (Ji(t) || lt(t))
              return ((t = su(t, e.mode, n, null)).return = e), t;
            $i(e, t);
          }
          return null;
        }
        function d(e, t, n, r) {
          var i = null !== t ? t.key : null;
          if ("string" === typeof n || "number" === typeof n)
            return null !== i ? null : u(e, t, "" + n, r);
          if ("object" === typeof n && null !== n) {
            switch (n.$$typeof) {
              case Je:
                return n.key === i
                  ? n.type === $e
                    ? h(e, t, n.props.children, r, i)
                    : l(e, t, n, r)
                  : null;
              case Ze:
                return n.key === i ? c(e, t, n, r) : null;
            }
            if (Ji(n) || lt(n)) return null !== i ? null : h(e, t, n, r, null);
            $i(e, n);
          }
          return null;
        }
        function p(e, t, n, r, i) {
          if ("string" === typeof r || "number" === typeof r)
            return u(t, (e = e.get(n) || null), "" + r, i);
          if ("object" === typeof r && null !== r) {
            switch (r.$$typeof) {
              case Je:
                return (
                  (e = e.get(null === r.key ? n : r.key) || null),
                  r.type === $e
                    ? h(t, e, r.props.children, i, r.key)
                    : l(t, e, r, i)
                );
              case Ze:
                return c(
                  t,
                  (e = e.get(null === r.key ? n : r.key) || null),
                  r,
                  i
                );
            }
            if (Ji(r) || lt(r)) return h(t, (e = e.get(n) || null), r, i, null);
            $i(t, r);
          }
          return null;
        }
        function m(i, o, s, u) {
          for (
            var l = null, c = null, h = o, m = (o = 0), v = null;
            null !== h && m < s.length;
            m++
          ) {
            h.index > m ? ((v = h), (h = null)) : (v = h.sibling);
            var g = d(i, h, s[m], u);
            if (null === g) {
              null === h && (h = v);
              break;
            }
            e && h && null === g.alternate && t(i, h),
              (o = a(g, o, m)),
              null === c ? (l = g) : (c.sibling = g),
              (c = g),
              (h = v);
          }
          if (m === s.length) return n(i, h), l;
          if (null === h) {
            for (; m < s.length; m++)
              null !== (h = f(i, s[m], u)) &&
                ((o = a(h, o, m)),
                null === c ? (l = h) : (c.sibling = h),
                (c = h));
            return l;
          }
          for (h = r(i, h); m < s.length; m++)
            null !== (v = p(h, i, m, s[m], u)) &&
              (e &&
                null !== v.alternate &&
                h.delete(null === v.key ? m : v.key),
              (o = a(v, o, m)),
              null === c ? (l = v) : (c.sibling = v),
              (c = v));
          return (
            e &&
              h.forEach(function (e) {
                return t(i, e);
              }),
            l
          );
        }
        function v(i, s, u, l) {
          var c = lt(u);
          if ("function" !== typeof c) throw o(Error(150));
          if (null == (u = c.call(u))) throw o(Error(151));
          for (
            var h = (c = null), m = s, v = (s = 0), g = null, y = u.next();
            null !== m && !y.done;
            v++, y = u.next()
          ) {
            m.index > v ? ((g = m), (m = null)) : (g = m.sibling);
            var b = d(i, m, y.value, l);
            if (null === b) {
              null === m && (m = g);
              break;
            }
            e && m && null === b.alternate && t(i, m),
              (s = a(b, s, v)),
              null === h ? (c = b) : (h.sibling = b),
              (h = b),
              (m = g);
          }
          if (y.done) return n(i, m), c;
          if (null === m) {
            for (; !y.done; v++, y = u.next())
              null !== (y = f(i, y.value, l)) &&
                ((s = a(y, s, v)),
                null === h ? (c = y) : (h.sibling = y),
                (h = y));
            return c;
          }
          for (m = r(i, m); !y.done; v++, y = u.next())
            null !== (y = p(m, i, v, y.value, l)) &&
              (e &&
                null !== y.alternate &&
                m.delete(null === y.key ? v : y.key),
              (s = a(y, s, v)),
              null === h ? (c = y) : (h.sibling = y),
              (h = y));
          return (
            e &&
              m.forEach(function (e) {
                return t(i, e);
              }),
            c
          );
        }
        return function (e, r, a, u) {
          var l =
            "object" === typeof a &&
            null !== a &&
            a.type === $e &&
            null === a.key;
          l && (a = a.props.children);
          var c = "object" === typeof a && null !== a;
          if (c)
            switch (a.$$typeof) {
              case Je:
                e: {
                  for (c = a.key, l = r; null !== l; ) {
                    if (l.key === c) {
                      if (
                        7 === l.tag ? a.type === $e : l.elementType === a.type
                      ) {
                        n(e, l.sibling),
                          ((r = i(
                            l,
                            a.type === $e ? a.props.children : a.props
                          )).ref = Zi(e, l, a)),
                          (r.return = e),
                          (e = r);
                        break e;
                      }
                      n(e, l);
                      break;
                    }
                    t(e, l), (l = l.sibling);
                  }
                  a.type === $e
                    ? (((r = su(a.props.children, e.mode, u, a.key)).return =
                        e),
                      (e = r))
                    : (((u = ou(a.type, a.key, a.props, null, e.mode, u)).ref =
                        Zi(e, r, a)),
                      (u.return = e),
                      (e = u));
                }
                return s(e);
              case Ze:
                e: {
                  for (l = a.key; null !== r; ) {
                    if (r.key === l) {
                      if (
                        4 === r.tag &&
                        r.stateNode.containerInfo === a.containerInfo &&
                        r.stateNode.implementation === a.implementation
                      ) {
                        n(e, r.sibling),
                          ((r = i(r, a.children || [])).return = e),
                          (e = r);
                        break e;
                      }
                      n(e, r);
                      break;
                    }
                    t(e, r), (r = r.sibling);
                  }
                  ((r = lu(a, e.mode, u)).return = e), (e = r);
                }
                return s(e);
            }
          if ("string" === typeof a || "number" === typeof a)
            return (
              (a = "" + a),
              null !== r && 6 === r.tag
                ? (n(e, r.sibling), ((r = i(r, a)).return = e), (e = r))
                : (n(e, r), ((r = uu(a, e.mode, u)).return = e), (e = r)),
              s(e)
            );
          if (Ji(a)) return m(e, r, a, u);
          if (lt(a)) return v(e, r, a, u);
          if ((c && $i(e, a), "undefined" === typeof a && !l))
            switch (e.tag) {
              case 1:
              case 0:
                throw (
                  ((e = e.type),
                  o(Error(152), e.displayName || e.name || "Component"))
                );
            }
          return n(e, r);
        };
      }
      var Qi = Ki(!0),
        ea = Ki(!1),
        ta = {},
        na = { current: ta },
        ra = { current: ta },
        ia = { current: ta };
      function aa(e) {
        if (e === ta) throw o(Error(174));
        return e;
      }
      function oa(e, t) {
        Rr(ia, t), Rr(ra, e), Rr(na, ta);
        var n = t.nodeType;
        switch (n) {
          case 9:
          case 11:
            t = (t = t.documentElement) ? t.namespaceURI : lr(null, "");
            break;
          default:
            t = lr(
              (t = (n = 8 === n ? t.parentNode : t).namespaceURI || null),
              (n = n.tagName)
            );
        }
        Pr(na), Rr(na, t);
      }
      function sa(e) {
        Pr(na), Pr(ra), Pr(ia);
      }
      function ua(e) {
        aa(ia.current);
        var t = aa(na.current),
          n = lr(t, e.type);
        t !== n && (Rr(ra, e), Rr(na, n));
      }
      function la(e) {
        ra.current === e && (Pr(na), Pr(ra));
      }
      var ca = 1,
        ha = 1,
        fa = 2,
        da = { current: 0 };
      function pa(e) {
        for (var t = e; null !== t; ) {
          if (13 === t.tag) {
            if (null !== t.memoizedState) return t;
          } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
            if (0 !== (64 & t.effectTag)) return t;
          } else if (null !== t.child) {
            (t.child.return = t), (t = t.child);
            continue;
          }
          if (t === e) break;
          for (; null === t.sibling; ) {
            if (null === t.return || t.return === e) return null;
            t = t.return;
          }
          (t.sibling.return = t.return), (t = t.sibling);
        }
        return null;
      }
      var ma = 0,
        va = 2,
        ga = 4,
        ya = 8,
        ba = 16,
        xa = 32,
        _a = 64,
        wa = 128,
        Sa = qe.ReactCurrentDispatcher,
        Ma = 0,
        Ta = null,
        Ea = null,
        Oa = null,
        ka = null,
        Aa = null,
        Ca = null,
        Pa = 0,
        Ra = null,
        La = 0,
        ja = !1,
        Ia = null,
        Na = 0;
      function Da() {
        throw o(Error(321));
      }
      function za(e, t) {
        if (null === t) return !1;
        for (var n = 0; n < t.length && n < e.length; n++)
          if (!tn(e[n], t[n])) return !1;
        return !0;
      }
      function Ua(e, t, n, r, i, a) {
        if (
          ((Ma = a),
          (Ta = t),
          (Oa = null !== e ? e.memoizedState : null),
          (Sa.current = null === Oa ? Ka : Qa),
          (t = n(r, i)),
          ja)
        ) {
          do {
            (ja = !1),
              (Na += 1),
              (Oa = null !== e ? e.memoizedState : null),
              (Ca = ka),
              (Ra = Aa = Ea = null),
              (Sa.current = Qa),
              (t = n(r, i));
          } while (ja);
          (Ia = null), (Na = 0);
        }
        if (
          ((Sa.current = $a),
          ((e = Ta).memoizedState = ka),
          (e.expirationTime = Pa),
          (e.updateQueue = Ra),
          (e.effectTag |= La),
          (e = null !== Ea && null !== Ea.next),
          (Ma = 0),
          (Ca = Aa = ka = Oa = Ea = Ta = null),
          (Pa = 0),
          (Ra = null),
          (La = 0),
          e)
        )
          throw o(Error(300));
        return t;
      }
      function Ba() {
        (Sa.current = $a),
          (Ma = 0),
          (Ca = Aa = ka = Oa = Ea = Ta = null),
          (Pa = 0),
          (Ra = null),
          (La = 0),
          (ja = !1),
          (Ia = null),
          (Na = 0);
      }
      function Fa() {
        var e = {
          memoizedState: null,
          baseState: null,
          queue: null,
          baseUpdate: null,
          next: null,
        };
        return null === Aa ? (ka = Aa = e) : (Aa = Aa.next = e), Aa;
      }
      function Ga() {
        if (null !== Ca)
          (Ca = (Aa = Ca).next), (Oa = null !== (Ea = Oa) ? Ea.next : null);
        else {
          if (null === Oa) throw o(Error(310));
          var e = {
            memoizedState: (Ea = Oa).memoizedState,
            baseState: Ea.baseState,
            queue: Ea.queue,
            baseUpdate: Ea.baseUpdate,
            next: null,
          };
          (Aa = null === Aa ? (ka = e) : (Aa.next = e)), (Oa = Ea.next);
        }
        return Aa;
      }
      function Ha(e, t) {
        return "function" === typeof t ? t(e) : t;
      }
      function Va(e) {
        var t = Ga(),
          n = t.queue;
        if (null === n) throw o(Error(311));
        if (((n.lastRenderedReducer = e), 0 < Na)) {
          var r = n.dispatch;
          if (null !== Ia) {
            var i = Ia.get(n);
            if (void 0 !== i) {
              Ia.delete(n);
              var a = t.memoizedState;
              do {
                (a = e(a, i.action)), (i = i.next);
              } while (null !== i);
              return (
                tn(a, t.memoizedState) || (co = !0),
                (t.memoizedState = a),
                t.baseUpdate === n.last && (t.baseState = a),
                (n.lastRenderedState = a),
                [a, r]
              );
            }
          }
          return [t.memoizedState, r];
        }
        r = n.last;
        var s = t.baseUpdate;
        if (
          ((a = t.baseState),
          null !== s
            ? (null !== r && (r.next = null), (r = s.next))
            : (r = null !== r ? r.next : null),
          null !== r)
        ) {
          var u = (i = null),
            l = r,
            c = !1;
          do {
            var h = l.expirationTime;
            h < Ma
              ? (c || ((c = !0), (u = s), (i = a)), h > Pa && (Pa = h))
              : (Gs(h, l.suspenseConfig),
                (a = l.eagerReducer === e ? l.eagerState : e(a, l.action))),
              (s = l),
              (l = l.next);
          } while (null !== l && l !== r);
          c || ((u = s), (i = a)),
            tn(a, t.memoizedState) || (co = !0),
            (t.memoizedState = a),
            (t.baseUpdate = u),
            (t.baseState = i),
            (n.lastRenderedState = a);
        }
        return [t.memoizedState, n.dispatch];
      }
      function Wa(e, t, n, r) {
        return (
          (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
          null === Ra
            ? ((Ra = { lastEffect: null }).lastEffect = e.next = e)
            : null === (t = Ra.lastEffect)
            ? (Ra.lastEffect = e.next = e)
            : ((n = t.next), (t.next = e), (e.next = n), (Ra.lastEffect = e)),
          e
        );
      }
      function qa(e, t, n, r) {
        var i = Fa();
        (La |= e),
          (i.memoizedState = Wa(t, n, void 0, void 0 === r ? null : r));
      }
      function Xa(e, t, n, r) {
        var i = Ga();
        r = void 0 === r ? null : r;
        var a = void 0;
        if (null !== Ea) {
          var o = Ea.memoizedState;
          if (((a = o.destroy), null !== r && za(r, o.deps)))
            return void Wa(ma, n, a, r);
        }
        (La |= e), (i.memoizedState = Wa(t, n, a, r));
      }
      function Ya(e, t) {
        return "function" === typeof t
          ? ((e = e()),
            t(e),
            function () {
              t(null);
            })
          : null !== t && void 0 !== t
          ? ((e = e()),
            (t.current = e),
            function () {
              t.current = null;
            })
          : void 0;
      }
      function Ja() {}
      function Za(e, t, n) {
        if (!(25 > Na)) throw o(Error(301));
        var r = e.alternate;
        if (e === Ta || (null !== r && r === Ta))
          if (
            ((ja = !0),
            (e = {
              expirationTime: Ma,
              suspenseConfig: null,
              action: n,
              eagerReducer: null,
              eagerState: null,
              next: null,
            }),
            null === Ia && (Ia = new Map()),
            void 0 === (n = Ia.get(t)))
          )
            Ia.set(t, e);
          else {
            for (t = n; null !== t.next; ) t = t.next;
            t.next = e;
          }
        else {
          var i = As(),
            a = Fi.suspense;
          a = {
            expirationTime: (i = Cs(i, e, a)),
            suspenseConfig: a,
            action: n,
            eagerReducer: null,
            eagerState: null,
            next: null,
          };
          var s = t.last;
          if (null === s) a.next = a;
          else {
            var u = s.next;
            null !== u && (a.next = u), (s.next = a);
          }
          if (
            ((t.last = a),
            0 === e.expirationTime &&
              (null === r || 0 === r.expirationTime) &&
              null !== (r = t.lastRenderedReducer))
          )
            try {
              var l = t.lastRenderedState,
                c = r(l, n);
              if (((a.eagerReducer = r), (a.eagerState = c), tn(c, l))) return;
            } catch (h) {}
          Rs(e, i);
        }
      }
      var $a = {
          readContext: ki,
          useCallback: Da,
          useContext: Da,
          useEffect: Da,
          useImperativeHandle: Da,
          useLayoutEffect: Da,
          useMemo: Da,
          useReducer: Da,
          useRef: Da,
          useState: Da,
          useDebugValue: Da,
          useResponder: Da,
        },
        Ka = {
          readContext: ki,
          useCallback: function (e, t) {
            return (Fa().memoizedState = [e, void 0 === t ? null : t]), e;
          },
          useContext: ki,
          useEffect: function (e, t) {
            return qa(516, wa | _a, e, t);
          },
          useImperativeHandle: function (e, t, n) {
            return (
              (n = null !== n && void 0 !== n ? n.concat([e]) : null),
              qa(4, ga | xa, Ya.bind(null, t, e), n)
            );
          },
          useLayoutEffect: function (e, t) {
            return qa(4, ga | xa, e, t);
          },
          useMemo: function (e, t) {
            var n = Fa();
            return (
              (t = void 0 === t ? null : t),
              (e = e()),
              (n.memoizedState = [e, t]),
              e
            );
          },
          useReducer: function (e, t, n) {
            var r = Fa();
            return (
              (t = void 0 !== n ? n(t) : t),
              (r.memoizedState = r.baseState = t),
              (e = (e = r.queue =
                {
                  last: null,
                  dispatch: null,
                  lastRenderedReducer: e,
                  lastRenderedState: t,
                }).dispatch =
                Za.bind(null, Ta, e)),
              [r.memoizedState, e]
            );
          },
          useRef: function (e) {
            return (e = { current: e }), (Fa().memoizedState = e);
          },
          useState: function (e) {
            var t = Fa();
            return (
              "function" === typeof e && (e = e()),
              (t.memoizedState = t.baseState = e),
              (e = (e = t.queue =
                {
                  last: null,
                  dispatch: null,
                  lastRenderedReducer: Ha,
                  lastRenderedState: e,
                }).dispatch =
                Za.bind(null, Ta, e)),
              [t.memoizedState, e]
            );
          },
          useDebugValue: Ja,
          useResponder: an,
        },
        Qa = {
          readContext: ki,
          useCallback: function (e, t) {
            var n = Ga();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && za(t, r[1])
              ? r[0]
              : ((n.memoizedState = [e, t]), e);
          },
          useContext: ki,
          useEffect: function (e, t) {
            return Xa(516, wa | _a, e, t);
          },
          useImperativeHandle: function (e, t, n) {
            return (
              (n = null !== n && void 0 !== n ? n.concat([e]) : null),
              Xa(4, ga | xa, Ya.bind(null, t, e), n)
            );
          },
          useLayoutEffect: function (e, t) {
            return Xa(4, ga | xa, e, t);
          },
          useMemo: function (e, t) {
            var n = Ga();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && za(t, r[1])
              ? r[0]
              : ((e = e()), (n.memoizedState = [e, t]), e);
          },
          useReducer: Va,
          useRef: function () {
            return Ga().memoizedState;
          },
          useState: function (e) {
            return Va(Ha);
          },
          useDebugValue: Ja,
          useResponder: an,
        },
        eo = null,
        to = null,
        no = !1;
      function ro(e, t) {
        var n = ru(5, null, null, 0);
        (n.elementType = "DELETED"),
          (n.type = "DELETED"),
          (n.stateNode = t),
          (n.return = e),
          (n.effectTag = 8),
          null !== e.lastEffect
            ? ((e.lastEffect.nextEffect = n), (e.lastEffect = n))
            : (e.firstEffect = e.lastEffect = n);
      }
      function io(e, t) {
        switch (e.tag) {
          case 5:
            var n = e.type;
            return (
              null !==
                (t =
                  1 !== t.nodeType ||
                  n.toLowerCase() !== t.nodeName.toLowerCase()
                    ? null
                    : t) && ((e.stateNode = t), !0)
            );
          case 6:
            return (
              null !==
                (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) &&
              ((e.stateNode = t), !0)
            );
          case 13:
          default:
            return !1;
        }
      }
      function ao(e) {
        if (no) {
          var t = to;
          if (t) {
            var n = t;
            if (!io(e, t)) {
              if (!(t = kr(n.nextSibling)) || !io(e, t))
                return (e.effectTag |= 2), (no = !1), void (eo = e);
              ro(eo, n);
            }
            (eo = e), (to = kr(t.firstChild));
          } else (e.effectTag |= 2), (no = !1), (eo = e);
        }
      }
      function oo(e) {
        for (
          e = e.return;
          null !== e && 5 !== e.tag && 3 !== e.tag && 18 !== e.tag;

        )
          e = e.return;
        eo = e;
      }
      function so(e) {
        if (e !== eo) return !1;
        if (!no) return oo(e), (no = !0), !1;
        var t = e.type;
        if (
          5 !== e.tag ||
          ("head" !== t && "body" !== t && !Tr(t, e.memoizedProps))
        )
          for (t = to; t; ) ro(e, t), (t = kr(t.nextSibling));
        return oo(e), (to = eo ? kr(e.stateNode.nextSibling) : null), !0;
      }
      function uo() {
        (to = eo = null), (no = !1);
      }
      var lo = qe.ReactCurrentOwner,
        co = !1;
      function ho(e, t, n, r) {
        t.child = null === e ? ea(t, null, n, r) : Qi(t, e.child, n, r);
      }
      function fo(e, t, n, r, i) {
        n = n.render;
        var a = t.ref;
        return (
          Oi(t, i),
          (r = Ua(e, t, n, r, a, i)),
          null === e || co
            ? ((t.effectTag |= 1), ho(e, t, r, i), t.child)
            : ((t.updateQueue = e.updateQueue),
              (t.effectTag &= -517),
              e.expirationTime <= i && (e.expirationTime = 0),
              To(e, t, i))
        );
      }
      function po(e, t, n, r, i, a) {
        if (null === e) {
          var o = n.type;
          return "function" !== typeof o ||
            iu(o) ||
            void 0 !== o.defaultProps ||
            null !== n.compare ||
            void 0 !== n.defaultProps
            ? (((e = ou(n.type, null, r, null, t.mode, a)).ref = t.ref),
              (e.return = t),
              (t.child = e))
            : ((t.tag = 15), (t.type = o), mo(e, t, o, r, i, a));
        }
        return (
          (o = e.child),
          i < a &&
          ((i = o.memoizedProps),
          (n = null !== (n = n.compare) ? n : rn)(i, r) && e.ref === t.ref)
            ? To(e, t, a)
            : ((t.effectTag |= 1),
              ((e = au(o, r)).ref = t.ref),
              (e.return = t),
              (t.child = e))
        );
      }
      function mo(e, t, n, r, i, a) {
        return null !== e &&
          rn(e.memoizedProps, r) &&
          e.ref === t.ref &&
          ((co = !1), i < a)
          ? To(e, t, a)
          : go(e, t, n, r, a);
      }
      function vo(e, t) {
        var n = t.ref;
        ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
          (t.effectTag |= 128);
      }
      function go(e, t, n, r, i) {
        var a = zr(n) ? Nr : jr.current;
        return (
          (a = Dr(t, a)),
          Oi(t, i),
          (n = Ua(e, t, n, r, a, i)),
          null === e || co
            ? ((t.effectTag |= 1), ho(e, t, n, i), t.child)
            : ((t.updateQueue = e.updateQueue),
              (t.effectTag &= -517),
              e.expirationTime <= i && (e.expirationTime = 0),
              To(e, t, i))
        );
      }
      function yo(e, t, n, r, i) {
        if (zr(n)) {
          var a = !0;
          Hr(t);
        } else a = !1;
        if ((Oi(t, i), null === t.stateNode))
          null !== e &&
            ((e.alternate = null), (t.alternate = null), (t.effectTag |= 2)),
            qi(t, n, r),
            Yi(t, n, r, i),
            (r = !0);
        else if (null === e) {
          var o = t.stateNode,
            s = t.memoizedProps;
          o.props = s;
          var u = o.context,
            l = n.contextType;
          "object" === typeof l && null !== l
            ? (l = ki(l))
            : (l = Dr(t, (l = zr(n) ? Nr : jr.current)));
          var c = n.getDerivedStateFromProps,
            h =
              "function" === typeof c ||
              "function" === typeof o.getSnapshotBeforeUpdate;
          h ||
            ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
              "function" !== typeof o.componentWillReceiveProps) ||
            ((s !== r || u !== l) && Xi(t, o, r, l)),
            (Ai = !1);
          var f = t.memoizedState;
          u = o.state = f;
          var d = t.updateQueue;
          null !== d && (zi(t, d, r, o, i), (u = t.memoizedState)),
            s !== r || f !== u || Ir.current || Ai
              ? ("function" === typeof c &&
                  (Hi(t, n, c, r), (u = t.memoizedState)),
                (s = Ai || Wi(t, n, s, r, f, u, l))
                  ? (h ||
                      ("function" !== typeof o.UNSAFE_componentWillMount &&
                        "function" !== typeof o.componentWillMount) ||
                      ("function" === typeof o.componentWillMount &&
                        o.componentWillMount(),
                      "function" === typeof o.UNSAFE_componentWillMount &&
                        o.UNSAFE_componentWillMount()),
                    "function" === typeof o.componentDidMount &&
                      (t.effectTag |= 4))
                  : ("function" === typeof o.componentDidMount &&
                      (t.effectTag |= 4),
                    (t.memoizedProps = r),
                    (t.memoizedState = u)),
                (o.props = r),
                (o.state = u),
                (o.context = l),
                (r = s))
              : ("function" === typeof o.componentDidMount &&
                  (t.effectTag |= 4),
                (r = !1));
        } else
          (o = t.stateNode),
            (s = t.memoizedProps),
            (o.props = t.type === t.elementType ? s : yi(t.type, s)),
            (u = o.context),
            "object" === typeof (l = n.contextType) && null !== l
              ? (l = ki(l))
              : (l = Dr(t, (l = zr(n) ? Nr : jr.current))),
            (h =
              "function" === typeof (c = n.getDerivedStateFromProps) ||
              "function" === typeof o.getSnapshotBeforeUpdate) ||
              ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof o.componentWillReceiveProps) ||
              ((s !== r || u !== l) && Xi(t, o, r, l)),
            (Ai = !1),
            (u = t.memoizedState),
            (f = o.state = u),
            null !== (d = t.updateQueue) &&
              (zi(t, d, r, o, i), (f = t.memoizedState)),
            s !== r || u !== f || Ir.current || Ai
              ? ("function" === typeof c &&
                  (Hi(t, n, c, r), (f = t.memoizedState)),
                (c = Ai || Wi(t, n, s, r, u, f, l))
                  ? (h ||
                      ("function" !== typeof o.UNSAFE_componentWillUpdate &&
                        "function" !== typeof o.componentWillUpdate) ||
                      ("function" === typeof o.componentWillUpdate &&
                        o.componentWillUpdate(r, f, l),
                      "function" === typeof o.UNSAFE_componentWillUpdate &&
                        o.UNSAFE_componentWillUpdate(r, f, l)),
                    "function" === typeof o.componentDidUpdate &&
                      (t.effectTag |= 4),
                    "function" === typeof o.getSnapshotBeforeUpdate &&
                      (t.effectTag |= 256))
                  : ("function" !== typeof o.componentDidUpdate ||
                      (s === e.memoizedProps && u === e.memoizedState) ||
                      (t.effectTag |= 4),
                    "function" !== typeof o.getSnapshotBeforeUpdate ||
                      (s === e.memoizedProps && u === e.memoizedState) ||
                      (t.effectTag |= 256),
                    (t.memoizedProps = r),
                    (t.memoizedState = f)),
                (o.props = r),
                (o.state = f),
                (o.context = l),
                (r = c))
              : ("function" !== typeof o.componentDidUpdate ||
                  (s === e.memoizedProps && u === e.memoizedState) ||
                  (t.effectTag |= 4),
                "function" !== typeof o.getSnapshotBeforeUpdate ||
                  (s === e.memoizedProps && u === e.memoizedState) ||
                  (t.effectTag |= 256),
                (r = !1));
        return bo(e, t, n, r, a, i);
      }
      function bo(e, t, n, r, i, a) {
        vo(e, t);
        var o = 0 !== (64 & t.effectTag);
        if (!r && !o) return i && Vr(t, n, !1), To(e, t, a);
        (r = t.stateNode), (lo.current = t);
        var s =
          o && "function" !== typeof n.getDerivedStateFromError
            ? null
            : r.render();
        return (
          (t.effectTag |= 1),
          null !== e && o
            ? ((t.child = Qi(t, e.child, null, a)),
              (t.child = Qi(t, null, s, a)))
            : ho(e, t, s, a),
          (t.memoizedState = r.state),
          i && Vr(t, n, !0),
          t.child
        );
      }
      function xo(e) {
        var t = e.stateNode;
        t.pendingContext
          ? Fr(0, t.pendingContext, t.pendingContext !== t.context)
          : t.context && Fr(0, t.context, !1),
          oa(e, t.containerInfo);
      }
      var _o = {};
      function wo(e, t, n) {
        var r,
          i = t.mode,
          a = t.pendingProps,
          o = da.current,
          s = null,
          u = !1;
        if (
          ((r = 0 !== (64 & t.effectTag)) ||
            (r = 0 !== (o & fa) && (null === e || null !== e.memoizedState)),
          r
            ? ((s = _o), (u = !0), (t.effectTag &= -65))
            : (null !== e && null === e.memoizedState) ||
              void 0 === a.fallback ||
              !0 === a.unstable_avoidThisFallback ||
              (o |= ha),
          Rr(da, (o &= ca)),
          null === e)
        )
          if (u) {
            if (
              ((a = a.fallback),
              ((e = su(null, i, 0, null)).return = t),
              0 === (2 & t.mode))
            )
              for (
                u = null !== t.memoizedState ? t.child.child : t.child,
                  e.child = u;
                null !== u;

              )
                (u.return = e), (u = u.sibling);
            ((n = su(a, i, n, null)).return = t), (e.sibling = n), (i = e);
          } else i = n = ea(t, null, a.children, n);
        else {
          if (null !== e.memoizedState)
            if (((i = (o = e.child).sibling), u)) {
              if (
                ((a = a.fallback),
                ((n = au(o, o.pendingProps)).return = t),
                0 === (2 & t.mode) &&
                  (u = null !== t.memoizedState ? t.child.child : t.child) !==
                    o.child)
              )
                for (n.child = u; null !== u; ) (u.return = n), (u = u.sibling);
              ((a = au(i, a, i.expirationTime)).return = t),
                (n.sibling = a),
                (i = n),
                (n.childExpirationTime = 0),
                (n = a);
            } else i = n = Qi(t, o.child, a.children, n);
          else if (((o = e.child), u)) {
            if (
              ((u = a.fallback),
              ((a = su(null, i, 0, null)).return = t),
              (a.child = o),
              null !== o && (o.return = a),
              0 === (2 & t.mode))
            )
              for (
                o = null !== t.memoizedState ? t.child.child : t.child,
                  a.child = o;
                null !== o;

              )
                (o.return = a), (o = o.sibling);
            ((n = su(u, i, n, null)).return = t),
              (a.sibling = n),
              (n.effectTag |= 2),
              (i = a),
              (a.childExpirationTime = 0);
          } else n = i = Qi(t, o, a.children, n);
          t.stateNode = e.stateNode;
        }
        return (t.memoizedState = s), (t.child = i), n;
      }
      function So(e, t, n, r, i) {
        var a = e.memoizedState;
        null === a
          ? (e.memoizedState = {
              isBackwards: t,
              rendering: null,
              last: r,
              tail: n,
              tailExpiration: 0,
              tailMode: i,
            })
          : ((a.isBackwards = t),
            (a.rendering = null),
            (a.last = r),
            (a.tail = n),
            (a.tailExpiration = 0),
            (a.tailMode = i));
      }
      function Mo(e, t, n) {
        var r = t.pendingProps,
          i = r.revealOrder,
          a = r.tail;
        if ((ho(e, t, r.children, n), 0 !== ((r = da.current) & fa)))
          (r = (r & ca) | fa), (t.effectTag |= 64);
        else {
          if (null !== e && 0 !== (64 & e.effectTag))
            e: for (e = t.child; null !== e; ) {
              if (13 === e.tag) {
                if (null !== e.memoizedState) {
                  e.expirationTime < n && (e.expirationTime = n);
                  var o = e.alternate;
                  null !== o && o.expirationTime < n && (o.expirationTime = n),
                    Ei(e.return, n);
                }
              } else if (null !== e.child) {
                (e.child.return = e), (e = e.child);
                continue;
              }
              if (e === t) break e;
              for (; null === e.sibling; ) {
                if (null === e.return || e.return === t) break e;
                e = e.return;
              }
              (e.sibling.return = e.return), (e = e.sibling);
            }
          r &= ca;
        }
        if ((Rr(da, r), 0 === (2 & t.mode))) t.memoizedState = null;
        else
          switch (i) {
            case "forwards":
              for (n = t.child, i = null; null !== n; )
                null !== (r = n.alternate) && null === pa(r) && (i = n),
                  (n = n.sibling);
              null === (n = i)
                ? ((i = t.child), (t.child = null))
                : ((i = n.sibling), (n.sibling = null)),
                So(t, !1, i, n, a);
              break;
            case "backwards":
              for (n = null, i = t.child, t.child = null; null !== i; ) {
                if (null !== (r = i.alternate) && null === pa(r)) {
                  t.child = i;
                  break;
                }
                (r = i.sibling), (i.sibling = n), (n = i), (i = r);
              }
              So(t, !0, n, null, a);
              break;
            case "together":
              So(t, !1, null, null, void 0);
              break;
            default:
              t.memoizedState = null;
          }
        return t.child;
      }
      function To(e, t, n) {
        if (
          (null !== e && (t.dependencies = e.dependencies),
          t.childExpirationTime < n)
        )
          return null;
        if (null !== e && t.child !== e.child) throw o(Error(153));
        if (null !== t.child) {
          for (
            n = au((e = t.child), e.pendingProps, e.expirationTime),
              t.child = n,
              n.return = t;
            null !== e.sibling;

          )
            (e = e.sibling),
              ((n = n.sibling =
                au(e, e.pendingProps, e.expirationTime)).return = t);
          n.sibling = null;
        }
        return t.child;
      }
      function Eo(e) {
        e.effectTag |= 4;
      }
      var Oo = void 0,
        ko = void 0,
        Ao = void 0,
        Co = void 0;
      function Po(e, t) {
        switch (e.tailMode) {
          case "hidden":
            t = e.tail;
            for (var n = null; null !== t; )
              null !== t.alternate && (n = t), (t = t.sibling);
            null === n ? (e.tail = null) : (n.sibling = null);
            break;
          case "collapsed":
            n = e.tail;
            for (var r = null; null !== n; )
              null !== n.alternate && (r = n), (n = n.sibling);
            null === r
              ? t || null === e.tail
                ? (e.tail = null)
                : (e.tail.sibling = null)
              : (r.sibling = null);
        }
      }
      function Ro(e) {
        switch (e.tag) {
          case 1:
            zr(e.type) && Ur();
            var t = e.effectTag;
            return 2048 & t ? ((e.effectTag = (-2049 & t) | 64), e) : null;
          case 3:
            if ((sa(), Br(), 0 !== (64 & (t = e.effectTag))))
              throw o(Error(285));
            return (e.effectTag = (-2049 & t) | 64), e;
          case 5:
            return la(e), null;
          case 13:
            return (
              Pr(da),
              2048 & (t = e.effectTag)
                ? ((e.effectTag = (-2049 & t) | 64), e)
                : null
            );
          case 18:
            return null;
          case 19:
            return Pr(da), null;
          case 4:
            return sa(), null;
          case 10:
            return Ti(e), null;
          default:
            return null;
        }
      }
      function Lo(e, t) {
        return { value: e, source: t, stack: ht(t) };
      }
      (Oo = function (e, t) {
        for (var n = t.child; null !== n; ) {
          if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
          else if (20 === n.tag) e.appendChild(n.stateNode.instance);
          else if (4 !== n.tag && null !== n.child) {
            (n.child.return = n), (n = n.child);
            continue;
          }
          if (n === t) break;
          for (; null === n.sibling; ) {
            if (null === n.return || n.return === t) return;
            n = n.return;
          }
          (n.sibling.return = n.return), (n = n.sibling);
        }
      }),
        (ko = function () {}),
        (Ao = function (e, t, n, r, a) {
          var o = e.memoizedProps;
          if (o !== r) {
            var s = t.stateNode;
            switch ((aa(na.current), (e = null), n)) {
              case "input":
                (o = wt(s, o)), (r = wt(s, r)), (e = []);
                break;
              case "option":
                (o = tr(s, o)), (r = tr(s, r)), (e = []);
                break;
              case "select":
                (o = i({}, o, { value: void 0 })),
                  (r = i({}, r, { value: void 0 })),
                  (e = []);
                break;
              case "textarea":
                (o = rr(s, o)), (r = rr(s, r)), (e = []);
                break;
              default:
                "function" !== typeof o.onClick &&
                  "function" === typeof r.onClick &&
                  (s.onclick = _r);
            }
            yr(n, r), (s = n = void 0);
            var u = null;
            for (n in o)
              if (!r.hasOwnProperty(n) && o.hasOwnProperty(n) && null != o[n])
                if ("style" === n) {
                  var l = o[n];
                  for (s in l)
                    l.hasOwnProperty(s) && (u || (u = {}), (u[s] = ""));
                } else
                  "dangerouslySetInnerHTML" !== n &&
                    "children" !== n &&
                    "suppressContentEditableWarning" !== n &&
                    "suppressHydrationWarning" !== n &&
                    "autoFocus" !== n &&
                    (d.hasOwnProperty(n)
                      ? e || (e = [])
                      : (e = e || []).push(n, null));
            for (n in r) {
              var c = r[n];
              if (
                ((l = null != o ? o[n] : void 0),
                r.hasOwnProperty(n) && c !== l && (null != c || null != l))
              )
                if ("style" === n)
                  if (l) {
                    for (s in l)
                      !l.hasOwnProperty(s) ||
                        (c && c.hasOwnProperty(s)) ||
                        (u || (u = {}), (u[s] = ""));
                    for (s in c)
                      c.hasOwnProperty(s) &&
                        l[s] !== c[s] &&
                        (u || (u = {}), (u[s] = c[s]));
                  } else u || (e || (e = []), e.push(n, u)), (u = c);
                else
                  "dangerouslySetInnerHTML" === n
                    ? ((c = c ? c.__html : void 0),
                      (l = l ? l.__html : void 0),
                      null != c && l !== c && (e = e || []).push(n, "" + c))
                    : "children" === n
                    ? l === c ||
                      ("string" !== typeof c && "number" !== typeof c) ||
                      (e = e || []).push(n, "" + c)
                    : "suppressContentEditableWarning" !== n &&
                      "suppressHydrationWarning" !== n &&
                      (d.hasOwnProperty(n)
                        ? (null != c && xr(a, n), e || l === c || (e = []))
                        : (e = e || []).push(n, c));
            }
            u && (e = e || []).push("style", u),
              (a = e),
              (t.updateQueue = a) && Eo(t);
          }
        }),
        (Co = function (e, t, n, r) {
          n !== r && Eo(t);
        });
      var jo = "function" === typeof WeakSet ? WeakSet : Set;
      function Io(e, t) {
        var n = t.source,
          r = t.stack;
        null === r && null !== n && (r = ht(n)),
          null !== n && ct(n.type),
          (t = t.value),
          null !== e && 1 === e.tag && ct(e.type);
        try {
          console.error(t);
        } catch (i) {
          setTimeout(function () {
            throw i;
          });
        }
      }
      function No(e) {
        var t = e.ref;
        if (null !== t)
          if ("function" === typeof t)
            try {
              t(null);
            } catch (n) {
              Zs(e, n);
            }
          else t.current = null;
      }
      function Do(e, t, n) {
        if (null !== (n = null !== (n = n.updateQueue) ? n.lastEffect : null)) {
          var r = (n = n.next);
          do {
            if ((r.tag & e) !== ma) {
              var i = r.destroy;
              (r.destroy = void 0), void 0 !== i && i();
            }
            (r.tag & t) !== ma && ((i = r.create), (r.destroy = i())),
              (r = r.next);
          } while (r !== n);
        }
      }
      function zo(e, t) {
        switch (("function" === typeof tu && tu(e), e.tag)) {
          case 0:
          case 11:
          case 14:
          case 15:
            var n = e.updateQueue;
            if (null !== n && null !== (n = n.lastEffect)) {
              var r = n.next;
              fi(97 < t ? 97 : t, function () {
                var t = r;
                do {
                  var n = t.destroy;
                  if (void 0 !== n) {
                    var i = e;
                    try {
                      n();
                    } catch (a) {
                      Zs(i, a);
                    }
                  }
                  t = t.next;
                } while (t !== r);
              });
            }
            break;
          case 1:
            No(e),
              "function" === typeof (t = e.stateNode).componentWillUnmount &&
                (function (e, t) {
                  try {
                    (t.props = e.memoizedProps),
                      (t.state = e.memoizedState),
                      t.componentWillUnmount();
                  } catch (n) {
                    Zs(e, n);
                  }
                })(e, t);
            break;
          case 5:
            No(e);
            break;
          case 4:
            Go(e, t);
        }
      }
      function Uo(e, t) {
        for (var n = e; ; )
          if ((zo(n, t), null !== n.child && 4 !== n.tag))
            (n.child.return = n), (n = n.child);
          else {
            if (n === e) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === e) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
      }
      function Bo(e) {
        return 5 === e.tag || 3 === e.tag || 4 === e.tag;
      }
      function Fo(e) {
        e: {
          for (var t = e.return; null !== t; ) {
            if (Bo(t)) {
              var n = t;
              break e;
            }
            t = t.return;
          }
          throw o(Error(160));
        }
        switch (((t = n.stateNode), n.tag)) {
          case 5:
            var r = !1;
            break;
          case 3:
          case 4:
            (t = t.containerInfo), (r = !0);
            break;
          default:
            throw o(Error(161));
        }
        16 & n.effectTag && (fr(t, ""), (n.effectTag &= -17));
        e: t: for (n = e; ; ) {
          for (; null === n.sibling; ) {
            if (null === n.return || Bo(n.return)) {
              n = null;
              break e;
            }
            n = n.return;
          }
          for (
            n.sibling.return = n.return, n = n.sibling;
            5 !== n.tag && 6 !== n.tag && 18 !== n.tag;

          ) {
            if (2 & n.effectTag) continue t;
            if (null === n.child || 4 === n.tag) continue t;
            (n.child.return = n), (n = n.child);
          }
          if (!(2 & n.effectTag)) {
            n = n.stateNode;
            break e;
          }
        }
        for (var i = e; ; ) {
          var a = 5 === i.tag || 6 === i.tag;
          if (a || 20 === i.tag) {
            var s = a ? i.stateNode : i.stateNode.instance;
            if (n)
              if (r) {
                var u = s;
                (s = n),
                  8 === (a = t).nodeType
                    ? a.parentNode.insertBefore(u, s)
                    : a.insertBefore(u, s);
              } else t.insertBefore(s, n);
            else
              r
                ? (8 === (u = t).nodeType
                    ? (a = u.parentNode).insertBefore(s, u)
                    : (a = u).appendChild(s),
                  (null !== (u = u._reactRootContainer) && void 0 !== u) ||
                    null !== a.onclick ||
                    (a.onclick = _r))
                : t.appendChild(s);
          } else if (4 !== i.tag && null !== i.child) {
            (i.child.return = i), (i = i.child);
            continue;
          }
          if (i === e) break;
          for (; null === i.sibling; ) {
            if (null === i.return || i.return === e) return;
            i = i.return;
          }
          (i.sibling.return = i.return), (i = i.sibling);
        }
      }
      function Go(e, t) {
        for (var n = e, r = !1, i = void 0, a = void 0; ; ) {
          if (!r) {
            r = n.return;
            e: for (;;) {
              if (null === r) throw o(Error(160));
              switch (((i = r.stateNode), r.tag)) {
                case 5:
                  a = !1;
                  break e;
                case 3:
                case 4:
                  (i = i.containerInfo), (a = !0);
                  break e;
              }
              r = r.return;
            }
            r = !0;
          }
          if (5 === n.tag || 6 === n.tag)
            if ((Uo(n, t), a)) {
              var s = i,
                u = n.stateNode;
              8 === s.nodeType ? s.parentNode.removeChild(u) : s.removeChild(u);
            } else i.removeChild(n.stateNode);
          else if (20 === n.tag)
            (u = n.stateNode.instance),
              Uo(n, t),
              a
                ? 8 === (s = i).nodeType
                  ? s.parentNode.removeChild(u)
                  : s.removeChild(u)
                : i.removeChild(u);
          else if (4 === n.tag) {
            if (null !== n.child) {
              (i = n.stateNode.containerInfo),
                (a = !0),
                (n.child.return = n),
                (n = n.child);
              continue;
            }
          } else if ((zo(n, t), null !== n.child)) {
            (n.child.return = n), (n = n.child);
            continue;
          }
          if (n === e) break;
          for (; null === n.sibling; ) {
            if (null === n.return || n.return === e) return;
            4 === (n = n.return).tag && (r = !1);
          }
          (n.sibling.return = n.return), (n = n.sibling);
        }
      }
      function Ho(e, t) {
        switch (t.tag) {
          case 0:
          case 11:
          case 14:
          case 15:
            Do(ga, ya, t);
            break;
          case 1:
            break;
          case 5:
            var n = t.stateNode;
            if (null != n) {
              var r = t.memoizedProps,
                i = null !== e ? e.memoizedProps : r;
              e = t.type;
              var a = t.updateQueue;
              if (((t.updateQueue = null), null !== a)) {
                for (
                  n[I] = r,
                    "input" === e &&
                      "radio" === r.type &&
                      null != r.name &&
                      Mt(n, r),
                    br(e, i),
                    t = br(e, r),
                    i = 0;
                  i < a.length;
                  i += 2
                ) {
                  var s = a[i],
                    u = a[i + 1];
                  "style" === s
                    ? vr(n, u)
                    : "dangerouslySetInnerHTML" === s
                    ? hr(n, u)
                    : "children" === s
                    ? fr(n, u)
                    : xt(n, s, u, t);
                }
                switch (e) {
                  case "input":
                    Tt(n, r);
                    break;
                  case "textarea":
                    ar(n, r);
                    break;
                  case "select":
                    (t = n._wrapperState.wasMultiple),
                      (n._wrapperState.wasMultiple = !!r.multiple),
                      null != (e = r.value)
                        ? nr(n, !!r.multiple, e, !1)
                        : t !== !!r.multiple &&
                          (null != r.defaultValue
                            ? nr(n, !!r.multiple, r.defaultValue, !0)
                            : nr(n, !!r.multiple, r.multiple ? [] : "", !1));
                }
              }
            }
            break;
          case 6:
            if (null === t.stateNode) throw o(Error(162));
            t.stateNode.nodeValue = t.memoizedProps;
            break;
          case 3:
          case 12:
            break;
          case 13:
            if (
              ((n = t),
              null === t.memoizedState
                ? (r = !1)
                : ((r = !0), (n = t.child), (ms = li())),
              null !== n)
            )
              e: for (e = n; ; ) {
                if (5 === e.tag)
                  (a = e.stateNode),
                    r
                      ? "function" === typeof (a = a.style).setProperty
                        ? a.setProperty("display", "none", "important")
                        : (a.display = "none")
                      : ((a = e.stateNode),
                        (i =
                          void 0 !== (i = e.memoizedProps.style) &&
                          null !== i &&
                          i.hasOwnProperty("display")
                            ? i.display
                            : null),
                        (a.style.display = mr("display", i)));
                else if (6 === e.tag)
                  e.stateNode.nodeValue = r ? "" : e.memoizedProps;
                else {
                  if (13 === e.tag && null !== e.memoizedState) {
                    ((a = e.child.sibling).return = e), (e = a);
                    continue;
                  }
                  if (null !== e.child) {
                    (e.child.return = e), (e = e.child);
                    continue;
                  }
                }
                if (e === n) break e;
                for (; null === e.sibling; ) {
                  if (null === e.return || e.return === n) break e;
                  e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
              }
            Vo(t);
            break;
          case 19:
            Vo(t);
            break;
          case 17:
          case 20:
            break;
          default:
            throw o(Error(163));
        }
      }
      function Vo(e) {
        var t = e.updateQueue;
        if (null !== t) {
          e.updateQueue = null;
          var n = e.stateNode;
          null === n && (n = e.stateNode = new jo()),
            t.forEach(function (t) {
              var r = Ks.bind(null, e, t);
              n.has(t) || (n.add(t), t.then(r, r));
            });
        }
      }
      var Wo = "function" === typeof WeakMap ? WeakMap : Map;
      function qo(e, t, n) {
        ((n = Ri(n, null)).tag = 3), (n.payload = { element: null });
        var r = t.value;
        return (
          (n.callback = function () {
            ys || ((ys = !0), (bs = r)), Io(e, t);
          }),
          n
        );
      }
      function Xo(e, t, n) {
        (n = Ri(n, null)).tag = 3;
        var r = e.type.getDerivedStateFromError;
        if ("function" === typeof r) {
          var i = t.value;
          n.payload = function () {
            return Io(e, t), r(i);
          };
        }
        var a = e.stateNode;
        return (
          null !== a &&
            "function" === typeof a.componentDidCatch &&
            (n.callback = function () {
              "function" !== typeof r &&
                (null === xs ? (xs = new Set([this])) : xs.add(this), Io(e, t));
              var n = t.stack;
              this.componentDidCatch(t.value, {
                componentStack: null !== n ? n : "",
              });
            }),
          n
        );
      }
      var Yo = Math.ceil,
        Jo = qe.ReactCurrentDispatcher,
        Zo = qe.ReactCurrentOwner,
        $o = 0,
        Ko = 8,
        Qo = 16,
        es = 32,
        ts = 0,
        ns = 1,
        rs = 2,
        is = 3,
        as = 4,
        os = $o,
        ss = null,
        us = null,
        ls = 0,
        cs = ts,
        hs = 1073741823,
        fs = 1073741823,
        ds = null,
        ps = !1,
        ms = 0,
        vs = 500,
        gs = null,
        ys = !1,
        bs = null,
        xs = null,
        _s = !1,
        ws = null,
        Ss = 90,
        Ms = 0,
        Ts = null,
        Es = 0,
        Os = null,
        ks = 0;
      function As() {
        return (os & (Qo | es)) !== $o
          ? 1073741821 - ((li() / 10) | 0)
          : 0 !== ks
          ? ks
          : (ks = 1073741821 - ((li() / 10) | 0));
      }
      function Cs(e, t, n) {
        if (0 === (2 & (t = t.mode))) return 1073741823;
        var r = ci();
        if (0 === (4 & t)) return 99 === r ? 1073741823 : 1073741822;
        if ((os & Qo) !== $o) return ls;
        if (null !== n)
          e =
            1073741821 -
            25 *
              (1 +
                (((1073741821 - e + (0 | n.timeoutMs || 5e3) / 10) / 25) | 0));
        else
          switch (r) {
            case 99:
              e = 1073741823;
              break;
            case 98:
              e = 1073741821 - 10 * (1 + (((1073741821 - e + 15) / 10) | 0));
              break;
            case 97:
            case 96:
              e = 1073741821 - 25 * (1 + (((1073741821 - e + 500) / 25) | 0));
              break;
            case 95:
              e = 1;
              break;
            default:
              throw o(Error(326));
          }
        return null !== ss && e === ls && --e, e;
      }
      var Ps = 0;
      function Rs(e, t) {
        if (50 < Es) throw ((Es = 0), (Os = null), o(Error(185)));
        if (null !== (e = Ls(e, t))) {
          e.pingTime = 0;
          var n = ci();
          if (1073741823 === t)
            if ((os & Ko) !== $o && (os & (Qo | es)) === $o)
              for (var r = Fs(e, 1073741823, !0); null !== r; ) r = r(!0);
            else js(e, 99, 1073741823), os === $o && mi();
          else js(e, n, t);
          (4 & os) === $o ||
            (98 !== n && 99 !== n) ||
            (null === Ts
              ? (Ts = new Map([[e, t]]))
              : (void 0 === (n = Ts.get(e)) || n > t) && Ts.set(e, t));
        }
      }
      function Ls(e, t) {
        e.expirationTime < t && (e.expirationTime = t);
        var n = e.alternate;
        null !== n && n.expirationTime < t && (n.expirationTime = t);
        var r = e.return,
          i = null;
        if (null === r && 3 === e.tag) i = e.stateNode;
        else
          for (; null !== r; ) {
            if (
              ((n = r.alternate),
              r.childExpirationTime < t && (r.childExpirationTime = t),
              null !== n &&
                n.childExpirationTime < t &&
                (n.childExpirationTime = t),
              null === r.return && 3 === r.tag)
            ) {
              i = r.stateNode;
              break;
            }
            r = r.return;
          }
        return (
          null !== i &&
            (t > i.firstPendingTime && (i.firstPendingTime = t),
            0 === (e = i.lastPendingTime) || t < e) &&
            (i.lastPendingTime = t),
          i
        );
      }
      function js(e, t, n) {
        if (e.callbackExpirationTime < n) {
          var r = e.callbackNode;
          null !== r && r !== ri && Xr(r),
            (e.callbackExpirationTime = n),
            1073741823 === n
              ? (e.callbackNode = pi(Is.bind(null, e, Fs.bind(null, e, n))))
              : ((r = null),
                1 !== n && (r = { timeout: 10 * (1073741821 - n) - li() }),
                (e.callbackNode = di(
                  t,
                  Is.bind(null, e, Fs.bind(null, e, n)),
                  r
                )));
        }
      }
      function Is(e, t, n) {
        var r = e.callbackNode,
          i = null;
        try {
          return null !== (i = t(n)) ? Is.bind(null, e, i) : null;
        } finally {
          null === i &&
            r === e.callbackNode &&
            ((e.callbackNode = null), (e.callbackExpirationTime = 0));
        }
      }
      function Ns() {
        (os & (1 | Qo | es)) === $o &&
          ((function () {
            if (null !== Ts) {
              var e = Ts;
              (Ts = null),
                e.forEach(function (e, t) {
                  pi(Fs.bind(null, t, e));
                }),
                mi();
            }
          })(),
          Xs());
      }
      function Ds(e, t) {
        var n = os;
        os |= 1;
        try {
          return e(t);
        } finally {
          (os = n) === $o && mi();
        }
      }
      function zs(e, t, n, r) {
        var i = os;
        os |= 4;
        try {
          return fi(98, e.bind(null, t, n, r));
        } finally {
          (os = i) === $o && mi();
        }
      }
      function Us(e, t) {
        var n = os;
        (os &= -2), (os |= Ko);
        try {
          return e(t);
        } finally {
          (os = n) === $o && mi();
        }
      }
      function Bs(e, t) {
        (e.finishedWork = null), (e.finishedExpirationTime = 0);
        var n = e.timeoutHandle;
        if ((-1 !== n && ((e.timeoutHandle = -1), Or(n)), null !== us))
          for (n = us.return; null !== n; ) {
            var r = n;
            switch (r.tag) {
              case 1:
                var i = r.type.childContextTypes;
                null !== i && void 0 !== i && Ur();
                break;
              case 3:
                sa(), Br();
                break;
              case 5:
                la(r);
                break;
              case 4:
                sa();
                break;
              case 13:
              case 19:
                Pr(da);
                break;
              case 10:
                Ti(r);
            }
            n = n.return;
          }
        (ss = e),
          (us = au(e.current, null)),
          (ls = t),
          (cs = ts),
          (fs = hs = 1073741823),
          (ds = null),
          (ps = !1);
      }
      function Fs(e, t, n) {
        if ((os & (Qo | es)) !== $o) throw o(Error(327));
        if (e.firstPendingTime < t) return null;
        if (n && e.finishedExpirationTime === t) return Ws.bind(null, e);
        if ((Xs(), e !== ss || t !== ls)) Bs(e, t);
        else if (cs === is)
          if (ps) Bs(e, t);
          else {
            var r = e.lastPendingTime;
            if (r < t) return Fs.bind(null, e, r);
          }
        if (null !== us) {
          (r = os), (os |= Qo);
          var i = Jo.current;
          if ((null === i && (i = $a), (Jo.current = $a), n)) {
            if (1073741823 !== t) {
              var a = As();
              if (a < t)
                return (os = r), Si(), (Jo.current = i), Fs.bind(null, e, a);
            }
          } else ks = 0;
          for (;;)
            try {
              if (n) for (; null !== us; ) us = Hs(us);
              else for (; null !== us && !Yr(); ) us = Hs(us);
              break;
            } catch (m) {
              if ((Si(), Ba(), null === (a = us) || null === a.return))
                throw (Bs(e, t), (os = r), m);
              e: {
                var s = e,
                  u = a.return,
                  l = a,
                  c = m,
                  h = ls;
                if (
                  ((l.effectTag |= 1024),
                  (l.firstEffect = l.lastEffect = null),
                  null !== c &&
                    "object" === typeof c &&
                    "function" === typeof c.then)
                ) {
                  var f = c,
                    d = 0 !== (da.current & ha);
                  c = u;
                  do {
                    var p;
                    if (
                      ((p = 13 === c.tag) &&
                        (null !== c.memoizedState
                          ? (p = !1)
                          : (p =
                              void 0 !== (p = c.memoizedProps).fallback &&
                              (!0 !== p.unstable_avoidThisFallback || !d))),
                      p)
                    ) {
                      if (
                        (null === (u = c.updateQueue)
                          ? ((u = new Set()).add(f), (c.updateQueue = u))
                          : u.add(f),
                        0 === (2 & c.mode))
                      ) {
                        (c.effectTag |= 64),
                          (l.effectTag &= -1957),
                          1 === l.tag &&
                            (null === l.alternate
                              ? (l.tag = 17)
                              : (((h = Ri(1073741823, null)).tag = 2),
                                ji(l, h))),
                          (l.expirationTime = 1073741823);
                        break e;
                      }
                      (l = s),
                        (s = h),
                        null === (d = l.pingCache)
                          ? ((d = l.pingCache = new Wo()),
                            (u = new Set()),
                            d.set(f, u))
                          : void 0 === (u = d.get(f)) &&
                            ((u = new Set()), d.set(f, u)),
                        u.has(s) ||
                          (u.add(s),
                          (l = $s.bind(null, l, f, s)),
                          f.then(l, l)),
                        (c.effectTag |= 2048),
                        (c.expirationTime = h);
                      break e;
                    }
                    c = c.return;
                  } while (null !== c);
                  c = Error(
                    (ct(l.type) || "A React component") +
                      " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." +
                      ht(l)
                  );
                }
                cs !== as && (cs = ns), (c = Lo(c, l)), (l = u);
                do {
                  switch (l.tag) {
                    case 3:
                      (l.effectTag |= 2048),
                        (l.expirationTime = h),
                        Ii(l, (h = qo(l, c, h)));
                      break e;
                    case 1:
                      if (
                        ((f = c),
                        (s = l.type),
                        (u = l.stateNode),
                        0 === (64 & l.effectTag) &&
                          ("function" === typeof s.getDerivedStateFromError ||
                            (null !== u &&
                              "function" === typeof u.componentDidCatch &&
                              (null === xs || !xs.has(u)))))
                      ) {
                        (l.effectTag |= 2048),
                          (l.expirationTime = h),
                          Ii(l, (h = Xo(l, f, h)));
                        break e;
                      }
                  }
                  l = l.return;
                } while (null !== l);
              }
              us = Vs(a);
            }
          if (((os = r), Si(), (Jo.current = i), null !== us))
            return Fs.bind(null, e, t);
        }
        if (
          ((e.finishedWork = e.current.alternate),
          (e.finishedExpirationTime = t),
          (function (e, t) {
            var n = e.firstBatch;
            return (
              !!(null !== n && n._defer && n._expirationTime >= t) &&
              (di(97, function () {
                return n._onComplete(), null;
              }),
              !0)
            );
          })(e, t))
        )
          return null;
        switch (((ss = null), cs)) {
          case ts:
            throw o(Error(328));
          case ns:
            return (r = e.lastPendingTime) < t
              ? Fs.bind(null, e, r)
              : n
              ? Ws.bind(null, e)
              : (Bs(e, t), pi(Fs.bind(null, e, t)), null);
          case rs:
            return 1073741823 === hs && !n && 10 < (n = ms + vs - li())
              ? ps
                ? (Bs(e, t), Fs.bind(null, e, t))
                : (r = e.lastPendingTime) < t
                ? Fs.bind(null, e, r)
                : ((e.timeoutHandle = Er(Ws.bind(null, e), n)), null)
              : Ws.bind(null, e);
          case is:
            if (!n) {
              if (ps) return Bs(e, t), Fs.bind(null, e, t);
              if ((n = e.lastPendingTime) < t) return Fs.bind(null, e, n);
              if (
                (1073741823 !== fs
                  ? (n = 10 * (1073741821 - fs) - li())
                  : 1073741823 === hs
                  ? (n = 0)
                  : ((n = 10 * (1073741821 - hs) - 5e3),
                    0 > (n = (r = li()) - n) && (n = 0),
                    (t = 10 * (1073741821 - t) - r) <
                      (n =
                        (120 > n
                          ? 120
                          : 480 > n
                          ? 480
                          : 1080 > n
                          ? 1080
                          : 1920 > n
                          ? 1920
                          : 3e3 > n
                          ? 3e3
                          : 4320 > n
                          ? 4320
                          : 1960 * Yo(n / 1960)) - n) && (n = t)),
                10 < n)
              )
                return (e.timeoutHandle = Er(Ws.bind(null, e), n)), null;
            }
            return Ws.bind(null, e);
          case as:
            return !n &&
              1073741823 !== hs &&
              null !== ds &&
              ((r = hs),
              0 >= (t = 0 | (i = ds).busyMinDurationMs)
                ? (t = 0)
                : ((n = 0 | i.busyDelayMs),
                  (t =
                    (r =
                      li() -
                      (10 * (1073741821 - r) - (0 | i.timeoutMs || 5e3))) <= n
                      ? 0
                      : n + t - r)),
              10 < t)
              ? ((e.timeoutHandle = Er(Ws.bind(null, e), t)), null)
              : Ws.bind(null, e);
          default:
            throw o(Error(329));
        }
      }
      function Gs(e, t) {
        e < hs && 1 < e && (hs = e),
          null !== t && e < fs && 1 < e && ((fs = e), (ds = t));
      }
      function Hs(e) {
        var t = Qs(e.alternate, e, ls);
        return (
          (e.memoizedProps = e.pendingProps),
          null === t && (t = Vs(e)),
          (Zo.current = null),
          t
        );
      }
      function Vs(e) {
        us = e;
        do {
          var t = us.alternate;
          if (((e = us.return), 0 === (1024 & us.effectTag))) {
            e: {
              var n = t,
                r = ls,
                a = (t = us).pendingProps;
              switch (t.tag) {
                case 2:
                case 16:
                  break;
                case 15:
                case 0:
                  break;
                case 1:
                  zr(t.type) && Ur();
                  break;
                case 3:
                  sa(),
                    Br(),
                    (r = t.stateNode).pendingContext &&
                      ((r.context = r.pendingContext),
                      (r.pendingContext = null)),
                    (null !== n && null !== n.child) ||
                      (so(t), (t.effectTag &= -3)),
                    ko(t);
                  break;
                case 5:
                  la(t), (r = aa(ia.current));
                  var s = t.type;
                  if (null !== n && null != t.stateNode)
                    Ao(n, t, s, a, r), n.ref !== t.ref && (t.effectTag |= 128);
                  else if (a) {
                    var u = aa(na.current);
                    if (so(t)) {
                      (a = void 0), (s = (n = t).stateNode);
                      var l = n.type,
                        c = n.memoizedProps;
                      switch (((s[j] = n), (s[I] = c), l)) {
                        case "iframe":
                        case "object":
                        case "embed":
                          In("load", s);
                          break;
                        case "video":
                        case "audio":
                          for (var h = 0; h < ne.length; h++) In(ne[h], s);
                          break;
                        case "source":
                          In("error", s);
                          break;
                        case "img":
                        case "image":
                        case "link":
                          In("error", s), In("load", s);
                          break;
                        case "form":
                          In("reset", s), In("submit", s);
                          break;
                        case "details":
                          In("toggle", s);
                          break;
                        case "input":
                          St(s, c), In("invalid", s), xr(r, "onChange");
                          break;
                        case "select":
                          (s._wrapperState = { wasMultiple: !!c.multiple }),
                            In("invalid", s),
                            xr(r, "onChange");
                          break;
                        case "textarea":
                          ir(s, c), In("invalid", s), xr(r, "onChange");
                      }
                      for (a in (yr(l, c), (h = null), c))
                        c.hasOwnProperty(a) &&
                          ((u = c[a]),
                          "children" === a
                            ? "string" === typeof u
                              ? s.textContent !== u && (h = ["children", u])
                              : "number" === typeof u &&
                                s.textContent !== "" + u &&
                                (h = ["children", "" + u])
                            : d.hasOwnProperty(a) && null != u && xr(r, a));
                      switch (l) {
                        case "input":
                          Ve(s), Et(s, c, !0);
                          break;
                        case "textarea":
                          Ve(s), or(s);
                          break;
                        case "select":
                        case "option":
                          break;
                        default:
                          "function" === typeof c.onClick && (s.onclick = _r);
                      }
                      (r = h), (n.updateQueue = r), null !== r && Eo(t);
                    } else {
                      (c = s),
                        (n = a),
                        (l = t),
                        (h = 9 === r.nodeType ? r : r.ownerDocument),
                        u === sr.html && (u = ur(c)),
                        u === sr.html
                          ? "script" === c
                            ? (((c = h.createElement("div")).innerHTML =
                                "<script></script>"),
                              (h = c.removeChild(c.firstChild)))
                            : "string" === typeof n.is
                            ? (h = h.createElement(c, { is: n.is }))
                            : ((h = h.createElement(c)),
                              "select" === c &&
                                ((c = h),
                                n.multiple
                                  ? (c.multiple = !0)
                                  : n.size && (c.size = n.size)))
                          : (h = h.createElementNS(u, c)),
                        ((c = h)[j] = l),
                        (c[I] = n),
                        Oo((n = c), t, !1, !1),
                        (l = n);
                      var f = r,
                        p = br(s, a);
                      switch (s) {
                        case "iframe":
                        case "object":
                        case "embed":
                          In("load", l), (r = a);
                          break;
                        case "video":
                        case "audio":
                          for (r = 0; r < ne.length; r++) In(ne[r], l);
                          r = a;
                          break;
                        case "source":
                          In("error", l), (r = a);
                          break;
                        case "img":
                        case "image":
                        case "link":
                          In("error", l), In("load", l), (r = a);
                          break;
                        case "form":
                          In("reset", l), In("submit", l), (r = a);
                          break;
                        case "details":
                          In("toggle", l), (r = a);
                          break;
                        case "input":
                          St(l, a),
                            (r = wt(l, a)),
                            In("invalid", l),
                            xr(f, "onChange");
                          break;
                        case "option":
                          r = tr(l, a);
                          break;
                        case "select":
                          (l._wrapperState = { wasMultiple: !!a.multiple }),
                            (r = i({}, a, { value: void 0 })),
                            In("invalid", l),
                            xr(f, "onChange");
                          break;
                        case "textarea":
                          ir(l, a),
                            (r = rr(l, a)),
                            In("invalid", l),
                            xr(f, "onChange");
                          break;
                        default:
                          r = a;
                      }
                      yr(s, r), (c = void 0), (h = s), (u = l);
                      var m = r;
                      for (c in m)
                        if (m.hasOwnProperty(c)) {
                          var v = m[c];
                          "style" === c
                            ? vr(u, v)
                            : "dangerouslySetInnerHTML" === c
                            ? null != (v = v ? v.__html : void 0) && hr(u, v)
                            : "children" === c
                            ? "string" === typeof v
                              ? ("textarea" !== h || "" !== v) && fr(u, v)
                              : "number" === typeof v && fr(u, "" + v)
                            : "suppressContentEditableWarning" !== c &&
                              "suppressHydrationWarning" !== c &&
                              "autoFocus" !== c &&
                              (d.hasOwnProperty(c)
                                ? null != v && xr(f, c)
                                : null != v && xt(u, c, v, p));
                        }
                      switch (s) {
                        case "input":
                          Ve(l), Et(l, a, !1);
                          break;
                        case "textarea":
                          Ve(l), or(l);
                          break;
                        case "option":
                          null != a.value &&
                            l.setAttribute("value", "" + _t(a.value));
                          break;
                        case "select":
                          (r = l),
                            (l = a),
                            (r.multiple = !!l.multiple),
                            null != (c = l.value)
                              ? nr(r, !!l.multiple, c, !1)
                              : null != l.defaultValue &&
                                nr(r, !!l.multiple, l.defaultValue, !0);
                          break;
                        default:
                          "function" === typeof r.onClick && (l.onclick = _r);
                      }
                      Mr(s, a) && Eo(t), (t.stateNode = n);
                    }
                    null !== t.ref && (t.effectTag |= 128);
                  } else if (null === t.stateNode) throw o(Error(166));
                  break;
                case 6:
                  if (n && null != t.stateNode) Co(n, t, n.memoizedProps, a);
                  else {
                    if ("string" !== typeof a && null === t.stateNode)
                      throw o(Error(166));
                    (n = aa(ia.current)),
                      aa(na.current),
                      so(t)
                        ? ((r = t.stateNode),
                          (n = t.memoizedProps),
                          (r[j] = t),
                          r.nodeValue !== n && Eo(t))
                        : ((r = t),
                          ((n = (
                            9 === n.nodeType ? n : n.ownerDocument
                          ).createTextNode(a))[j] = t),
                          (r.stateNode = n));
                  }
                  break;
                case 11:
                  break;
                case 13:
                  if (
                    (Pr(da), (a = t.memoizedState), 0 !== (64 & t.effectTag))
                  ) {
                    t.expirationTime = r;
                    break e;
                  }
                  (r = null !== a),
                    (a = !1),
                    null === n
                      ? so(t)
                      : ((a = null !== (s = n.memoizedState)),
                        r ||
                          null === s ||
                          (null !== (s = n.child.sibling) &&
                            (null !== (l = t.firstEffect)
                              ? ((t.firstEffect = s), (s.nextEffect = l))
                              : ((t.firstEffect = t.lastEffect = s),
                                (s.nextEffect = null)),
                            (s.effectTag = 8)))),
                    r &&
                      !a &&
                      0 !== (2 & t.mode) &&
                      ((null === n &&
                        !0 !== t.memoizedProps.unstable_avoidThisFallback) ||
                      0 !== (da.current & ha)
                        ? cs === ts && (cs = rs)
                        : (cs !== ts && cs !== rs) || (cs = is)),
                    (r || a) && (t.effectTag |= 4);
                  break;
                case 7:
                case 8:
                case 12:
                  break;
                case 4:
                  sa(), ko(t);
                  break;
                case 10:
                  Ti(t);
                  break;
                case 9:
                case 14:
                  break;
                case 17:
                  zr(t.type) && Ur();
                  break;
                case 18:
                  break;
                case 19:
                  if ((Pr(da), null === (a = t.memoizedState))) break;
                  if (
                    ((s = 0 !== (64 & t.effectTag)), null === (l = a.rendering))
                  ) {
                    if (s) Po(a, !1);
                    else if (
                      cs !== ts ||
                      (null !== n && 0 !== (64 & n.effectTag))
                    )
                      for (n = t.child; null !== n; ) {
                        if (null !== (l = pa(n))) {
                          for (
                            t.effectTag |= 64,
                              Po(a, !1),
                              null !== (n = l.updateQueue) &&
                                ((t.updateQueue = n), (t.effectTag |= 4)),
                              t.firstEffect = t.lastEffect = null,
                              n = t.child;
                            null !== n;

                          )
                            (s = r),
                              ((a = n).effectTag &= 2),
                              (a.nextEffect = null),
                              (a.firstEffect = null),
                              (a.lastEffect = null),
                              null === (l = a.alternate)
                                ? ((a.childExpirationTime = 0),
                                  (a.expirationTime = s),
                                  (a.child = null),
                                  (a.memoizedProps = null),
                                  (a.memoizedState = null),
                                  (a.updateQueue = null),
                                  (a.dependencies = null))
                                : ((a.childExpirationTime =
                                    l.childExpirationTime),
                                  (a.expirationTime = l.expirationTime),
                                  (a.child = l.child),
                                  (a.memoizedProps = l.memoizedProps),
                                  (a.memoizedState = l.memoizedState),
                                  (a.updateQueue = l.updateQueue),
                                  (s = l.dependencies),
                                  (a.dependencies =
                                    null === s
                                      ? null
                                      : {
                                          expirationTime: s.expirationTime,
                                          firstContext: s.firstContext,
                                          responders: s.responders,
                                        })),
                              (n = n.sibling);
                          Rr(da, (da.current & ca) | fa), (t = t.child);
                          break e;
                        }
                        n = n.sibling;
                      }
                  } else {
                    if (!s)
                      if (null !== (n = pa(l))) {
                        if (
                          ((t.effectTag |= 64),
                          (s = !0),
                          Po(a, !0),
                          null === a.tail && "hidden" === a.tailMode)
                        ) {
                          null !== (r = n.updateQueue) &&
                            ((t.updateQueue = r), (t.effectTag |= 4)),
                            null !== (t = t.lastEffect = a.lastEffect) &&
                              (t.nextEffect = null);
                          break;
                        }
                      } else
                        li() > a.tailExpiration &&
                          1 < r &&
                          ((t.effectTag |= 64),
                          (s = !0),
                          Po(a, !1),
                          (t.expirationTime = t.childExpirationTime = r - 1));
                    a.isBackwards
                      ? ((l.sibling = t.child), (t.child = l))
                      : (null !== (r = a.last)
                          ? (r.sibling = l)
                          : (t.child = l),
                        (a.last = l));
                  }
                  if (null !== a.tail) {
                    0 === a.tailExpiration && (a.tailExpiration = li() + 500),
                      (r = a.tail),
                      (a.rendering = r),
                      (a.tail = r.sibling),
                      (a.lastEffect = t.lastEffect),
                      (r.sibling = null),
                      (n = da.current),
                      Rr(da, (n = s ? (n & ca) | fa : n & ca)),
                      (t = r);
                    break e;
                  }
                  break;
                case 20:
                  break;
                default:
                  throw o(Error(156));
              }
              t = null;
            }
            if (((r = us), 1 === ls || 1 !== r.childExpirationTime)) {
              for (n = 0, a = r.child; null !== a; )
                (s = a.expirationTime) > n && (n = s),
                  (l = a.childExpirationTime) > n && (n = l),
                  (a = a.sibling);
              r.childExpirationTime = n;
            }
            if (null !== t) return t;
            null !== e &&
              0 === (1024 & e.effectTag) &&
              (null === e.firstEffect && (e.firstEffect = us.firstEffect),
              null !== us.lastEffect &&
                (null !== e.lastEffect &&
                  (e.lastEffect.nextEffect = us.firstEffect),
                (e.lastEffect = us.lastEffect)),
              1 < us.effectTag &&
                (null !== e.lastEffect
                  ? (e.lastEffect.nextEffect = us)
                  : (e.firstEffect = us),
                (e.lastEffect = us)));
          } else {
            if (null !== (t = Ro(us))) return (t.effectTag &= 1023), t;
            null !== e &&
              ((e.firstEffect = e.lastEffect = null), (e.effectTag |= 1024));
          }
          if (null !== (t = us.sibling)) return t;
          us = e;
        } while (null !== us);
        return cs === ts && (cs = as), null;
      }
      function Ws(e) {
        var t = ci();
        return (
          fi(99, qs.bind(null, e, t)),
          null !== ws &&
            di(97, function () {
              return Xs(), null;
            }),
          null
        );
      }
      function qs(e, t) {
        if ((Xs(), (os & (Qo | es)) !== $o)) throw o(Error(327));
        var n = e.finishedWork,
          r = e.finishedExpirationTime;
        if (null === n) return null;
        if (
          ((e.finishedWork = null),
          (e.finishedExpirationTime = 0),
          n === e.current)
        )
          throw o(Error(177));
        (e.callbackNode = null), (e.callbackExpirationTime = 0);
        var i = n.expirationTime,
          a = n.childExpirationTime;
        if (
          ((i = a > i ? a : i),
          (e.firstPendingTime = i),
          i < e.lastPendingTime && (e.lastPendingTime = i),
          e === ss && ((us = ss = null), (ls = 0)),
          1 < n.effectTag
            ? null !== n.lastEffect
              ? ((n.lastEffect.nextEffect = n), (i = n.firstEffect))
              : (i = n)
            : (i = n.firstEffect),
          null !== i)
        ) {
          (a = os), (os |= es), (Zo.current = null), (wr = jn);
          var s = Wn();
          if (qn(s)) {
            if ("selectionStart" in s)
              var u = { start: s.selectionStart, end: s.selectionEnd };
            else
              e: {
                var l =
                  (u = ((u = s.ownerDocument) && u.defaultView) || window)
                    .getSelection && u.getSelection();
                if (l && 0 !== l.rangeCount) {
                  u = l.anchorNode;
                  var c = l.anchorOffset,
                    h = l.focusNode;
                  l = l.focusOffset;
                  try {
                    u.nodeType, h.nodeType;
                  } catch (U) {
                    u = null;
                    break e;
                  }
                  var f = 0,
                    d = -1,
                    p = -1,
                    m = 0,
                    v = 0,
                    g = s,
                    y = null;
                  t: for (;;) {
                    for (
                      var b;
                      g !== u || (0 !== c && 3 !== g.nodeType) || (d = f + c),
                        g !== h || (0 !== l && 3 !== g.nodeType) || (p = f + l),
                        3 === g.nodeType && (f += g.nodeValue.length),
                        null !== (b = g.firstChild);

                    )
                      (y = g), (g = b);
                    for (;;) {
                      if (g === s) break t;
                      if (
                        (y === u && ++m === c && (d = f),
                        y === h && ++v === l && (p = f),
                        null !== (b = g.nextSibling))
                      )
                        break;
                      y = (g = y).parentNode;
                    }
                    g = b;
                  }
                  u = -1 === d || -1 === p ? null : { start: d, end: p };
                } else u = null;
              }
            u = u || { start: 0, end: 0 };
          } else u = null;
          (Sr = { focusedElem: s, selectionRange: u }), (jn = !1), (gs = i);
          do {
            try {
              for (; null !== gs; ) {
                if (0 !== (256 & gs.effectTag)) {
                  var x = gs.alternate;
                  switch ((s = gs).tag) {
                    case 0:
                    case 11:
                    case 15:
                      Do(va, ma, s);
                      break;
                    case 1:
                      if (256 & s.effectTag && null !== x) {
                        var _ = x.memoizedProps,
                          w = x.memoizedState,
                          S = s.stateNode,
                          M = S.getSnapshotBeforeUpdate(
                            s.elementType === s.type ? _ : yi(s.type, _),
                            w
                          );
                        S.__reactInternalSnapshotBeforeUpdate = M;
                      }
                      break;
                    case 3:
                    case 5:
                    case 6:
                    case 4:
                    case 17:
                      break;
                    default:
                      throw o(Error(163));
                  }
                }
                gs = gs.nextEffect;
              }
            } catch (U) {
              if (null === gs) throw o(Error(330));
              Zs(gs, U), (gs = gs.nextEffect);
            }
          } while (null !== gs);
          gs = i;
          do {
            try {
              for (x = t; null !== gs; ) {
                var T = gs.effectTag;
                if ((16 & T && fr(gs.stateNode, ""), 128 & T)) {
                  var E = gs.alternate;
                  if (null !== E) {
                    var O = E.ref;
                    null !== O &&
                      ("function" === typeof O ? O(null) : (O.current = null));
                  }
                }
                switch (14 & T) {
                  case 2:
                    Fo(gs), (gs.effectTag &= -3);
                    break;
                  case 6:
                    Fo(gs), (gs.effectTag &= -3), Ho(gs.alternate, gs);
                    break;
                  case 4:
                    Ho(gs.alternate, gs);
                    break;
                  case 8:
                    Go((_ = gs), x),
                      (_.return = null),
                      (_.child = null),
                      (_.memoizedState = null),
                      (_.updateQueue = null),
                      (_.dependencies = null);
                    var k = _.alternate;
                    null !== k &&
                      ((k.return = null),
                      (k.child = null),
                      (k.memoizedState = null),
                      (k.updateQueue = null),
                      (k.dependencies = null));
                }
                gs = gs.nextEffect;
              }
            } catch (U) {
              if (null === gs) throw o(Error(330));
              Zs(gs, U), (gs = gs.nextEffect);
            }
          } while (null !== gs);
          if (
            ((O = Sr),
            (E = Wn()),
            (T = O.focusedElem),
            (x = O.selectionRange),
            E !== T &&
              T &&
              T.ownerDocument &&
              (function e(t, n) {
                return (
                  !(!t || !n) &&
                  (t === n ||
                    ((!t || 3 !== t.nodeType) &&
                      (n && 3 === n.nodeType
                        ? e(t, n.parentNode)
                        : "contains" in t
                        ? t.contains(n)
                        : !!t.compareDocumentPosition &&
                          !!(16 & t.compareDocumentPosition(n)))))
                );
              })(T.ownerDocument.documentElement, T))
          ) {
            null !== x &&
              qn(T) &&
              ((E = x.start),
              void 0 === (O = x.end) && (O = E),
              "selectionStart" in T
                ? ((T.selectionStart = E),
                  (T.selectionEnd = Math.min(O, T.value.length)))
                : (O =
                    ((E = T.ownerDocument || document) && E.defaultView) ||
                    window).getSelection &&
                  ((O = O.getSelection()),
                  (_ = T.textContent.length),
                  (k = Math.min(x.start, _)),
                  (x = void 0 === x.end ? k : Math.min(x.end, _)),
                  !O.extend && k > x && ((_ = x), (x = k), (k = _)),
                  (_ = Vn(T, k)),
                  (w = Vn(T, x)),
                  _ &&
                    w &&
                    (1 !== O.rangeCount ||
                      O.anchorNode !== _.node ||
                      O.anchorOffset !== _.offset ||
                      O.focusNode !== w.node ||
                      O.focusOffset !== w.offset) &&
                    ((E = E.createRange()).setStart(_.node, _.offset),
                    O.removeAllRanges(),
                    k > x
                      ? (O.addRange(E), O.extend(w.node, w.offset))
                      : (E.setEnd(w.node, w.offset), O.addRange(E))))),
              (E = []);
            for (O = T; (O = O.parentNode); )
              1 === O.nodeType &&
                E.push({ element: O, left: O.scrollLeft, top: O.scrollTop });
            for (
              "function" === typeof T.focus && T.focus(), T = 0;
              T < E.length;
              T++
            )
              ((O = E[T]).element.scrollLeft = O.left),
                (O.element.scrollTop = O.top);
          }
          (Sr = null), (jn = !!wr), (wr = null), (e.current = n), (gs = i);
          do {
            try {
              for (T = r; null !== gs; ) {
                var A = gs.effectTag;
                if (36 & A) {
                  var C = gs.alternate;
                  switch (((O = T), (E = gs).tag)) {
                    case 0:
                    case 11:
                    case 15:
                      Do(ba, xa, E);
                      break;
                    case 1:
                      var P = E.stateNode;
                      if (4 & E.effectTag)
                        if (null === C) P.componentDidMount();
                        else {
                          var R =
                            E.elementType === E.type
                              ? C.memoizedProps
                              : yi(E.type, C.memoizedProps);
                          P.componentDidUpdate(
                            R,
                            C.memoizedState,
                            P.__reactInternalSnapshotBeforeUpdate
                          );
                        }
                      var L = E.updateQueue;
                      null !== L && Ui(0, L, P);
                      break;
                    case 3:
                      var j = E.updateQueue;
                      if (null !== j) {
                        if (((k = null), null !== E.child))
                          switch (E.child.tag) {
                            case 5:
                              k = E.child.stateNode;
                              break;
                            case 1:
                              k = E.child.stateNode;
                          }
                        Ui(0, j, k);
                      }
                      break;
                    case 5:
                      var I = E.stateNode;
                      null === C &&
                        4 & E.effectTag &&
                        ((O = I), Mr(E.type, E.memoizedProps) && O.focus());
                      break;
                    case 6:
                    case 4:
                    case 12:
                      break;
                    case 13:
                    case 19:
                    case 17:
                    case 20:
                      break;
                    default:
                      throw o(Error(163));
                  }
                }
                if (128 & A) {
                  var N = gs.ref;
                  if (null !== N) {
                    var D = gs.stateNode;
                    switch (gs.tag) {
                      case 5:
                        var z = D;
                        break;
                      default:
                        z = D;
                    }
                    "function" === typeof N ? N(z) : (N.current = z);
                  }
                }
                512 & A && (_s = !0), (gs = gs.nextEffect);
              }
            } catch (U) {
              if (null === gs) throw o(Error(330));
              Zs(gs, U), (gs = gs.nextEffect);
            }
          } while (null !== gs);
          (gs = null), ii(), (os = a);
        } else e.current = n;
        if (_s) (_s = !1), (ws = e), (Ms = r), (Ss = t);
        else
          for (gs = i; null !== gs; )
            (t = gs.nextEffect), (gs.nextEffect = null), (gs = t);
        if (
          (0 !== (t = e.firstPendingTime)
            ? js(e, (A = gi((A = As()), t)), t)
            : (xs = null),
          "function" === typeof eu && eu(n.stateNode, r),
          1073741823 === t
            ? e === Os
              ? Es++
              : ((Es = 0), (Os = e))
            : (Es = 0),
          ys)
        )
          throw ((ys = !1), (e = bs), (bs = null), e);
        return (os & Ko) !== $o ? null : (mi(), null);
      }
      function Xs() {
        if (null === ws) return !1;
        var e = ws,
          t = Ms,
          n = Ss;
        return (
          (ws = null),
          (Ms = 0),
          (Ss = 90),
          fi(97 < n ? 97 : n, Ys.bind(null, e, t))
        );
      }
      function Ys(e) {
        if ((os & (Qo | es)) !== $o) throw o(Error(331));
        var t = os;
        for (os |= es, e = e.current.firstEffect; null !== e; ) {
          try {
            var n = e;
            if (0 !== (512 & n.effectTag))
              switch (n.tag) {
                case 0:
                case 11:
                case 15:
                  Do(wa, ma, n), Do(ma, _a, n);
              }
          } catch (r) {
            if (null === e) throw o(Error(330));
            Zs(e, r);
          }
          (n = e.nextEffect), (e.nextEffect = null), (e = n);
        }
        return (os = t), mi(), !0;
      }
      function Js(e, t, n) {
        ji(e, (t = qo(e, (t = Lo(n, t)), 1073741823))),
          null !== (e = Ls(e, 1073741823)) && js(e, 99, 1073741823);
      }
      function Zs(e, t) {
        if (3 === e.tag) Js(e, e, t);
        else
          for (var n = e.return; null !== n; ) {
            if (3 === n.tag) {
              Js(n, e, t);
              break;
            }
            if (1 === n.tag) {
              var r = n.stateNode;
              if (
                "function" === typeof n.type.getDerivedStateFromError ||
                ("function" === typeof r.componentDidCatch &&
                  (null === xs || !xs.has(r)))
              ) {
                ji(n, (e = Xo(n, (e = Lo(t, e)), 1073741823))),
                  null !== (n = Ls(n, 1073741823)) && js(n, 99, 1073741823);
                break;
              }
            }
            n = n.return;
          }
      }
      function $s(e, t, n) {
        var r = e.pingCache;
        null !== r && r.delete(t),
          ss === e && ls === n
            ? cs === is || (cs === rs && 1073741823 === hs && li() - ms < vs)
              ? Bs(e, ls)
              : (ps = !0)
            : e.lastPendingTime < n ||
              (0 !== (t = e.pingTime) && t < n) ||
              ((e.pingTime = n),
              e.finishedExpirationTime === n &&
                ((e.finishedExpirationTime = 0), (e.finishedWork = null)),
              js(e, (t = gi((t = As()), n)), n));
      }
      function Ks(e, t) {
        var n = e.stateNode;
        null !== n && n.delete(t),
          (n = gi((n = As()), (t = Cs(n, e, null)))),
          null !== (e = Ls(e, t)) && js(e, n, t);
      }
      var Qs = void 0;
      Qs = function (e, t, n) {
        var r = t.expirationTime;
        if (null !== e) {
          var i = t.pendingProps;
          if (e.memoizedProps !== i || Ir.current) co = !0;
          else if (r < n) {
            switch (((co = !1), t.tag)) {
              case 3:
                xo(t), uo();
                break;
              case 5:
                if ((ua(t), 4 & t.mode && 1 !== n && i.hidden))
                  return (t.expirationTime = t.childExpirationTime = 1), null;
                break;
              case 1:
                zr(t.type) && Hr(t);
                break;
              case 4:
                oa(t, t.stateNode.containerInfo);
                break;
              case 10:
                Mi(t, t.memoizedProps.value);
                break;
              case 13:
                if (null !== t.memoizedState)
                  return 0 !== (r = t.child.childExpirationTime) && r >= n
                    ? wo(e, t, n)
                    : (Rr(da, da.current & ca),
                      null !== (t = To(e, t, n)) ? t.sibling : null);
                Rr(da, da.current & ca);
                break;
              case 19:
                if (
                  ((r = t.childExpirationTime >= n), 0 !== (64 & e.effectTag))
                ) {
                  if (r) return Mo(e, t, n);
                  t.effectTag |= 64;
                }
                if (
                  (null !== (i = t.memoizedState) &&
                    ((i.rendering = null), (i.tail = null)),
                  Rr(da, da.current),
                  !r)
                )
                  return null;
            }
            return To(e, t, n);
          }
        } else co = !1;
        switch (((t.expirationTime = 0), t.tag)) {
          case 2:
            if (
              ((r = t.type),
              null !== e &&
                ((e.alternate = null),
                (t.alternate = null),
                (t.effectTag |= 2)),
              (e = t.pendingProps),
              (i = Dr(t, jr.current)),
              Oi(t, n),
              (i = Ua(null, t, r, e, i, n)),
              (t.effectTag |= 1),
              "object" === typeof i &&
                null !== i &&
                "function" === typeof i.render &&
                void 0 === i.$$typeof)
            ) {
              if (((t.tag = 1), Ba(), zr(r))) {
                var a = !0;
                Hr(t);
              } else a = !1;
              t.memoizedState =
                null !== i.state && void 0 !== i.state ? i.state : null;
              var s = r.getDerivedStateFromProps;
              "function" === typeof s && Hi(t, r, s, e),
                (i.updater = Vi),
                (t.stateNode = i),
                (i._reactInternalFiber = t),
                Yi(t, r, e, n),
                (t = bo(null, t, r, !0, a, n));
            } else (t.tag = 0), ho(null, t, i, n), (t = t.child);
            return t;
          case 16:
            switch (
              ((i = t.elementType),
              null !== e &&
                ((e.alternate = null),
                (t.alternate = null),
                (t.effectTag |= 2)),
              (e = t.pendingProps),
              (i = (function (e) {
                var t = e._result;
                switch (e._status) {
                  case 1:
                    return t;
                  case 2:
                  case 0:
                    throw t;
                  default:
                    switch (
                      ((e._status = 0),
                      (t = (t = e._ctor)()).then(
                        function (t) {
                          0 === e._status &&
                            ((t = t.default), (e._status = 1), (e._result = t));
                        },
                        function (t) {
                          0 === e._status && ((e._status = 2), (e._result = t));
                        }
                      ),
                      e._status)
                    ) {
                      case 1:
                        return e._result;
                      case 2:
                        throw e._result;
                    }
                    throw ((e._result = t), t);
                }
              })(i)),
              (t.type = i),
              (a = t.tag =
                (function (e) {
                  if ("function" === typeof e) return iu(e) ? 1 : 0;
                  if (void 0 !== e && null !== e) {
                    if ((e = e.$$typeof) === rt) return 11;
                    if (e === ot) return 14;
                  }
                  return 2;
                })(i)),
              (e = yi(i, e)),
              a)
            ) {
              case 0:
                t = go(null, t, i, e, n);
                break;
              case 1:
                t = yo(null, t, i, e, n);
                break;
              case 11:
                t = fo(null, t, i, e, n);
                break;
              case 14:
                t = po(null, t, i, yi(i.type, e), r, n);
                break;
              default:
                throw o(Error(306), i, "");
            }
            return t;
          case 0:
            return (
              (r = t.type),
              (i = t.pendingProps),
              go(e, t, r, (i = t.elementType === r ? i : yi(r, i)), n)
            );
          case 1:
            return (
              (r = t.type),
              (i = t.pendingProps),
              yo(e, t, r, (i = t.elementType === r ? i : yi(r, i)), n)
            );
          case 3:
            if ((xo(t), null === (r = t.updateQueue))) throw o(Error(282));
            return (
              (i = null !== (i = t.memoizedState) ? i.element : null),
              zi(t, r, t.pendingProps, null, n),
              (r = t.memoizedState.element) === i
                ? (uo(), (t = To(e, t, n)))
                : ((i = t.stateNode),
                  (i = (null === e || null === e.child) && i.hydrate) &&
                    ((to = kr(t.stateNode.containerInfo.firstChild)),
                    (eo = t),
                    (i = no = !0)),
                  i
                    ? ((t.effectTag |= 2), (t.child = ea(t, null, r, n)))
                    : (ho(e, t, r, n), uo()),
                  (t = t.child)),
              t
            );
          case 5:
            return (
              ua(t),
              null === e && ao(t),
              (r = t.type),
              (i = t.pendingProps),
              (a = null !== e ? e.memoizedProps : null),
              (s = i.children),
              Tr(r, i)
                ? (s = null)
                : null !== a && Tr(r, a) && (t.effectTag |= 16),
              vo(e, t),
              4 & t.mode && 1 !== n && i.hidden
                ? ((t.expirationTime = t.childExpirationTime = 1), (t = null))
                : (ho(e, t, s, n), (t = t.child)),
              t
            );
          case 6:
            return null === e && ao(t), null;
          case 13:
            return wo(e, t, n);
          case 4:
            return (
              oa(t, t.stateNode.containerInfo),
              (r = t.pendingProps),
              null === e ? (t.child = Qi(t, null, r, n)) : ho(e, t, r, n),
              t.child
            );
          case 11:
            return (
              (r = t.type),
              (i = t.pendingProps),
              fo(e, t, r, (i = t.elementType === r ? i : yi(r, i)), n)
            );
          case 7:
            return ho(e, t, t.pendingProps, n), t.child;
          case 8:
          case 12:
            return ho(e, t, t.pendingProps.children, n), t.child;
          case 10:
            e: {
              if (
                ((r = t.type._context),
                (i = t.pendingProps),
                (s = t.memoizedProps),
                Mi(t, (a = i.value)),
                null !== s)
              ) {
                var u = s.value;
                if (
                  0 ===
                  (a = tn(u, a)
                    ? 0
                    : 0 |
                      ("function" === typeof r._calculateChangedBits
                        ? r._calculateChangedBits(u, a)
                        : 1073741823))
                ) {
                  if (s.children === i.children && !Ir.current) {
                    t = To(e, t, n);
                    break e;
                  }
                } else
                  for (null !== (u = t.child) && (u.return = t); null !== u; ) {
                    var l = u.dependencies;
                    if (null !== l) {
                      s = u.child;
                      for (var c = l.firstContext; null !== c; ) {
                        if (c.context === r && 0 !== (c.observedBits & a)) {
                          1 === u.tag &&
                            (((c = Ri(n, null)).tag = 2), ji(u, c)),
                            u.expirationTime < n && (u.expirationTime = n),
                            null !== (c = u.alternate) &&
                              c.expirationTime < n &&
                              (c.expirationTime = n),
                            Ei(u.return, n),
                            l.expirationTime < n && (l.expirationTime = n);
                          break;
                        }
                        c = c.next;
                      }
                    } else
                      s = 10 === u.tag && u.type === t.type ? null : u.child;
                    if (null !== s) s.return = u;
                    else
                      for (s = u; null !== s; ) {
                        if (s === t) {
                          s = null;
                          break;
                        }
                        if (null !== (u = s.sibling)) {
                          (u.return = s.return), (s = u);
                          break;
                        }
                        s = s.return;
                      }
                    u = s;
                  }
              }
              ho(e, t, i.children, n), (t = t.child);
            }
            return t;
          case 9:
            return (
              (i = t.type),
              (r = (a = t.pendingProps).children),
              Oi(t, n),
              (r = r((i = ki(i, a.unstable_observedBits)))),
              (t.effectTag |= 1),
              ho(e, t, r, n),
              t.child
            );
          case 14:
            return (
              (a = yi((i = t.type), t.pendingProps)),
              po(e, t, i, (a = yi(i.type, a)), r, n)
            );
          case 15:
            return mo(e, t, t.type, t.pendingProps, r, n);
          case 17:
            return (
              (r = t.type),
              (i = t.pendingProps),
              (i = t.elementType === r ? i : yi(r, i)),
              null !== e &&
                ((e.alternate = null),
                (t.alternate = null),
                (t.effectTag |= 2)),
              (t.tag = 1),
              zr(r) ? ((e = !0), Hr(t)) : (e = !1),
              Oi(t, n),
              qi(t, r, i),
              Yi(t, r, i, n),
              bo(null, t, r, !0, e, n)
            );
          case 19:
            return Mo(e, t, n);
        }
        throw o(Error(156));
      };
      var eu = null,
        tu = null;
      function nu(e, t, n, r) {
        (this.tag = e),
          (this.key = n),
          (this.sibling =
            this.child =
            this.return =
            this.stateNode =
            this.type =
            this.elementType =
              null),
          (this.index = 0),
          (this.ref = null),
          (this.pendingProps = t),
          (this.dependencies =
            this.memoizedState =
            this.updateQueue =
            this.memoizedProps =
              null),
          (this.mode = r),
          (this.effectTag = 0),
          (this.lastEffect = this.firstEffect = this.nextEffect = null),
          (this.childExpirationTime = this.expirationTime = 0),
          (this.alternate = null);
      }
      function ru(e, t, n, r) {
        return new nu(e, t, n, r);
      }
      function iu(e) {
        return !(!(e = e.prototype) || !e.isReactComponent);
      }
      function au(e, t) {
        var n = e.alternate;
        return (
          null === n
            ? (((n = ru(e.tag, t, e.key, e.mode)).elementType = e.elementType),
              (n.type = e.type),
              (n.stateNode = e.stateNode),
              (n.alternate = e),
              (e.alternate = n))
            : ((n.pendingProps = t),
              (n.effectTag = 0),
              (n.nextEffect = null),
              (n.firstEffect = null),
              (n.lastEffect = null)),
          (n.childExpirationTime = e.childExpirationTime),
          (n.expirationTime = e.expirationTime),
          (n.child = e.child),
          (n.memoizedProps = e.memoizedProps),
          (n.memoizedState = e.memoizedState),
          (n.updateQueue = e.updateQueue),
          (t = e.dependencies),
          (n.dependencies =
            null === t
              ? null
              : {
                  expirationTime: t.expirationTime,
                  firstContext: t.firstContext,
                  responders: t.responders,
                }),
          (n.sibling = e.sibling),
          (n.index = e.index),
          (n.ref = e.ref),
          n
        );
      }
      function ou(e, t, n, r, i, a) {
        var s = 2;
        if (((r = e), "function" === typeof e)) iu(e) && (s = 1);
        else if ("string" === typeof e) s = 5;
        else
          e: switch (e) {
            case $e:
              return su(n.children, i, a, t);
            case nt:
              (s = 8), (i |= 7);
              break;
            case Ke:
              (s = 8), (i |= 1);
              break;
            case Qe:
              return (
                ((e = ru(12, n, t, 8 | i)).elementType = Qe),
                (e.type = Qe),
                (e.expirationTime = a),
                e
              );
            case it:
              return (
                ((e = ru(13, n, t, i)).type = it),
                (e.elementType = it),
                (e.expirationTime = a),
                e
              );
            case at:
              return (
                ((e = ru(19, n, t, i)).elementType = at),
                (e.expirationTime = a),
                e
              );
            default:
              if ("object" === typeof e && null !== e)
                switch (e.$$typeof) {
                  case et:
                    s = 10;
                    break e;
                  case tt:
                    s = 9;
                    break e;
                  case rt:
                    s = 11;
                    break e;
                  case ot:
                    s = 14;
                    break e;
                  case st:
                    (s = 16), (r = null);
                    break e;
                }
              throw o(Error(130), null == e ? e : typeof e, "");
          }
        return (
          ((t = ru(s, n, t, i)).elementType = e),
          (t.type = r),
          (t.expirationTime = a),
          t
        );
      }
      function su(e, t, n, r) {
        return ((e = ru(7, e, r, t)).expirationTime = n), e;
      }
      function uu(e, t, n) {
        return ((e = ru(6, e, null, t)).expirationTime = n), e;
      }
      function lu(e, t, n) {
        return (
          ((t = ru(
            4,
            null !== e.children ? e.children : [],
            e.key,
            t
          )).expirationTime = n),
          (t.stateNode = {
            containerInfo: e.containerInfo,
            pendingChildren: null,
            implementation: e.implementation,
          }),
          t
        );
      }
      function cu(e, t, n) {
        (this.tag = t),
          (this.current = null),
          (this.containerInfo = e),
          (this.pingCache = this.pendingChildren = null),
          (this.finishedExpirationTime = 0),
          (this.finishedWork = null),
          (this.timeoutHandle = -1),
          (this.pendingContext = this.context = null),
          (this.hydrate = n),
          (this.callbackNode = this.firstBatch = null),
          (this.pingTime =
            this.lastPendingTime =
            this.firstPendingTime =
            this.callbackExpirationTime =
              0);
      }
      function hu(e, t, n) {
        return (
          (e = new cu(e, t, n)),
          (t = ru(3, null, null, 2 === t ? 7 : 1 === t ? 3 : 0)),
          (e.current = t),
          (t.stateNode = e)
        );
      }
      function fu(e, t, n, r, i, a) {
        var s = t.current;
        e: if (n) {
          t: {
            if (2 !== on((n = n._reactInternalFiber)) || 1 !== n.tag)
              throw o(Error(170));
            var u = n;
            do {
              switch (u.tag) {
                case 3:
                  u = u.stateNode.context;
                  break t;
                case 1:
                  if (zr(u.type)) {
                    u = u.stateNode.__reactInternalMemoizedMergedChildContext;
                    break t;
                  }
              }
              u = u.return;
            } while (null !== u);
            throw o(Error(171));
          }
          if (1 === n.tag) {
            var l = n.type;
            if (zr(l)) {
              n = Gr(n, l, u);
              break e;
            }
          }
          n = u;
        } else n = Lr;
        return (
          null === t.context ? (t.context = n) : (t.pendingContext = n),
          (t = a),
          ((i = Ri(r, i)).payload = { element: e }),
          null !== (t = void 0 === t ? null : t) && (i.callback = t),
          ji(s, i),
          Rs(s, r),
          r
        );
      }
      function du(e, t, n, r) {
        var i = t.current,
          a = As(),
          o = Fi.suspense;
        return fu(e, t, n, (i = Cs(a, i, o)), o, r);
      }
      function pu(e) {
        if (!(e = e.current).child) return null;
        switch (e.child.tag) {
          case 5:
          default:
            return e.child.stateNode;
        }
      }
      function mu(e) {
        var t = 1073741821 - 25 * (1 + (((1073741821 - As() + 500) / 25) | 0));
        t <= Ps && --t,
          (this._expirationTime = Ps = t),
          (this._root = e),
          (this._callbacks = this._next = null),
          (this._hasChildren = this._didComplete = !1),
          (this._children = null),
          (this._defer = !0);
      }
      function vu() {
        (this._callbacks = null),
          (this._didCommit = !1),
          (this._onCommit = this._onCommit.bind(this));
      }
      function gu(e, t, n) {
        this._internalRoot = hu(e, t, n);
      }
      function yu(e, t) {
        this._internalRoot = hu(e, 2, t);
      }
      function bu(e) {
        return !(
          !e ||
          (1 !== e.nodeType &&
            9 !== e.nodeType &&
            11 !== e.nodeType &&
            (8 !== e.nodeType ||
              " react-mount-point-unstable " !== e.nodeValue))
        );
      }
      function xu(e, t, n, r, i) {
        var a = n._reactRootContainer,
          o = void 0;
        if (a) {
          if (((o = a._internalRoot), "function" === typeof i)) {
            var s = i;
            i = function () {
              var e = pu(o);
              s.call(e);
            };
          }
          du(t, o, e, i);
        } else {
          if (
            ((a = n._reactRootContainer =
              (function (e, t) {
                if (
                  (t ||
                    (t = !(
                      !(t = e
                        ? 9 === e.nodeType
                          ? e.documentElement
                          : e.firstChild
                        : null) ||
                      1 !== t.nodeType ||
                      !t.hasAttribute("data-reactroot")
                    )),
                  !t)
                )
                  for (var n; (n = e.lastChild); ) e.removeChild(n);
                return new gu(e, 0, t);
              })(n, r)),
            (o = a._internalRoot),
            "function" === typeof i)
          ) {
            var u = i;
            i = function () {
              var e = pu(o);
              u.call(e);
            };
          }
          Us(function () {
            du(t, o, e, i);
          });
        }
        return pu(o);
      }
      function _u(e, t) {
        var n =
          2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!bu(t)) throw o(Error(200));
        return (function (e, t, n) {
          var r =
            3 < arguments.length && void 0 !== arguments[3]
              ? arguments[3]
              : null;
          return {
            $$typeof: Ze,
            key: null == r ? null : "" + r,
            children: e,
            containerInfo: t,
            implementation: n,
          };
        })(e, t, null, n);
      }
      (Oe = function (e, t, n) {
        switch (t) {
          case "input":
            if ((Tt(e, n), (t = n.name), "radio" === n.type && null != t)) {
              for (n = e; n.parentNode; ) n = n.parentNode;
              for (
                n = n.querySelectorAll(
                  "input[name=" + JSON.stringify("" + t) + '][type="radio"]'
                ),
                  t = 0;
                t < n.length;
                t++
              ) {
                var r = n[t];
                if (r !== e && r.form === e.form) {
                  var i = U(r);
                  if (!i) throw o(Error(90));
                  We(r), Tt(r, i);
                }
              }
            }
            break;
          case "textarea":
            ar(e, n);
            break;
          case "select":
            null != (t = n.value) && nr(e, !!n.multiple, t, !1);
        }
      }),
        (mu.prototype.render = function (e) {
          if (!this._defer) throw o(Error(250));
          (this._hasChildren = !0), (this._children = e);
          var t = this._root._internalRoot,
            n = this._expirationTime,
            r = new vu();
          return fu(e, t, null, n, null, r._onCommit), r;
        }),
        (mu.prototype.then = function (e) {
          if (this._didComplete) e();
          else {
            var t = this._callbacks;
            null === t && (t = this._callbacks = []), t.push(e);
          }
        }),
        (mu.prototype.commit = function () {
          var e = this._root._internalRoot,
            t = e.firstBatch;
          if (!this._defer || null === t) throw o(Error(251));
          if (this._hasChildren) {
            var n = this._expirationTime;
            if (t !== this) {
              this._hasChildren &&
                ((n = this._expirationTime = t._expirationTime),
                this.render(this._children));
              for (var r = null, i = t; i !== this; ) (r = i), (i = i._next);
              if (null === r) throw o(Error(251));
              (r._next = i._next), (this._next = t), (e.firstBatch = this);
            }
            if (((this._defer = !1), (t = n), (os & (Qo | es)) !== $o))
              throw o(Error(253));
            pi(Fs.bind(null, e, t)),
              mi(),
              (t = this._next),
              (this._next = null),
              null !== (t = e.firstBatch = t) &&
                t._hasChildren &&
                t.render(t._children);
          } else (this._next = null), (this._defer = !1);
        }),
        (mu.prototype._onComplete = function () {
          if (!this._didComplete) {
            this._didComplete = !0;
            var e = this._callbacks;
            if (null !== e) for (var t = 0; t < e.length; t++) (0, e[t])();
          }
        }),
        (vu.prototype.then = function (e) {
          if (this._didCommit) e();
          else {
            var t = this._callbacks;
            null === t && (t = this._callbacks = []), t.push(e);
          }
        }),
        (vu.prototype._onCommit = function () {
          if (!this._didCommit) {
            this._didCommit = !0;
            var e = this._callbacks;
            if (null !== e)
              for (var t = 0; t < e.length; t++) {
                var n = e[t];
                if ("function" !== typeof n) throw o(Error(191), n);
                n();
              }
          }
        }),
        (yu.prototype.render = gu.prototype.render =
          function (e, t) {
            var n = this._internalRoot,
              r = new vu();
            return (
              null !== (t = void 0 === t ? null : t) && r.then(t),
              du(e, n, null, r._onCommit),
              r
            );
          }),
        (yu.prototype.unmount = gu.prototype.unmount =
          function (e) {
            var t = this._internalRoot,
              n = new vu();
            return (
              null !== (e = void 0 === e ? null : e) && n.then(e),
              du(null, t, null, n._onCommit),
              n
            );
          }),
        (yu.prototype.createBatch = function () {
          var e = new mu(this),
            t = e._expirationTime,
            n = this._internalRoot,
            r = n.firstBatch;
          if (null === r) (n.firstBatch = e), (e._next = null);
          else {
            for (n = null; null !== r && r._expirationTime >= t; )
              (n = r), (r = r._next);
            (e._next = r), null !== n && (n._next = e);
          }
          return e;
        }),
        (Le = Ds),
        (je = zs),
        (Ie = Ns),
        (Ne = function (e, t) {
          var n = os;
          os |= 2;
          try {
            return e(t);
          } finally {
            (os = n) === $o && mi();
          }
        });
      var wu = {
        createPortal: _u,
        findDOMNode: function (e) {
          if (null == e) e = null;
          else if (1 !== e.nodeType) {
            var t = e._reactInternalFiber;
            if (void 0 === t) {
              if ("function" === typeof e.render) throw o(Error(188));
              throw o(Error(268), Object.keys(e));
            }
            e = null === (e = un(t)) ? null : e.stateNode;
          }
          return e;
        },
        hydrate: function (e, t, n) {
          if (!bu(t)) throw o(Error(200));
          return xu(null, e, t, !0, n);
        },
        render: function (e, t, n) {
          if (!bu(t)) throw o(Error(200));
          return xu(null, e, t, !1, n);
        },
        unstable_renderSubtreeIntoContainer: function (e, t, n, r) {
          if (!bu(n)) throw o(Error(200));
          if (null == e || void 0 === e._reactInternalFiber) throw o(Error(38));
          return xu(e, t, n, !1, r);
        },
        unmountComponentAtNode: function (e) {
          if (!bu(e)) throw o(Error(40));
          return (
            !!e._reactRootContainer &&
            (Us(function () {
              xu(null, null, e, !1, function () {
                e._reactRootContainer = null;
              });
            }),
            !0)
          );
        },
        unstable_createPortal: function () {
          return _u.apply(void 0, arguments);
        },
        unstable_batchedUpdates: Ds,
        unstable_interactiveUpdates: function (e, t, n, r) {
          return Ns(), zs(e, t, n, r);
        },
        unstable_discreteUpdates: zs,
        unstable_flushDiscreteUpdates: Ns,
        flushSync: function (e, t) {
          if ((os & (Qo | es)) !== $o) throw o(Error(187));
          var n = os;
          os |= 1;
          try {
            return fi(99, e.bind(null, t));
          } finally {
            (os = n), mi();
          }
        },
        unstable_createRoot: function (e, t) {
          if (!bu(e)) throw o(Error(299), "unstable_createRoot");
          return new yu(e, null != t && !0 === t.hydrate);
        },
        unstable_createSyncRoot: function (e, t) {
          if (!bu(e)) throw o(Error(299), "unstable_createRoot");
          return new gu(e, 1, null != t && !0 === t.hydrate);
        },
        unstable_flushControlled: function (e) {
          var t = os;
          os |= 1;
          try {
            fi(99, e);
          } finally {
            (os = t) === $o && mi();
          }
        },
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
          Events: [
            D,
            z,
            U,
            P.injectEventPluginsByName,
            f,
            W,
            function (e) {
              O(e, V);
            },
            Pe,
            Re,
            Un,
            C,
            Xs,
            { current: !1 },
          ],
        },
      };
      !(function (e) {
        var t = e.findFiberByHostInstance;
        (function (e) {
          if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
          var t = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (t.isDisabled || !t.supportsFiber) return !0;
          try {
            var n = t.inject(e);
            (eu = function (e) {
              try {
                t.onCommitFiberRoot(
                  n,
                  e,
                  void 0,
                  64 === (64 & e.current.effectTag)
                );
              } catch (r) {}
            }),
              (tu = function (e) {
                try {
                  t.onCommitFiberUnmount(n, e);
                } catch (r) {}
              });
          } catch (r) {}
        })(
          i({}, e, {
            overrideHookState: null,
            overrideProps: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: qe.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
              return null === (e = un(e)) ? null : e.stateNode;
            },
            findFiberByHostInstance: function (e) {
              return t ? t(e) : null;
            },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
          })
        );
      })({
        findFiberByHostInstance: N,
        bundleType: 0,
        version: "16.9.0",
        rendererPackageName: "react-dom",
      });
      var Su = { default: wu },
        Mu = (Su && wu) || Su;
      e.exports = Mu.default || Mu;
    },
    function (e, t, n) {
      "use strict";
      e.exports = n(97);
    },
    function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = void 0,
        i = void 0,
        a = void 0,
        o = void 0,
        s = void 0;
      if (
        ((t.unstable_now = void 0),
        (t.unstable_forceFrameRate = void 0),
        "undefined" === typeof window || "function" !== typeof MessageChannel)
      ) {
        var u = null,
          l = null,
          c = function e() {
            if (null !== u)
              try {
                var n = t.unstable_now();
                u(!0, n), (u = null);
              } catch (r) {
                throw (setTimeout(e, 0), r);
              }
          };
        (t.unstable_now = function () {
          return Date.now();
        }),
          (r = function (e) {
            null !== u ? setTimeout(r, 0, e) : ((u = e), setTimeout(c, 0));
          }),
          (i = function (e, t) {
            l = setTimeout(e, t);
          }),
          (a = function () {
            clearTimeout(l);
          }),
          (o = function () {
            return !1;
          }),
          (s = t.unstable_forceFrameRate = function () {});
      } else {
        var h = window.performance,
          f = window.Date,
          d = window.setTimeout,
          p = window.clearTimeout,
          m = window.requestAnimationFrame,
          v = window.cancelAnimationFrame;
        "undefined" !== typeof console &&
          ("function" !== typeof m &&
            console.error(
              "This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"
            ),
          "function" !== typeof v &&
            console.error(
              "This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"
            )),
          (t.unstable_now =
            "object" === typeof h && "function" === typeof h.now
              ? function () {
                  return h.now();
                }
              : function () {
                  return f.now();
                });
        var g = !1,
          y = null,
          b = -1,
          x = -1,
          _ = 33.33,
          w = -1,
          S = -1,
          M = 0,
          T = !1;
        (o = function () {
          return t.unstable_now() >= M;
        }),
          (s = function () {}),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"
                )
              : 0 < e
              ? ((_ = Math.floor(1e3 / e)), (T = !0))
              : ((_ = 33.33), (T = !1));
          });
        var E = function () {
            if (null !== y) {
              var e = t.unstable_now(),
                n = 0 < M - e;
              try {
                y(n, e) || (y = null);
              } catch (r) {
                throw (k.postMessage(null), r);
              }
            }
          },
          O = new MessageChannel(),
          k = O.port2;
        O.port1.onmessage = E;
        (r = function (e) {
          (y = e),
            g ||
              ((g = !0),
              m(function (e) {
                !(function e(n) {
                  if (null === y) (S = w = -1), (g = !1);
                  else {
                    (g = !0),
                      m(function (t) {
                        p(b), e(t);
                      });
                    if (
                      ((b = d(function e() {
                        (M = t.unstable_now() + _ / 2), E(), (b = d(e, 3 * _));
                      }, 3 * _)),
                      -1 !== w && 0.1 < n - w)
                    ) {
                      var r = n - w;
                      !T &&
                        -1 !== S &&
                        r < _ &&
                        S < _ &&
                        8.33 > (_ = r < S ? S : r) &&
                        (_ = 8.33),
                        (S = r);
                    }
                    (w = n), (M = n + _), k.postMessage(null);
                  }
                })(e);
              }));
        }),
          (i = function (e, n) {
            x = d(function () {
              e(t.unstable_now());
            }, n);
          }),
          (a = function () {
            p(x), (x = -1);
          });
      }
      var A = null,
        C = null,
        P = null,
        R = 3,
        L = !1,
        j = !1,
        I = !1;
      function N(e, t) {
        var n = e.next;
        if (n === e) A = null;
        else {
          e === A && (A = n);
          var r = e.previous;
          (r.next = n), (n.previous = r);
        }
        (e.next = e.previous = null), (n = e.callback), (r = R);
        var i = P;
        (R = e.priorityLevel), (P = e);
        try {
          var a = e.expirationTime <= t;
          switch (R) {
            case 1:
              var o = n(a);
              break;
            case 2:
            case 3:
            case 4:
              o = n(a);
              break;
            case 5:
              o = n(a);
          }
        } catch (s) {
          throw s;
        } finally {
          (R = r), (P = i);
        }
        if ("function" === typeof o)
          if (((t = e.expirationTime), (e.callback = o), null === A))
            A = e.next = e.previous = e;
          else {
            (o = null), (a = A);
            do {
              if (t <= a.expirationTime) {
                o = a;
                break;
              }
              a = a.next;
            } while (a !== A);
            null === o ? (o = A) : o === A && (A = e),
              ((t = o.previous).next = o.previous = e),
              (e.next = o),
              (e.previous = t);
          }
      }
      function D(e) {
        if (null !== C && C.startTime <= e)
          do {
            var t = C,
              n = t.next;
            if (t === n) C = null;
            else {
              C = n;
              var r = t.previous;
              (r.next = n), (n.previous = r);
            }
            (t.next = t.previous = null), F(t, t.expirationTime);
          } while (null !== C && C.startTime <= e);
      }
      function z(e) {
        (I = !1),
          D(e),
          j ||
            (null !== A
              ? ((j = !0), r(U))
              : null !== C && i(z, C.startTime - e));
      }
      function U(e, n) {
        (j = !1), I && ((I = !1), a()), D(n), (L = !0);
        try {
          if (e) {
            if (null !== A)
              do {
                N(A, n), D((n = t.unstable_now()));
              } while (null !== A && !o());
          } else
            for (; null !== A && A.expirationTime <= n; )
              N(A, n), D((n = t.unstable_now()));
          return null !== A || (null !== C && i(z, C.startTime - n), !1);
        } finally {
          L = !1;
        }
      }
      function B(e) {
        switch (e) {
          case 1:
            return -1;
          case 2:
            return 250;
          case 5:
            return 1073741823;
          case 4:
            return 1e4;
          default:
            return 5e3;
        }
      }
      function F(e, t) {
        if (null === A) A = e.next = e.previous = e;
        else {
          var n = null,
            r = A;
          do {
            if (t < r.expirationTime) {
              n = r;
              break;
            }
            r = r.next;
          } while (r !== A);
          null === n ? (n = A) : n === A && (A = e),
            ((t = n.previous).next = n.previous = e),
            (e.next = n),
            (e.previous = t);
        }
      }
      var G = s;
      (t.unstable_ImmediatePriority = 1),
        (t.unstable_UserBlockingPriority = 2),
        (t.unstable_NormalPriority = 3),
        (t.unstable_IdlePriority = 5),
        (t.unstable_LowPriority = 4),
        (t.unstable_runWithPriority = function (e, t) {
          switch (e) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
              break;
            default:
              e = 3;
          }
          var n = R;
          R = e;
          try {
            return t();
          } finally {
            R = n;
          }
        }),
        (t.unstable_next = function (e) {
          switch (R) {
            case 1:
            case 2:
            case 3:
              var t = 3;
              break;
            default:
              t = R;
          }
          var n = R;
          R = t;
          try {
            return e();
          } finally {
            R = n;
          }
        }),
        (t.unstable_scheduleCallback = function (e, n, o) {
          var s = t.unstable_now();
          if ("object" === typeof o && null !== o) {
            var u = o.delay;
            (u = "number" === typeof u && 0 < u ? s + u : s),
              (o = "number" === typeof o.timeout ? o.timeout : B(e));
          } else (o = B(e)), (u = s);
          if (
            ((e = {
              callback: n,
              priorityLevel: e,
              startTime: u,
              expirationTime: (o = u + o),
              next: null,
              previous: null,
            }),
            u > s)
          ) {
            if (((o = u), null === C)) C = e.next = e.previous = e;
            else {
              n = null;
              var l = C;
              do {
                if (o < l.startTime) {
                  n = l;
                  break;
                }
                l = l.next;
              } while (l !== C);
              null === n ? (n = C) : n === C && (C = e),
                ((o = n.previous).next = n.previous = e),
                (e.next = n),
                (e.previous = o);
            }
            null === A && C === e && (I ? a() : (I = !0), i(z, u - s));
          } else F(e, o), j || L || ((j = !0), r(U));
          return e;
        }),
        (t.unstable_cancelCallback = function (e) {
          var t = e.next;
          if (null !== t) {
            if (e === t) e === A ? (A = null) : e === C && (C = null);
            else {
              e === A ? (A = t) : e === C && (C = t);
              var n = e.previous;
              (n.next = t), (t.previous = n);
            }
            e.next = e.previous = null;
          }
        }),
        (t.unstable_wrapCallback = function (e) {
          var t = R;
          return function () {
            var n = R;
            R = t;
            try {
              return e.apply(this, arguments);
            } finally {
              R = n;
            }
          };
        }),
        (t.unstable_getCurrentPriorityLevel = function () {
          return R;
        }),
        (t.unstable_shouldYield = function () {
          var e = t.unstable_now();
          return (
            D(e),
            (null !== P &&
              null !== A &&
              A.startTime <= e &&
              A.expirationTime < P.expirationTime) ||
              o()
          );
        }),
        (t.unstable_requestPaint = G),
        (t.unstable_continueExecution = function () {
          j || L || ((j = !0), r(U));
        }),
        (t.unstable_pauseExecution = function () {}),
        (t.unstable_getFirstCallbackNode = function () {
          return A;
        });
    },
    function (e, t, n) {
      var r = (function (e) {
        "use strict";
        var t,
          n = Object.prototype,
          r = n.hasOwnProperty,
          i = "function" === typeof Symbol ? Symbol : {},
          a = i.iterator || "@@iterator",
          o = i.asyncIterator || "@@asyncIterator",
          s = i.toStringTag || "@@toStringTag";
        function u(e, t, n, r) {
          var i = t && t.prototype instanceof m ? t : m,
            a = Object.create(i.prototype),
            o = new O(r || []);
          return (
            (a._invoke = (function (e, t, n) {
              var r = c;
              return function (i, a) {
                if (r === f) throw new Error("Generator is already running");
                if (r === d) {
                  if ("throw" === i) throw a;
                  return A();
                }
                for (n.method = i, n.arg = a; ; ) {
                  var o = n.delegate;
                  if (o) {
                    var s = M(o, n);
                    if (s) {
                      if (s === p) continue;
                      return s;
                    }
                  }
                  if ("next" === n.method) n.sent = n._sent = n.arg;
                  else if ("throw" === n.method) {
                    if (r === c) throw ((r = d), n.arg);
                    n.dispatchException(n.arg);
                  } else "return" === n.method && n.abrupt("return", n.arg);
                  r = f;
                  var u = l(e, t, n);
                  if ("normal" === u.type) {
                    if (((r = n.done ? d : h), u.arg === p)) continue;
                    return { value: u.arg, done: n.done };
                  }
                  "throw" === u.type &&
                    ((r = d), (n.method = "throw"), (n.arg = u.arg));
                }
              };
            })(e, n, o)),
            a
          );
        }
        function l(e, t, n) {
          try {
            return { type: "normal", arg: e.call(t, n) };
          } catch (r) {
            return { type: "throw", arg: r };
          }
        }
        e.wrap = u;
        var c = "suspendedStart",
          h = "suspendedYield",
          f = "executing",
          d = "completed",
          p = {};
        function m() {}
        function v() {}
        function g() {}
        var y = {};
        y[a] = function () {
          return this;
        };
        var b = Object.getPrototypeOf,
          x = b && b(b(k([])));
        x && x !== n && r.call(x, a) && (y = x);
        var _ = (g.prototype = m.prototype = Object.create(y));
        function w(e) {
          ["next", "throw", "return"].forEach(function (t) {
            e[t] = function (e) {
              return this._invoke(t, e);
            };
          });
        }
        function S(e) {
          var t;
          this._invoke = function (n, i) {
            function a() {
              return new Promise(function (t, a) {
                !(function t(n, i, a, o) {
                  var s = l(e[n], e, i);
                  if ("throw" !== s.type) {
                    var u = s.arg,
                      c = u.value;
                    return c && "object" === typeof c && r.call(c, "__await")
                      ? Promise.resolve(c.__await).then(
                          function (e) {
                            t("next", e, a, o);
                          },
                          function (e) {
                            t("throw", e, a, o);
                          }
                        )
                      : Promise.resolve(c).then(
                          function (e) {
                            (u.value = e), a(u);
                          },
                          function (e) {
                            return t("throw", e, a, o);
                          }
                        );
                  }
                  o(s.arg);
                })(n, i, t, a);
              });
            }
            return (t = t ? t.then(a, a) : a());
          };
        }
        function M(e, n) {
          var r = e.iterator[n.method];
          if (r === t) {
            if (((n.delegate = null), "throw" === n.method)) {
              if (
                e.iterator.return &&
                ((n.method = "return"),
                (n.arg = t),
                M(e, n),
                "throw" === n.method)
              )
                return p;
              (n.method = "throw"),
                (n.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                ));
            }
            return p;
          }
          var i = l(r, e.iterator, n.arg);
          if ("throw" === i.type)
            return (
              (n.method = "throw"), (n.arg = i.arg), (n.delegate = null), p
            );
          var a = i.arg;
          return a
            ? a.done
              ? ((n[e.resultName] = a.value),
                (n.next = e.nextLoc),
                "return" !== n.method && ((n.method = "next"), (n.arg = t)),
                (n.delegate = null),
                p)
              : a
            : ((n.method = "throw"),
              (n.arg = new TypeError("iterator result is not an object")),
              (n.delegate = null),
              p);
        }
        function T(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]),
            2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])),
            this.tryEntries.push(t);
        }
        function E(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function O(e) {
          (this.tryEntries = [{ tryLoc: "root" }]),
            e.forEach(T, this),
            this.reset(!0);
        }
        function k(e) {
          if (e) {
            var n = e[a];
            if (n) return n.call(e);
            if ("function" === typeof e.next) return e;
            if (!isNaN(e.length)) {
              var i = -1,
                o = function n() {
                  for (; ++i < e.length; )
                    if (r.call(e, i)) return (n.value = e[i]), (n.done = !1), n;
                  return (n.value = t), (n.done = !0), n;
                };
              return (o.next = o);
            }
          }
          return { next: A };
        }
        function A() {
          return { value: t, done: !0 };
        }
        return (
          (v.prototype = _.constructor = g),
          (g.constructor = v),
          (g[s] = v.displayName = "GeneratorFunction"),
          (e.isGeneratorFunction = function (e) {
            var t = "function" === typeof e && e.constructor;
            return (
              !!t &&
              (t === v || "GeneratorFunction" === (t.displayName || t.name))
            );
          }),
          (e.mark = function (e) {
            return (
              Object.setPrototypeOf
                ? Object.setPrototypeOf(e, g)
                : ((e.__proto__ = g), s in e || (e[s] = "GeneratorFunction")),
              (e.prototype = Object.create(_)),
              e
            );
          }),
          (e.awrap = function (e) {
            return { __await: e };
          }),
          w(S.prototype),
          (S.prototype[o] = function () {
            return this;
          }),
          (e.AsyncIterator = S),
          (e.async = function (t, n, r, i) {
            var a = new S(u(t, n, r, i));
            return e.isGeneratorFunction(n)
              ? a
              : a.next().then(function (e) {
                  return e.done ? e.value : a.next();
                });
          }),
          w(_),
          (_[s] = "Generator"),
          (_[a] = function () {
            return this;
          }),
          (_.toString = function () {
            return "[object Generator]";
          }),
          (e.keys = function (e) {
            var t = [];
            for (var n in e) t.push(n);
            return (
              t.reverse(),
              function n() {
                for (; t.length; ) {
                  var r = t.pop();
                  if (r in e) return (n.value = r), (n.done = !1), n;
                }
                return (n.done = !0), n;
              }
            );
          }),
          (e.values = k),
          (O.prototype = {
            constructor: O,
            reset: function (e) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = t),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = t),
                this.tryEntries.forEach(E),
                !e)
              )
                for (var n in this)
                  "t" === n.charAt(0) &&
                    r.call(this, n) &&
                    !isNaN(+n.slice(1)) &&
                    (this[n] = t);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (e) {
              if (this.done) throw e;
              var n = this;
              function i(r, i) {
                return (
                  (s.type = "throw"),
                  (s.arg = e),
                  (n.next = r),
                  i && ((n.method = "next"), (n.arg = t)),
                  !!i
                );
              }
              for (var a = this.tryEntries.length - 1; a >= 0; --a) {
                var o = this.tryEntries[a],
                  s = o.completion;
                if ("root" === o.tryLoc) return i("end");
                if (o.tryLoc <= this.prev) {
                  var u = r.call(o, "catchLoc"),
                    l = r.call(o, "finallyLoc");
                  if (u && l) {
                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                    if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                  } else if (u) {
                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                  } else {
                    if (!l)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                var i = this.tryEntries[n];
                if (
                  i.tryLoc <= this.prev &&
                  r.call(i, "finallyLoc") &&
                  this.prev < i.finallyLoc
                ) {
                  var a = i;
                  break;
                }
              }
              a &&
                ("break" === e || "continue" === e) &&
                a.tryLoc <= t &&
                t <= a.finallyLoc &&
                (a = null);
              var o = a ? a.completion : {};
              return (
                (o.type = e),
                (o.arg = t),
                a
                  ? ((this.method = "next"), (this.next = a.finallyLoc), p)
                  : this.complete(o)
              );
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg),
                    (this.method = "return"),
                    (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                p
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var n = this.tryEntries[t];
                if (n.finallyLoc === e)
                  return this.complete(n.completion, n.afterLoc), E(n), p;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var n = this.tryEntries[t];
                if (n.tryLoc === e) {
                  var r = n.completion;
                  if ("throw" === r.type) {
                    var i = r.arg;
                    E(n);
                  }
                  return i;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (e, n, r) {
              return (
                (this.delegate = { iterator: k(e), resultName: n, nextLoc: r }),
                "next" === this.method && (this.arg = t),
                p
              );
            },
          }),
          e
        );
      })(e.exports);
      try {
        regeneratorRuntime = r;
      } catch (i) {
        Function("r", "regeneratorRuntime = r")(r);
      }
    },
    function (e, t, n) {
      "use strict";
      (function (e) {
        var t = n(68),
          r = n(7),
          i = n.n(r),
          a = n(0),
          o = n.n(a);
        function s(e) {
          return (s =
            "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" === typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function u(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function l(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              r = Object.keys(n);
            "function" === typeof Object.getOwnPropertySymbols &&
              (r = r.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                })
              )),
              r.forEach(function (t) {
                u(e, t, n[t]);
              });
          }
          return e;
        }
        function c(e, t) {
          if (null == e) return {};
          var n,
            r,
            i = (function (e, t) {
              if (null == e) return {};
              var n,
                r,
                i = {},
                a = Object.keys(e);
              for (r = 0; r < a.length; r++)
                (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
              return i;
            })(e, t);
          if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (r = 0; r < a.length; r++)
              (n = a[r]),
                t.indexOf(n) >= 0 ||
                  (Object.prototype.propertyIsEnumerable.call(e, n) &&
                    (i[n] = e[n]));
          }
          return i;
        }
        function h(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) {
                for (var t = 0, n = new Array(e.length); t < e.length; t++)
                  n[t] = e[t];
                return n;
              }
            })(e) ||
            (function (e) {
              if (
                Symbol.iterator in Object(e) ||
                "[object Arguments]" === Object.prototype.toString.call(e)
              )
                return Array.from(e);
            })(e) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to spread non-iterable instance"
              );
            })()
          );
        }
        var f =
          "undefined" !== typeof window
            ? window
            : "undefined" !== typeof e
            ? e
            : "undefined" !== typeof self
            ? self
            : {};
        var d = (function (e, t) {
          return e((t = { exports: {} }), t.exports), t.exports;
        })(function (e) {
          !(function (t) {
            var n = function e(t, n, r) {
                if (!u(n) || c(n) || h(n) || f(n) || s(n)) return n;
                var i,
                  a = 0,
                  o = 0;
                if (l(n))
                  for (i = [], o = n.length; a < o; a++) i.push(e(t, n[a], r));
                else
                  for (var d in ((i = {}), n))
                    Object.prototype.hasOwnProperty.call(n, d) &&
                      (i[t(d, r)] = e(t, n[d], r));
                return i;
              },
              r = function (e) {
                return d(e)
                  ? e
                  : (e = e.replace(/[\-_\s]+(.)?/g, function (e, t) {
                      return t ? t.toUpperCase() : "";
                    }))
                      .substr(0, 1)
                      .toLowerCase() + e.substr(1);
              },
              i = function (e) {
                var t = r(e);
                return t.substr(0, 1).toUpperCase() + t.substr(1);
              },
              a = function (e, t) {
                return (function (e, t) {
                  var n = (t = t || {}).separator || "_",
                    r = t.split || /(?=[A-Z])/;
                  return e.split(r).join(n);
                })(e, t).toLowerCase();
              },
              o = Object.prototype.toString,
              s = function (e) {
                return "function" === typeof e;
              },
              u = function (e) {
                return e === Object(e);
              },
              l = function (e) {
                return "[object Array]" == o.call(e);
              },
              c = function (e) {
                return "[object Date]" == o.call(e);
              },
              h = function (e) {
                return "[object RegExp]" == o.call(e);
              },
              f = function (e) {
                return "[object Boolean]" == o.call(e);
              },
              d = function (e) {
                return (e -= 0) === e;
              },
              p = function (e, t) {
                var n = t && "process" in t ? t.process : t;
                return "function" !== typeof n
                  ? e
                  : function (t, r) {
                      return n(t, e, r);
                    };
              },
              m = {
                camelize: r,
                decamelize: a,
                pascalize: i,
                depascalize: a,
                camelizeKeys: function (e, t) {
                  return n(p(r, t), e);
                },
                decamelizeKeys: function (e, t) {
                  return n(p(a, t), e, t);
                },
                pascalizeKeys: function (e, t) {
                  return n(p(i, t), e);
                },
                depascalizeKeys: function () {
                  return this.decamelizeKeys.apply(this, arguments);
                },
              };
            e.exports ? (e.exports = m) : (t.humps = m);
          })(f);
        });
        var p = !1;
        try {
          p = !0;
        } catch (b) {}
        function m(e, t) {
          return (Array.isArray(t) && t.length > 0) || (!Array.isArray(t) && t)
            ? u({}, e, t)
            : {};
        }
        function v(e) {
          return null === e
            ? null
            : "object" === s(e) && e.prefix && e.iconName
            ? e
            : Array.isArray(e) && 2 === e.length
            ? { prefix: e[0], iconName: e[1] }
            : "string" === typeof e
            ? { prefix: "fas", iconName: e }
            : void 0;
        }
        function g(e) {
          var n = e.icon,
            r = e.mask,
            i = e.symbol,
            a = e.className,
            o = e.title,
            s = v(n),
            c = m(
              "classes",
              [].concat(
                h(
                  (function (e) {
                    var t,
                      n =
                        (u(
                          (t = {
                            "fa-spin": e.spin,
                            "fa-pulse": e.pulse,
                            "fa-fw": e.fixedWidth,
                            "fa-inverse": e.inverse,
                            "fa-border": e.border,
                            "fa-li": e.listItem,
                            "fa-flip-horizontal":
                              "horizontal" === e.flip || "both" === e.flip,
                            "fa-flip-vertical":
                              "vertical" === e.flip || "both" === e.flip,
                          }),
                          "fa-".concat(e.size),
                          null !== e.size
                        ),
                        u(
                          t,
                          "fa-rotate-".concat(e.rotation),
                          null !== e.rotation
                        ),
                        u(t, "fa-pull-".concat(e.pull), null !== e.pull),
                        t);
                    return Object.keys(n)
                      .map(function (e) {
                        return n[e] ? e : null;
                      })
                      .filter(function (e) {
                        return e;
                      });
                  })(e)
                ),
                h(a.split(" "))
              )
            ),
            f = m(
              "transform",
              "string" === typeof e.transform
                ? t.b.transform(e.transform)
                : e.transform
            ),
            d = m("mask", v(r)),
            b = Object(t.a)(s, l({}, c, f, d, { symbol: i, title: o }));
          if (!b)
            return (
              (function () {
                var e;
                !p &&
                  console &&
                  "function" === typeof console.error &&
                  (e = console).error.apply(e, arguments);
              })("Could not find icon", s),
              null
            );
          var x = b.abstract,
            _ = {};
          return (
            Object.keys(e).forEach(function (t) {
              g.defaultProps.hasOwnProperty(t) || (_[t] = e[t]);
            }),
            y(x[0], _)
          );
        }
        (g.displayName = "FontAwesomeIcon"),
          (g.propTypes = {
            border: i.a.bool,
            className: i.a.string,
            mask: i.a.oneOfType([i.a.object, i.a.array, i.a.string]),
            fixedWidth: i.a.bool,
            inverse: i.a.bool,
            flip: i.a.oneOf(["horizontal", "vertical", "both"]),
            icon: i.a.oneOfType([i.a.object, i.a.array, i.a.string]),
            listItem: i.a.bool,
            pull: i.a.oneOf(["right", "left"]),
            pulse: i.a.bool,
            rotation: i.a.oneOf([90, 180, 270]),
            size: i.a.oneOf([
              "lg",
              "xs",
              "sm",
              "1x",
              "2x",
              "3x",
              "4x",
              "5x",
              "6x",
              "7x",
              "8x",
              "9x",
              "10x",
            ]),
            spin: i.a.bool,
            symbol: i.a.oneOfType([i.a.bool, i.a.string]),
            title: i.a.string,
            transform: i.a.oneOfType([i.a.string, i.a.object]),
          }),
          (g.defaultProps = {
            border: !1,
            className: "",
            mask: null,
            fixedWidth: !1,
            inverse: !1,
            flip: null,
            icon: null,
            listItem: !1,
            pull: null,
            pulse: !1,
            rotation: null,
            size: null,
            spin: !1,
            symbol: !1,
            title: "",
            transform: null,
          });
        var y = function e(t, n) {
          var r =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          if ("string" === typeof n) return n;
          var i = (n.children || []).map(function (n) {
              return e(t, n);
            }),
            a = Object.keys(n.attributes || {}).reduce(
              function (e, t) {
                var r = n.attributes[t];
                switch (t) {
                  case "class":
                    (e.attrs.className = r), delete n.attributes.class;
                    break;
                  case "style":
                    e.attrs.style = r
                      .split(";")
                      .map(function (e) {
                        return e.trim();
                      })
                      .filter(function (e) {
                        return e;
                      })
                      .reduce(function (e, t) {
                        var n,
                          r = t.indexOf(":"),
                          i = d.camelize(t.slice(0, r)),
                          a = t.slice(r + 1).trim();
                        return (
                          i.startsWith("webkit")
                            ? (e[
                                ((n = i),
                                n.charAt(0).toUpperCase() + n.slice(1))
                              ] = a)
                            : (e[i] = a),
                          e
                        );
                      }, {});
                    break;
                  default:
                    0 === t.indexOf("aria-") || 0 === t.indexOf("data-")
                      ? (e.attrs[t.toLowerCase()] = r)
                      : (e.attrs[d.camelize(t)] = r);
                }
                return e;
              },
              { attrs: {} }
            ),
            o = r.style,
            s = void 0 === o ? {} : o,
            u = c(r, ["style"]);
          return (
            (a.attrs.style = l({}, a.attrs.style, s)),
            t.apply(void 0, [n.tag, l({}, a.attrs, u)].concat(h(i)))
          );
        }.bind(null, o.a.createElement);
      }.call(this, n(43)));
    },
    function (e, t, n) {
      (function (e) {
        var r =
            ("undefined" !== typeof e && e) ||
            ("undefined" !== typeof self && self) ||
            window,
          i = Function.prototype.apply;
        function a(e, t) {
          (this._id = e), (this._clearFn = t);
        }
        (t.setTimeout = function () {
          return new a(i.call(setTimeout, r, arguments), clearTimeout);
        }),
          (t.setInterval = function () {
            return new a(i.call(setInterval, r, arguments), clearInterval);
          }),
          (t.clearTimeout = t.clearInterval =
            function (e) {
              e && e.close();
            }),
          (a.prototype.unref = a.prototype.ref = function () {}),
          (a.prototype.close = function () {
            this._clearFn.call(r, this._id);
          }),
          (t.enroll = function (e, t) {
            clearTimeout(e._idleTimeoutId), (e._idleTimeout = t);
          }),
          (t.unenroll = function (e) {
            clearTimeout(e._idleTimeoutId), (e._idleTimeout = -1);
          }),
          (t._unrefActive = t.active =
            function (e) {
              clearTimeout(e._idleTimeoutId);
              var t = e._idleTimeout;
              t >= 0 &&
                (e._idleTimeoutId = setTimeout(function () {
                  e._onTimeout && e._onTimeout();
                }, t));
            }),
          n(101),
          (t.setImmediate =
            ("undefined" !== typeof self && self.setImmediate) ||
            ("undefined" !== typeof e && e.setImmediate) ||
            (this && this.setImmediate)),
          (t.clearImmediate =
            ("undefined" !== typeof self && self.clearImmediate) ||
            ("undefined" !== typeof e && e.clearImmediate) ||
            (this && this.clearImmediate));
      }.call(this, n(43)));
    },
    function (e, t, n) {
      (function (e, t) {
        !(function (e, n) {
          "use strict";
          if (!e.setImmediate) {
            var r,
              i = 1,
              a = {},
              o = !1,
              s = e.document,
              u = Object.getPrototypeOf && Object.getPrototypeOf(e);
            (u = u && u.setTimeout ? u : e),
              "[object process]" === {}.toString.call(e.process)
                ? (r = function (e) {
                    t.nextTick(function () {
                      c(e);
                    });
                  })
                : (function () {
                    if (e.postMessage && !e.importScripts) {
                      var t = !0,
                        n = e.onmessage;
                      return (
                        (e.onmessage = function () {
                          t = !1;
                        }),
                        e.postMessage("", "*"),
                        (e.onmessage = n),
                        t
                      );
                    }
                  })()
                ? (function () {
                    var t = "setImmediate$" + Math.random() + "$",
                      n = function (n) {
                        n.source === e &&
                          "string" === typeof n.data &&
                          0 === n.data.indexOf(t) &&
                          c(+n.data.slice(t.length));
                      };
                    e.addEventListener
                      ? e.addEventListener("message", n, !1)
                      : e.attachEvent("onmessage", n),
                      (r = function (n) {
                        e.postMessage(t + n, "*");
                      });
                  })()
                : e.MessageChannel
                ? (function () {
                    var e = new MessageChannel();
                    (e.port1.onmessage = function (e) {
                      c(e.data);
                    }),
                      (r = function (t) {
                        e.port2.postMessage(t);
                      });
                  })()
                : s && "onreadystatechange" in s.createElement("script")
                ? (function () {
                    var e = s.documentElement;
                    r = function (t) {
                      var n = s.createElement("script");
                      (n.onreadystatechange = function () {
                        c(t),
                          (n.onreadystatechange = null),
                          e.removeChild(n),
                          (n = null);
                      }),
                        e.appendChild(n);
                    };
                  })()
                : (r = function (e) {
                    setTimeout(c, 0, e);
                  }),
              (u.setImmediate = function (e) {
                "function" !== typeof e && (e = new Function("" + e));
                for (
                  var t = new Array(arguments.length - 1), n = 0;
                  n < t.length;
                  n++
                )
                  t[n] = arguments[n + 1];
                var o = { callback: e, args: t };
                return (a[i] = o), r(i), i++;
              }),
              (u.clearImmediate = l);
          }
          function l(e) {
            delete a[e];
          }
          function c(e) {
            if (o) setTimeout(c, 0, e);
            else {
              var t = a[e];
              if (t) {
                o = !0;
                try {
                  !(function (e) {
                    var t = e.callback,
                      r = e.args;
                    switch (r.length) {
                      case 0:
                        t();
                        break;
                      case 1:
                        t(r[0]);
                        break;
                      case 2:
                        t(r[0], r[1]);
                        break;
                      case 3:
                        t(r[0], r[1], r[2]);
                        break;
                      default:
                        t.apply(n, r);
                    }
                  })(t);
                } finally {
                  l(e), (o = !1);
                }
              }
            }
          }
        })(
          "undefined" === typeof self
            ? "undefined" === typeof e
              ? this
              : e
            : self
        );
      }.call(this, n(43), n(64)));
    },
    function (e, t, n) {
      "use strict";
      var r = n(103);
      function i() {}
      function a() {}
      (a.resetWarningCache = i),
        (e.exports = function () {
          function e(e, t, n, i, a, o) {
            if (o !== r) {
              var s = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
              );
              throw ((s.name = "Invariant Violation"), s);
            }
          }
          function t() {
            return e;
          }
          e.isRequired = e;
          var n = {
            array: e,
            bool: e,
            func: e,
            number: e,
            object: e,
            string: e,
            symbol: e,
            any: e,
            arrayOf: t,
            element: e,
            elementType: e,
            instanceOf: t,
            node: e,
            objectOf: t,
            oneOf: t,
            oneOfType: t,
            shape: t,
            exact: t,
            checkPropTypes: a,
            resetWarningCache: i,
          };
          return (n.PropTypes = n), n;
        });
    },
    function (e, t, n) {
      "use strict";
      e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    },
    function (e, t, n) {
      "use strict";
    },
    function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = "function" === typeof Symbol && Symbol.for,
        i = r ? Symbol.for("react.element") : 60103,
        a = r ? Symbol.for("react.portal") : 60106,
        o = r ? Symbol.for("react.fragment") : 60107,
        s = r ? Symbol.for("react.strict_mode") : 60108,
        u = r ? Symbol.for("react.profiler") : 60114,
        l = r ? Symbol.for("react.provider") : 60109,
        c = r ? Symbol.for("react.context") : 60110,
        h = r ? Symbol.for("react.async_mode") : 60111,
        f = r ? Symbol.for("react.concurrent_mode") : 60111,
        d = r ? Symbol.for("react.forward_ref") : 60112,
        p = r ? Symbol.for("react.suspense") : 60113,
        m = r ? Symbol.for("react.suspense_list") : 60120,
        v = r ? Symbol.for("react.memo") : 60115,
        g = r ? Symbol.for("react.lazy") : 60116,
        y = r ? Symbol.for("react.fundamental") : 60117,
        b = r ? Symbol.for("react.responder") : 60118;
      function x(e) {
        if ("object" === typeof e && null !== e) {
          var t = e.$$typeof;
          switch (t) {
            case i:
              switch ((e = e.type)) {
                case h:
                case f:
                case o:
                case u:
                case s:
                case p:
                  return e;
                default:
                  switch ((e = e && e.$$typeof)) {
                    case c:
                    case d:
                    case l:
                      return e;
                    default:
                      return t;
                  }
              }
            case g:
            case v:
            case a:
              return t;
          }
        }
      }
      function _(e) {
        return x(e) === f;
      }
      (t.typeOf = x),
        (t.AsyncMode = h),
        (t.ConcurrentMode = f),
        (t.ContextConsumer = c),
        (t.ContextProvider = l),
        (t.Element = i),
        (t.ForwardRef = d),
        (t.Fragment = o),
        (t.Lazy = g),
        (t.Memo = v),
        (t.Portal = a),
        (t.Profiler = u),
        (t.StrictMode = s),
        (t.Suspense = p),
        (t.isValidElementType = function (e) {
          return (
            "string" === typeof e ||
            "function" === typeof e ||
            e === o ||
            e === f ||
            e === u ||
            e === s ||
            e === p ||
            e === m ||
            ("object" === typeof e &&
              null !== e &&
              (e.$$typeof === g ||
                e.$$typeof === v ||
                e.$$typeof === l ||
                e.$$typeof === c ||
                e.$$typeof === d ||
                e.$$typeof === y ||
                e.$$typeof === b))
          );
        }),
        (t.isAsyncMode = function (e) {
          return _(e) || x(e) === h;
        }),
        (t.isConcurrentMode = _),
        (t.isContextConsumer = function (e) {
          return x(e) === c;
        }),
        (t.isContextProvider = function (e) {
          return x(e) === l;
        }),
        (t.isElement = function (e) {
          return "object" === typeof e && null !== e && e.$$typeof === i;
        }),
        (t.isForwardRef = function (e) {
          return x(e) === d;
        }),
        (t.isFragment = function (e) {
          return x(e) === o;
        }),
        (t.isLazy = function (e) {
          return x(e) === g;
        }),
        (t.isMemo = function (e) {
          return x(e) === v;
        }),
        (t.isPortal = function (e) {
          return x(e) === a;
        }),
        (t.isProfiler = function (e) {
          return x(e) === u;
        }),
        (t.isStrictMode = function (e) {
          return x(e) === s;
        }),
        (t.isSuspense = function (e) {
          return x(e) === p;
        });
    },
    function (e, t) {
      e.exports =
        Array.isArray ||
        function (e) {
          return "[object Array]" == Object.prototype.toString.call(e);
        };
    },
    ,
    function (e, t, n) {
      var r = n(109),
        i = n(73);
      e.exports = function (e, t) {
        return !t || ("object" !== r(t) && "function" !== typeof t) ? i(e) : t;
      };
    },
    function (e, t) {
      function n(e) {
        return (n =
          "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" === typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              })(e);
      }
      function r(t) {
        return (
          "function" === typeof Symbol && "symbol" === n(Symbol.iterator)
            ? (e.exports = r =
                function (e) {
                  return n(e);
                })
            : (e.exports = r =
                function (e) {
                  return e &&
                    "function" === typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : n(e);
                }),
          r(t)
        );
      }
      e.exports = r;
    },
    function (e, t, n) {
      var r = n(111);
      function i(t, n, a) {
        return (
          "undefined" !== typeof Reflect && Reflect.get
            ? (e.exports = i = Reflect.get)
            : (e.exports = i =
                function (e, t, n) {
                  var i = r(e, t);
                  if (i) {
                    var a = Object.getOwnPropertyDescriptor(i, t);
                    return a.get ? a.get.call(n) : a.value;
                  }
                }),
          i(t, n, a || t)
        );
      }
      e.exports = i;
    },
    function (e, t, n) {
      var r = n(74);
      e.exports = function (e, t) {
        for (
          ;
          !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = r(e));

        );
        return e;
      };
    },
    function (e, t, n) {
      var r = n(113);
      e.exports = function (e, t) {
        if ("function" !== typeof t && null !== t)
          throw new TypeError(
            "Super expression must either be null or a function"
          );
        (e.prototype = Object.create(t && t.prototype, {
          constructor: { value: e, writable: !0, configurable: !0 },
        })),
          t && r(e, t);
      };
    },
    function (e, t) {
      function n(t, r) {
        return (
          (e.exports = n =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            }),
          n(t, r)
        );
      }
      e.exports = n;
    },
    function (e, t) {
      e.exports = function (e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      };
    },
    function (e, t) {
      function n(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r);
        }
      }
      e.exports = function (e, t, r) {
        return t && n(e.prototype, t), r && n(e, r), e;
      };
    },
    ,
    function (e, t, n) {
      "use strict";
      function r(e) {
        return e && "object" === typeof e && "default" in e ? e.default : e;
      }
      var i = n(0),
        a = r(i),
        o = r(n(67));
      function s(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      var u = !(
        "undefined" === typeof window ||
        !window.document ||
        !window.document.createElement
      );
      e.exports = function (e, t, n) {
        if ("function" !== typeof e)
          throw new Error("Expected reducePropsToState to be a function.");
        if ("function" !== typeof t)
          throw new Error(
            "Expected handleStateChangeOnClient to be a function."
          );
        if ("undefined" !== typeof n && "function" !== typeof n)
          throw new Error(
            "Expected mapStateOnServer to either be undefined or a function."
          );
        return function (r) {
          if ("function" !== typeof r)
            throw new Error(
              "Expected WrappedComponent to be a React component."
            );
          var l,
            c = [];
          function h() {
            (l = e(
              c.map(function (e) {
                return e.props;
              })
            )),
              f.canUseDOM ? t(l) : n && (l = n(l));
          }
          var f = (function (e) {
            var t, n;
            function i() {
              return e.apply(this, arguments) || this;
            }
            (n = e),
              ((t = i).prototype = Object.create(n.prototype)),
              (t.prototype.constructor = t),
              (t.__proto__ = n),
              (i.peek = function () {
                return l;
              }),
              (i.rewind = function () {
                if (i.canUseDOM)
                  throw new Error(
                    "You may only call rewind() on the server. Call peek() to read the current state."
                  );
                var e = l;
                return (l = void 0), (c = []), e;
              });
            var s = i.prototype;
            return (
              (s.shouldComponentUpdate = function (e) {
                return !o(e, this.props);
              }),
              (s.componentWillMount = function () {
                c.push(this), h();
              }),
              (s.componentDidUpdate = function () {
                h();
              }),
              (s.componentWillUnmount = function () {
                var e = c.indexOf(this);
                c.splice(e, 1), h();
              }),
              (s.render = function () {
                return a.createElement(r, this.props);
              }),
              i
            );
          })(i.Component);
          return (
            s(
              f,
              "displayName",
              "SideEffect(" +
                (function (e) {
                  return e.displayName || e.name || "Component";
                })(r) +
                ")"
            ),
            s(f, "canUseDOM", u),
            f
          );
        };
      };
    },
    function (e, t, n) {
      "use strict";
      var r = Array.isArray,
        i = Object.keys,
        a = Object.prototype.hasOwnProperty,
        o = "undefined" !== typeof Element;
      e.exports = function (e, t) {
        try {
          return (function e(t, n) {
            if (t === n) return !0;
            if (t && n && "object" == typeof t && "object" == typeof n) {
              var s,
                u,
                l,
                c = r(t),
                h = r(n);
              if (c && h) {
                if ((u = t.length) != n.length) return !1;
                for (s = u; 0 !== s--; ) if (!e(t[s], n[s])) return !1;
                return !0;
              }
              if (c != h) return !1;
              var f = t instanceof Date,
                d = n instanceof Date;
              if (f != d) return !1;
              if (f && d) return t.getTime() == n.getTime();
              var p = t instanceof RegExp,
                m = n instanceof RegExp;
              if (p != m) return !1;
              if (p && m) return t.toString() == n.toString();
              var v = i(t);
              if ((u = v.length) !== i(n).length) return !1;
              for (s = u; 0 !== s--; ) if (!a.call(n, v[s])) return !1;
              if (o && t instanceof Element && n instanceof Element)
                return t === n;
              for (s = u; 0 !== s--; )
                if (("_owner" !== (l = v[s]) || !t.$$typeof) && !e(t[l], n[l]))
                  return !1;
              return !0;
            }
            return t !== t && n !== n;
          })(e, t);
        } catch (n) {
          if (
            (n.message && n.message.match(/stack|recursion/i)) ||
            -2146828260 === n.number
          )
            return (
              console.warn(
                "Warning: react-fast-compare does not handle circular references.",
                n.name,
                n.message
              ),
              !1
            );
          throw n;
        }
      };
    },
    function (e, t, n) {
      (function (e) {
        (t.__esModule = !0),
          (t.warn =
            t.requestAnimationFrame =
            t.reducePropsToState =
            t.mapStateOnServer =
            t.handleClientStateChange =
            t.convertReactPropstoHtmlAttributes =
              void 0);
        var r =
            "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" === typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                },
          i =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          a = u(n(0)),
          o = u(n(63)),
          s = n(75);
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var l = function (e) {
            var t =
              !(arguments.length > 1 && void 0 !== arguments[1]) ||
              arguments[1];
            return !1 === t
              ? String(e)
              : String(e)
                  .replace(/&/g, "&amp;")
                  .replace(/</g, "&lt;")
                  .replace(/>/g, "&gt;")
                  .replace(/"/g, "&quot;")
                  .replace(/'/g, "&#x27;");
          },
          c = function (e) {
            var t = m(e, s.TAG_NAMES.TITLE),
              n = m(e, s.HELMET_PROPS.TITLE_TEMPLATE);
            if (n && t)
              return n.replace(/%s/g, function () {
                return t;
              });
            var r = m(e, s.HELMET_PROPS.DEFAULT_TITLE);
            return t || r || void 0;
          },
          h = function (e) {
            return (
              m(e, s.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {}
            );
          },
          f = function (e, t) {
            return t
              .filter(function (t) {
                return "undefined" !== typeof t[e];
              })
              .map(function (t) {
                return t[e];
              })
              .reduce(function (e, t) {
                return i({}, e, t);
              }, {});
          },
          d = function (e, t) {
            return t
              .filter(function (e) {
                return "undefined" !== typeof e[s.TAG_NAMES.BASE];
              })
              .map(function (e) {
                return e[s.TAG_NAMES.BASE];
              })
              .reverse()
              .reduce(function (t, n) {
                if (!t.length)
                  for (var r = Object.keys(n), i = 0; i < r.length; i++) {
                    var a = r[i].toLowerCase();
                    if (-1 !== e.indexOf(a) && n[a]) return t.concat(n);
                  }
                return t;
              }, []);
          },
          p = function (e, t, n) {
            var i = {};
            return n
              .filter(function (t) {
                return (
                  !!Array.isArray(t[e]) ||
                  ("undefined" !== typeof t[e] &&
                    x(
                      "Helmet: " +
                        e +
                        ' should be of type "Array". Instead found type "' +
                        r(t[e]) +
                        '"'
                    ),
                  !1)
                );
              })
              .map(function (t) {
                return t[e];
              })
              .reverse()
              .reduce(function (e, n) {
                var r = {};
                n.filter(function (e) {
                  for (
                    var n = void 0, a = Object.keys(e), o = 0;
                    o < a.length;
                    o++
                  ) {
                    var u = a[o],
                      l = u.toLowerCase();
                    -1 === t.indexOf(l) ||
                      (n === s.TAG_PROPERTIES.REL &&
                        "canonical" === e[n].toLowerCase()) ||
                      (l === s.TAG_PROPERTIES.REL &&
                        "stylesheet" === e[l].toLowerCase()) ||
                      (n = l),
                      -1 === t.indexOf(u) ||
                        (u !== s.TAG_PROPERTIES.INNER_HTML &&
                          u !== s.TAG_PROPERTIES.CSS_TEXT &&
                          u !== s.TAG_PROPERTIES.ITEM_PROP) ||
                        (n = u);
                  }
                  if (!n || !e[n]) return !1;
                  var c = e[n].toLowerCase();
                  return (
                    i[n] || (i[n] = {}),
                    r[n] || (r[n] = {}),
                    !i[n][c] && ((r[n][c] = !0), !0)
                  );
                })
                  .reverse()
                  .forEach(function (t) {
                    return e.push(t);
                  });
                for (var a = Object.keys(r), u = 0; u < a.length; u++) {
                  var l = a[u],
                    c = (0, o.default)({}, i[l], r[l]);
                  i[l] = c;
                }
                return e;
              }, [])
              .reverse();
          },
          m = function (e, t) {
            for (var n = e.length - 1; n >= 0; n--) {
              var r = e[n];
              if (r.hasOwnProperty(t)) return r[t];
            }
            return null;
          },
          v = (function () {
            var e = Date.now();
            return function (t) {
              var n = Date.now();
              n - e > 16
                ? ((e = n), t(n))
                : setTimeout(function () {
                    v(t);
                  }, 0);
            };
          })(),
          g = function (e) {
            return clearTimeout(e);
          },
          y =
            "undefined" !== typeof window
              ? window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                v
              : e.requestAnimationFrame || v,
          b =
            "undefined" !== typeof window
              ? window.cancelAnimationFrame ||
                window.webkitCancelAnimationFrame ||
                window.mozCancelAnimationFrame ||
                g
              : e.cancelAnimationFrame || g,
          x = function (e) {
            return (
              console && "function" === typeof console.warn && console.warn(e)
            );
          },
          _ = null,
          w = function (e, t) {
            var n = e.baseTag,
              r = e.bodyAttributes,
              i = e.htmlAttributes,
              a = e.linkTags,
              o = e.metaTags,
              u = e.noscriptTags,
              l = e.onChangeClientState,
              c = e.scriptTags,
              h = e.styleTags,
              f = e.title,
              d = e.titleAttributes;
            T(s.TAG_NAMES.BODY, r), T(s.TAG_NAMES.HTML, i), M(f, d);
            var p = {
                baseTag: E(s.TAG_NAMES.BASE, n),
                linkTags: E(s.TAG_NAMES.LINK, a),
                metaTags: E(s.TAG_NAMES.META, o),
                noscriptTags: E(s.TAG_NAMES.NOSCRIPT, u),
                scriptTags: E(s.TAG_NAMES.SCRIPT, c),
                styleTags: E(s.TAG_NAMES.STYLE, h),
              },
              m = {},
              v = {};
            Object.keys(p).forEach(function (e) {
              var t = p[e],
                n = t.newTags,
                r = t.oldTags;
              n.length && (m[e] = n), r.length && (v[e] = p[e].oldTags);
            }),
              t && t(),
              l(e, m, v);
          },
          S = function (e) {
            return Array.isArray(e) ? e.join("") : e;
          },
          M = function (e, t) {
            "undefined" !== typeof e &&
              document.title !== e &&
              (document.title = S(e)),
              T(s.TAG_NAMES.TITLE, t);
          },
          T = function (e, t) {
            var n = document.getElementsByTagName(e)[0];
            if (n) {
              for (
                var r = n.getAttribute(s.HELMET_ATTRIBUTE),
                  i = r ? r.split(",") : [],
                  a = [].concat(i),
                  o = Object.keys(t),
                  u = 0;
                u < o.length;
                u++
              ) {
                var l = o[u],
                  c = t[l] || "";
                n.getAttribute(l) !== c && n.setAttribute(l, c),
                  -1 === i.indexOf(l) && i.push(l);
                var h = a.indexOf(l);
                -1 !== h && a.splice(h, 1);
              }
              for (var f = a.length - 1; f >= 0; f--) n.removeAttribute(a[f]);
              i.length === a.length
                ? n.removeAttribute(s.HELMET_ATTRIBUTE)
                : n.getAttribute(s.HELMET_ATTRIBUTE) !== o.join(",") &&
                  n.setAttribute(s.HELMET_ATTRIBUTE, o.join(","));
            }
          },
          E = function (e, t) {
            var n = document.head || document.querySelector(s.TAG_NAMES.HEAD),
              r = n.querySelectorAll(e + "[" + s.HELMET_ATTRIBUTE + "]"),
              i = Array.prototype.slice.call(r),
              a = [],
              o = void 0;
            return (
              t &&
                t.length &&
                t.forEach(function (t) {
                  var n = document.createElement(e);
                  for (var r in t)
                    if (t.hasOwnProperty(r))
                      if (r === s.TAG_PROPERTIES.INNER_HTML)
                        n.innerHTML = t.innerHTML;
                      else if (r === s.TAG_PROPERTIES.CSS_TEXT)
                        n.styleSheet
                          ? (n.styleSheet.cssText = t.cssText)
                          : n.appendChild(document.createTextNode(t.cssText));
                      else {
                        var u = "undefined" === typeof t[r] ? "" : t[r];
                        n.setAttribute(r, u);
                      }
                  n.setAttribute(s.HELMET_ATTRIBUTE, "true"),
                    i.some(function (e, t) {
                      return (o = t), n.isEqualNode(e);
                    })
                      ? i.splice(o, 1)
                      : a.push(n);
                }),
              i.forEach(function (e) {
                return e.parentNode.removeChild(e);
              }),
              a.forEach(function (e) {
                return n.appendChild(e);
              }),
              { oldTags: i, newTags: a }
            );
          },
          O = function (e) {
            return Object.keys(e).reduce(function (t, n) {
              var r =
                "undefined" !== typeof e[n] ? n + '="' + e[n] + '"' : "" + n;
              return t ? t + " " + r : r;
            }, "");
          },
          k = function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            return Object.keys(e).reduce(function (t, n) {
              return (t[s.REACT_TAG_MAP[n] || n] = e[n]), t;
            }, t);
          },
          A = function (e, t, n) {
            switch (e) {
              case s.TAG_NAMES.TITLE:
                return {
                  toComponent: function () {
                    return (function (e, t, n) {
                      var r,
                        i = (((r = { key: t })[s.HELMET_ATTRIBUTE] = !0), r),
                        o = k(n, i);
                      return [a.default.createElement(s.TAG_NAMES.TITLE, o, t)];
                    })(0, t.title, t.titleAttributes);
                  },
                  toString: function () {
                    return (function (e, t, n, r) {
                      var i = O(n),
                        a = S(t);
                      return i
                        ? "<" +
                            e +
                            " " +
                            s.HELMET_ATTRIBUTE +
                            '="true" ' +
                            i +
                            ">" +
                            l(a, r) +
                            "</" +
                            e +
                            ">"
                        : "<" +
                            e +
                            " " +
                            s.HELMET_ATTRIBUTE +
                            '="true">' +
                            l(a, r) +
                            "</" +
                            e +
                            ">";
                    })(e, t.title, t.titleAttributes, n);
                  },
                };
              case s.ATTRIBUTE_NAMES.BODY:
              case s.ATTRIBUTE_NAMES.HTML:
                return {
                  toComponent: function () {
                    return k(t);
                  },
                  toString: function () {
                    return O(t);
                  },
                };
              default:
                return {
                  toComponent: function () {
                    return (function (e, t) {
                      return t.map(function (t, n) {
                        var r,
                          i = (((r = { key: n })[s.HELMET_ATTRIBUTE] = !0), r);
                        return (
                          Object.keys(t).forEach(function (e) {
                            var n = s.REACT_TAG_MAP[e] || e;
                            if (
                              n === s.TAG_PROPERTIES.INNER_HTML ||
                              n === s.TAG_PROPERTIES.CSS_TEXT
                            ) {
                              var r = t.innerHTML || t.cssText;
                              i.dangerouslySetInnerHTML = { __html: r };
                            } else i[n] = t[e];
                          }),
                          a.default.createElement(e, i)
                        );
                      });
                    })(e, t);
                  },
                  toString: function () {
                    return (function (e, t, n) {
                      return t.reduce(function (t, r) {
                        var i = Object.keys(r)
                            .filter(function (e) {
                              return !(
                                e === s.TAG_PROPERTIES.INNER_HTML ||
                                e === s.TAG_PROPERTIES.CSS_TEXT
                              );
                            })
                            .reduce(function (e, t) {
                              var i =
                                "undefined" === typeof r[t]
                                  ? t
                                  : t + '="' + l(r[t], n) + '"';
                              return e ? e + " " + i : i;
                            }, ""),
                          a = r.innerHTML || r.cssText || "",
                          o = -1 === s.SELF_CLOSING_TAGS.indexOf(e);
                        return (
                          t +
                          "<" +
                          e +
                          " " +
                          s.HELMET_ATTRIBUTE +
                          '="true" ' +
                          i +
                          (o ? "/>" : ">" + a + "</" + e + ">")
                        );
                      }, "");
                    })(e, t, n);
                  },
                };
            }
          };
        (t.convertReactPropstoHtmlAttributes = function (e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return Object.keys(e).reduce(function (t, n) {
            return (t[s.HTML_TAG_MAP[n] || n] = e[n]), t;
          }, t);
        }),
          (t.handleClientStateChange = function (e) {
            _ && b(_),
              e.defer
                ? (_ = y(function () {
                    w(e, function () {
                      _ = null;
                    });
                  }))
                : (w(e), (_ = null));
          }),
          (t.mapStateOnServer = function (e) {
            var t = e.baseTag,
              n = e.bodyAttributes,
              r = e.encode,
              i = e.htmlAttributes,
              a = e.linkTags,
              o = e.metaTags,
              u = e.noscriptTags,
              l = e.scriptTags,
              c = e.styleTags,
              h = e.title,
              f = void 0 === h ? "" : h,
              d = e.titleAttributes;
            return {
              base: A(s.TAG_NAMES.BASE, t, r),
              bodyAttributes: A(s.ATTRIBUTE_NAMES.BODY, n, r),
              htmlAttributes: A(s.ATTRIBUTE_NAMES.HTML, i, r),
              link: A(s.TAG_NAMES.LINK, a, r),
              meta: A(s.TAG_NAMES.META, o, r),
              noscript: A(s.TAG_NAMES.NOSCRIPT, u, r),
              script: A(s.TAG_NAMES.SCRIPT, l, r),
              style: A(s.TAG_NAMES.STYLE, c, r),
              title: A(s.TAG_NAMES.TITLE, { title: f, titleAttributes: d }, r),
            };
          }),
          (t.reducePropsToState = function (e) {
            return {
              baseTag: d([s.TAG_PROPERTIES.HREF], e),
              bodyAttributes: f(s.ATTRIBUTE_NAMES.BODY, e),
              defer: m(e, s.HELMET_PROPS.DEFER),
              encode: m(e, s.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),
              htmlAttributes: f(s.ATTRIBUTE_NAMES.HTML, e),
              linkTags: p(
                s.TAG_NAMES.LINK,
                [s.TAG_PROPERTIES.REL, s.TAG_PROPERTIES.HREF],
                e
              ),
              metaTags: p(
                s.TAG_NAMES.META,
                [
                  s.TAG_PROPERTIES.NAME,
                  s.TAG_PROPERTIES.CHARSET,
                  s.TAG_PROPERTIES.HTTPEQUIV,
                  s.TAG_PROPERTIES.PROPERTY,
                  s.TAG_PROPERTIES.ITEM_PROP,
                ],
                e
              ),
              noscriptTags: p(
                s.TAG_NAMES.NOSCRIPT,
                [s.TAG_PROPERTIES.INNER_HTML],
                e
              ),
              onChangeClientState: h(e),
              scriptTags: p(
                s.TAG_NAMES.SCRIPT,
                [s.TAG_PROPERTIES.SRC, s.TAG_PROPERTIES.INNER_HTML],
                e
              ),
              styleTags: p(s.TAG_NAMES.STYLE, [s.TAG_PROPERTIES.CSS_TEXT], e),
              title: c(e),
              titleAttributes: f(s.ATTRIBUTE_NAMES.TITLE, e),
            };
          }),
          (t.requestAnimationFrame = y),
          (t.warn = x);
      }.call(this, n(43)));
    },
    ,
    function (e, t, n) {
      "use strict";
      var r = n(77);
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = function (e, t) {
          var n = a.default.memo(
            a.default.forwardRef(function (t, n) {
              return a.default.createElement(
                o.default,
                (0, i.default)({ ref: n }, t),
                e
              );
            })
          );
          0;
          return (n.muiName = o.default.muiName), n;
        });
      var i = r(n(122)),
        a = r(n(0)),
        o = r(n(78));
    },
    function (e, t) {
      function n() {
        return (
          (e.exports = n =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }),
          n.apply(this, arguments)
        );
      }
      e.exports = n;
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      "use strict";
      (function (e) {
        var r = n(129),
          i = n(130),
          a = n(131);
        function o() {
          return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
        }
        function s(e, t) {
          if (o() < t) throw new RangeError("Invalid typed array length");
          return (
            u.TYPED_ARRAY_SUPPORT
              ? ((e = new Uint8Array(t)).__proto__ = u.prototype)
              : (null === e && (e = new u(t)), (e.length = t)),
            e
          );
        }
        function u(e, t, n) {
          if (!u.TYPED_ARRAY_SUPPORT && !(this instanceof u))
            return new u(e, t, n);
          if ("number" === typeof e) {
            if ("string" === typeof t)
              throw new Error(
                "If encoding is specified then the first argument must be a string"
              );
            return h(this, e);
          }
          return l(this, e, t, n);
        }
        function l(e, t, n, r) {
          if ("number" === typeof t)
            throw new TypeError('"value" argument must not be a number');
          return "undefined" !== typeof ArrayBuffer && t instanceof ArrayBuffer
            ? (function (e, t, n, r) {
                if ((t.byteLength, n < 0 || t.byteLength < n))
                  throw new RangeError("'offset' is out of bounds");
                if (t.byteLength < n + (r || 0))
                  throw new RangeError("'length' is out of bounds");
                t =
                  void 0 === n && void 0 === r
                    ? new Uint8Array(t)
                    : void 0 === r
                    ? new Uint8Array(t, n)
                    : new Uint8Array(t, n, r);
                u.TYPED_ARRAY_SUPPORT
                  ? ((e = t).__proto__ = u.prototype)
                  : (e = f(e, t));
                return e;
              })(e, t, n, r)
            : "string" === typeof t
            ? (function (e, t, n) {
                ("string" === typeof n && "" !== n) || (n = "utf8");
                if (!u.isEncoding(n))
                  throw new TypeError(
                    '"encoding" must be a valid string encoding'
                  );
                var r = 0 | p(t, n),
                  i = (e = s(e, r)).write(t, n);
                i !== r && (e = e.slice(0, i));
                return e;
              })(e, t, n)
            : (function (e, t) {
                if (u.isBuffer(t)) {
                  var n = 0 | d(t.length);
                  return 0 === (e = s(e, n)).length
                    ? e
                    : (t.copy(e, 0, 0, n), e);
                }
                if (t) {
                  if (
                    ("undefined" !== typeof ArrayBuffer &&
                      t.buffer instanceof ArrayBuffer) ||
                    "length" in t
                  )
                    return "number" !== typeof t.length || (r = t.length) !== r
                      ? s(e, 0)
                      : f(e, t);
                  if ("Buffer" === t.type && a(t.data)) return f(e, t.data);
                }
                var r;
                throw new TypeError(
                  "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
                );
              })(e, t);
        }
        function c(e) {
          if ("number" !== typeof e)
            throw new TypeError('"size" argument must be a number');
          if (e < 0)
            throw new RangeError('"size" argument must not be negative');
        }
        function h(e, t) {
          if ((c(t), (e = s(e, t < 0 ? 0 : 0 | d(t))), !u.TYPED_ARRAY_SUPPORT))
            for (var n = 0; n < t; ++n) e[n] = 0;
          return e;
        }
        function f(e, t) {
          var n = t.length < 0 ? 0 : 0 | d(t.length);
          e = s(e, n);
          for (var r = 0; r < n; r += 1) e[r] = 255 & t[r];
          return e;
        }
        function d(e) {
          if (e >= o())
            throw new RangeError(
              "Attempt to allocate Buffer larger than maximum size: 0x" +
                o().toString(16) +
                " bytes"
            );
          return 0 | e;
        }
        function p(e, t) {
          if (u.isBuffer(e)) return e.length;
          if (
            "undefined" !== typeof ArrayBuffer &&
            "function" === typeof ArrayBuffer.isView &&
            (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
          )
            return e.byteLength;
          "string" !== typeof e && (e = "" + e);
          var n = e.length;
          if (0 === n) return 0;
          for (var r = !1; ; )
            switch (t) {
              case "ascii":
              case "latin1":
              case "binary":
                return n;
              case "utf8":
              case "utf-8":
              case void 0:
                return F(e).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * n;
              case "hex":
                return n >>> 1;
              case "base64":
                return G(e).length;
              default:
                if (r) return F(e).length;
                (t = ("" + t).toLowerCase()), (r = !0);
            }
        }
        function m(e, t, n) {
          var r = !1;
          if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return "";
          if (((void 0 === n || n > this.length) && (n = this.length), n <= 0))
            return "";
          if ((n >>>= 0) <= (t >>>= 0)) return "";
          for (e || (e = "utf8"); ; )
            switch (e) {
              case "hex":
                return C(this, t, n);
              case "utf8":
              case "utf-8":
                return E(this, t, n);
              case "ascii":
                return k(this, t, n);
              case "latin1":
              case "binary":
                return A(this, t, n);
              case "base64":
                return T(this, t, n);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return P(this, t, n);
              default:
                if (r) throw new TypeError("Unknown encoding: " + e);
                (e = (e + "").toLowerCase()), (r = !0);
            }
        }
        function v(e, t, n) {
          var r = e[t];
          (e[t] = e[n]), (e[n] = r);
        }
        function g(e, t, n, r, i) {
          if (0 === e.length) return -1;
          if (
            ("string" === typeof n
              ? ((r = n), (n = 0))
              : n > 2147483647
              ? (n = 2147483647)
              : n < -2147483648 && (n = -2147483648),
            (n = +n),
            isNaN(n) && (n = i ? 0 : e.length - 1),
            n < 0 && (n = e.length + n),
            n >= e.length)
          ) {
            if (i) return -1;
            n = e.length - 1;
          } else if (n < 0) {
            if (!i) return -1;
            n = 0;
          }
          if (("string" === typeof t && (t = u.from(t, r)), u.isBuffer(t)))
            return 0 === t.length ? -1 : y(e, t, n, r, i);
          if ("number" === typeof t)
            return (
              (t &= 255),
              u.TYPED_ARRAY_SUPPORT &&
              "function" === typeof Uint8Array.prototype.indexOf
                ? i
                  ? Uint8Array.prototype.indexOf.call(e, t, n)
                  : Uint8Array.prototype.lastIndexOf.call(e, t, n)
                : y(e, [t], n, r, i)
            );
          throw new TypeError("val must be string, number or Buffer");
        }
        function y(e, t, n, r, i) {
          var a,
            o = 1,
            s = e.length,
            u = t.length;
          if (
            void 0 !== r &&
            ("ucs2" === (r = String(r).toLowerCase()) ||
              "ucs-2" === r ||
              "utf16le" === r ||
              "utf-16le" === r)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (o = 2), (s /= 2), (u /= 2), (n /= 2);
          }
          function l(e, t) {
            return 1 === o ? e[t] : e.readUInt16BE(t * o);
          }
          if (i) {
            var c = -1;
            for (a = n; a < s; a++)
              if (l(e, a) === l(t, -1 === c ? 0 : a - c)) {
                if ((-1 === c && (c = a), a - c + 1 === u)) return c * o;
              } else -1 !== c && (a -= a - c), (c = -1);
          } else
            for (n + u > s && (n = s - u), a = n; a >= 0; a--) {
              for (var h = !0, f = 0; f < u; f++)
                if (l(e, a + f) !== l(t, f)) {
                  h = !1;
                  break;
                }
              if (h) return a;
            }
          return -1;
        }
        function b(e, t, n, r) {
          n = Number(n) || 0;
          var i = e.length - n;
          r ? (r = Number(r)) > i && (r = i) : (r = i);
          var a = t.length;
          if (a % 2 !== 0) throw new TypeError("Invalid hex string");
          r > a / 2 && (r = a / 2);
          for (var o = 0; o < r; ++o) {
            var s = parseInt(t.substr(2 * o, 2), 16);
            if (isNaN(s)) return o;
            e[n + o] = s;
          }
          return o;
        }
        function x(e, t, n, r) {
          return H(F(t, e.length - n), e, n, r);
        }
        function _(e, t, n, r) {
          return H(
            (function (e) {
              for (var t = [], n = 0; n < e.length; ++n)
                t.push(255 & e.charCodeAt(n));
              return t;
            })(t),
            e,
            n,
            r
          );
        }
        function w(e, t, n, r) {
          return _(e, t, n, r);
        }
        function S(e, t, n, r) {
          return H(G(t), e, n, r);
        }
        function M(e, t, n, r) {
          return H(
            (function (e, t) {
              for (
                var n, r, i, a = [], o = 0;
                o < e.length && !((t -= 2) < 0);
                ++o
              )
                (n = e.charCodeAt(o)),
                  (r = n >> 8),
                  (i = n % 256),
                  a.push(i),
                  a.push(r);
              return a;
            })(t, e.length - n),
            e,
            n,
            r
          );
        }
        function T(e, t, n) {
          return 0 === t && n === e.length
            ? r.fromByteArray(e)
            : r.fromByteArray(e.slice(t, n));
        }
        function E(e, t, n) {
          n = Math.min(e.length, n);
          for (var r = [], i = t; i < n; ) {
            var a,
              o,
              s,
              u,
              l = e[i],
              c = null,
              h = l > 239 ? 4 : l > 223 ? 3 : l > 191 ? 2 : 1;
            if (i + h <= n)
              switch (h) {
                case 1:
                  l < 128 && (c = l);
                  break;
                case 2:
                  128 === (192 & (a = e[i + 1])) &&
                    (u = ((31 & l) << 6) | (63 & a)) > 127 &&
                    (c = u);
                  break;
                case 3:
                  (a = e[i + 1]),
                    (o = e[i + 2]),
                    128 === (192 & a) &&
                      128 === (192 & o) &&
                      (u = ((15 & l) << 12) | ((63 & a) << 6) | (63 & o)) >
                        2047 &&
                      (u < 55296 || u > 57343) &&
                      (c = u);
                  break;
                case 4:
                  (a = e[i + 1]),
                    (o = e[i + 2]),
                    (s = e[i + 3]),
                    128 === (192 & a) &&
                      128 === (192 & o) &&
                      128 === (192 & s) &&
                      (u =
                        ((15 & l) << 18) |
                        ((63 & a) << 12) |
                        ((63 & o) << 6) |
                        (63 & s)) > 65535 &&
                      u < 1114112 &&
                      (c = u);
              }
            null === c
              ? ((c = 65533), (h = 1))
              : c > 65535 &&
                ((c -= 65536),
                r.push(((c >>> 10) & 1023) | 55296),
                (c = 56320 | (1023 & c))),
              r.push(c),
              (i += h);
          }
          return (function (e) {
            var t = e.length;
            if (t <= O) return String.fromCharCode.apply(String, e);
            var n = "",
              r = 0;
            for (; r < t; )
              n += String.fromCharCode.apply(String, e.slice(r, (r += O)));
            return n;
          })(r);
        }
        (t.Buffer = u),
          (t.SlowBuffer = function (e) {
            +e != e && (e = 0);
            return u.alloc(+e);
          }),
          (t.INSPECT_MAX_BYTES = 50),
          (u.TYPED_ARRAY_SUPPORT =
            void 0 !== e.TYPED_ARRAY_SUPPORT
              ? e.TYPED_ARRAY_SUPPORT
              : (function () {
                  try {
                    var e = new Uint8Array(1);
                    return (
                      (e.__proto__ = {
                        __proto__: Uint8Array.prototype,
                        foo: function () {
                          return 42;
                        },
                      }),
                      42 === e.foo() &&
                        "function" === typeof e.subarray &&
                        0 === e.subarray(1, 1).byteLength
                    );
                  } catch (t) {
                    return !1;
                  }
                })()),
          (t.kMaxLength = o()),
          (u.poolSize = 8192),
          (u._augment = function (e) {
            return (e.__proto__ = u.prototype), e;
          }),
          (u.from = function (e, t, n) {
            return l(null, e, t, n);
          }),
          u.TYPED_ARRAY_SUPPORT &&
            ((u.prototype.__proto__ = Uint8Array.prototype),
            (u.__proto__ = Uint8Array),
            "undefined" !== typeof Symbol &&
              Symbol.species &&
              u[Symbol.species] === u &&
              Object.defineProperty(u, Symbol.species, {
                value: null,
                configurable: !0,
              })),
          (u.alloc = function (e, t, n) {
            return (function (e, t, n, r) {
              return (
                c(t),
                t <= 0
                  ? s(e, t)
                  : void 0 !== n
                  ? "string" === typeof r
                    ? s(e, t).fill(n, r)
                    : s(e, t).fill(n)
                  : s(e, t)
              );
            })(null, e, t, n);
          }),
          (u.allocUnsafe = function (e) {
            return h(null, e);
          }),
          (u.allocUnsafeSlow = function (e) {
            return h(null, e);
          }),
          (u.isBuffer = function (e) {
            return !(null == e || !e._isBuffer);
          }),
          (u.compare = function (e, t) {
            if (!u.isBuffer(e) || !u.isBuffer(t))
              throw new TypeError("Arguments must be Buffers");
            if (e === t) return 0;
            for (
              var n = e.length, r = t.length, i = 0, a = Math.min(n, r);
              i < a;
              ++i
            )
              if (e[i] !== t[i]) {
                (n = e[i]), (r = t[i]);
                break;
              }
            return n < r ? -1 : r < n ? 1 : 0;
          }),
          (u.isEncoding = function (e) {
            switch (String(e).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }),
          (u.concat = function (e, t) {
            if (!a(e))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            if (0 === e.length) return u.alloc(0);
            var n;
            if (void 0 === t)
              for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
            var r = u.allocUnsafe(t),
              i = 0;
            for (n = 0; n < e.length; ++n) {
              var o = e[n];
              if (!u.isBuffer(o))
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              o.copy(r, i), (i += o.length);
            }
            return r;
          }),
          (u.byteLength = p),
          (u.prototype._isBuffer = !0),
          (u.prototype.swap16 = function () {
            var e = this.length;
            if (e % 2 !== 0)
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var t = 0; t < e; t += 2) v(this, t, t + 1);
            return this;
          }),
          (u.prototype.swap32 = function () {
            var e = this.length;
            if (e % 4 !== 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var t = 0; t < e; t += 4)
              v(this, t, t + 3), v(this, t + 1, t + 2);
            return this;
          }),
          (u.prototype.swap64 = function () {
            var e = this.length;
            if (e % 8 !== 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var t = 0; t < e; t += 8)
              v(this, t, t + 7),
                v(this, t + 1, t + 6),
                v(this, t + 2, t + 5),
                v(this, t + 3, t + 4);
            return this;
          }),
          (u.prototype.toString = function () {
            var e = 0 | this.length;
            return 0 === e
              ? ""
              : 0 === arguments.length
              ? E(this, 0, e)
              : m.apply(this, arguments);
          }),
          (u.prototype.equals = function (e) {
            if (!u.isBuffer(e))
              throw new TypeError("Argument must be a Buffer");
            return this === e || 0 === u.compare(this, e);
          }),
          (u.prototype.inspect = function () {
            var e = "",
              n = t.INSPECT_MAX_BYTES;
            return (
              this.length > 0 &&
                ((e = this.toString("hex", 0, n).match(/.{2}/g).join(" ")),
                this.length > n && (e += " ... ")),
              "<Buffer " + e + ">"
            );
          }),
          (u.prototype.compare = function (e, t, n, r, i) {
            if (!u.isBuffer(e))
              throw new TypeError("Argument must be a Buffer");
            if (
              (void 0 === t && (t = 0),
              void 0 === n && (n = e ? e.length : 0),
              void 0 === r && (r = 0),
              void 0 === i && (i = this.length),
              t < 0 || n > e.length || r < 0 || i > this.length)
            )
              throw new RangeError("out of range index");
            if (r >= i && t >= n) return 0;
            if (r >= i) return -1;
            if (t >= n) return 1;
            if (this === e) return 0;
            for (
              var a = (i >>>= 0) - (r >>>= 0),
                o = (n >>>= 0) - (t >>>= 0),
                s = Math.min(a, o),
                l = this.slice(r, i),
                c = e.slice(t, n),
                h = 0;
              h < s;
              ++h
            )
              if (l[h] !== c[h]) {
                (a = l[h]), (o = c[h]);
                break;
              }
            return a < o ? -1 : o < a ? 1 : 0;
          }),
          (u.prototype.includes = function (e, t, n) {
            return -1 !== this.indexOf(e, t, n);
          }),
          (u.prototype.indexOf = function (e, t, n) {
            return g(this, e, t, n, !0);
          }),
          (u.prototype.lastIndexOf = function (e, t, n) {
            return g(this, e, t, n, !1);
          }),
          (u.prototype.write = function (e, t, n, r) {
            if (void 0 === t) (r = "utf8"), (n = this.length), (t = 0);
            else if (void 0 === n && "string" === typeof t)
              (r = t), (n = this.length), (t = 0);
            else {
              if (!isFinite(t))
                throw new Error(
                  "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                );
              (t |= 0),
                isFinite(n)
                  ? ((n |= 0), void 0 === r && (r = "utf8"))
                  : ((r = n), (n = void 0));
            }
            var i = this.length - t;
            if (
              ((void 0 === n || n > i) && (n = i),
              (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
            )
              throw new RangeError("Attempt to write outside buffer bounds");
            r || (r = "utf8");
            for (var a = !1; ; )
              switch (r) {
                case "hex":
                  return b(this, e, t, n);
                case "utf8":
                case "utf-8":
                  return x(this, e, t, n);
                case "ascii":
                  return _(this, e, t, n);
                case "latin1":
                case "binary":
                  return w(this, e, t, n);
                case "base64":
                  return S(this, e, t, n);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return M(this, e, t, n);
                default:
                  if (a) throw new TypeError("Unknown encoding: " + r);
                  (r = ("" + r).toLowerCase()), (a = !0);
              }
          }),
          (u.prototype.toJSON = function () {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          });
        var O = 4096;
        function k(e, t, n) {
          var r = "";
          n = Math.min(e.length, n);
          for (var i = t; i < n; ++i) r += String.fromCharCode(127 & e[i]);
          return r;
        }
        function A(e, t, n) {
          var r = "";
          n = Math.min(e.length, n);
          for (var i = t; i < n; ++i) r += String.fromCharCode(e[i]);
          return r;
        }
        function C(e, t, n) {
          var r = e.length;
          (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
          for (var i = "", a = t; a < n; ++a) i += B(e[a]);
          return i;
        }
        function P(e, t, n) {
          for (var r = e.slice(t, n), i = "", a = 0; a < r.length; a += 2)
            i += String.fromCharCode(r[a] + 256 * r[a + 1]);
          return i;
        }
        function R(e, t, n) {
          if (e % 1 !== 0 || e < 0) throw new RangeError("offset is not uint");
          if (e + t > n)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function L(e, t, n, r, i, a) {
          if (!u.isBuffer(e))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t > i || t < a)
            throw new RangeError('"value" argument is out of bounds');
          if (n + r > e.length) throw new RangeError("Index out of range");
        }
        function j(e, t, n, r) {
          t < 0 && (t = 65535 + t + 1);
          for (var i = 0, a = Math.min(e.length - n, 2); i < a; ++i)
            e[n + i] =
              (t & (255 << (8 * (r ? i : 1 - i)))) >>> (8 * (r ? i : 1 - i));
        }
        function I(e, t, n, r) {
          t < 0 && (t = 4294967295 + t + 1);
          for (var i = 0, a = Math.min(e.length - n, 4); i < a; ++i)
            e[n + i] = (t >>> (8 * (r ? i : 3 - i))) & 255;
        }
        function N(e, t, n, r, i, a) {
          if (n + r > e.length) throw new RangeError("Index out of range");
          if (n < 0) throw new RangeError("Index out of range");
        }
        function D(e, t, n, r, a) {
          return a || N(e, 0, n, 4), i.write(e, t, n, r, 23, 4), n + 4;
        }
        function z(e, t, n, r, a) {
          return a || N(e, 0, n, 8), i.write(e, t, n, r, 52, 8), n + 8;
        }
        (u.prototype.slice = function (e, t) {
          var n,
            r = this.length;
          if (
            ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
            (t = void 0 === t ? r : ~~t) < 0
              ? (t += r) < 0 && (t = 0)
              : t > r && (t = r),
            t < e && (t = e),
            u.TYPED_ARRAY_SUPPORT)
          )
            (n = this.subarray(e, t)).__proto__ = u.prototype;
          else {
            var i = t - e;
            n = new u(i, void 0);
            for (var a = 0; a < i; ++a) n[a] = this[a + e];
          }
          return n;
        }),
          (u.prototype.readUIntLE = function (e, t, n) {
            (e |= 0), (t |= 0), n || R(e, t, this.length);
            for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
              r += this[e + a] * i;
            return r;
          }),
          (u.prototype.readUIntBE = function (e, t, n) {
            (e |= 0), (t |= 0), n || R(e, t, this.length);
            for (var r = this[e + --t], i = 1; t > 0 && (i *= 256); )
              r += this[e + --t] * i;
            return r;
          }),
          (u.prototype.readUInt8 = function (e, t) {
            return t || R(e, 1, this.length), this[e];
          }),
          (u.prototype.readUInt16LE = function (e, t) {
            return t || R(e, 2, this.length), this[e] | (this[e + 1] << 8);
          }),
          (u.prototype.readUInt16BE = function (e, t) {
            return t || R(e, 2, this.length), (this[e] << 8) | this[e + 1];
          }),
          (u.prototype.readUInt32LE = function (e, t) {
            return (
              t || R(e, 4, this.length),
              (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                16777216 * this[e + 3]
            );
          }),
          (u.prototype.readUInt32BE = function (e, t) {
            return (
              t || R(e, 4, this.length),
              16777216 * this[e] +
                ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
            );
          }),
          (u.prototype.readIntLE = function (e, t, n) {
            (e |= 0), (t |= 0), n || R(e, t, this.length);
            for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
              r += this[e + a] * i;
            return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r;
          }),
          (u.prototype.readIntBE = function (e, t, n) {
            (e |= 0), (t |= 0), n || R(e, t, this.length);
            for (var r = t, i = 1, a = this[e + --r]; r > 0 && (i *= 256); )
              a += this[e + --r] * i;
            return a >= (i *= 128) && (a -= Math.pow(2, 8 * t)), a;
          }),
          (u.prototype.readInt8 = function (e, t) {
            return (
              t || R(e, 1, this.length),
              128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
            );
          }),
          (u.prototype.readInt16LE = function (e, t) {
            t || R(e, 2, this.length);
            var n = this[e] | (this[e + 1] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (u.prototype.readInt16BE = function (e, t) {
            t || R(e, 2, this.length);
            var n = this[e + 1] | (this[e] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (u.prototype.readInt32LE = function (e, t) {
            return (
              t || R(e, 4, this.length),
              this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
            );
          }),
          (u.prototype.readInt32BE = function (e, t) {
            return (
              t || R(e, 4, this.length),
              (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
            );
          }),
          (u.prototype.readFloatLE = function (e, t) {
            return t || R(e, 4, this.length), i.read(this, e, !0, 23, 4);
          }),
          (u.prototype.readFloatBE = function (e, t) {
            return t || R(e, 4, this.length), i.read(this, e, !1, 23, 4);
          }),
          (u.prototype.readDoubleLE = function (e, t) {
            return t || R(e, 8, this.length), i.read(this, e, !0, 52, 8);
          }),
          (u.prototype.readDoubleBE = function (e, t) {
            return t || R(e, 8, this.length), i.read(this, e, !1, 52, 8);
          }),
          (u.prototype.writeUIntLE = function (e, t, n, r) {
            ((e = +e), (t |= 0), (n |= 0), r) ||
              L(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var i = 1,
              a = 0;
            for (this[t] = 255 & e; ++a < n && (i *= 256); )
              this[t + a] = (e / i) & 255;
            return t + n;
          }),
          (u.prototype.writeUIntBE = function (e, t, n, r) {
            ((e = +e), (t |= 0), (n |= 0), r) ||
              L(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var i = n - 1,
              a = 1;
            for (this[t + i] = 255 & e; --i >= 0 && (a *= 256); )
              this[t + i] = (e / a) & 255;
            return t + n;
          }),
          (u.prototype.writeUInt8 = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 1, 255, 0),
              u.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (u.prototype.writeUInt16LE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 2, 65535, 0),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : j(this, e, t, !0),
              t + 2
            );
          }),
          (u.prototype.writeUInt16BE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 2, 65535, 0),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : j(this, e, t, !1),
              t + 2
            );
          }),
          (u.prototype.writeUInt32LE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 4, 4294967295, 0),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t + 3] = e >>> 24),
                  (this[t + 2] = e >>> 16),
                  (this[t + 1] = e >>> 8),
                  (this[t] = 255 & e))
                : I(this, e, t, !0),
              t + 4
            );
          }),
          (u.prototype.writeUInt32BE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 4, 4294967295, 0),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : I(this, e, t, !1),
              t + 4
            );
          }),
          (u.prototype.writeIntLE = function (e, t, n, r) {
            if (((e = +e), (t |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              L(this, e, t, n, i - 1, -i);
            }
            var a = 0,
              o = 1,
              s = 0;
            for (this[t] = 255 & e; ++a < n && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + a - 1] && (s = 1),
                (this[t + a] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (u.prototype.writeIntBE = function (e, t, n, r) {
            if (((e = +e), (t |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              L(this, e, t, n, i - 1, -i);
            }
            var a = n - 1,
              o = 1,
              s = 0;
            for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + a + 1] && (s = 1),
                (this[t + a] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (u.prototype.writeInt8 = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 1, 127, -128),
              u.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (u.prototype.writeInt16LE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 2, 32767, -32768),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : j(this, e, t, !0),
              t + 2
            );
          }),
          (u.prototype.writeInt16BE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 2, 32767, -32768),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : j(this, e, t, !1),
              t + 2
            );
          }),
          (u.prototype.writeInt32LE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 4, 2147483647, -2147483648),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e),
                  (this[t + 1] = e >>> 8),
                  (this[t + 2] = e >>> 16),
                  (this[t + 3] = e >>> 24))
                : I(this, e, t, !0),
              t + 4
            );
          }),
          (u.prototype.writeInt32BE = function (e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || L(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              u.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : I(this, e, t, !1),
              t + 4
            );
          }),
          (u.prototype.writeFloatLE = function (e, t, n) {
            return D(this, e, t, !0, n);
          }),
          (u.prototype.writeFloatBE = function (e, t, n) {
            return D(this, e, t, !1, n);
          }),
          (u.prototype.writeDoubleLE = function (e, t, n) {
            return z(this, e, t, !0, n);
          }),
          (u.prototype.writeDoubleBE = function (e, t, n) {
            return z(this, e, t, !1, n);
          }),
          (u.prototype.copy = function (e, t, n, r) {
            if (
              (n || (n = 0),
              r || 0 === r || (r = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              r > 0 && r < n && (r = n),
              r === n)
            )
              return 0;
            if (0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError("targetStart out of bounds");
            if (n < 0 || n >= this.length)
              throw new RangeError("sourceStart out of bounds");
            if (r < 0) throw new RangeError("sourceEnd out of bounds");
            r > this.length && (r = this.length),
              e.length - t < r - n && (r = e.length - t + n);
            var i,
              a = r - n;
            if (this === e && n < t && t < r)
              for (i = a - 1; i >= 0; --i) e[i + t] = this[i + n];
            else if (a < 1e3 || !u.TYPED_ARRAY_SUPPORT)
              for (i = 0; i < a; ++i) e[i + t] = this[i + n];
            else Uint8Array.prototype.set.call(e, this.subarray(n, n + a), t);
            return a;
          }),
          (u.prototype.fill = function (e, t, n, r) {
            if ("string" === typeof e) {
              if (
                ("string" === typeof t
                  ? ((r = t), (t = 0), (n = this.length))
                  : "string" === typeof n && ((r = n), (n = this.length)),
                1 === e.length)
              ) {
                var i = e.charCodeAt(0);
                i < 256 && (e = i);
              }
              if (void 0 !== r && "string" !== typeof r)
                throw new TypeError("encoding must be a string");
              if ("string" === typeof r && !u.isEncoding(r))
                throw new TypeError("Unknown encoding: " + r);
            } else "number" === typeof e && (e &= 255);
            if (t < 0 || this.length < t || this.length < n)
              throw new RangeError("Out of range index");
            if (n <= t) return this;
            var a;
            if (
              ((t >>>= 0),
              (n = void 0 === n ? this.length : n >>> 0),
              e || (e = 0),
              "number" === typeof e)
            )
              for (a = t; a < n; ++a) this[a] = e;
            else {
              var o = u.isBuffer(e) ? e : F(new u(e, r).toString()),
                s = o.length;
              for (a = 0; a < n - t; ++a) this[a + t] = o[a % s];
            }
            return this;
          });
        var U = /[^+\/0-9A-Za-z-_]/g;
        function B(e) {
          return e < 16 ? "0" + e.toString(16) : e.toString(16);
        }
        function F(e, t) {
          var n;
          t = t || 1 / 0;
          for (var r = e.length, i = null, a = [], o = 0; o < r; ++o) {
            if ((n = e.charCodeAt(o)) > 55295 && n < 57344) {
              if (!i) {
                if (n > 56319) {
                  (t -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                if (o + 1 === r) {
                  (t -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                i = n;
                continue;
              }
              if (n < 56320) {
                (t -= 3) > -1 && a.push(239, 191, 189), (i = n);
                continue;
              }
              n = 65536 + (((i - 55296) << 10) | (n - 56320));
            } else i && (t -= 3) > -1 && a.push(239, 191, 189);
            if (((i = null), n < 128)) {
              if ((t -= 1) < 0) break;
              a.push(n);
            } else if (n < 2048) {
              if ((t -= 2) < 0) break;
              a.push((n >> 6) | 192, (63 & n) | 128);
            } else if (n < 65536) {
              if ((t -= 3) < 0) break;
              a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
            } else {
              if (!(n < 1114112)) throw new Error("Invalid code point");
              if ((t -= 4) < 0) break;
              a.push(
                (n >> 18) | 240,
                ((n >> 12) & 63) | 128,
                ((n >> 6) & 63) | 128,
                (63 & n) | 128
              );
            }
          }
          return a;
        }
        function G(e) {
          return r.toByteArray(
            (function (e) {
              if (
                (e = (function (e) {
                  return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");
                })(e).replace(U, "")).length < 2
              )
                return "";
              for (; e.length % 4 !== 0; ) e += "=";
              return e;
            })(e)
          );
        }
        function H(e, t, n, r) {
          for (var i = 0; i < r && !(i + n >= t.length || i >= e.length); ++i)
            t[i + n] = e[i];
          return i;
        }
      }.call(this, n(43)));
    },
    function (e, t, n) {
      "use strict";
      (t.byteLength = function (e) {
        var t = l(e),
          n = t[0],
          r = t[1];
        return (3 * (n + r)) / 4 - r;
      }),
        (t.toByteArray = function (e) {
          var t,
            n,
            r = l(e),
            o = r[0],
            s = r[1],
            u = new a(
              (function (e, t, n) {
                return (3 * (t + n)) / 4 - n;
              })(0, o, s)
            ),
            c = 0,
            h = s > 0 ? o - 4 : o;
          for (n = 0; n < h; n += 4)
            (t =
              (i[e.charCodeAt(n)] << 18) |
              (i[e.charCodeAt(n + 1)] << 12) |
              (i[e.charCodeAt(n + 2)] << 6) |
              i[e.charCodeAt(n + 3)]),
              (u[c++] = (t >> 16) & 255),
              (u[c++] = (t >> 8) & 255),
              (u[c++] = 255 & t);
          2 === s &&
            ((t = (i[e.charCodeAt(n)] << 2) | (i[e.charCodeAt(n + 1)] >> 4)),
            (u[c++] = 255 & t));
          1 === s &&
            ((t =
              (i[e.charCodeAt(n)] << 10) |
              (i[e.charCodeAt(n + 1)] << 4) |
              (i[e.charCodeAt(n + 2)] >> 2)),
            (u[c++] = (t >> 8) & 255),
            (u[c++] = 255 & t));
          return u;
        }),
        (t.fromByteArray = function (e) {
          for (
            var t, n = e.length, i = n % 3, a = [], o = 0, s = n - i;
            o < s;
            o += 16383
          )
            a.push(c(e, o, o + 16383 > s ? s : o + 16383));
          1 === i
            ? ((t = e[n - 1]), a.push(r[t >> 2] + r[(t << 4) & 63] + "=="))
            : 2 === i &&
              ((t = (e[n - 2] << 8) + e[n - 1]),
              a.push(r[t >> 10] + r[(t >> 4) & 63] + r[(t << 2) & 63] + "="));
          return a.join("");
        });
      for (
        var r = [],
          i = [],
          a = "undefined" !== typeof Uint8Array ? Uint8Array : Array,
          o =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          s = 0,
          u = o.length;
        s < u;
        ++s
      )
        (r[s] = o[s]), (i[o.charCodeAt(s)] = s);
      function l(e) {
        var t = e.length;
        if (t % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var n = e.indexOf("=");
        return -1 === n && (n = t), [n, n === t ? 0 : 4 - (n % 4)];
      }
      function c(e, t, n) {
        for (var i, a, o = [], s = t; s < n; s += 3)
          (i =
            ((e[s] << 16) & 16711680) +
            ((e[s + 1] << 8) & 65280) +
            (255 & e[s + 2])),
            o.push(
              r[((a = i) >> 18) & 63] +
                r[(a >> 12) & 63] +
                r[(a >> 6) & 63] +
                r[63 & a]
            );
        return o.join("");
      }
      (i["-".charCodeAt(0)] = 62), (i["_".charCodeAt(0)] = 63);
    },
    function (e, t) {
      (t.read = function (e, t, n, r, i) {
        var a,
          o,
          s = 8 * i - r - 1,
          u = (1 << s) - 1,
          l = u >> 1,
          c = -7,
          h = n ? i - 1 : 0,
          f = n ? -1 : 1,
          d = e[t + h];
        for (
          h += f, a = d & ((1 << -c) - 1), d >>= -c, c += s;
          c > 0;
          a = 256 * a + e[t + h], h += f, c -= 8
        );
        for (
          o = a & ((1 << -c) - 1), a >>= -c, c += r;
          c > 0;
          o = 256 * o + e[t + h], h += f, c -= 8
        );
        if (0 === a) a = 1 - l;
        else {
          if (a === u) return o ? NaN : (1 / 0) * (d ? -1 : 1);
          (o += Math.pow(2, r)), (a -= l);
        }
        return (d ? -1 : 1) * o * Math.pow(2, a - r);
      }),
        (t.write = function (e, t, n, r, i, a) {
          var o,
            s,
            u,
            l = 8 * a - i - 1,
            c = (1 << l) - 1,
            h = c >> 1,
            f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            d = r ? 0 : a - 1,
            p = r ? 1 : -1,
            m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
          for (
            t = Math.abs(t),
              isNaN(t) || t === 1 / 0
                ? ((s = isNaN(t) ? 1 : 0), (o = c))
                : ((o = Math.floor(Math.log(t) / Math.LN2)),
                  t * (u = Math.pow(2, -o)) < 1 && (o--, (u *= 2)),
                  (t += o + h >= 1 ? f / u : f * Math.pow(2, 1 - h)) * u >= 2 &&
                    (o++, (u /= 2)),
                  o + h >= c
                    ? ((s = 0), (o = c))
                    : o + h >= 1
                    ? ((s = (t * u - 1) * Math.pow(2, i)), (o += h))
                    : ((s = t * Math.pow(2, h - 1) * Math.pow(2, i)), (o = 0)));
            i >= 8;
            e[n + d] = 255 & s, d += p, s /= 256, i -= 8
          );
          for (
            o = (o << i) | s, l += i;
            l > 0;
            e[n + d] = 255 & o, d += p, o /= 256, l -= 8
          );
          e[n + d - p] |= 128 * m;
        });
    },
    function (e, t) {
      var n = {}.toString;
      e.exports =
        Array.isArray ||
        function (e) {
          return "[object Array]" == n.call(e);
        };
    },
    function (e, t, n) {},
    function (e, t, n) {},
    ,
    ,
    function (e, t, n) {
      "use strict";
      var r = n(6),
        i = n(55),
        a = n(2),
        o = n(3),
        s = n(56),
        u = (function () {
          function e() {
            Object(a.a)(this, e), (this.handlers = []);
          }
          return (
            Object(o.a)(e, [
              {
                key: "use",
                value: function (e, t, n) {
                  return (
                    this.handlers.push({
                      fulfilled: e,
                      rejected: t,
                      synchronous: !!n && n.synchronous,
                      runWhen: n ? n.runWhen : null,
                    }),
                    this.handlers.length - 1
                  );
                },
              },
              {
                key: "eject",
                value: function (e) {
                  this.handlers[e] && (this.handlers[e] = null);
                },
              },
              {
                key: "clear",
                value: function () {
                  this.handlers && (this.handlers = []);
                },
              },
              {
                key: "forEach",
                value: function (e) {
                  r.a.forEach(this.handlers, function (t) {
                    null !== t && e(t);
                  });
                },
              },
            ]),
            e
          );
        })(),
        l = n(47),
        c = n(29);
      function h(e, t) {
        var n = this || l.a,
          i = t || n,
          a = c.a.from(i.headers),
          o = i.data;
        return (
          r.a.forEach(e, function (e) {
            o = e.call(n, o, a.normalize(), t ? t.status : void 0);
          }),
          a.normalize(),
          o
        );
      }
      function f(e) {
        return !(!e || !e.__CANCEL__);
      }
      var d = n(37);
      function p(e) {
        if (
          (e.cancelToken && e.cancelToken.throwIfRequested(),
          e.signal && e.signal.aborted)
        )
          throw new d.a();
      }
      function m(e) {
        return (
          p(e),
          (e.headers = c.a.from(e.headers)),
          (e.data = h.call(e, e.transformRequest)),
          (e.adapter || l.a.adapter)(e).then(
            function (t) {
              return (
                p(e),
                (t.data = h.call(e, e.transformResponse, t)),
                (t.headers = c.a.from(t.headers)),
                t
              );
            },
            function (t) {
              return (
                f(t) ||
                  (p(e),
                  t &&
                    t.response &&
                    ((t.response.data = h.call(
                      e,
                      e.transformResponse,
                      t.response
                    )),
                    (t.response.headers = c.a.from(t.response.headers)))),
                Promise.reject(t)
              );
            }
          )
        );
      }
      function v(e, t) {
        t = t || {};
        var n = {};
        function i(e, t) {
          return r.a.isPlainObject(e) && r.a.isPlainObject(t)
            ? r.a.merge(e, t)
            : r.a.isPlainObject(t)
            ? r.a.merge({}, t)
            : r.a.isArray(t)
            ? t.slice()
            : t;
        }
        function a(n) {
          return r.a.isUndefined(t[n])
            ? r.a.isUndefined(e[n])
              ? void 0
              : i(void 0, e[n])
            : i(e[n], t[n]);
        }
        function o(e) {
          if (!r.a.isUndefined(t[e])) return i(void 0, t[e]);
        }
        function s(n) {
          return r.a.isUndefined(t[n])
            ? r.a.isUndefined(e[n])
              ? void 0
              : i(void 0, e[n])
            : i(void 0, t[n]);
        }
        function u(n) {
          return n in t ? i(e[n], t[n]) : n in e ? i(void 0, e[n]) : void 0;
        }
        var l = {
          url: o,
          method: o,
          data: o,
          baseURL: s,
          transformRequest: s,
          transformResponse: s,
          paramsSerializer: s,
          timeout: s,
          timeoutMessage: s,
          withCredentials: s,
          adapter: s,
          responseType: s,
          xsrfCookieName: s,
          xsrfHeaderName: s,
          onUploadProgress: s,
          onDownloadProgress: s,
          decompress: s,
          maxContentLength: s,
          maxBodyLength: s,
          beforeRedirect: s,
          transport: s,
          httpAgent: s,
          httpsAgent: s,
          cancelToken: s,
          socketPath: s,
          responseEncoding: s,
          validateStatus: u,
        };
        return (
          r.a.forEach(Object.keys(e).concat(Object.keys(t)), function (e) {
            var t = l[e] || a,
              i = t(e);
            (r.a.isUndefined(i) && t !== u) || (n[e] = i);
          }),
          n
        );
      }
      var g = n(61),
        y = "1.1.2",
        b = n(17),
        x = {};
      ["object", "boolean", "number", "function", "string", "symbol"].forEach(
        function (e, t) {
          x[e] = function (n) {
            return typeof n === e || "a" + (t < 1 ? "n " : " ") + e;
          };
        }
      );
      var _ = {};
      x.transitional = function (e, t, n) {
        function r(e, t) {
          return (
            "[Axios v" +
            y +
            "] Transitional option '" +
            e +
            "'" +
            t +
            (n ? ". " + n : "")
          );
        }
        return function (n, i, a) {
          if (!1 === e)
            throw new b.a(
              r(i, " has been removed" + (t ? " in " + t : "")),
              b.a.ERR_DEPRECATED
            );
          return (
            t &&
              !_[i] &&
              ((_[i] = !0),
              console.warn(
                r(
                  i,
                  " has been deprecated since v" +
                    t +
                    " and will be removed in the near future"
                )
              )),
            !e || e(n, i, a)
          );
        };
      };
      var w = {
          assertOptions: function (e, t, n) {
            if ("object" !== typeof e)
              throw new b.a(
                "options must be an object",
                b.a.ERR_BAD_OPTION_VALUE
              );
            for (var r = Object.keys(e), i = r.length; i-- > 0; ) {
              var a = r[i],
                o = t[a];
              if (o) {
                var s = e[a],
                  u = void 0 === s || o(s, a, e);
                if (!0 !== u)
                  throw new b.a(
                    "option " + a + " must be " + u,
                    b.a.ERR_BAD_OPTION_VALUE
                  );
              } else if (!0 !== n)
                throw new b.a("Unknown option " + a, b.a.ERR_BAD_OPTION);
            }
          },
          validators: x,
        },
        S = w.validators,
        M = (function () {
          function e(t) {
            Object(a.a)(this, e),
              (this.defaults = t),
              (this.interceptors = { request: new u(), response: new u() });
          }
          return (
            Object(o.a)(e, [
              {
                key: "request",
                value: function (e, t) {
                  "string" === typeof e
                    ? ((t = t || {}).url = e)
                    : (t = e || {});
                  var n = (t = v(this.defaults, t)).transitional;
                  void 0 !== n &&
                    w.assertOptions(
                      n,
                      {
                        silentJSONParsing: S.transitional(S.boolean),
                        forcedJSONParsing: S.transitional(S.boolean),
                        clarifyTimeoutError: S.transitional(S.boolean),
                      },
                      !1
                    ),
                    (t.method = (
                      t.method ||
                      this.defaults.method ||
                      "get"
                    ).toLowerCase());
                  var i =
                    t.headers &&
                    r.a.merge(t.headers.common, t.headers[t.method]);
                  i &&
                    r.a.forEach(
                      [
                        "delete",
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "common",
                      ],
                      function (e) {
                        delete t.headers[e];
                      }
                    ),
                    (t.headers = new c.a(t.headers, i));
                  var a = [],
                    o = !0;
                  this.interceptors.request.forEach(function (e) {
                    ("function" === typeof e.runWhen && !1 === e.runWhen(t)) ||
                      ((o = o && e.synchronous),
                      a.unshift(e.fulfilled, e.rejected));
                  });
                  var s,
                    u = [];
                  this.interceptors.response.forEach(function (e) {
                    u.push(e.fulfilled, e.rejected);
                  });
                  var l,
                    h = 0;
                  if (!o) {
                    var f = [m.bind(this), void 0];
                    for (
                      f.unshift.apply(f, a),
                        f.push.apply(f, u),
                        l = f.length,
                        s = Promise.resolve(t);
                      h < l;

                    )
                      s = s.then(f[h++], f[h++]);
                    return s;
                  }
                  l = a.length;
                  var d = t;
                  for (h = 0; h < l; ) {
                    var p = a[h++],
                      g = a[h++];
                    try {
                      d = p(d);
                    } catch (y) {
                      g.call(this, y);
                      break;
                    }
                  }
                  try {
                    s = m.call(this, d);
                  } catch (y) {
                    return Promise.reject(y);
                  }
                  for (h = 0, l = u.length; h < l; ) s = s.then(u[h++], u[h++]);
                  return s;
                },
              },
              {
                key: "getUri",
                value: function (e) {
                  e = v(this.defaults, e);
                  var t = Object(g.a)(e.baseURL, e.url);
                  return Object(s.a)(t, e.params, e.paramsSerializer);
                },
              },
            ]),
            e
          );
        })();
      r.a.forEach(["delete", "get", "head", "options"], function (e) {
        M.prototype[e] = function (t, n) {
          return this.request(
            v(n || {}, { method: e, url: t, data: (n || {}).data })
          );
        };
      }),
        r.a.forEach(["post", "put", "patch"], function (e) {
          function t(t) {
            return function (n, r, i) {
              return this.request(
                v(i || {}, {
                  method: e,
                  headers: t ? { "Content-Type": "multipart/form-data" } : {},
                  url: n,
                  data: r,
                })
              );
            };
          }
          (M.prototype[e] = t()), (M.prototype[e + "Form"] = t(!0));
        });
      var T = M,
        E = n(59),
        O = (function () {
          function e(t) {
            if ((Object(a.a)(this, e), "function" !== typeof t))
              throw new TypeError("executor must be a function.");
            var n;
            this.promise = new Promise(function (e) {
              n = e;
            });
            var r = this;
            this.promise.then(function (e) {
              if (r._listeners) {
                for (var t = r._listeners.length; t-- > 0; ) r._listeners[t](e);
                r._listeners = null;
              }
            }),
              (this.promise.then = function (e) {
                var t,
                  n = new Promise(function (e) {
                    r.subscribe(e), (t = e);
                  }).then(e);
                return (
                  (n.cancel = function () {
                    r.unsubscribe(t);
                  }),
                  n
                );
              }),
              t(function (e, t, i) {
                r.reason || ((r.reason = new d.a(e, t, i)), n(r.reason));
              });
          }
          return (
            Object(o.a)(
              e,
              [
                {
                  key: "throwIfRequested",
                  value: function () {
                    if (this.reason) throw this.reason;
                  },
                },
                {
                  key: "subscribe",
                  value: function (e) {
                    this.reason
                      ? e(this.reason)
                      : this._listeners
                      ? this._listeners.push(e)
                      : (this._listeners = [e]);
                  },
                },
                {
                  key: "unsubscribe",
                  value: function (e) {
                    if (this._listeners) {
                      var t = this._listeners.indexOf(e);
                      -1 !== t && this._listeners.splice(t, 1);
                    }
                  },
                },
              ],
              [
                {
                  key: "source",
                  value: function () {
                    var t;
                    return {
                      token: new e(function (e) {
                        t = e;
                      }),
                      cancel: t,
                    };
                  },
                },
              ]
            ),
            e
          );
        })(),
        k = n(36);
      var A = (function e(t) {
        var n = new T(t),
          a = Object(i.a)(T.prototype.request, n);
        return (
          r.a.extend(a, T.prototype, n, { allOwnKeys: !0 }),
          r.a.extend(a, n, null, { allOwnKeys: !0 }),
          (a.create = function (n) {
            return e(v(t, n));
          }),
          a
        );
      })(l.a);
      (A.Axios = T),
        (A.CanceledError = d.a),
        (A.CancelToken = O),
        (A.isCancel = f),
        (A.VERSION = y),
        (A.toFormData = k.a),
        (A.AxiosError = b.a),
        (A.Cancel = A.CanceledError),
        (A.all = function (e) {
          return Promise.all(e);
        }),
        (A.spread = function (e) {
          return function (t) {
            return e.apply(null, t);
          };
        }),
        (A.isAxiosError = function (e) {
          return r.a.isObject(e) && !0 === e.isAxiosError;
        }),
        (A.formToJSON = function (e) {
          return Object(E.a)(r.a.isHTMLForm(e) ? new FormData(e) : e);
        });
    },
    function (e, t, n) {
      "use strict";
      var r = n(10),
        i = n(8),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(14)),
        u = n(18),
        l = o.a.forwardRef(function (e, t) {
          var n = e.classes,
            a = e.className,
            u = e.component,
            l = void 0 === u ? "div" : u,
            c = e.square,
            h = void 0 !== c && c,
            f = e.elevation,
            d = void 0 === f ? 1 : f,
            p = Object(r.a)(e, [
              "classes",
              "className",
              "component",
              "square",
              "elevation",
            ]);
          var m = Object(s.a)(
            n.root,
            n["elevation".concat(d)],
            a,
            !h && n.rounded
          );
          return o.a.createElement(l, Object(i.a)({ className: m, ref: t }, p));
        });
      t.a = Object(u.a)(
        function (e) {
          var t = {};
          return (
            e.shadows.forEach(function (e, n) {
              t["elevation".concat(n)] = { boxShadow: e };
            }),
            Object(i.a)(
              {
                root: {
                  backgroundColor: e.palette.background.paper,
                  color: e.palette.text.primary,
                  transition: e.transitions.create("box-shadow"),
                },
                rounded: { borderRadius: e.shape.borderRadius },
              },
              t
            )
          );
        },
        { name: "MuiPaper" }
      )(l);
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(34)),
        u = n.n(s),
        l = n(14);
      function c(e, t) {
        "function" === typeof e ? e(t) : e && (e.current = t);
      }
      function h(e, t) {
        return o.a.useMemo(
          function () {
            return null == e && null == t
              ? null
              : function (n) {
                  c(e, n), c(t, n);
                };
          },
          [e, t]
        );
      }
      var f = n(30),
        d = n(18),
        p = "undefined" !== typeof window ? o.a.useLayoutEffect : o.a.useEffect;
      var m = function (e) {
          var t = e.children,
            n = e.defer,
            r = void 0 !== n && n,
            i = e.fallback,
            a = void 0 === i ? null : i,
            s = o.a.useState(!1),
            u = s[0],
            l = s[1];
          return (
            p(
              function () {
                r || l(!0);
              },
              [r]
            ),
            o.a.useEffect(
              function () {
                r && l(!0);
              },
              [r]
            ),
            o.a.createElement(o.a.Fragment, null, u ? t : a)
          );
        },
        v = !0,
        g = !1,
        y = null,
        b = {
          text: !0,
          search: !0,
          url: !0,
          tel: !0,
          email: !0,
          password: !0,
          number: !0,
          date: !0,
          month: !0,
          week: !0,
          time: !0,
          datetime: !0,
          "datetime-local": !0,
        };
      function x() {
        v = !0;
      }
      function _() {
        v = !1;
      }
      function w() {
        "hidden" === this.visibilityState && g && (v = !0);
      }
      function S(e) {
        var t = e.target;
        try {
          return t.matches(":focus-visible");
        } catch (n) {}
        return (
          v ||
          (function (e) {
            var t = e.type,
              n = e.tagName;
            return (
              !("INPUT" !== n || !b[t] || e.readOnly) ||
              ("TEXTAREA" === n && !e.readOnly) ||
              !!e.isContentEditable
            );
          })(t)
        );
      }
      function M() {
        (g = !0),
          window.clearTimeout(y),
          (y = window.setTimeout(function () {
            (g = !1), window.clearTimeout(y);
          }, 100));
      }
      function T() {
        return {
          isFocusVisible: S,
          onBlurVisible: M,
          ref: o.a.useCallback(function (e) {
            var t,
              n = u.a.findDOMNode(e);
            null != n &&
              ((t = n.ownerDocument).addEventListener("keydown", x, !0),
              t.addEventListener("mousedown", _, !0),
              t.addEventListener("pointerdown", _, !0),
              t.addEventListener("touchstart", _, !0),
              t.addEventListener("visibilitychange", w, !0));
          }, []),
        };
      }
      var E = n(48),
        O = n(25),
        k = n(22),
        A = n(19),
        C = n(45);
      function P(e, t) {
        var n = Object.create(null);
        return (
          e &&
            a.Children.map(e, function (e) {
              return e;
            }).forEach(function (e) {
              n[e.key] = (function (e) {
                return t && Object(a.isValidElement)(e) ? t(e) : e;
              })(e);
            }),
          n
        );
      }
      function R(e, t, n) {
        return null != n[t] ? n[t] : e.props[t];
      }
      function L(e, t, n) {
        var r = P(e.children),
          i = (function (e, t) {
            function n(n) {
              return n in t ? t[n] : e[n];
            }
            (e = e || {}), (t = t || {});
            var r,
              i = Object.create(null),
              a = [];
            for (var o in e)
              o in t ? a.length && ((i[o] = a), (a = [])) : a.push(o);
            var s = {};
            for (var u in t) {
              if (i[u])
                for (r = 0; r < i[u].length; r++) {
                  var l = i[u][r];
                  s[i[u][r]] = n(l);
                }
              s[u] = n(u);
            }
            for (r = 0; r < a.length; r++) s[a[r]] = n(a[r]);
            return s;
          })(t, r);
        return (
          Object.keys(i).forEach(function (o) {
            var s = i[o];
            if (Object(a.isValidElement)(s)) {
              var u = o in t,
                l = o in r,
                c = t[o],
                h = Object(a.isValidElement)(c) && !c.props.in;
              !l || (u && !h)
                ? l || !u || h
                  ? l &&
                    u &&
                    Object(a.isValidElement)(c) &&
                    (i[o] = Object(a.cloneElement)(s, {
                      onExited: n.bind(null, s),
                      in: c.props.in,
                      exit: R(s, "exit", e),
                      enter: R(s, "enter", e),
                    }))
                  : (i[o] = Object(a.cloneElement)(s, { in: !1 }))
                : (i[o] = Object(a.cloneElement)(s, {
                    onExited: n.bind(null, s),
                    in: !0,
                    exit: R(s, "exit", e),
                    enter: R(s, "enter", e),
                  }));
            }
          }),
          i
        );
      }
      var j =
          Object.values ||
          function (e) {
            return Object.keys(e).map(function (t) {
              return e[t];
            });
          },
        I = (function (e) {
          function t(t, n) {
            var r,
              i = (r = e.call(this, t, n) || this).handleExited.bind(
                Object(A.a)(Object(A.a)(r))
              );
            return (
              (r.state = {
                contextValue: { isMounting: !0 },
                handleExited: i,
                firstRender: !0,
              }),
              r
            );
          }
          Object(k.a)(t, e);
          var n = t.prototype;
          return (
            (n.componentDidMount = function () {
              (this.mounted = !0),
                this.setState({ contextValue: { isMounting: !1 } });
            }),
            (n.componentWillUnmount = function () {
              this.mounted = !1;
            }),
            (t.getDerivedStateFromProps = function (e, t) {
              var n,
                r,
                i = t.children,
                o = t.handleExited;
              return {
                children: t.firstRender
                  ? ((n = e),
                    (r = o),
                    P(n.children, function (e) {
                      return Object(a.cloneElement)(e, {
                        onExited: r.bind(null, e),
                        in: !0,
                        appear: R(e, "appear", n),
                        enter: R(e, "enter", n),
                        exit: R(e, "exit", n),
                      });
                    }))
                  : L(e, i, o),
                firstRender: !1,
              };
            }),
            (n.handleExited = function (e, t) {
              var n = P(this.props.children);
              e.key in n ||
                (e.props.onExited && e.props.onExited(t),
                this.mounted &&
                  this.setState(function (t) {
                    var n = Object(r.a)({}, t.children);
                    return delete n[e.key], { children: n };
                  }));
            }),
            (n.render = function () {
              var e = this.props,
                t = e.component,
                n = e.childFactory,
                r = Object(O.a)(e, ["component", "childFactory"]),
                i = this.state.contextValue,
                a = j(this.state.children).map(n);
              return (
                delete r.appear,
                delete r.enter,
                delete r.exit,
                null === t
                  ? o.a.createElement(C.a.Provider, { value: i }, a)
                  : o.a.createElement(
                      C.a.Provider,
                      { value: i },
                      o.a.createElement(t, r, a)
                    )
              );
            }),
            t
          );
        })(o.a.Component);
      (I.propTypes = {}),
        (I.defaultProps = {
          component: "div",
          childFactory: function (e) {
            return e;
          },
        });
      var N = I,
        D = "undefined" === typeof window ? o.a.useEffect : o.a.useLayoutEffect;
      var z = function (e) {
          var t = e.classes,
            n = e.pulsate,
            r = void 0 !== n && n,
            i = e.rippleX,
            a = e.rippleY,
            s = e.rippleSize,
            u = e.in,
            c = e.onExited,
            h = void 0 === c ? function () {} : c,
            d = e.timeout,
            p = o.a.useState(!1),
            m = p[0],
            v = p[1],
            g = Object(l.a)(t.ripple, t.rippleVisible, r && t.ripplePulsate),
            y = { width: s, height: s, top: -s / 2 + a, left: -s / 2 + i },
            b = Object(l.a)(t.child, m && t.childLeaving, r && t.childPulsate),
            x = Object(f.a)(h);
          return (
            D(
              function () {
                if (!u) {
                  v(!0);
                  var e = setTimeout(x, d);
                  return function () {
                    clearTimeout(e);
                  };
                }
              },
              [x, u, d]
            ),
            o.a.createElement(
              "span",
              { className: g, style: y },
              o.a.createElement("span", { className: b })
            )
          );
        },
        U = o.a.forwardRef(function (e, t) {
          var n = e.center,
            a = void 0 !== n && n,
            s = e.classes,
            u = e.className,
            c = Object(i.a)(e, ["center", "classes", "className"]),
            h = o.a.useState([]),
            f = h[0],
            d = h[1],
            p = o.a.useRef(0),
            m = o.a.useRef(null);
          o.a.useEffect(
            function () {
              m.current && (m.current(), (m.current = null));
            },
            [f]
          );
          var v = o.a.useRef(!1),
            g = o.a.useRef(null),
            y = o.a.useRef(null),
            b = o.a.useRef(null);
          o.a.useEffect(function () {
            return function () {
              clearTimeout(g.current);
            };
          }, []);
          var x = o.a.useCallback(
              function (e) {
                var t = e.pulsate,
                  n = e.rippleX,
                  r = e.rippleY,
                  i = e.rippleSize,
                  a = e.cb;
                d(function (e) {
                  return [].concat(Object(E.a)(e), [
                    o.a.createElement(z, {
                      key: p.current,
                      classes: s,
                      timeout: 550,
                      pulsate: t,
                      rippleX: n,
                      rippleY: r,
                      rippleSize: i,
                    }),
                  ]);
                }),
                  (p.current += 1),
                  (m.current = a);
              },
              [s]
            ),
            _ = o.a.useCallback(
              function () {
                var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  n = arguments.length > 2 ? arguments[2] : void 0,
                  r = t.pulsate,
                  i = void 0 !== r && r,
                  o = t.center,
                  s = void 0 === o ? a || t.pulsate : o,
                  u = t.fakeElement,
                  l = void 0 !== u && u;
                if ("mousedown" === e.type && v.current) v.current = !1;
                else {
                  "touchstart" === e.type && (v.current = !0);
                  var c,
                    h,
                    f,
                    d = l ? null : b.current,
                    p = d
                      ? d.getBoundingClientRect()
                      : { width: 0, height: 0, left: 0, top: 0 };
                  if (
                    s ||
                    (0 === e.clientX && 0 === e.clientY) ||
                    (!e.clientX && !e.touches)
                  )
                    (c = Math.round(p.width / 2)),
                      (h = Math.round(p.height / 2));
                  else {
                    var m = e.clientX ? e.clientX : e.touches[0].clientX,
                      _ = e.clientY ? e.clientY : e.touches[0].clientY;
                    (c = Math.round(m - p.left)), (h = Math.round(_ - p.top));
                  }
                  if (s)
                    (f = Math.sqrt(
                      (2 * Math.pow(p.width, 2) + Math.pow(p.height, 2)) / 3
                    )) %
                      2 ===
                      0 && (f += 1);
                  else {
                    var w =
                        2 * Math.max(Math.abs((d ? d.clientWidth : 0) - c), c) +
                        2,
                      S =
                        2 *
                          Math.max(Math.abs((d ? d.clientHeight : 0) - h), h) +
                        2;
                    f = Math.sqrt(Math.pow(w, 2) + Math.pow(S, 2));
                  }
                  e.touches
                    ? ((y.current = function () {
                        x({
                          pulsate: i,
                          rippleX: c,
                          rippleY: h,
                          rippleSize: f,
                          cb: n,
                        });
                      }),
                      (g.current = setTimeout(function () {
                        y.current && (y.current(), (y.current = null));
                      }, 80)))
                    : x({
                        pulsate: i,
                        rippleX: c,
                        rippleY: h,
                        rippleSize: f,
                        cb: n,
                      });
                }
              },
              [a, x]
            ),
            w = o.a.useCallback(
              function () {
                _({}, { pulsate: !0 });
              },
              [_]
            ),
            S = o.a.useCallback(function (e, t) {
              if ((clearTimeout(g.current), "touchend" === e.type && y.current))
                return (
                  e.persist(),
                  y.current(),
                  (y.current = null),
                  void (g.current = setTimeout(function () {
                    S(e, t);
                  }))
                );
              (y.current = null),
                d(function (e) {
                  return e.length > 0 ? e.slice(1) : e;
                }),
                (m.current = t);
            }, []);
          return (
            o.a.useImperativeHandle(
              t,
              function () {
                return { pulsate: w, start: _, stop: S };
              },
              [w, _, S]
            ),
            o.a.createElement(
              "span",
              Object(r.a)({ className: Object(l.a)(s.root, u), ref: b }, c),
              o.a.createElement(N, { component: null, exit: !0 }, f)
            )
          );
        });
      var B,
        F = Object(d.a)(
          function (e) {
            return {
              root: {
                overflow: "hidden",
                pointerEvents: "none",
                position: "absolute",
                zIndex: 0,
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                borderRadius: "inherit",
              },
              ripple: { opacity: 0, position: "absolute" },
              rippleVisible: {
                opacity: 0.3,
                transform: "scale(1)",
                animation: "$enter "
                  .concat(550, "ms ")
                  .concat(e.transitions.easing.easeInOut),
              },
              ripplePulsate: {
                animationDuration: "".concat(
                  e.transitions.duration.shorter,
                  "ms"
                ),
              },
              child: {
                opacity: 1,
                display: "block",
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                backgroundColor: "currentColor",
              },
              childLeaving: {
                opacity: 0,
                animation: "$exit "
                  .concat(550, "ms ")
                  .concat(e.transitions.easing.easeInOut),
              },
              childPulsate: {
                position: "absolute",
                left: 0,
                top: 0,
                animation: "$pulsate 2500ms ".concat(
                  e.transitions.easing.easeInOut,
                  " 200ms infinite"
                ),
              },
              "@keyframes enter": {
                "0%": { transform: "scale(0)", opacity: 0.1 },
                "100%": { transform: "scale(1)", opacity: 0.3 },
              },
              "@keyframes exit": {
                "0%": { opacity: 1 },
                "100%": { opacity: 0 },
              },
              "@keyframes pulsate": {
                "0%": { transform: "scale(1)" },
                "50%": { transform: "scale(0.92)" },
                "100%": { transform: "scale(1)" },
              },
            };
          },
          { flip: !1, name: "MuiTouchRipple" }
        )((((B = o.a.memo(U)).muiName = "MuiTouchRipple"), B)),
        G = o.a.forwardRef(function (e, t) {
          var n = e.action,
            a = e.buttonRef,
            s = e.centerRipple,
            c = void 0 !== s && s,
            d = e.children,
            p = e.classes,
            v = e.className,
            g = e.component,
            y = void 0 === g ? "button" : g,
            b = e.disabled,
            x = void 0 !== b && b,
            _ = e.disableRipple,
            w = void 0 !== _ && _,
            S = e.disableTouchRipple,
            M = void 0 !== S && S,
            E = e.focusRipple,
            O = void 0 !== E && E,
            k = e.focusVisibleClassName,
            A = e.onBlur,
            C = e.onClick,
            P = e.onFocus,
            R = e.onFocusVisible,
            L = e.onKeyDown,
            j = e.onKeyUp,
            I = e.onMouseDown,
            N = e.onMouseLeave,
            D = e.onMouseUp,
            z = e.onTouchEnd,
            U = e.onTouchMove,
            B = e.onTouchStart,
            G = e.onDragLeave,
            H = e.tabIndex,
            V = void 0 === H ? 0 : H,
            W = e.TouchRippleProps,
            q = e.type,
            X = void 0 === q ? "button" : q,
            Y = Object(i.a)(e, [
              "action",
              "buttonRef",
              "centerRipple",
              "children",
              "classes",
              "className",
              "component",
              "disabled",
              "disableRipple",
              "disableTouchRipple",
              "focusRipple",
              "focusVisibleClassName",
              "onBlur",
              "onClick",
              "onFocus",
              "onFocusVisible",
              "onKeyDown",
              "onKeyUp",
              "onMouseDown",
              "onMouseLeave",
              "onMouseUp",
              "onTouchEnd",
              "onTouchMove",
              "onTouchStart",
              "onDragLeave",
              "tabIndex",
              "TouchRippleProps",
              "type",
            ]),
            J = o.a.useRef(null);
          var Z = o.a.useRef(null),
            $ = o.a.useState(!1),
            K = $[0],
            Q = $[1];
          x && K && Q(!1);
          var ee = T(),
            te = ee.isFocusVisible,
            ne = ee.onBlurVisible,
            re = ee.ref;
          function ie(e, t) {
            var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : M;
            return Object(f.a)(function (r) {
              return (
                t && t(r),
                !(r.defaultPrevented || n) && Z.current && Z.current[e](r),
                !0
              );
            });
          }
          o.a.useImperativeHandle(
            n,
            function () {
              return {
                focusVisible: function () {
                  Q(!0), J.current.focus();
                },
              };
            },
            []
          ),
            o.a.useEffect(
              function () {
                K && O && !w && Z.current.pulsate();
              },
              [w, O, K]
            );
          var ae = ie("start", I),
            oe = ie("stop", G),
            se = ie("stop", D),
            ue = ie("stop", function (e) {
              K && e.preventDefault(), N && N(e);
            }),
            le = ie("start", B),
            ce = ie("stop", z),
            he = ie("stop", U),
            fe = ie(
              "stop",
              function (e) {
                K && (ne(e), Q(!1)), A && A(e);
              },
              !1
            ),
            de = Object(f.a)(function (e) {
              x ||
                (J.current || (J.current = e.currentTarget),
                te(e) && (Q(!0), R && R(e)),
                P && P(e));
            }),
            pe = o.a.useRef(!1),
            me = Object(f.a)(function (e) {
              O &&
                !pe.current &&
                K &&
                Z.current &&
                " " === e.key &&
                ((pe.current = !0),
                e.persist(),
                Z.current.stop(e, function () {
                  Z.current.start(e);
                })),
                L && L(e);
              var t = u.a.findDOMNode(J.current);
              e.target !== e.currentTarget ||
                !y ||
                "button" === y ||
                (" " !== e.key && "Enter" !== e.key) ||
                ("A" === t.tagName && t.href) ||
                (e.preventDefault(), C && C(e));
            }),
            ve = Object(f.a)(function (e) {
              O &&
                " " === e.key &&
                Z.current &&
                K &&
                ((pe.current = !1),
                e.persist(),
                Z.current.stop(e, function () {
                  Z.current.pulsate(e);
                })),
                j && j(e);
            }),
            ge = y;
          "button" === ge && Y.href && (ge = "a");
          var ye = {};
          "button" === ge
            ? ((ye.type = X), (ye.disabled = x))
            : (("a" === ge && Y.href) || (ye.role = "button"),
              (ye["aria-disabled"] = x));
          var be = h(a, t),
            xe = h(re, J),
            _e = h(be, xe);
          return o.a.createElement(
            ge,
            Object(r.a)(
              {
                className: Object(l.a)(
                  p.root,
                  v,
                  K && [p.focusVisible, k],
                  x && p.disabled
                ),
                onBlur: fe,
                onClick: C,
                onFocus: de,
                onKeyDown: me,
                onKeyUp: ve,
                onMouseDown: ae,
                onMouseLeave: ue,
                onMouseUp: se,
                onDragLeave: oe,
                onTouchEnd: ce,
                onTouchMove: he,
                onTouchStart: le,
                ref: _e,
                tabIndex: x ? -1 : V,
              },
              ye,
              Y
            ),
            d,
            w || x
              ? null
              : o.a.createElement(
                  m,
                  null,
                  o.a.createElement(F, Object(r.a)({ ref: Z, center: c }, W))
                )
          );
        });
      t.a = Object(d.a)(
        {
          root: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            position: "relative",
            WebkitTapHighlightColor: "transparent",
            backgroundColor: "transparent",
            outline: 0,
            border: 0,
            margin: 0,
            borderRadius: 0,
            padding: 0,
            cursor: "pointer",
            userSelect: "none",
            verticalAlign: "middle",
            "-moz-appearance": "none",
            "-webkit-appearance": "none",
            textDecoration: "none",
            color: "inherit",
            "&::-moz-focus-inner": { borderStyle: "none" },
            "&$disabled": { pointerEvents: "none", cursor: "default" },
          },
          disabled: {},
          focusVisible: {},
        },
        { name: "MuiButtonBase" }
      )(G);
    },
    function (e, t, n) {
      "use strict";
      var r = n(0),
        i = n.n(r),
        a = i.a.createContext(null);
      function o() {
        return i.a.useContext(a);
      }
      n.d(t, "a", function () {
        return o;
      });
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(14)),
        u = n(18),
        l = n(23),
        c = n(137),
        h = o.a.forwardRef(function (e, t) {
          var n = e.classes,
            a = e.className,
            u = e.color,
            h = void 0 === u ? "primary" : u,
            f = e.position,
            d = void 0 === f ? "fixed" : f,
            p = Object(i.a)(e, ["classes", "className", "color", "position"]);
          return o.a.createElement(
            c.a,
            Object(r.a)(
              {
                square: !0,
                component: "header",
                elevation: 4,
                className: Object(s.a)(
                  n.root,
                  n["position".concat(Object(l.a)(d))],
                  a,
                  "inherit" !== h && n["color".concat(Object(l.a)(h))],
                  { fixed: "mui-fixed" }[d]
                ),
                ref: t,
              },
              p
            )
          );
        });
      t.a = Object(u.a)(
        function (e) {
          var t =
            "light" === e.palette.type
              ? e.palette.grey[100]
              : e.palette.grey[900];
          return {
            root: {
              display: "flex",
              flexDirection: "column",
              width: "100%",
              boxSizing: "border-box",
              zIndex: e.zIndex.appBar,
              flexShrink: 0,
            },
            positionFixed: {
              position: "fixed",
              top: 0,
              left: "auto",
              right: 0,
            },
            positionAbsolute: {
              position: "absolute",
              top: 0,
              left: "auto",
              right: 0,
            },
            positionSticky: {
              position: "sticky",
              top: 0,
              left: "auto",
              right: 0,
            },
            positionStatic: { position: "static" },
            positionRelative: { position: "relative" },
            colorDefault: {
              backgroundColor: t,
              color: e.palette.getContrastText(t),
            },
            colorPrimary: {
              backgroundColor: e.palette.primary.main,
              color: e.palette.primary.contrastText,
            },
            colorSecondary: {
              backgroundColor: e.palette.secondary.main,
              color: e.palette.secondary.contrastText,
            },
          };
        },
        { name: "MuiAppBar" }
      )(h);
    },
    function (e, t, n) {
      "use strict";
      var r = n(10),
        i = n(9),
        a = n(8),
        o = n(0),
        s = n.n(o),
        u = (n(7), n(14)),
        l = n(18),
        c = n(138),
        h = n(23),
        f = s.a.forwardRef(function (e, t) {
          var n = e.classes,
            i = e.className,
            o = e.disabled,
            l = void 0 !== o && o,
            f = e.disableFocusRipple,
            d = void 0 !== f && f,
            p = e.fullWidth,
            m = e.icon,
            v = e.indicator,
            g = e.label,
            y = e.onChange,
            b = e.onClick,
            x = e.selected,
            _ = e.textColor,
            w = void 0 === _ ? "inherit" : _,
            S = e.value,
            M = e.wrapped,
            T = void 0 !== M && M,
            E = Object(r.a)(e, [
              "classes",
              "className",
              "disabled",
              "disableFocusRipple",
              "fullWidth",
              "icon",
              "indicator",
              "label",
              "onChange",
              "onClick",
              "selected",
              "textColor",
              "value",
              "wrapped",
            ]);
          return s.a.createElement(
            c.a,
            Object(a.a)(
              {
                focusRipple: !d,
                className: Object(u.a)(
                  n.root,
                  n["textColor".concat(Object(h.a)(w))],
                  i,
                  l && n.disabled,
                  x && n.selected,
                  g && m && n.labelIcon,
                  p && n.fullWidth,
                  T && n.wrapped
                ),
                ref: t,
                role: "tab",
                "aria-selected": x,
                disabled: l,
                onClick: function (e) {
                  y && y(e, S), b && b(e);
                },
              },
              E
            ),
            s.a.createElement("span", { className: n.wrapper }, m, g),
            v
          );
        });
      t.a = Object(l.a)(
        function (e) {
          var t;
          return {
            root: Object(a.a)(
              {},
              e.typography.button,
              ((t = {
                maxWidth: 264,
                minWidth: 72,
                position: "relative",
                boxSizing: "border-box",
                minHeight: 48,
                flexShrink: 0,
                padding: "6px 12px",
              }),
              Object(i.a)(t, e.breakpoints.up("sm"), { padding: "6px 24px" }),
              Object(i.a)(t, "overflow", "hidden"),
              Object(i.a)(t, "whiteSpace", "normal"),
              Object(i.a)(t, "textAlign", "center"),
              Object(i.a)(t, e.breakpoints.up("sm"), {
                fontSize: e.typography.pxToRem(13),
                minWidth: 160,
              }),
              t)
            ),
            labelIcon: {
              minHeight: 72,
              paddingTop: 9,
              "& $wrapper > *:first-child": { marginBottom: 6 },
            },
            textColorInherit: {
              color: "inherit",
              opacity: 0.7,
              "&$selected": { opacity: 1 },
              "&$disabled": { opacity: 0.4 },
            },
            textColorPrimary: {
              color: e.palette.text.secondary,
              "&$selected": { color: e.palette.primary.main },
              "&$disabled": { color: e.palette.text.disabled },
            },
            textColorSecondary: {
              color: e.palette.text.secondary,
              "&$selected": { color: e.palette.secondary.main },
              "&$disabled": { color: e.palette.text.disabled },
            },
            selected: {},
            disabled: {},
            fullWidth: {
              flexShrink: 1,
              flexGrow: 1,
              flexBasis: 0,
              maxWidth: "none",
            },
            wrapped: { fontSize: e.typography.pxToRem(12), lineHeight: 1.5 },
            wrapper: {
              display: "inline-flex",
              alignItems: "center",
              justifyContent: "center",
              width: "100%",
              flexDirection: "column",
            },
          };
        },
        { name: "MuiTab" }
      )(f);
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(14)),
        u = n(18),
        l = o.a.forwardRef(function (e, t) {
          var n = e.classes,
            a = e.className,
            u = Object(i.a)(e, ["classes", "className"]);
          return o.a.createElement(
            "div",
            Object(r.a)({ className: Object(s.a)(n.root, a), ref: t }, u)
          );
        });
      t.a = Object(u.a)(
        { root: { display: "flex", padding: "8px 24px 24px" } },
        { name: "MuiExpansionPanelDetails" }
      )(l);
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(14)),
        u = n(18),
        l = n(23),
        c = {
          h1: "h1",
          h2: "h2",
          h3: "h3",
          h4: "h4",
          h5: "h5",
          h6: "h6",
          subtitle1: "h6",
          subtitle2: "h6",
          body1: "p",
          body2: "p",
        },
        h = o.a.forwardRef(function (e, t) {
          var n = e.align,
            a = void 0 === n ? "inherit" : n,
            u = e.classes,
            h = e.className,
            f = e.color,
            d = void 0 === f ? "initial" : f,
            p = e.component,
            m = e.display,
            v = void 0 === m ? "initial" : m,
            g = e.gutterBottom,
            y = void 0 !== g && g,
            b = e.noWrap,
            x = void 0 !== b && b,
            _ = e.paragraph,
            w = void 0 !== _ && _,
            S = e.variant,
            M = void 0 === S ? "body1" : S,
            T = e.variantMapping,
            E = void 0 === T ? c : T,
            O = Object(i.a)(e, [
              "align",
              "classes",
              "className",
              "color",
              "component",
              "display",
              "gutterBottom",
              "noWrap",
              "paragraph",
              "variant",
              "variantMapping",
            ]),
            k = p || (w ? "p" : E[M] || c[M]) || "span";
          return o.a.createElement(
            k,
            Object(r.a)(
              {
                className: Object(s.a)(
                  u.root,
                  h,
                  "inherit" !== M && u[M],
                  "initial" !== d && u["color".concat(Object(l.a)(d))],
                  x && u.noWrap,
                  y && u.gutterBottom,
                  w && u.paragraph,
                  "inherit" !== a && u["align".concat(Object(l.a)(a))],
                  "initial" !== v && u["display".concat(Object(l.a)(v))]
                ),
                ref: t,
              },
              O
            )
          );
        });
      t.a = Object(u.a)(
        function (e) {
          return {
            root: { margin: 0 },
            body2: e.typography.body2,
            body1: e.typography.body1,
            caption: e.typography.caption,
            button: e.typography.button,
            h1: e.typography.h1,
            h2: e.typography.h2,
            h3: e.typography.h3,
            h4: e.typography.h4,
            h5: e.typography.h5,
            h6: e.typography.h6,
            subtitle1: e.typography.subtitle1,
            subtitle2: e.typography.subtitle2,
            overline: e.typography.overline,
            srOnly: {
              position: "absolute",
              height: 1,
              width: 1,
              overflow: "hidden",
            },
            alignLeft: { textAlign: "left" },
            alignCenter: { textAlign: "center" },
            alignRight: { textAlign: "right" },
            alignJustify: { textAlign: "justify" },
            noWrap: {
              overflow: "hidden",
              textOverflow: "ellipsis",
              whiteSpace: "nowrap",
            },
            gutterBottom: { marginBottom: "0.35em" },
            paragraph: { marginBottom: 16 },
            colorInherit: { color: "inherit" },
            colorPrimary: { color: e.palette.primary.main },
            colorSecondary: { color: e.palette.secondary.main },
            colorTextPrimary: { color: e.palette.text.primary },
            colorTextSecondary: { color: e.palette.text.secondary },
            colorError: { color: e.palette.error.main },
            displayInline: { display: "inline" },
            displayBlock: { display: "block" },
          };
        },
        { name: "MuiTypography" }
      )(h);
    },
    function (e, t, n) {
      "use strict";
      var r = n(31),
        i = n(32),
        a = n(0),
        o = n.n(a),
        s = n(7),
        u = n.n(s),
        l = n(15),
        c = n.n(l),
        h = n(24),
        f = [
          "className",
          "cssModule",
          "color",
          "body",
          "inverse",
          "outline",
          "tag",
          "innerRef",
        ],
        d = {
          tag: h.b,
          inverse: u.a.bool,
          color: u.a.string,
          body: u.a.bool,
          outline: u.a.bool,
          className: u.a.string,
          cssModule: u.a.object,
          innerRef: u.a.oneOfType([u.a.object, u.a.string, u.a.func]),
        },
        p = function (e) {
          var t = e.className,
            n = e.cssModule,
            a = e.color,
            s = e.body,
            u = e.inverse,
            l = e.outline,
            d = e.tag,
            p = e.innerRef,
            m = Object(i.a)(e, f),
            v = Object(h.a)(
              c()(
                t,
                "card",
                !!u && "text-white",
                !!s && "card-body",
                !!a && (l ? "border" : "bg") + "-" + a
              ),
              n
            );
          return o.a.createElement(
            d,
            Object(r.a)({}, m, { className: v, ref: p })
          );
        };
      (p.propTypes = d), (p.defaultProps = { tag: "div" }), (t.a = p);
    },
    function (e, t, n) {
      "use strict";
      var r = n(31),
        i = n(32),
        a = n(0),
        o = n.n(a),
        s = n(7),
        u = n.n(s),
        l = n(15),
        c = n.n(l),
        h = n(24),
        f = ["className", "cssModule", "top", "bottom", "tag"],
        d = {
          tag: h.b,
          top: u.a.bool,
          bottom: u.a.bool,
          className: u.a.string,
          cssModule: u.a.object,
        },
        p = function (e) {
          var t = e.className,
            n = e.cssModule,
            a = e.top,
            s = e.bottom,
            u = e.tag,
            l = Object(i.a)(e, f),
            d = "card-img";
          a && (d = "card-img-top"), s && (d = "card-img-bottom");
          var p = Object(h.a)(c()(t, d), n);
          return o.a.createElement(u, Object(r.a)({}, l, { className: p }));
        };
      (p.propTypes = d), (p.defaultProps = { tag: "img" }), (t.a = p);
    },
    function (e, t, n) {
      "use strict";
      var r = n(31),
        i = n(32),
        a = n(0),
        o = n.n(a),
        s = n(7),
        u = n.n(s),
        l = n(15),
        c = n.n(l),
        h = n(24),
        f = ["className", "cssModule", "innerRef", "tag"],
        d = {
          tag: h.b,
          className: u.a.string,
          cssModule: u.a.object,
          innerRef: u.a.oneOfType([u.a.object, u.a.string, u.a.func]),
        },
        p = function (e) {
          var t = e.className,
            n = e.cssModule,
            a = e.innerRef,
            s = e.tag,
            u = Object(i.a)(e, f),
            l = Object(h.a)(c()(t, "card-body"), n);
          return o.a.createElement(
            s,
            Object(r.a)({}, u, { className: l, ref: a })
          );
        };
      (p.propTypes = d), (p.defaultProps = { tag: "div" }), (t.a = p);
    },
    function (e, t, n) {
      "use strict";
      var r = n(31),
        i = n(32),
        a = n(0),
        o = n.n(a),
        s = n(7),
        u = n.n(s),
        l = n(15),
        c = n.n(l),
        h = n(24),
        f = ["className", "cssModule", "fluid", "tag"],
        d = {
          tag: h.b,
          fluid: u.a.oneOfType([u.a.bool, u.a.string]),
          className: u.a.string,
          cssModule: u.a.object,
        },
        p = function (e) {
          var t = e.className,
            n = e.cssModule,
            a = e.fluid,
            s = e.tag,
            u = Object(i.a)(e, f),
            l = "container";
          !0 === a ? (l = "container-fluid") : a && (l = "container-" + a);
          var d = Object(h.a)(c()(t, l), n);
          return o.a.createElement(s, Object(r.a)({}, u, { className: d }));
        };
      (p.propTypes = d), (p.defaultProps = { tag: "div" }), (t.a = p);
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(9),
        o = n(0),
        s = n.n(o),
        u = (n(7), n(14));
      function l(e) {
        var t,
          n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 166;
        function r() {
          for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++)
            i[a] = arguments[a];
          var o = this;
          clearTimeout(t),
            (t = setTimeout(function () {
              e.apply(o, i);
            }, n));
        }
        return (
          (r.clear = function () {
            clearTimeout(t);
          }),
          r
        );
      }
      var c = function (e) {
        return (e && e.ownerDocument) || document;
      };
      var h,
        f = function (e) {
          return c(e).defaultView || window;
        },
        d = !(
          "undefined" === typeof window ||
          !window.document ||
          !window.document.createElement
        );
      function p() {
        if (h) return h;
        if (!d || !window.document.body) return "indeterminate";
        var e = window.document.createElement("div");
        return (
          e.appendChild(document.createTextNode("ABCD")),
          (e.dir = "rtl"),
          (e.style.fontSize = "14px"),
          (e.style.width = "4px"),
          (e.style.height = "1px"),
          (e.style.position = "absolute"),
          (e.style.top = "-1000px"),
          (e.style.overflow = "scroll"),
          document.body.appendChild(e),
          (h = "reverse"),
          e.scrollLeft > 0
            ? (h = "default")
            : ((e.scrollLeft = 1), 0 === e.scrollLeft && (h = "negative")),
          document.body.removeChild(e),
          h
        );
      }
      function m(e, t) {
        var n = e.scrollLeft;
        if ("rtl" !== t) return n;
        var r = p();
        if ("indeterminate" === r) return Number.NaN;
        switch (r) {
          case "negative":
            return e.scrollWidth - e.clientWidth + n;
          case "reverse":
            return e.scrollWidth - e.clientWidth - n;
        }
        return n;
      }
      function v(e) {
        return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2;
      }
      var g = {
        width: 99,
        height: 99,
        position: "absolute",
        top: -9999,
        overflow: "scroll",
      };
      function y(e) {
        var t = e.onChange,
          n = Object(i.a)(e, ["onChange"]),
          a = s.a.useRef(),
          o = s.a.useRef(null),
          u = function () {
            a.current = o.current.offsetHeight - o.current.clientHeight;
          };
        return (
          s.a.useEffect(
            function () {
              var e = l(function () {
                var e = a.current;
                u(), e !== a.current && t(a.current);
              });
              return (
                window.addEventListener("resize", e),
                function () {
                  e.clear(), window.removeEventListener("resize", e);
                }
              );
            },
            [t]
          ),
          s.a.useEffect(
            function () {
              u(), t(a.current);
            },
            [t]
          ),
          s.a.createElement("div", Object(r.a)({ style: g, ref: o }, n))
        );
      }
      var b = n(18),
        x = n(23),
        _ = s.a.forwardRef(function (e, t) {
          var n = e.classes,
            a = e.className,
            o = e.color,
            l = e.orientation,
            c = Object(i.a)(e, [
              "classes",
              "className",
              "color",
              "orientation",
            ]);
          return s.a.createElement(
            "span",
            Object(r.a)(
              {
                className: Object(u.a)(
                  n.root,
                  n["color".concat(Object(x.a)(o))],
                  a,
                  { vertical: n.vertical }[l]
                ),
                ref: t,
              },
              c
            )
          );
        }),
        w = Object(b.a)(
          function (e) {
            return {
              root: {
                position: "absolute",
                height: 2,
                bottom: 0,
                width: "100%",
                transition: e.transitions.create(),
              },
              colorPrimary: { backgroundColor: e.palette.primary.main },
              colorSecondary: { backgroundColor: e.palette.secondary.main },
              vertical: { height: "100%", width: 2, right: 0 },
            };
          },
          { name: "PrivateTabIndicator" }
        )(_),
        S = n(76);
      function M(e, t) {
        var n = s.a.memo(
          s.a.forwardRef(function (t, n) {
            return s.a.createElement(S.a, Object(r.a)({}, t, { ref: n }), e);
          })
        );
        return (n.muiName = S.a.muiName), n;
      }
      var T = M(
          s.a.createElement("path", {
            d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z",
          })
        ),
        E = M(
          s.a.createElement("path", {
            d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z",
          })
        ),
        O = n(138),
        k = s.a.createElement(T, { fontSize: "small" }),
        A = s.a.createElement(E, { fontSize: "small" }),
        C = s.a.forwardRef(function (e, t) {
          var n = e.classes,
            a = e.className,
            o = e.direction,
            l = e.orientation,
            c = e.visible,
            h = Object(i.a)(e, [
              "classes",
              "className",
              "direction",
              "orientation",
              "visible",
            ]),
            f = Object(u.a)(n.root, a, { vertical: n.vertical }[l]);
          return c
            ? s.a.createElement(
                O.a,
                Object(r.a)(
                  {
                    component: "div",
                    className: f,
                    ref: t,
                    role: null,
                    tabIndex: null,
                  },
                  h
                ),
                "left" === o ? k : A
              )
            : s.a.createElement("div", { className: f });
        }),
        P = Object(b.a)(
          {
            root: { width: 40, flexShrink: 0 },
            vertical: {
              width: "100%",
              height: 40,
              "& svg": { transform: "rotate(90deg)" },
            },
          },
          { name: "PrivateTabScrollButton" }
        )(C),
        R = n(30),
        L = n(54),
        j = s.a.forwardRef(function (e, t) {
          var n = e.action,
            o = e.centered,
            c = void 0 !== o && o,
            h = e.children,
            d = e.classes,
            g = e.className,
            b = e.component,
            x = void 0 === b ? "div" : b,
            _ = e.indicatorColor,
            S = void 0 === _ ? "secondary" : _,
            M = e.onChange,
            T = e.orientation,
            E = void 0 === T ? "horizontal" : T,
            O = e.ScrollButtonComponent,
            k = void 0 === O ? P : O,
            A = e.scrollButtons,
            C = void 0 === A ? "auto" : A,
            j = e.TabIndicatorProps,
            I = void 0 === j ? {} : j,
            N = e.textColor,
            D = void 0 === N ? "inherit" : N,
            z = e.value,
            U = e.variant,
            B = void 0 === U ? "standard" : U,
            F = Object(i.a)(e, [
              "action",
              "centered",
              "children",
              "classes",
              "className",
              "component",
              "indicatorColor",
              "onChange",
              "orientation",
              "ScrollButtonComponent",
              "scrollButtons",
              "TabIndicatorProps",
              "textColor",
              "value",
              "variant",
            ]),
            G = Object(L.a)(),
            H = "scrollable" === B,
            V = "rtl" === G.direction,
            W = "vertical" === E,
            q = W ? "scrollTop" : "scrollLeft",
            X = W ? "top" : "left",
            Y = W ? "bottom" : "right",
            J = W ? "clientHeight" : "clientWidth",
            Z = W ? "height" : "width";
          var $ = s.a.useState(!1),
            K = $[0],
            Q = $[1],
            ee = s.a.useState({}),
            te = ee[0],
            ne = ee[1],
            re = s.a.useState({ start: !1, end: !1 }),
            ie = re[0],
            ae = re[1],
            oe = s.a.useState({ overflow: "hidden", marginBottom: null }),
            se = oe[0],
            ue = oe[1],
            le = new Map(),
            ce = s.a.useRef(null),
            he = s.a.useRef(null),
            fe = function () {
              var e,
                t,
                n = ce.current;
              if (n) {
                var r = n.getBoundingClientRect();
                e = {
                  clientWidth: n.clientWidth,
                  scrollLeft: n.scrollLeft,
                  scrollTop: n.scrollTop,
                  scrollLeftNormalized: m(n, G.direction),
                  scrollWidth: n.scrollWidth,
                  top: r.top,
                  bottom: r.bottom,
                  left: r.left,
                  right: r.right,
                };
              }
              if (n && !1 !== z) {
                var i = he.current.children;
                if (i.length > 0) {
                  var a = i[le.get(z)];
                  0, (t = a ? a.getBoundingClientRect() : null);
                }
              }
              return { tabsMeta: e, tabMeta: t };
            },
            de = Object(R.a)(function () {
              var e,
                t = fe(),
                n = t.tabsMeta,
                r = t.tabMeta,
                i = 0;
              if (r && n)
                if (W) i = r.top - n.top + n.scrollTop;
                else {
                  var o = V
                    ? n.scrollLeftNormalized + n.clientWidth - n.scrollWidth
                    : n.scrollLeft;
                  i = r.left - n.left + o;
                }
              var s =
                ((e = {}),
                Object(a.a)(e, X, i),
                Object(a.a)(e, Z, r ? r[Z] : 0),
                e);
              if (isNaN(te[X]) || isNaN(te[Z])) ne(s);
              else {
                var u = Math.abs(te[X] - s[X]),
                  l = Math.abs(te[Z] - s[Z]);
                (u >= 1 || l >= 1) && ne(s);
              }
            }),
            pe = function (e) {
              !(function (e, t, n) {
                var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : {},
                  i =
                    arguments.length > 4 && void 0 !== arguments[4]
                      ? arguments[4]
                      : function () {},
                  a = r.ease,
                  o = void 0 === a ? v : a,
                  s = r.duration,
                  u = void 0 === s ? 300 : s,
                  l = null,
                  c = t[e],
                  h = !1,
                  f = function () {
                    h = !0;
                  };
                c === n
                  ? i(new Error("Element already at target position"))
                  : requestAnimationFrame(function r(a) {
                      if (h) i(new Error("Animation cancelled"));
                      else {
                        null === l && (l = a);
                        var s = Math.min(1, (a - l) / u);
                        (t[e] = o(s) * (n - c) + c),
                          s >= 1
                            ? requestAnimationFrame(function () {
                                i(null);
                              })
                            : requestAnimationFrame(r);
                      }
                    });
              })(q, ce.current, e);
            },
            me = function (e) {
              var t = ce.current[q];
              W
                ? (t += e)
                : ((t += e * (V ? -1 : 1)),
                  (t *= V && "reverse" === p() ? -1 : 1)),
                pe(t);
            },
            ve = function () {
              me(-ce.current[J]);
            },
            ge = function () {
              me(ce.current[J]);
            },
            ye = s.a.useCallback(function (e) {
              ue({ overflow: null, marginBottom: -e });
            }, []),
            be = Object(R.a)(function () {
              var e = fe(),
                t = e.tabsMeta,
                n = e.tabMeta;
              if (n && t)
                if (n[X] < t[X]) {
                  var r = t[q] + (n[X] - t[X]);
                  pe(r);
                } else if (n[Y] > t[Y]) {
                  var i = t[q] + (n[Y] - t[Y]);
                  pe(i);
                }
            }),
            xe = Object(R.a)(function () {
              if (H && "off" !== C) {
                var e,
                  t,
                  n = ce.current,
                  r = n.scrollTop,
                  i = n.scrollHeight,
                  a = n.clientHeight,
                  o = n.scrollWidth,
                  s = n.clientWidth;
                if (W) (e = r > 1), (t = r < i - a - 1);
                else {
                  var u = m(ce.current, G.direction);
                  (e = V ? u < o - s - 1 : u > 1),
                    (t = V ? u > 1 : u < o - s - 1);
                }
                (e === ie.start && t === ie.end) || ae({ start: e, end: t });
              }
            });
          s.a.useEffect(
            function () {
              var e = l(function () {
                  de(), xe();
                }),
                t = f(ce.current);
              return (
                t.addEventListener("resize", e),
                function () {
                  e.clear(), t.removeEventListener("resize", e);
                }
              );
            },
            [de, xe]
          );
          var _e = s.a.useCallback(
            l(function () {
              xe();
            })
          );
          s.a.useEffect(
            function () {
              return function () {
                _e.clear();
              };
            },
            [_e]
          ),
            s.a.useEffect(function () {
              Q(!0);
            }, []),
            s.a.useEffect(function () {
              de(), xe();
            }),
            s.a.useEffect(
              function () {
                be();
              },
              [be, te]
            ),
            s.a.useImperativeHandle(
              n,
              function () {
                return { updateIndicator: de };
              },
              [de]
            );
          var we = s.a.createElement(
              w,
              Object(r.a)(
                { className: d.indicator, orientation: E, color: S },
                I,
                { style: Object(r.a)({}, te, {}, I.style) }
              )
            ),
            Se = 0,
            Me = s.a.Children.map(h, function (e) {
              if (!s.a.isValidElement(e)) return null;
              var t = void 0 === e.props.value ? Se : e.props.value;
              le.set(t, Se);
              var n = t === z;
              return (
                (Se += 1),
                s.a.cloneElement(e, {
                  fullWidth: "fullWidth" === B,
                  indicator: n && !K && we,
                  selected: n,
                  onChange: M,
                  textColor: D,
                  value: t,
                })
              );
            }),
            Te = (function () {
              var e = {};
              e.scrollbarSizeListener = H
                ? s.a.createElement(y, {
                    className: d.scrollable,
                    onChange: ye,
                  })
                : null;
              var t = ie.start || ie.end,
                n = H && (("auto" === C && t) || "desktop" === C || "on" === C);
              return (
                (e.scrollButtonStart = n
                  ? s.a.createElement(k, {
                      orientation: E,
                      direction: V ? "right" : "left",
                      onClick: ve,
                      visible: ie.start,
                      className: Object(u.a)(
                        d.scrollButtons,
                        "on" !== C && d.scrollButtonsDesktop
                      ),
                    })
                  : null),
                (e.scrollButtonEnd = n
                  ? s.a.createElement(k, {
                      orientation: E,
                      direction: V ? "left" : "right",
                      onClick: ge,
                      visible: ie.end,
                      className: Object(u.a)(
                        d.scrollButtons,
                        "on" !== C && d.scrollButtonsDesktop
                      ),
                    })
                  : null),
                e
              );
            })();
          return s.a.createElement(
            x,
            Object(r.a)(
              { className: Object(u.a)(d.root, g, W && d.vertical), ref: t },
              F
            ),
            Te.scrollButtonStart,
            Te.scrollbarSizeListener,
            s.a.createElement(
              "div",
              {
                className: Object(u.a)(d.scroller, H ? d.scrollable : d.fixed),
                style: se,
                ref: ce,
                onScroll: _e,
              },
              s.a.createElement(
                "div",
                {
                  className: Object(u.a)(
                    d.flexContainer,
                    W && d.flexContainerVertical,
                    c && !H && d.centered
                  ),
                  ref: he,
                  role: "tablist",
                },
                Me
              ),
              K && we
            ),
            Te.scrollButtonEnd
          );
        });
      t.a = Object(b.a)(
        function (e) {
          return {
            root: {
              overflow: "hidden",
              minHeight: 48,
              WebkitOverflowScrolling: "touch",
              display: "flex",
            },
            vertical: { flexDirection: "column" },
            flexContainer: { display: "flex" },
            flexContainerVertical: { flexDirection: "column" },
            centered: { justifyContent: "center" },
            scroller: {
              position: "relative",
              display: "inline-block",
              flex: "1 1 auto",
              whiteSpace: "nowrap",
            },
            fixed: { overflowX: "hidden", width: "100%" },
            scrollable: {
              overflowX: "scroll",
              scrollbarWidth: "none",
              "&::-webkit-scrollbar": { display: "none" },
            },
            scrollButtons: {},
            scrollButtonsDesktop: Object(a.a)({}, e.breakpoints.down("xs"), {
              display: "none",
            }),
            indicator: {},
          };
        },
        { name: "MuiTabs" }
      )(j);
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(50),
        a = n(52),
        o = n(51);
      var s = n(10),
        u = n(0),
        l = n.n(u),
        c = (n(7), n(14)),
        h = n(25),
        f = n(22),
        d = n(34),
        p = n.n(d),
        m = !1,
        v = n(45),
        g = "unmounted",
        y = "exited",
        b = "entering",
        x = "entered",
        _ = (function (e) {
          function t(t, n) {
            var r;
            r = e.call(this, t, n) || this;
            var i,
              a = n && !n.isMounting ? t.enter : t.appear;
            return (
              (r.appearStatus = null),
              t.in
                ? a
                  ? ((i = y), (r.appearStatus = b))
                  : (i = x)
                : (i = t.unmountOnExit || t.mountOnEnter ? g : y),
              (r.state = { status: i }),
              (r.nextCallback = null),
              r
            );
          }
          Object(f.a)(t, e),
            (t.getDerivedStateFromProps = function (e, t) {
              return e.in && t.status === g ? { status: y } : null;
            });
          var n = t.prototype;
          return (
            (n.componentDidMount = function () {
              this.updateStatus(!0, this.appearStatus);
            }),
            (n.componentDidUpdate = function (e) {
              var t = null;
              if (e !== this.props) {
                var n = this.state.status;
                this.props.in
                  ? n !== b && n !== x && (t = b)
                  : (n !== b && n !== x) || (t = "exiting");
              }
              this.updateStatus(!1, t);
            }),
            (n.componentWillUnmount = function () {
              this.cancelNextCallback();
            }),
            (n.getTimeouts = function () {
              var e,
                t,
                n,
                r = this.props.timeout;
              return (
                (e = t = n = r),
                null != r &&
                  "number" !== typeof r &&
                  ((e = r.exit),
                  (t = r.enter),
                  (n = void 0 !== r.appear ? r.appear : t)),
                { exit: e, enter: t, appear: n }
              );
            }),
            (n.updateStatus = function (e, t) {
              if ((void 0 === e && (e = !1), null !== t)) {
                this.cancelNextCallback();
                var n = p.a.findDOMNode(this);
                t === b ? this.performEnter(n, e) : this.performExit(n);
              } else
                this.props.unmountOnExit &&
                  this.state.status === y &&
                  this.setState({ status: g });
            }),
            (n.performEnter = function (e, t) {
              var n = this,
                r = this.props.enter,
                i = this.context ? this.context.isMounting : t,
                a = this.getTimeouts(),
                o = i ? a.appear : a.enter;
              (!t && !r) || m
                ? this.safeSetState({ status: x }, function () {
                    n.props.onEntered(e);
                  })
                : (this.props.onEnter(e, i),
                  this.safeSetState({ status: b }, function () {
                    n.props.onEntering(e, i),
                      n.onTransitionEnd(e, o, function () {
                        n.safeSetState({ status: x }, function () {
                          n.props.onEntered(e, i);
                        });
                      });
                  }));
            }),
            (n.performExit = function (e) {
              var t = this,
                n = this.props.exit,
                r = this.getTimeouts();
              n && !m
                ? (this.props.onExit(e),
                  this.safeSetState({ status: "exiting" }, function () {
                    t.props.onExiting(e),
                      t.onTransitionEnd(e, r.exit, function () {
                        t.safeSetState({ status: y }, function () {
                          t.props.onExited(e);
                        });
                      });
                  }))
                : this.safeSetState({ status: y }, function () {
                    t.props.onExited(e);
                  });
            }),
            (n.cancelNextCallback = function () {
              null !== this.nextCallback &&
                (this.nextCallback.cancel(), (this.nextCallback = null));
            }),
            (n.safeSetState = function (e, t) {
              (t = this.setNextCallback(t)), this.setState(e, t);
            }),
            (n.setNextCallback = function (e) {
              var t = this,
                n = !0;
              return (
                (this.nextCallback = function (r) {
                  n && ((n = !1), (t.nextCallback = null), e(r));
                }),
                (this.nextCallback.cancel = function () {
                  n = !1;
                }),
                this.nextCallback
              );
            }),
            (n.onTransitionEnd = function (e, t, n) {
              this.setNextCallback(n);
              var r = null == t && !this.props.addEndListener;
              e && !r
                ? (this.props.addEndListener &&
                    this.props.addEndListener(e, this.nextCallback),
                  null != t && setTimeout(this.nextCallback, t))
                : setTimeout(this.nextCallback, 0);
            }),
            (n.render = function () {
              var e = this.state.status;
              if (e === g) return null;
              var t = this.props,
                n = t.children,
                r = Object(h.a)(t, ["children"]);
              if (
                (delete r.in,
                delete r.mountOnEnter,
                delete r.unmountOnExit,
                delete r.appear,
                delete r.enter,
                delete r.exit,
                delete r.timeout,
                delete r.addEndListener,
                delete r.onEnter,
                delete r.onEntering,
                delete r.onEntered,
                delete r.onExit,
                delete r.onExiting,
                delete r.onExited,
                "function" === typeof n)
              )
                return l.a.createElement(
                  v.a.Provider,
                  { value: null },
                  n(e, r)
                );
              var i = l.a.Children.only(n);
              return l.a.createElement(
                v.a.Provider,
                { value: null },
                l.a.cloneElement(i, r)
              );
            }),
            t
          );
        })(l.a.Component);
      function w() {}
      (_.contextType = v.a),
        (_.propTypes = {}),
        (_.defaultProps = {
          in: !1,
          mountOnEnter: !1,
          unmountOnExit: !1,
          appear: !1,
          enter: !0,
          exit: !0,
          onEnter: w,
          onEntering: w,
          onEntered: w,
          onExit: w,
          onExiting: w,
          onExited: w,
        }),
        (_.UNMOUNTED = 0),
        (_.EXITED = 1),
        (_.ENTERING = 2),
        (_.ENTERED = 3),
        (_.EXITING = 4);
      var S = _,
        M = n(18),
        T = n(53);
      function E(e, t) {
        var n = e.timeout,
          r = e.style,
          i = void 0 === r ? {} : r;
        return {
          duration:
            i.transitionDuration || "number" === typeof n ? n : n[t.mode] || 0,
          delay: i.transitionDelay,
        };
      }
      var O = n(54),
        k = l.a.forwardRef(function (e, t) {
          var n = e.children,
            i = e.classes,
            a = e.className,
            o = e.collapsedHeight,
            u = void 0 === o ? "0px" : o,
            h = e.component,
            f = void 0 === h ? "div" : h,
            d = e.in,
            p = e.onEnter,
            m = e.onEntered,
            v = e.onEntering,
            g = e.onExit,
            y = e.onExiting,
            b = e.style,
            x = e.timeout,
            _ = void 0 === x ? T.b.standard : x,
            w = Object(s.a)(e, [
              "children",
              "classes",
              "className",
              "collapsedHeight",
              "component",
              "in",
              "onEnter",
              "onEntered",
              "onEntering",
              "onExit",
              "onExiting",
              "style",
              "timeout",
            ]),
            M = Object(O.a)(),
            k = l.a.useRef(),
            A = l.a.useRef(null),
            C = l.a.useRef();
          l.a.useEffect(function () {
            return function () {
              clearTimeout(k.current);
            };
          }, []);
          return l.a.createElement(
            S,
            Object(r.a)(
              {
                in: d,
                onEnter: function (e, t) {
                  (e.style.height = u), p && p(e, t);
                },
                onEntered: function (e, t) {
                  (e.style.height = "auto"), m && m(e, t);
                },
                onEntering: function (e, t) {
                  var n = A.current ? A.current.clientHeight : 0,
                    r = E({ style: b, timeout: _ }, { mode: "enter" }).duration;
                  if ("auto" === _) {
                    var i = M.transitions.getAutoHeightDuration(n);
                    (e.style.transitionDuration = "".concat(i, "ms")),
                      (C.current = i);
                  } else
                    e.style.transitionDuration =
                      "string" === typeof r ? r : "".concat(r, "ms");
                  (e.style.height = "".concat(n, "px")), v && v(e, t);
                },
                onExit: function (e) {
                  var t = A.current ? A.current.clientHeight : 0;
                  (e.style.height = "".concat(t, "px")), g && g(e);
                },
                onExiting: function (e) {
                  var t = A.current ? A.current.clientHeight : 0,
                    n = E({ style: b, timeout: _ }, { mode: "exit" }).duration;
                  if ("auto" === _) {
                    var r = M.transitions.getAutoHeightDuration(t);
                    (e.style.transitionDuration = "".concat(r, "ms")),
                      (C.current = r);
                  } else
                    e.style.transitionDuration =
                      "string" === typeof n ? n : "".concat(n, "ms");
                  (e.style.height = u), y && y(e);
                },
                addEndListener: function (e, t) {
                  "auto" === _ && (k.current = setTimeout(t, C.current || 0));
                },
                timeout: "auto" === _ ? null : _,
              },
              w
            ),
            function (e, o) {
              return l.a.createElement(
                f,
                Object(r.a)(
                  {
                    className: Object(c.a)(
                      i.container,
                      a,
                      {
                        entered: i.entered,
                        exited: !d && "0px" === u && i.hidden,
                      }[e]
                    ),
                    style: Object(r.a)({ minHeight: u }, b),
                    ref: t,
                  },
                  o
                ),
                l.a.createElement(
                  "div",
                  { className: i.wrapper, ref: A },
                  l.a.createElement("div", { className: i.wrapperInner }, n)
                )
              );
            }
          );
        });
      k.muiSupportAuto = !0;
      var A = Object(M.a)(
          function (e) {
            return {
              container: {
                height: 0,
                overflow: "hidden",
                transition: e.transitions.create("height"),
              },
              entered: { height: "auto", overflow: "visible" },
              hidden: { visibility: "hidden" },
              wrapper: { display: "flex" },
              wrapperInner: { width: "100%" },
            };
          },
          { name: "MuiCollapse" }
        )(k),
        C = n(137),
        P = l.a.forwardRef(function (e, t) {
          var n = e.children,
            u = e.classes,
            h = e.className,
            f = e.defaultExpanded,
            d = void 0 !== f && f,
            p = e.disabled,
            m = void 0 !== p && p,
            v = e.expanded,
            g = e.onChange,
            y = e.square,
            b = void 0 !== y && y,
            x = e.TransitionComponent,
            _ = void 0 === x ? A : x,
            w = e.TransitionProps,
            S = Object(s.a)(e, [
              "children",
              "classes",
              "className",
              "defaultExpanded",
              "disabled",
              "expanded",
              "onChange",
              "square",
              "TransitionComponent",
              "TransitionProps",
            ]),
            M = l.a.useRef(null != v).current,
            T = l.a.useState(d),
            E = T[0],
            O = T[1],
            k = M ? v : E;
          var P,
            R = l.a.Children.toArray(n),
            L = ((P = R), Object(i.a)(P) || Object(a.a)(P) || Object(o.a)()),
            j = L[0],
            I = L.slice(1);
          return l.a.createElement(
            C.a,
            Object(r.a)(
              {
                className: Object(c.a)(
                  u.root,
                  h,
                  k && u.expanded,
                  m && u.disabled,
                  !b && u.rounded
                ),
                ref: t,
                square: b,
              },
              S
            ),
            l.a.cloneElement(j, {
              disabled: m,
              expanded: k,
              onChange: function (e) {
                M || O(!k), g && g(e, !k);
              },
            }),
            l.a.createElement(
              _,
              Object(r.a)({ in: k, timeout: "auto" }, w),
              l.a.createElement(
                "div",
                {
                  "aria-labelledby": j.props.id,
                  id: j.props["aria-controls"],
                  role: "region",
                },
                I
              )
            )
          );
        });
      t.a = Object(M.a)(
        function (e) {
          var t = { duration: e.transitions.duration.shortest };
          return {
            root: {
              position: "relative",
              transition: e.transitions.create(["margin"], t),
              "&:before": {
                position: "absolute",
                left: 0,
                top: -1,
                right: 0,
                height: 1,
                content: '""',
                opacity: 1,
                backgroundColor: e.palette.divider,
                transition: e.transitions.create(
                  ["opacity", "background-color"],
                  t
                ),
              },
              "&:first-child": { "&:before": { display: "none" } },
              "&$expanded": {
                margin: "16px 0",
                "&:first-child": { marginTop: 0 },
                "&:last-child": { marginBottom: 0 },
                "&:before": { opacity: 0 },
              },
              "&$expanded + &": { "&:before": { display: "none" } },
              "&$disabled": {
                backgroundColor: e.palette.action.disabledBackground,
              },
            },
            rounded: {
              borderRadius: 0,
              "&:first-child": {
                borderTopLeftRadius: e.shape.borderRadius,
                borderTopRightRadius: e.shape.borderRadius,
              },
              "&:last-child": {
                borderBottomLeftRadius: e.shape.borderRadius,
                borderBottomRightRadius: e.shape.borderRadius,
                "@supports (-ms-ime-align: auto)": {
                  borderBottomLeftRadius: 0,
                  borderBottomRightRadius: 0,
                },
              },
            },
            expanded: {},
            disabled: {},
          };
        },
        { name: "MuiExpansionPanel" }
      )(P);
    },
    function (e, t, n) {
      "use strict";
      var r = n(31),
        i = n(32);
      function a(e, t) {
        return (a = Object.setPrototypeOf
          ? Object.setPrototypeOf.bind()
          : function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
      }
      var o = n(0),
        s = n.n(o),
        u = n(7),
        l = n.n(u),
        c = n(15),
        h = n.n(c),
        f = n(24),
        d = [
          "active",
          "aria-label",
          "block",
          "className",
          "close",
          "cssModule",
          "color",
          "outline",
          "size",
          "tag",
          "innerRef",
        ],
        p = {
          active: l.a.bool,
          "aria-label": l.a.string,
          block: l.a.bool,
          color: l.a.string,
          disabled: l.a.bool,
          outline: l.a.bool,
          tag: f.b,
          innerRef: l.a.oneOfType([l.a.object, l.a.func, l.a.string]),
          onClick: l.a.func,
          size: l.a.string,
          children: l.a.node,
          className: l.a.string,
          cssModule: l.a.object,
          close: l.a.bool,
        },
        m = (function (e) {
          var t, n;
          function o(t) {
            var n;
            return (
              ((n = e.call(this, t) || this).onClick = n.onClick.bind(
                (function (e) {
                  if (void 0 === e)
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return e;
                })(n)
              )),
              n
            );
          }
          (n = e),
            ((t = o).prototype = Object.create(n.prototype)),
            (t.prototype.constructor = t),
            a(t, n);
          var u = o.prototype;
          return (
            (u.onClick = function (e) {
              if (!this.props.disabled)
                return this.props.onClick ? this.props.onClick(e) : void 0;
              e.preventDefault();
            }),
            (u.render = function () {
              var e = this.props,
                t = e.active,
                n = e["aria-label"],
                a = e.block,
                o = e.className,
                u = e.close,
                l = e.cssModule,
                c = e.color,
                p = e.outline,
                m = e.size,
                v = e.tag,
                g = e.innerRef,
                y = Object(i.a)(e, d);
              u &&
                "undefined" === typeof y.children &&
                (y.children = s.a.createElement(
                  "span",
                  { "aria-hidden": !0 },
                  "\xd7"
                ));
              var b = "btn" + (p ? "-outline" : "") + "-" + c,
                x = Object(f.a)(
                  h()(
                    o,
                    { close: u },
                    u || "btn",
                    u || b,
                    !!m && "btn-" + m,
                    !!a && "btn-block",
                    { active: t, disabled: this.props.disabled }
                  ),
                  l
                );
              y.href && "button" === v && (v = "a");
              var _ = u ? "Close" : null;
              return s.a.createElement(
                v,
                Object(r.a)(
                  { type: "button" === v && y.onClick ? "button" : void 0 },
                  y,
                  {
                    className: x,
                    ref: g,
                    onClick: this.onClick,
                    "aria-label": n || _,
                  }
                )
              );
            }),
            o
          );
        })(s.a.Component);
      (m.propTypes = p),
        (m.defaultProps = { color: "secondary", tag: "button" });
      t.a = m;
    },
    function (e, t, n) {
      "use strict";
      var r = n(8),
        i = n(10),
        a = n(0),
        o = n.n(a),
        s = (n(7), n(14)),
        u = n(138),
        l = n(18),
        c = n(40),
        h = n(23),
        f = o.a.forwardRef(function (e, t) {
          var n = e.edge,
            a = void 0 !== n && n,
            l = e.children,
            c = e.classes,
            f = e.className,
            d = e.color,
            p = void 0 === d ? "default" : d,
            m = e.disabled,
            v = void 0 !== m && m,
            g = e.disableFocusRipple,
            y = void 0 !== g && g,
            b = e.size,
            x = void 0 === b ? "medium" : b,
            _ = Object(i.a)(e, [
              "edge",
              "children",
              "classes",
              "className",
              "color",
              "disabled",
              "disableFocusRipple",
              "size",
            ]);
          return o.a.createElement(
            u.a,
            Object(r.a)(
              {
                className: Object(s.a)(
                  c.root,
                  f,
                  "default" !== p && c["color".concat(Object(h.a)(p))],
                  v && c.disabled,
                  { small: c["size".concat(Object(h.a)(x))] }[x],
                  { start: c.edgeStart, end: c.edgeEnd }[a]
                ),
                centerRipple: !0,
                focusRipple: !y,
                disabled: v,
                ref: t,
              },
              _
            ),
            o.a.createElement("span", { className: c.label }, l)
          );
        }),
        d = Object(l.a)(
          function (e) {
            return {
              root: {
                textAlign: "center",
                flex: "0 0 auto",
                fontSize: e.typography.pxToRem(24),
                padding: 12,
                borderRadius: "50%",
                overflow: "visible",
                color: e.palette.action.active,
                transition: e.transitions.create("background-color", {
                  duration: e.transitions.duration.shortest,
                }),
                "&:hover": {
                  backgroundColor: Object(c.b)(
                    e.palette.action.active,
                    e.palette.action.hoverOpacity
                  ),
                  "@media (hover: none)": { backgroundColor: "transparent" },
                },
                "&$disabled": {
                  backgroundColor: "transparent",
                  color: e.palette.action.disabled,
                },
              },
              edgeStart: { marginLeft: -12, "$sizeSmall&": { marginLeft: -3 } },
              edgeEnd: { marginRight: -12, "$sizeSmall&": { marginRight: -3 } },
              colorInherit: { color: "inherit" },
              colorPrimary: {
                color: e.palette.primary.main,
                "&:hover": {
                  backgroundColor: Object(c.b)(
                    e.palette.primary.main,
                    e.palette.action.hoverOpacity
                  ),
                  "@media (hover: none)": { backgroundColor: "transparent" },
                },
              },
              colorSecondary: {
                color: e.palette.secondary.main,
                "&:hover": {
                  backgroundColor: Object(c.b)(
                    e.palette.secondary.main,
                    e.palette.action.hoverOpacity
                  ),
                  "@media (hover: none)": { backgroundColor: "transparent" },
                },
              },
              disabled: {},
              sizeSmall: { padding: 3, fontSize: e.typography.pxToRem(18) },
              label: {
                width: "100%",
                display: "flex",
                alignItems: "inherit",
                justifyContent: "inherit",
              },
            };
          },
          { name: "MuiIconButton" }
        )(f),
        p = o.a.forwardRef(function (e, t) {
          var n = e.children,
            a = e.classes,
            l = e.className,
            c = e.disabled,
            h = void 0 !== c && c,
            f = e.expanded,
            p = e.expandIcon,
            m = e.IconButtonProps,
            v = e.onBlur,
            g = e.onChange,
            y = e.onClick,
            b = e.onFocusVisible,
            x = Object(i.a)(e, [
              "children",
              "classes",
              "className",
              "disabled",
              "expanded",
              "expandIcon",
              "IconButtonProps",
              "onBlur",
              "onChange",
              "onClick",
              "onFocusVisible",
            ]),
            _ = o.a.useState(!1),
            w = _[0],
            S = _[1];
          return o.a.createElement(
            u.a,
            Object(r.a)(
              {
                focusRipple: !1,
                disableRipple: !0,
                disabled: h,
                component: "div",
                "aria-expanded": f,
                className: Object(s.a)(
                  a.root,
                  l,
                  h && a.disabled,
                  f && a.expanded,
                  w && a.focused
                ),
                onFocusVisible: function (e) {
                  S(!0), b && b(e);
                },
                onBlur: function (e) {
                  S(!1), v && v(e);
                },
                onClick: function (e) {
                  g && g(e), y && y(e);
                },
                ref: t,
              },
              x
            ),
            o.a.createElement(
              "div",
              { className: Object(s.a)(a.content, f && a.expanded) },
              n
            ),
            p &&
              o.a.createElement(
                d,
                Object(r.a)(
                  {
                    disabled: h,
                    className: Object(s.a)(a.expandIcon, f && a.expanded),
                    edge: "end",
                    component: "div",
                    tabIndex: -1,
                    "aria-hidden": !0,
                  },
                  m
                ),
                p
              )
          );
        });
      t.a = Object(l.a)(
        function (e) {
          var t = { duration: e.transitions.duration.shortest };
          return {
            root: {
              display: "flex",
              minHeight: 48,
              transition: e.transitions.create(
                ["min-height", "background-color"],
                t
              ),
              padding: "0 24px 0 24px",
              "&:hover:not($disabled)": { cursor: "pointer" },
              "&$expanded": { minHeight: 64 },
              "&$focused": { backgroundColor: e.palette.grey[300] },
              "&$disabled": { opacity: 0.38 },
            },
            expanded: {},
            focused: {},
            disabled: {},
            content: {
              display: "flex",
              flexGrow: 1,
              transition: e.transitions.create(["margin"], t),
              margin: "12px 0",
              "&$expanded": { margin: "20px 0" },
            },
            expandIcon: {
              transform: "rotate(0deg)",
              transition: e.transitions.create("transform", t),
              "&:hover": { backgroundColor: "transparent" },
              "&$expanded": { transform: "rotate(180deg)" },
            },
          };
        },
        { name: "MuiExpansionPanelSummary" }
      )(p);
    },
  ],
]);
//# sourceMappingURL=2.c5a4c677.chunk.js.map
